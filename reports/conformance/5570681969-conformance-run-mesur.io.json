{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "df3cfc40-5607-4e91-a0b9-4ef588c237e1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "40ae0c9a-408f-4c09-992a-2dfda40995c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "221e1350-84fa-4851-8d08-30ae2d152f15",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0e8331a-89ab-4835-92fa-8b01047d7209"
                }
              }
            ]
          },
          {
            "id": "fee106f9-29dd-4467-8831-c8aa7861d0c2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ce0434d-e420-4c81-b64f-26f624c21e3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93146b52-bdd6-49f2-bdb6-fe3d61ed92fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e1fc3f4c-45af-41bd-9a5e-cd86ec036ad5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "472840c1-7d1b-4faf-9afa-df6286e33a3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d2b22bd-1f09-4dab-857c-87d4714b5d04",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdf7b483-19af-4334-8f0a-38c6687879df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee0d44b4-d192-4d07-899b-fc668a47da0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b15f7e0-e7df-415f-ad30-50af66511aca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "612d8ef0-82e1-4dfa-aaf2-c4b3c425e7fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1c9074b-5bbb-43f4-9876-c972d51a4c07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f688d560-31c0-41b9-9de8-e5632452f7fc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8495a65-9d41-4851-8cda-77b469aff2cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3bdb9542-2cb0-4121-8a45-f58e5611c6a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9af4d77d-de51-4620-890d-7e5238466429",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a442c717-3313-409d-bb65-79a17fa5baa3"
            }
          }
        ]
      },
      {
        "id": "62cd4b31-81da-4dd8-aa65-85eafdf0c680",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "63968a18-d2c1-4263-96a7-2c1136bfce84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b82542e7-3977-4c6c-b920-ea87576b5abc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "964ed475-6180-470d-bad8-f895cc57e0e6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0be5aa-fd4e-48ce-87b2-a944d6ada86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58eed524-da5c-4f72-a3ea-421186a84788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de44809-e93f-4eeb-88ed-75be90a9688a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4cf560-6a21-4300-b0cf-9786e0611a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "362711b8-6880-432f-a6b6-791e8693a73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a00608-ec54-4012-95c0-8573d25dfabe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea545631-1d98-479e-9478-a77ed41d8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6606496-ff55-4dab-8f6e-f9505fab084f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26ce3497-37b4-4e1d-9c21-f5b2b69c304b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f236312-173b-472e-aea6-b44caec9ab89",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d981c-c869-40e8-82bc-682312de37e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "909e7595-8fa7-4720-a5a9-8f126fa59b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5765cf0-0582-42f9-8b0f-09d59ad00c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448ecf93-eda8-4324-86f1-9c03f8fc77aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17e8d437-508f-46a8-9ff9-02e675675e57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1860dd01-6866-48b4-affd-379c7a3c066e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d577c00-47b9-43fa-a099-5200dc57f485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c7ed7c1c-6ff8-479b-a54d-31092866cc52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d508f38e-6bf0-4a20-84ab-1ee5f497a4f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3bde4702-f41a-4c3d-b91e-a89310ce2a6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ee2eef8-7141-4233-bf6b-7285f3404ed1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26696a52-b34b-4b2b-a9b5-c04186cacf71"
            }
          }
        ]
      },
      {
        "id": "c488a3ca-4134-44ed-9e50-dd062c35e625",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65c26e03-91da-4a3c-bde3-cc38079adc79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b785063e-f4aa-4367-b6d4-e7d44777ff9e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "92fede8f-3ded-439b-9ef4-c7d4dea07fc6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e377c20-3c46-4663-82cf-f80bc9bb58f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deb0e8f-c9ec-44af-a8bf-c31f30c847f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f31ea8-45bb-47d0-98a5-7d5c3b76d8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f278406c-85a9-4121-b68c-970c9759288a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5111d475-2703-4775-bed0-210d1a34f8aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a392926-c45f-4c6c-b4bc-8b60cc2e6b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61e803e-702b-48aa-a45b-ab3f135042ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b3df59-bacd-4659-8c1e-b2933c245459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6909c59a-5ce8-46cb-8f9e-f7b595950741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8e597e-e3f1-4501-98c6-18ec61e7a846",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916ef833-e91b-4164-8b2c-5fb393f89303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43231c7-1ce2-4749-9914-14b63c01eac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60249e8f-3fc8-44ee-94f9-ab09d5248969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e20dbe-398e-47e6-8435-4f3e8371d08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efb3b87-1e07-47b4-b206-8b3c577e3126",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b2cef-2ede-45ee-91b1-3ad1653bc68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8213a6-8d83-44b8-8ef3-f8b16977678d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f20c59-d687-4c6e-bf3b-0099f0a70d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c948d12-9e88-48e0-b6a4-580976e84ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1ebca7-5d9f-49b7-9f55-44b1f8d2a140",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7833c44-3c00-4253-b1f2-36272e79d203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a9f2ef-0992-4eea-88c7-f322c22aebe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965ddc88-8327-4b9b-bac8-3896012939cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dad7104-41d0-412c-bde4-d62271050969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d43aead-5a77-4325-906b-a1fcbf0703ec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ed61db-b719-4ecb-90e0-33e4796918b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849519ff-97db-4379-a739-f0aaaf8c0a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d6e3cf-2da1-4354-b820-854c1924ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de6a092b-5ece-404d-b235-857bc3a4c842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae059b-0fca-441c-b4c2-391411eea87e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6162ae30-64be-4c7f-aab7-1df7fbcde9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f77a5f-18b1-4cc1-a1a0-ede29cb7981c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246dff4c-8932-4e75-b33e-5b411ab49ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd25b52-0100-47c4-9d58-d3558cf08939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9036c9-ee5c-4a42-9862-040353c3912b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66042819-d6ef-443e-9337-3d484fac4afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f47667d-a782-478b-b264-e09ddab83fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d403fc-c3ae-456a-bb08-6a9f6e8812e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70b99415-c89c-49f3-b8a1-5b9ec9614958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f79a032-7e92-4d6b-82f8-8df589cf60ae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161399be-0e89-438b-823a-82d6a81211ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dc7f9d-160e-440f-ae7b-f92be1bb522f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45a26ac-8d2c-4fa1-b58a-a7a02afe52aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a1265f5-a242-4ca0-82c4-a143f02222a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff9f373-c3e7-4b0e-a249-2ae94ba215fd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4530a3c1-fd68-4043-801a-7ec7857798c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf216bb-8b31-4d10-8bf3-296bd33c0f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554c0542-ef31-4771-bd0a-d764b043e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f72906d-6282-4d33-8245-8aecfcbccf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f3255-1b74-4a33-ac81-26fda9e83c24",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ef2b93-02fa-47f0-b264-e7887db19048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2992cc9e-7cd5-4b50-a408-039ab37a85c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0116d0-bb79-4684-9c43-ada86bbf811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e44b47c7-8f5e-4e53-a34f-fa8edfa0d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaf630b-f10b-4f5f-8005-568eb6fd67b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0adeda-8e4e-4b4e-8932-ff5c3bbfff92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02813de-1214-4a46-8b17-ce2f1e75aae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c3e125-d1bd-43c1-aa05-f2a053fcd027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c0a1b3-9ec3-4686-9735-752be36302cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88829822-083d-4e55-99cd-474286ede2a6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8ea4c4-3348-477e-a454-41912eab28d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575b32f-2fae-4a69-a164-424f183e2777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478c5650-f317-40b0-9fc5-5c04d92f156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fc0019c-54d8-49af-af2f-8c768df34900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61510c02-78ed-43a6-91f9-357ed96c305e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe76a7d-340e-4f65-987b-d4b2c7521b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d66ee1-fe38-4850-a463-541ffdaf5689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09226f01-ef81-45d2-810a-3de60c211cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cb6a00e-f4af-417f-aea4-909758b2792f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae4ad5f-e889-4d7e-87b9-d9c4ce909abf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d0b3f2-2c8a-4f4f-832e-87c732d43194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28718a52-b701-4771-ad94-941dfde05ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bfd50-04bb-4173-9fda-333fc9d2022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a6abf3a-abb9-4a1d-83c7-add270cd4b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c1077c-ab16-49eb-8bd0-32609b119a48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ed05b-bb46-4d81-8662-43983415f376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d45dc3-985c-4861-8ede-777a8be44af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c71f245-f999-42eb-b3b1-5d081960bee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1fb99a0-5cac-4fad-a9ad-99172202f56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8b476e-4032-4924-91a0-60d62a7876f1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb8ee72-6ca5-4e8c-ab8c-83c4b7953df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18319506-9274-402f-9a52-f95ccf777709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267131c8-1062-4e96-ae30-614a421076bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6027d201-1f81-470d-9378-2a14139ee16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22b0b4c-cf65-4800-bd3b-0ee5580e9f53",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1c26fe-fb5d-40f3-8098-1f91b8c1cc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f567352-b415-4beb-8aa1-4ab3fcb88b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c567fce-19cc-4e43-9bf4-3a6d68855cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a5cd23-f443-4bf0-9d60-759b2d671e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77c4ef6-025d-4f01-b481-828794d45665",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e31bbd7-486a-4d56-8b12-9a6f2b37e89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8ba92b-b0da-41b6-87f3-417cabb98cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71311d3f-3d87-43aa-9f85-5c4b273a481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff346aba-2881-4d05-a9cf-5772dfab261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242d7eb-3f49-41c6-a656-d0766d1e49ad",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9fc40-f715-4db9-8480-a093e6090fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c5ac22-a34f-494d-9525-eff51df99679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1c12ff-1667-4dcb-ae97-c0bc9d7a5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7556b479-55d0-4808-a3bf-52a900717107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c819b5d-5e59-49b0-a7bd-0637ae934db9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e456188-bb66-43ee-a236-cee52cd27ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675c5093-799e-43d0-9fdb-02044247e047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c7bb65-ad91-4e19-9ad0-f5ae78c8abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e24923-0f1b-4598-98e8-6f0f92a73d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aae85b2-ceab-4b7b-890a-2fd0a54dd948",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0732cc28-ac57-4388-8705-6232108cee64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e3d8e9-1436-4f75-a72e-d9d99360c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db258081-885c-48b0-b37e-d240a1ed6707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5901200a-ad87-4a72-aa40-77e03adbdaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108b5a62-ea10-4142-998e-abb49f296b8a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4efe4-fb0b-4b4e-ace9-49f1d5a759f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79c12ee-19eb-4766-a161-a6092f89381f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c588e491-e5a9-44c0-ba15-5405d03b39d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1691ab81-0cd4-46e1-9efa-193fc1a3d967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87efc9a-a7af-4a43-899f-54f0279c1cad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a12b90f-dbea-4ccb-9db0-f6652725c351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5cf84a-7336-4a4b-b756-0f942ac7d982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e94123-48b3-40b5-b487-c54aed404b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2af2c9-18ce-43a6-9f1c-f4b3a84ce2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e86028-2d7b-4c39-b84f-9a8b6c44d2c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08fffc3-01cc-4d3b-a642-3f8dc412bfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8958098-c574-4b5a-bded-bd766ef905fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ef265-4bae-4ce3-a6b4-81b2e7fef769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b74cae6-fb91-4b86-9312-c3ed812780a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3760a799-23fe-4abc-9e85-1c7819ae0767",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9d061-97cc-485f-9869-4102759acd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9a66ec-032a-4522-81fe-2c83b2c30bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53aaf7c-ef0f-4e4c-b30d-a9878419d745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1b93f8-7e73-4922-8228-2959b9746d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedba9e6-cdc2-4523-a5d5-8b4dd4bb9770",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb317e8-c17d-41c2-bfbf-1ad9123c6b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8992f7f9-8ac3-4447-9489-ce910de80d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd3391a-4902-436b-ac6e-c6a8ea33f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c39a96-ee7a-4326-929c-f17747ae3e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79db8a10-736d-49f8-accf-c0187bc2b469",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c6cbb7-4e0a-4271-b833-d36d78b24a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f319a9a1-d24e-448f-936d-e5230945d985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f76278f-6332-44c7-a20e-109a4771c832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "922e2086-0ac9-491d-871c-e054202bf6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6adbfa-77a1-497d-85e4-8a47dd67cde5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ef722-8b1e-424f-837b-b731022169e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03387f73-8442-4c70-9d4f-2734f6b251b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3281b3dc-d9b8-4ef7-9d80-bd7c943b5b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe2ca3b-4f20-4c08-b6f0-13edff256a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d2d17b-ea88-4c67-b6f3-bd3e7fc0a6e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c634b-37a1-4c3d-b392-4cffea40e055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f933bbb-e601-4249-a551-cc4eb73b4556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65c9cc8-f256-41ea-b7f8-ea630d06a6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6618578-6380-48ef-89bc-466323623d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bde1fb-c14e-4443-ac51-37085d8d6986",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7167608e-bc93-48bd-9151-5f403939e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc86d89-f5eb-4a8f-8a04-30936e691da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569dcf42-523d-406a-b65e-75eea845dc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c675322-2595-4aed-a786-97ffb36aa9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792eafbb-f0e6-40d4-ba64-181184c6ed41",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14508eb9-6f5f-43bb-a244-4105806a45e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d63270-97ad-4e8c-862f-6bd94c660cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aa2643-69b9-4750-8397-69a015a2875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bff283-4fa1-4683-8aba-d2d65bd11e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe13d13-1fc5-4d35-94b9-16596cf44be6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe3dc9b-1f36-4b5f-9a82-9d79bf172e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04215da-518e-41fa-81b6-d42ed479d8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0def0fa0-7d17-450b-b498-cb44b8400059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f59a4a-725c-4bdd-9ae3-7f2a0925f374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d3d1a7-25b5-49ce-a583-461da9a6c0a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f0c355-756c-4362-8e65-68589baf683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bc7263-15cf-4106-8c93-757051283fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dd83e6-d123-4dac-956f-a67811617f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cceb72bc-c6b9-407f-a9ae-6cb28ea613ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e9acfe-8a7a-410d-8831-26ad6588a493",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ef656-3401-478d-86e0-e893fa73c0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a21459-9321-4354-8ad9-f235d43e0290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70464f1e-b915-4d48-b7ad-950b24c1d629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cdedb32e-6bd1-4600-8d34-d9832f5fa159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebfa87a-4752-4e16-baae-c26109451efc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34036a93-a69c-4933-84df-4825656cf28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8395388e-e074-4e30-a0ad-5aaa2032fb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2b41b-0059-4f7f-9a09-e11952e4fc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3ffca3-6d04-4d64-b152-c281cf5debae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200605b6-0942-4291-a743-9f145bfbe847",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f209ae7c-460c-42a1-8e59-e9eba8b17708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf79427c-49e1-4028-b2dd-3b491646ca5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295f4a06-8764-4e02-9dad-5f7da1c2ce24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "faba10ab-3a9b-419d-b853-a39f8564cd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474753d5-946a-46f9-a029-b1471f77c6e3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3b5870-f8a5-403c-a0f8-88de433f4af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca36f68a-3a03-4bec-807d-ee87041e3d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f1c689-3617-461b-8f18-53c350f14a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f971e5cd-f80e-459a-85df-8d723d6a44e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c96681-38ef-4d95-ad57-5dfe4bf27ffa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138a5584-209b-43a8-8c6e-7d6429ca3c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91b6b59-b54f-47a2-940f-8c4e8a71e3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dadb53-17cd-4ffb-86a5-5b696de69660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad243767-f727-47ea-83d4-a708a1cdc0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e299a3-a2f2-4330-8758-47e2af04318f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6119e-0a77-4053-b157-f7a95fcf22fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2af92bd-c2f1-4e2a-9d49-ccc014f06586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9854208c-6d9c-40b0-b43f-f92ddf9569b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "048d6cb3-9d9c-471d-b0c1-91755483aeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de19de2e-8bd2-4595-915d-248247909a0c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab65842-e98d-412e-845f-9b93fadc26fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8ebc0d-cbe2-4fcb-885a-7d26c4625129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2cf436-109e-4f4e-ba17-6d126e745dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a169c1-a598-4cb0-aedc-ff90bffab63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff9a09b-5868-4843-b142-7fb8f93293fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3afaf3f-1731-4c7b-b434-486df6565054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2354175-d93f-4c15-a9a1-536c50c9265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f29292-1ce9-4720-a507-85356c2be6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc2f405-5d74-44a4-8c24-bbcd9a93859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dadb66d-edea-4663-baa8-754894d8e4fd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e30fb83-359c-4974-a78e-f0c8aa9948a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47502e2-b329-4738-9b9e-4945a5cb7c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a8030f-f9bc-4ef4-86d4-f462530aea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23968d0-e986-4982-8e1f-53d300767f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb3b3d5-177a-4570-b880-31ec3bfd2b0d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d98122-0cfc-4576-8898-90e3bdff8065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc9155e-7710-411c-9d5f-c7607f35880c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c013866-6147-4311-887d-e8b322012c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee76598-858f-43a9-9646-746bf26bf474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81044fec-4e90-4f20-88de-8e850b99030d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266beb1d-7e1f-4e81-8fc0-a8f384bc2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e1fc5e-90c5-4635-94c5-024e1bd22ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766291ef-b5a9-4926-82de-b937d69252b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eae27fb-a831-4979-bc8d-db16bf8fbdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2d69a-3106-41c4-bca8-27d8415ebb00",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece6a132-e96b-4768-9d5a-ba529572dbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6c81c8-af9b-4d42-bf4b-dbd0f489d190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d53c4-5a8e-4ad3-bd75-a223a3996cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31167587-ec0e-4bec-b403-023919ecf639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d40cc-6e3f-43e1-b2ee-9b43f659aa7b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc517c9-23f9-426a-98aa-77cd2084679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a074ab9-2d8b-4f2a-845a-d9636d7fea39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012768e2-3a4f-4878-9208-e40043e34020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e79af29-33d0-4d48-b361-f69c1da52a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a83e59-d306-4af9-8ef8-2954dfd342e0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef035b32-fa54-4afa-818c-12df8b8443ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ad566f-a2b3-40e0-b413-f839ffd9f976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96bcc54-dc07-499a-b45a-e4d3e17894c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ba08c1-981f-4ced-bad8-a65ca6db44ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc87f8fa-a947-4c2d-b1e9-996952c9e38d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a6273a-9dee-48c3-9978-55073da46a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d011c0-a2e1-4697-92e8-49143b0efaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011b326-2a0d-403c-ba41-0210e7a00e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "263cd4af-01a6-43d2-9a87-f3f618d22e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76054f9d-297e-4074-9369-11a21277ae47",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df2ad25-860f-4128-b0f2-97fb42cc9039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8939774d-e29e-49a6-b489-584f9f62d189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d853fd4d-a9b3-4d93-877a-94efee954cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9fd5d5-2643-482c-be86-63aef1a400c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0227bb6-2779-4feb-ba68-b4adb49b9f7f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c34f0a-8f8c-4e9a-b72d-b7b4550bcba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c655c17-c5e8-41a8-9773-59d52b58b79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcfca01-ed9d-4f27-a915-6a04be5f3570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7411302-9504-4588-ad30-29f5c77dcb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd03d5d-e5d8-4699-bca4-9976a50385e5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aa3126-e5cb-41e4-9f5b-881777a9693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e5451d-ee85-487e-ab01-2524b902f4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a95f35d-d189-468b-a15e-f5b602bd9192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aed6c6b-8728-4ae8-a12a-f7517af8bb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b713e6d-bea8-4a7e-adf3-f40e95871322",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425795bd-2a11-4972-9e2e-861cb68c0433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1298fe18-fe16-4a1a-8f54-4a0e901b66b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffc305b-79f9-4a1d-90e2-50d598210503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d850f80d-0d8b-4fc2-941e-4c4c4f5a6f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264ca872-af1d-421c-9a74-4217a22712eb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da27722-1ee6-41f3-aa6e-be3953a2781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03566acf-a318-4421-a928-6ad0dcdf5498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857608df-f64a-4aad-8c01-4722c19377f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "765796f6-efe4-4dec-9870-6f7cb7140299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3f751f-6d77-4c7e-85ab-b384bf1d5bf5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f495fecc-fb6a-4672-9f15-6592a761dd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185acb50-aea2-4610-a1dd-6b6e68974a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d16f96-bbf3-4418-978a-a07078aff80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b693bedc-6280-41fc-8f77-1273d447c1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0a00c5-d482-4401-98d1-d82492a9aced",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3197399c-035a-48df-8049-b66a65f0fc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc88364-52c5-483c-8a66-3a9a97a35f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a065b47f-37a3-4505-964b-179480d3ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2dbb9f-cb29-49ad-97ac-7604c070aa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d254401f-b694-4f85-a7e4-67bf0c3d44a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc17307-a449-4a93-afcf-4b1d7ca37a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163eabe0-c4b4-45b2-a1c9-9acd14b39842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee5d9b4-7c48-4aaa-ad87-44415afb2048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55225fa1-f8b5-4550-8b8d-8ad72d2db27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368d29c-80eb-48c8-a60e-0900d8d3bf80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125a72f2-cb88-4726-9e31-0a6c4b6099fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4355e103-f7e3-4804-860d-d0ae2566d8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea07c56-9e1e-44e5-8468-59acc1646a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b7295d-9c6f-48d4-b225-770d5c2cb4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16857dbb-4d3d-40f7-95fa-d86c268c873c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c96a35-98d4-4e3c-b765-929eb091f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fb79b7-09ea-4951-b57c-30134250d7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d36cf00-c48a-4743-9d90-6962f1cb06c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9175378f-b324-44c9-bbf5-7ad479e06429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f6ddc-19a0-42c3-afa2-ebd0392bd9ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26fe97-c557-434c-a5dd-aeafb505f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161fa0df-0d54-46c3-ac88-e68d836a0a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2e0c73-b88d-4250-bd5f-65ed161e2214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81865d53-0fc2-4ba2-8290-02d8d1e1d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef8280f-cedf-4ccf-a972-d17f94ab1059",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b554a-aa8c-4392-b208-b45b5e0bde4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11804bc-37e1-4bda-9586-98c296a502c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147cf107-298a-4304-8fed-e068642faacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c56dbe-294d-4570-a7cc-b21191ba0939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15369c43-7aaa-471c-aa1d-eac92d6b5ee5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8eae5a-5a33-4a74-8961-3d47a4d61d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f7eeab-1dc2-4117-962d-7ae50a12647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d60e0a0-5816-4ca7-8dd9-9a5523513555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f70ac52-e795-46ed-b969-850224c24c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f6500-8282-4e3a-aada-a40fd38abc63",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cabe8dd-5b33-4e89-bfa3-d75a448dfd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8402a7-70a1-4c64-80ee-d84cb64d4e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c40b2f9-1270-4a44-8505-72a108e19740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5c0a65-216d-4a16-bd5f-9b9c3d454a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c014af51-511c-4a1a-a962-1f197ab0659b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2822c144-2589-424a-b1d4-689922b4a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47020ad-ef10-412f-9a28-68f7e8946db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68e8e9a-214a-4779-a717-944e6ed0c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20046284-9966-46f5-bc3a-7095e94d8ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc0575e-3fc5-442a-b944-80b0994c9083",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3c181e-05f9-4efc-ba9f-07ae0af176ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50ec190-e313-48dd-9aa5-74c2930b0f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddfb92-cf66-4898-9050-963faaf850a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fe011c-969e-4960-a70a-639c0e59fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70b07e6-8992-4c46-9c05-c75637b86c86",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cafdce-59ec-4904-b497-cb63f248e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edf713d-821e-4d14-8222-576f0d8ad6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac065f7-7f04-4f11-8ff7-c902b7ea03af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbaec8b-d6cf-4e26-8ac6-7067795adbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7bcd60-1ba3-4a12-9177-fe7f6f235e14",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6c60bd-9ab2-4ba4-84f2-8adf81fa15c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed82f05-076e-46c2-95a0-e993f8c62a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b85c91a-a3d8-4f10-ac54-2b182a63afc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b473bceb-49ca-41e5-bfbb-b4cd5d75b05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437fcc82-9724-4270-8541-bf38404662c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109f6ab6-ae52-4abd-a15d-d34bc1add82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543c27e7-7a27-40c7-9b3c-fb433bb563b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c43304-bb2c-46ef-8c5c-a24bf6fae777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e23b20-5528-407d-a6d1-a851e127df05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e81dfa-5f10-4679-92f8-1fa26f119cc6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6f0dd-79c1-426a-8dd5-b6ffb790c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd2cafd-4dd9-4271-a67a-9f673a79302d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a82f68e-d4de-4805-9cf7-b8b1a36b24c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc0a1b6-e31d-4d3e-bb24-3d5d69b7bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb8ec07-efb7-4528-97ef-a02bd32282ee",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c82157-d9d8-41ae-88a6-596355a76d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c70006-cced-4ba6-9c93-291fe5aac1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0347a1-a9dd-48f5-ad99-2ad704addc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3959c289-6da9-4f63-b1cc-38f95fa857f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0834676-bb97-4385-a7ed-e2e2f292bb3b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e82da23-0e61-4200-bb3b-4eec8c636096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8f47d-4d2a-4f08-92cf-b65b3544e2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4c3bac-6047-4248-8cc7-becbf7d715af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f6ce72-f2df-4d6e-94e6-c866f25aedee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8a435d-84e3-4cc9-977e-94e9b441096c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da1aae-8a32-4b76-8993-52069844234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7e028e-82bb-4a30-a544-4324634ee101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ad9cc-45ea-43f9-9627-4f7c2d418119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd27bdc-a0d3-4912-b597-2bce72dfff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342d970b-5aa5-4f69-9995-419db723e71e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c871b6-ad47-4ec5-8c06-7d43bb2df968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af356d-5475-43f9-9769-337ee9fe12b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2ceb12-fcf6-4fb9-a6a2-0b7357e5039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12fc8c33-e575-4df0-b304-9bf4474dbd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa9039-c4b1-44e3-b33f-c6068651029b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6f91ad-a307-4a31-a45c-0eadbd31a2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9f0014-4357-41ed-9fb4-47236d23ca74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ee1348-1f4f-4ed3-9a4b-a809f17ec9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4eec4e-affd-4a01-ad45-90b3546ec307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3e49c-c6e3-44d0-a169-2a986818a138",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8cd853-2c0b-4939-98d5-0b8c4e3b127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2374074-8949-49ee-8ad3-24e8dcc4a19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cca5f4-8ed1-4423-a34b-25835702bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6038410a-0157-4668-b7e6-b57fd4014337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263377c7-0f4a-4cb8-ae9d-e537a8dadfdf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b563a4-ba3e-407f-be6e-a171f71ec0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35e66c9-99e1-4520-820b-1b23300cce00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da138ef0-ad86-4b54-8683-0e030ccb0acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee11af3-8b09-4250-bd9b-53e92285e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2931fd-f1bb-4d12-8bdf-163e18492b2f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7727879-0792-4eac-93cf-cf7611daa9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1854883-7395-444f-9e96-667724fe9507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867ca82-97fd-49df-8943-ff06c2ce09ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0e1378-b39f-4aaf-86e7-d21d306bce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54821f6b-958f-4282-a88a-f415a64ffee5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45893aa3-baa7-474a-8e50-cb3bc7ebcc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f145fe5a-9472-4a47-9f82-05b1d42ff4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7766a485-d8ce-4f36-a86c-dbc0a37e9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0f168a-a93f-402f-9487-a83bfe4d6928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a51205c-e9f2-459e-b06e-8f24ecc9fa2d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44662702-c87b-4ba2-a4d9-35ebdc757e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9013c108-129f-4c7a-8c20-f1cc06c3079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91976964-e50b-40f3-8109-8751f2e764fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc178622-c583-4270-a365-96da4025ea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf209e-43f0-424a-86cf-ac5910865a9a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367fbe65-631b-4228-9000-a6d95f3a2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ace61a-d88e-4f5b-8ce4-f5a1933ef7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00fa1bf-953c-4319-9e50-de0124f857fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03f0ca12-a1eb-4571-9740-63deb417e060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a5ae8-46db-437e-a9c3-c86dbb03d53e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec77daa-e42d-47f8-bda6-5458ce46d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeb4d89-48b4-4b05-8ae2-b945300f82f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a7a115-118d-43d6-8d5b-076b93010f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce09648c-b739-41d9-a273-e95018e0f547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acae642-ac96-424e-adba-79b1595adc4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ade9ef-3e98-43da-b4cd-f9878597f5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7955fa3-9c51-447d-b796-60e9403e07bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d963bd3-cb4d-4d3e-92b1-c7f0e84fa337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9006d03-2a5b-474d-b003-15da41b3aa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbeef7d-ff3a-4fdf-97fa-2633f7e2035e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a102f3-5c6e-4411-8cec-a995664105f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1277aa71-a913-4dc0-ac97-3c6791a07fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206550ea-63bb-43c5-8240-f7e59e5a2b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddc978f-5986-471b-9351-4852ae216e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68323b1c-3ba1-45b6-b019-151e8431d849",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d87c1-0fc1-4707-8e19-862ced30653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c308512-c458-4f62-9851-bc88303570f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83c6f97-527a-4a89-bec0-e12db78a46f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f698040-f1da-46e2-ba08-457d598c8340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af02f4f6-ce7c-4699-bc5b-78bd16886aeb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9902b2-2c2b-4609-851a-a229526f8c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7194ae-710d-40ec-bf3c-6221a0635616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6008207-0494-45c2-9019-fff8a060b884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8afa6495-c3ad-4cce-b4fd-e86be12f510c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc648a1-40ca-4afb-b8d6-876d110c439d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4592880-350b-4ad4-8af0-8c492eefca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c5ed1f-fbd8-4cec-a6a6-e16cc84dcbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5ecfae-c055-44bf-81ef-b1f80a83c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fc44b0-3e58-4a4a-b275-94fc92d189df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc50328-ea19-4f79-9d55-dd399cc66f98",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a2522-5a2c-47a3-b185-c217a7ab3faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffe29a6-e3da-4872-9dee-c87058afb09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8de075-b5bd-44b1-9a3c-9f1cddd3331f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6dbcb9-b9d2-4690-a155-cdc31a3eca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41121c0-c599-44fc-a8ec-6f6ce1a2cef2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9203ae10-dfff-45c6-b2e0-244725365241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40efd8e2-193b-4a90-8a96-d1958b476897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edac233-7b27-4fac-908d-34264088dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76985c21-7ecb-4215-a53f-fe3b9647387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1a0df5-99c3-42f6-88aa-d6355114de16",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94d400e-aadf-4daa-ac3f-8e8180aafd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc64759a-8072-4c2c-8caf-c5f9010494b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c0d27-40f9-448c-9e52-a369977b11f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc29b7a-07f5-4b33-8b82-70295fed6e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f10662-0599-4f38-8896-6ac3b44445cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4ec5cc-52ae-485d-8498-87869f5b1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783846e1-9997-42f0-a6f0-72742d993c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce890fd1-efc6-46be-ada0-cda975a11ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0333c6a5-a32e-4875-aa0b-5636a6b4deb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4adfd1c-31a8-4874-ac77-79b5642d237e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ff72e5-55af-43fa-af90-fe0ca811c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d25a6f6-f9ea-443e-a1e8-c6f1a84576df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9f5e9a-1947-4c20-93b6-849859515086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe9b27c-7a7a-4101-8eb0-50ee56b3addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2371f1c-aa36-4c05-8d3d-e9a279699779",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cb8cff-d2e3-436a-99fb-630606335f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "98a609c4-524a-4a80-930e-1b00671feda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca9811-cd78-46ef-93c8-6862f17ab4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cec51e5-e674-4b1b-9a15-a8080500e3af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4465e227-7eb9-45bd-92c4-71c5e28531a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bed309eb-d1c5-4bc2-854f-15547be92c7a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b20f57-1697-4d95-8d7f-2da6db27bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1969a18-365e-4477-a842-2fa0cb2036d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5a7157-71cb-407b-9b67-d6f2d65d7e67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd515c74-0f32-4d61-953a-6ecb1973af47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e605419-ba6c-49b8-9393-d3498cacb249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5288735-6276-4939-b0fa-5ea43c21a9be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "757eca80-a148-4d28-a22c-61bf05bb68a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce9c9a54-54ba-4e42-9787-d747fff6e17f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47251237-776f-442f-a5e9-3166216d3509",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59ab32c9-3d4d-48da-88df-e6b677f8ee66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02e70e0b-51b2-4f03-becb-699485b83dc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25fee3b5-4d0e-484e-a336-13fa84103bd4"
                }
              }
            ]
          },
          {
            "id": "7a6261b3-fd05-4e84-bb20-c4ea75698ca2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13eb8a1f-2fdb-4b7d-9997-3f7935b76739",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dafce14-3cbc-42c3-811c-4674f76e9aae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bd46fe4-2da7-4d50-b82d-2549bbb78fb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4df0e723-ff92-4030-842f-0a6fa91cab20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60b27f61-2226-4ab5-bb0d-bc20c4ed9ea0"
                    }
                  }
                ]
              },
              {
                "id": "9459fdcd-5264-4546-b7b5-935049b1c193",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77328b27-8351-4245-adbe-6f22bfed861c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e38f51f-d29c-4174-9dd8-64e2217713c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e19b642-8db5-44b3-8388-b98566fc8fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20bec6ec-bc95-4a81-9c30-554f0e452650"
                    }
                  }
                ]
              },
              {
                "id": "9b02adca-aa7a-45b9-8453-e825c40d4db2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aa0a09c-ca76-4964-bd31-ddba5b7e453d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daa172e6-6cca-4fa3-9489-283a26fb3c96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ce51244-494f-4e74-82b4-c355a0a1ab3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd8232cd-c2ac-4b3f-aad5-e058083f4101"
                    }
                  }
                ]
              },
              {
                "id": "9cf7c49d-f20e-4554-a2f5-8d3fde9bd66a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3421945f-4f0f-465e-89e2-a8832921f1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abab3e7e-ea3a-4609-8fbc-bcd07cb1940b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef1eb5b-1d33-4bf0-b970-b85da8b3427e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "deb97f96-ee91-49d3-94d8-8e61ca9c157e"
                    }
                  }
                ]
              },
              {
                "id": "b16b8ff0-1dd0-4457-8cdb-1e661d1a1ad3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb2012db-a586-48d9-b0b8-dbaf930cf8d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6c2fb6c-db09-4e94-9c93-d837e05395e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c262b5ff-6d6e-4417-8e92-e536c145f85f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b7e2a3fe-afb3-461e-8a6c-81c4e86f1d33"
                    }
                  }
                ]
              },
              {
                "id": "062715d4-56e0-417c-bd05-26c064f48147",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3efc2b-c3c1-4a85-9a69-829544d1c806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0aa817d6-43b1-44f3-ba22-c9b9c0a98d63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "610f57d5-aa06-4c00-b133-79556724ed98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0101eebc-bfd5-4d04-bdac-4d9eb80761d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5f38091-d27d-4bb7-bf89-8c606ce254d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c20e14-adba-47c4-aca5-43787d9ebcdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "684d8a47-276d-440b-a006-e23ba015e8fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cd5845d-5925-45fb-837a-4b77104a386f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb75fff4-0b08-46d8-a6d8-3000258f6576",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "62d7928f-088b-4f6d-8fc0-a7ca3a378efc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc81c456-059e-4696-8872-146375d6bc43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cade6daf-74b1-4701-9e86-9dbbe4008e00"
            }
          }
        ]
      },
      {
        "id": "57acab8f-aa4d-4aad-ac53-658ebb1e2f62",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e0392793-db09-4a67-b428-f4f23e614572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6028478e-71b0-44ca-a782-242d95ffe56e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31299ddf-8acb-4e78-924e-f12b6d6465ab",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ef14b1-8ffa-4dfe-a2b0-e93c72974040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cf7ffd-857c-48ea-9991-d66def2de201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a595d55d-485e-4992-bc45-d50b27613ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1637f9b-f002-4e8c-9c8d-9b95df8eb789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7ed4a7-91d6-4d7c-83ac-9bb6475eb981",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede422c1-26c4-4b1b-8342-53f5f34e8e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d8e5ce-97f0-49a2-90d9-989f1f73d32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36d22e7-5345-40b3-b860-d739de6bf930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2365b13-dea4-499d-81a0-756a97ae8dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd80fd0f-814a-424d-896d-ae0ff0b52ffd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fc6efb-1452-44e4-9e90-0fdc9dbbf9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d94644a-b434-4f27-8850-8c94c965318b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021f1188-e332-41be-b060-9096042e4a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd68d50-ec72-4ffd-ae4a-22cd189903f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80842b05-83a1-45ad-bafd-18f3012daa74",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3c77c0-6fe4-40c5-856b-2ae53733d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43ba444-60ee-48fe-ba11-db8d52a77fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a9d3f3-4ce0-41ed-82e8-103a60117fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd455d5-46df-4a56-a534-754e0993591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d9fac-8fd4-4313-b957-869c734a2eed",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9cbd5b-5298-4ba6-8215-15a6a0ccdd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5ba4bd-e32c-481e-bcca-668c8a1bca59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149b9bac-3912-4a47-bf12-7a28e20e40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "558ae479-8840-4cc9-ba81-2f89a43aa952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4236ccd6-8702-40ba-b3f4-1d7513df7838",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84df9d4-1708-487b-8bff-93876b5301a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2445b92-1f66-49dc-bb49-44dcb6698fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb753d74-4682-4c32-a94b-b3559f5fdb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "daefa5a2-fa53-4fcd-a573-baca7aa02a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8140d43e-3b93-44f2-b88c-fa74a3a60972",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4295ef4-05a1-4e55-87c2-3e58135c9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0bdcc1-02b0-4d40-b5dd-a50425f32b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285c61f8-1520-49e9-a05f-cb219a099923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4870ebd8-35b5-4648-a289-61d3306f388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791e7c17-ae1f-408e-b49f-9872bce0a7a5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca2de0f-b7de-4566-9f70-965129431918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bf1ac7-c26b-4961-90cb-cecdf7044d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0ad92f-135c-4a75-87b3-278e60b7529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56408deb-c6b1-4c73-852e-042dd446e001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2fd438-c12e-484b-9414-65664ce88d32",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070dd76a-27fc-4aad-9a09-294da224ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517542cd-39eb-4c71-99c2-da9eafeb1bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bc7691-dd90-4682-ab99-1f529adb7c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "380c3f95-e9e3-4531-88af-061a510efac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a660992-f3b1-4665-9484-369b4c7b3ec2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ceec82-537f-4097-81e8-381ed27032f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fa2ffa-6a32-4b83-a50c-6f82d0ddbbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31925616-7fae-477a-b8ce-3554bf636080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69cbc21-2569-4a62-b0e1-de2688aa7483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcaeb98-5613-4be2-b37f-c2cc93bd430e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee5e61e-c7e3-4218-aeb2-c1a22d8ba869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb925cab-d638-43f2-9859-6edecaf59b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9c71c0-89df-4ad1-844e-010298a4e23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22ac8d4d-ea39-4013-bdd0-649e787de875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe533fe6-6f97-46af-ba15-e65af92d6854",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ef0916-7711-4426-8582-0363e54f2c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e76890f-6911-4df1-b8bc-95a800855b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c583d41e-1388-4657-9f5c-934c9058bf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea74c2b7-119a-46bc-ab52-a624268e6597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13fea67-3750-4df9-a584-1f658ba6e8b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86014831-b3ef-4387-ac58-13a7a64af0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364457a7-f812-4e35-a574-269dad8d8427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c81ae3-2b47-4f8c-8219-4456327cfefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbd9e15-92f7-4e96-bb10-57d27e113cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3541a799-5575-4fc5-b5ee-f8cb7ae2fb9f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0697beca-3241-4e51-b95a-39a8326a78be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c4612d-c1ad-4d62-a378-0ffb05537aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b5a63-4032-4afc-84cf-9131b910d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b064a2c6-ae32-44d6-9a38-7409a27d5156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37910ead-864d-4e4d-81c9-eb825a702f25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb6aa1-bd78-4d83-a5db-04f0f4d3d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bb31bd-f41b-4a77-9d5d-13f5e5e2abde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f2e415-b315-4dee-aa81-a9717aba06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ccc5bf-ba69-4d1e-ae52-6220ac20bf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafb3d59-37d6-4727-baaa-0c11e6cb3f5d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556155b5-9712-43ea-98cb-16ddc0d98e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e10a443-f7e9-48c5-b8fe-27568bf0f162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea51066-dee0-4441-a123-c5f6ad3f6cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b33e8d-7dba-47ca-ba13-f72038f49a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1f6892-c519-48ab-8cf4-f138a9ecf85b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2daf217-a28b-4e7c-9d6e-1860f27a492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c545a29f-1c4b-4ac5-899b-2420d8c25cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44940d30-e513-4c79-b084-d941ff12184d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a657bd-659e-41b7-858e-bbe4ecd004a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87868941-46f1-46ed-8cdb-463bd85cb1c1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f6caa4-f0ce-4908-811b-5c606470adaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9207163a-f703-4782-a47f-7ed27753bd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e7eec-df27-4242-8763-2714d0e2750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2dec1e-8756-4106-932a-3ab7857a4371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f735e7-132c-490b-8328-b2862138fe7e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a6f19f-a0cc-4b16-a225-d0d1b119df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803186c8-6edd-41e6-bcb4-1a8c7e5e3a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfd1df5-0059-4d3b-a9e4-e60b7074500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec08cfb8-bb13-4d60-a01f-917b8c779f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b14110f-67e9-43d5-a985-229f8dc9f112",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf86d64-d1dc-4521-a998-6b2be81cd90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17fdaa3-42f3-4534-b756-04c6ef259f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f7d3ef-859c-4528-9514-b396951a2997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90da72cb-8a5a-4ba3-a08b-da3159487826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad597f0-0d41-44f5-8a3c-9489d840877d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222064dd-b355-4a4f-b3e7-a547f98fcb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c309818-54c4-4894-b9d3-b0294f78514e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae16ab56-dde4-4e82-8f85-53d256323e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a8214f-1dfa-4deb-9623-5e3dfac931d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c4569d-7084-466d-bd9f-9cfaf5efdca6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5b07f5-00f1-48cd-9a9a-29e00aea5486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79aeb27-7ea5-4ea2-ba55-1556d016898b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a78e526-249e-4b30-94ac-a0c2c6fc0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de541b17-fb67-4708-a764-8ac9aebd323d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eab7258-5e0a-4d78-aa3c-ec0152924314",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb08b7b-b183-4da9-b85c-b9c7356ebd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74f0c2b-b804-491d-a554-e8ea6a8f427f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d349519-be5b-4b5e-b623-6c34ccc1c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c27ad667-26dc-4a65-b33c-080ae33a7173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55476a2-949d-4ee3-812e-3d9541408387",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2015a5-85b3-48a2-af28-70f846d41e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e4eddc-fc92-4f63-99b0-509456cfb2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce6815b-3f8d-486c-9efe-e70e0d674094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b2a5c1-a8c1-4095-ad2e-dd64735c552c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df775b9-98c5-43cd-8694-c203c928d448",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67854eeb-ae44-4371-97d5-854a684d031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe87990-f530-4892-8560-897480ebe056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8455451-d214-438c-9dcd-ac325a5d83e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f213c9-66b5-4ffc-9806-1ae081ce8483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05b064-2e44-4cd2-b966-c2a1286907e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f546372-412f-4836-9d9d-706dc644a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466192c6-d5ce-4404-8789-d00b9da77797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e306b1-0499-41df-8587-8f684b131310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfbd427-e9f5-4b63-ae49-6910d1b7862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df7c531-d78c-48de-b70e-afa4bb2cfbb9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dab80cb-e635-4c21-8fd8-e47b9b2153f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88fd251-bb4b-475f-818f-9f0b7f2b4c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c5979-2de3-444a-a0b9-052d408c47ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c71e1d4-6a43-4831-b255-e02f37d6bdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daeea53-4d66-4bb7-aeff-2fa4e0c24f77",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fa0b0-bd5e-4ae6-a32e-4c6e1eaf4f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f4877-5217-46b3-98bb-561985682163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd4f1a8-8276-4ceb-8a31-fd9d9bc60a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e9263f-fff8-4a18-a415-f697eb2ea9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f77fb-08fa-4986-8197-8bd07c48191e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad563109-1d65-4ab6-8a7f-2e8a7d847a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918e4b30-e473-4be7-96f0-b2217b37e026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b24b6f1-a10d-407d-bf4c-03b6546bc740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b348021e-2296-4698-ae4b-6579b314fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a597e1b-79ac-4214-a0c4-cdae7f9d18c6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adfe5b0-8a50-4883-931a-f4e2de1344fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628f2166-8875-4b53-b58b-1dc02503559a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9321370-a536-4a54-9cf1-3ae54031aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420c800a-ce24-4963-aa33-40726ef42903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eb0823-f602-43c7-a8ef-57d736949929",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb65178-8d90-4119-8b29-6c942b7f6820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea75da07-06c0-4f52-93b5-7ddce94f74cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ffb9f-8146-4237-b247-a7df9c69a704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30e2967-b2f0-40a5-8898-e46a0d0c4a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523235c9-e589-4d0c-89f5-041b51900a32",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e941e4-3f09-4f56-8d0d-f815a143866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01505740-05e5-4917-9370-319ef666316b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b6208c-157a-49a7-9094-e6800e2eac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1312b495-fa62-4a4c-8aca-becfe3d6a60b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "661ae416-101b-4b15-a85e-7c487824a242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e565b63a-50db-4b38-b51c-e51bff4760e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51dc0b-d4c3-4fce-9c29-7921541ced4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c27bf41-194e-479b-8de3-ab18900e1922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c7d089-aa99-43e9-95b3-c5a8699f7361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1de2314c-c1d1-40c3-b737-0d2129567aa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0a57ad3-67d3-43e4-b743-9b136a4edb6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af99c007-d142-482f-9742-1c9d1a22e020"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a814077b-76f1-456a-a238-b138be9ca064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70bd01d2-e56a-4e02-959a-3cc4387c0248"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28eb3055-0f1d-489f-8990-123877f36324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c87c547-9dba-475a-b0f0-8b2d12f91db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf60e785-0433-48b5-a2f7-dd24e07d4a06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c3b35cc-e3d1-46bd-9d79-28f3c855041a"
            }
          }
        ]
      },
      {
        "id": "b85ec893-43e7-40df-bc38-c80d84ae86e8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d1937253-d7f6-4989-9f65-7c9b66f4e5ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "951e58a4-d5ac-404e-a812-5d655f88b069",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b027dd88-d46d-4297-a139-c8f92c0eeb6b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e43c7b8-d74c-44d0-8795-0580508ae119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777bada3-7aa3-4080-a309-b6127a15f2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a9558-1669-4cf1-85a8-6e84b82e60f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "38adee31-b1b6-4ebb-8003-b53d77aed9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d430a1-374c-4029-8ff2-89845937509c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bfa52f-c085-4264-b317-3cd6de9d0709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af5422c-04bf-4191-84f3-c898bf97a7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5955236a-007e-4e2c-a8cb-37824127a481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e67916-6324-4a60-8c27-294dc4fdf01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c22a19-8084-46da-9d50-310f896121c7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012f94c4-98c7-4172-8972-b41bf9a8712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf59e99-9ed9-4ecb-a39f-856da6dbc829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbdd781-4a86-42a4-a9a1-f9b7a5e68b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0f91dd-21e7-4a9e-a1dd-6f42336b1ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d43eb8d-e5f5-4b76-baec-de58c836bf05",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d30b4bd-f8ef-4659-a4fe-485d261b8cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7045bb-7b0b-4317-83d5-c6157dab6cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d2b986-0d50-4814-a6b9-070bf85bbc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c88481f-ea72-46b3-bbf4-c519e7c6375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c49495-9e25-4f37-80a6-30ad18fd20f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba219042-e358-4a4b-9d0e-668d9b2ec1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5d7b14-3291-4b35-838d-b9ef3dfe5c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e6828-154e-463a-b353-f2d6a0d6a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f346045-aa36-49b5-a080-bcf620f07a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1a2cc6-76f4-4d8d-a4d6-283c4dd5b73b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39f915-2849-48f0-80ca-b5bbcf93d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb30920a-0adc-46db-9314-373d8ddbcaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3c9402-9206-4239-9d85-075ea6b5c02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2849c8d6-36b9-4ca6-9937-3af68df36268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656d212d-6083-4558-8d92-749f9846c572",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9336d9-6862-4d98-9619-4737b4314526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9051a8-6f70-469a-a6a5-fbd1b36980ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc5b380-17e7-416d-8dba-936fdd65f164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa063a0-10f9-4c2a-8a84-37d1ac71f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86496ad-d7dc-4eec-beee-43ddf738299e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e84db2-9f14-402a-8b97-dd38c9e6245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c99f58-2998-46c8-9a22-56d98322c8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af27c44-2dcf-455a-9d9c-d2e052e16af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a666e3-82be-4abf-96e2-774626607542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d082e7-8ffe-4444-8e19-9e0a2b7ed418",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aa5bc4-0833-44f5-aebe-6951d01e98d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a392b4c5-e95f-427e-9482-13016a5d9627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cb9af7-27e8-4de5-af3f-d186f1d373fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3feb41-e5e8-4057-bbc5-467004ed3b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b633178f-c0bc-48e3-af01-e997790c9aec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ddeb95-0d43-40b0-b25a-1af85fc9b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f11ebad-7670-4871-bce8-998c00a40b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7c7d36-d415-4058-92cf-5416867ce8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f124a50-803e-4351-8260-0b7b17497efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdebb93f-eeaf-412c-a330-d44da5dc6a11",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd129dca-b4ac-4d15-bec6-38024529ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b85a4b-b476-4c5a-8696-f9bab4c67e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be392e-665b-437c-a6fb-abb3c011d59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa2f5b9-957d-4b7d-b5bf-6bae072102a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425fb115-6148-44d8-87b6-a5bb367892b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd63adc-802e-4952-960e-8daac10bd731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd5d322-eebb-4070-a0a2-b6a8a5d692c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e75b3a-ac7b-40ef-abf4-f739e046b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76d5f87f-8417-4b7b-85be-2f043a24cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e76f9ff-0c78-4893-b1ab-e443b254c46b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273798d2-7437-49ac-84e3-30004eb8c42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c50c9b-a507-4607-bc6a-4db7a25f3dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c347aa75-20e4-4f27-be6d-44d95a93f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d248e-d769-4ae2-a14d-da5bd7d6067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09583776-c5b2-4c73-b978-e1c529fc258a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e743ff-93ef-4043-b658-29703206aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dac383-4107-4dd0-a109-c302c4b311cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc442447-1399-4a5a-96a5-9fdc0c5b76fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "105b41c3-5dcd-4af3-82dc-93e99c178bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3266f620-c2b1-4049-93a2-db2f90a082f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da84719-b2e2-475c-b108-eb88c296def4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f634ff1-0675-4301-9a0e-cb36f0d4384f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53df95bb-4979-42e4-bc3f-0361803fab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e65925-b723-4ada-8635-069b0c5a141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7070fcc2-c0e9-4708-ac9c-c24fffea923c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8848da39-8844-4b84-b102-9ed7eb9cd848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee4730e-35cd-463b-8c60-3135729164f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab04858e-e18d-4992-b489-da11ae92bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b5b56e-287c-47af-af29-15630b56b0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff054ee-a4c9-461a-aeda-8283d4a6ce1a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e4060-da83-4c92-8348-d511493a1d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d12717-eb7c-4d43-bcbf-d3637d206c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2f7bd7-9dea-4459-b85c-b25afd063779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b40b92-0f67-4951-8aa6-3f4ee2aa96f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b77e58-e9ad-4bc0-80b4-b48ea6289a02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f06515-c434-409f-9840-5e4be61f43e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db442616-2a6c-462c-81d5-68be2fbb4cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47959292-088f-4cc1-b75b-5300fc66d1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8ece93-c171-4028-8608-d4307b020cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a21f3f-a4fe-4031-92d8-10efa79bc37f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dde7fa3-176f-42f6-86f9-e0a3284c0c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e6d6b9-3053-430b-9449-9ad2defc2f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e120d8-97dc-4704-b9d7-3fbba95a4c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9147027d-d5e5-4eaf-8d86-74324ca4104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4155b23-53bd-40bb-bad1-aa3283a33142",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56061b7e-50d0-4af8-9783-b66aa71fcf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c529712c-5556-4903-85f2-5d00ed55ceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d717151-8e60-46a1-945d-ba6ead29b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd11e7f-f568-4fd8-b8fe-135325096843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a231fb8-1397-4f08-8f1d-655ac5f43902",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfabe082-7a85-4b78-8927-7509a55faae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd59dbb-c283-4ca1-9850-618c0f1b984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba45d5b-b1df-4884-b2b3-9b70654428c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f19c431-5d64-4b0e-953a-2808279f134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a8e072-380c-47ee-88e1-41caaec05fc3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76155272-adc7-4318-9600-43873180ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9f2b66-50bf-4845-b3f0-48dc668f7178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c251665-5f90-423d-aefd-44f02d66510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc9c814-e9f5-4099-b4f3-855fd18c586d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bc68c0-a35a-471b-a88a-d938dd80dd88",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741e8bec-e9c1-4497-9014-e4aa9e74d9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2096cc6-2cdf-40c7-80cb-1fa8cb7971c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da62d2fe-00a2-48a6-bc18-02446e545076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edae47aa-6da3-4724-a959-59baee1e864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e03aac-aa9b-4aea-a2be-79485b5451b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683f450-32f4-4d6c-88bc-f9dd1bc51f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7294e2d-8dae-4804-8f19-954e9a2c2475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eea7ba-4072-4b50-b112-91ede4d8a346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312e9834-e622-428b-b762-719fee53506e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e6947a-dbc6-4a20-9134-4ab9ee9766b2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727d4313-79c0-49f1-b720-1277c6fbba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d1eece-d96a-49db-af50-8e578c7be7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114338be-89a3-46f6-9146-c4379a07436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2acef62-6e6a-4144-ac1b-cb7fe5dd2ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7652f774-2ce2-4fb9-88c0-987bd6d876ed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b855ff-d0e7-47b8-ae8e-ab2e0915a797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49435b54-f19b-48a1-b7ea-29496142c9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10496bc0-1bed-4af9-986b-b5410c6c337c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a6d7f7-1ed6-4a97-bc91-3f2a870b6aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29af4abb-4dcb-4ad0-8821-39fca77a9a80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f9e7e7-0a35-45ae-a5e4-cc416614c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b269a9-69a2-4c4f-9bcf-1a47ba234d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade054b-dd7e-4c6e-a386-bcb7d0a85838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef71964-1297-45d5-8363-8a5c34109dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b45cb5-0a94-4006-9a65-e22a183a692a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d7b493-0b38-4a92-9447-a753a146cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f69ee8d-639e-4642-b050-4d82c48cc5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08e9bea-e9e5-4c5a-9d42-f63b8fa83aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f87292-3172-4496-a00c-45c602559a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad0313d-82c9-4df0-a547-06a1d13b1dde",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1faf09-8976-4671-8307-f9c8cbe245e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf36946b-864a-4d77-9cfc-9668754ba38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1799209-1dfd-45d7-ac2c-b9eed24b9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f9dfe3-04d5-474c-83a9-206fb5cf6887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc0bf5-27a6-449f-8917-7004e45e62a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e0355-2d0c-4e61-8593-8487d1fe110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd401a5-4fc5-4a0f-94f4-5f2716fd5b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b8129b-a70d-4739-835f-80f980139ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78bb435-7635-45d2-90e4-91f3d4670fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6aebad-a9a4-434d-b01f-0135cbbf39b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d7afd4-0f98-4fc6-8dce-3037b697d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd52a61f-8457-4018-b97c-a9355ea59c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c22198d-8631-4d91-b294-ed3ea7dd408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2362fe98-5320-4e5d-bb07-882284f522a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e4e17e-201e-4795-bf94-c54772702791",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8088eca2-a5a1-484c-82c9-744506911e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caba189c-a225-4399-8a58-f46f522129a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58c2512-95b4-4473-acd5-2bc3d9cadb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecee6b27-e970-4a2d-b33c-cb5a2b17ae5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9843c3fe-aa53-4b9a-9216-417591becced",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff519367-f521-4c40-9a79-86d5b9ca67cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f00326-8c05-462d-90b5-00af9afd9047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb53f76-4878-45ed-8874-912fe0d3580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbf2b24-91c1-491c-b779-120e76ccabda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4add3-fbf8-4450-b864-c57a4da044eb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fe878c-8651-4d6a-a2d4-9a9a178c381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250e59ae-c380-489f-9af3-1b4891860e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43bceed-5337-4e09-b58b-44f320ac544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "081dd87f-fdf4-415b-ab3c-47f532f38742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f57214-a349-4a14-ba82-ea2f74ccb5e7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c1e4c5-6e01-48f9-a358-3270d92ecc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21da6f04-55d2-4d58-8890-333d21b4d46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85a0681-faee-4921-89ef-4b771d45bd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f7d53-0fae-4e1e-968f-86dbb9ee6f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc77b61a-250f-4145-ade8-1cdabf16dde5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1c3b9d-1ca0-4867-861b-ffbabf4404e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195eae8c-2701-4bc1-a6da-0dd7fbd8f82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c612f-3aa6-4d3b-8e0b-b1fb52b3d730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45628d1f-33a2-4ad1-9169-a5dc7900f3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cdc140-bf6c-4d1b-8231-cb72257b4fe5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562ba43f-1660-4202-a4df-2ea8cbdac546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0bdd4e-2002-49cf-86de-d2eea9b039f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3824e131-4c28-44b1-8c61-1281be6a75c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93f44d-b884-4e40-aa96-89569f93d33f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9a65d26-73fb-409b-a841-839722a184e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f73ca7-0691-4bf5-b593-8c47d33ddecc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d185a882-f10e-4d21-be82-d0ab0c802873",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1104e90b-2c29-4e6e-9087-fbc7f7941529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c00530-d595-4fb2-aa72-171554a40287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bc8bf4d-5656-4d1f-af92-ec5eb4da8dc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32ad0896-22d2-48c7-b2b1-136ef3968631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c988039d-ff14-4cff-9aa9-8c631402c367"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c90ed2-ebc0-47e2-837d-55b30e39ecae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0754a9f9-276d-4db7-9916-47b72254a03c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ada1ca-b559-4301-b6e5-01383978726c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f769640a-3a9e-420a-afb0-1fdd6a7f8a44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d5fe008-d6fc-41c4-ac7b-8d6de3448231",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f404abba-0cac-4b9a-a9e0-987a88e0d9d7"
            }
          }
        ]
      },
      {
        "id": "0a70c068-62d7-45fe-a68e-3049b19c00a8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f08d64df-33df-4a1a-aa51-09333270a3b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83fd8241-b49f-433e-937b-77920a28f545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2084d757-e536-4095-8eba-46c61f55c2d5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc01887-5e90-449b-9111-8cf9e324bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1066498e-9a5d-4b48-9733-e761e74eaed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3023e790-d415-41b4-a338-f92fe58159b1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b85251d-336e-476a-89f8-ee1f4f12e61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db79d5f-f3c7-4ce4-abe1-085a88248d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126f3414-d6fb-4b72-86d3-21a6dd5f7999",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be70147f-e5af-49e3-b2d7-b1dd7f5d9192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e62467-6829-456e-9ee3-d237b2ec28ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f657981c-7b60-497e-80a2-66e6dc138803",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54093279-c01b-4941-92f3-6f8f8824c623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647d4628-40c7-40d3-b653-083cfadc2b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639c7a6e-6886-4e54-be0b-f7170a284b34",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae81e0-a02e-4cfd-897f-2f2ba0d93622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4583a4c2-d08b-4598-8d37-c7b1659cf74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe616dc-f355-46e7-8ca0-1822049e5d4c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b619b23-e7d6-40cf-a273-9b08d0e23695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9a6dff-84c1-4fcd-a321-86760ecaf65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238948e2-35a3-4aa9-9d32-7e8fff88bf3c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680c00bf-039a-4051-a97d-45f684ca3c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd3bdd5-9c09-442d-ab35-839268e022ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3570aa74-f7e0-4668-bad1-232440525892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad94bf68-6ec3-4e0d-82f6-cd39d2df5f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef061c8-bcb7-4597-9ce3-42e4e9cd1952",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d102f2-8c29-4173-9b46-52331869233c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa340b5-6873-459e-9c14-505f8277cb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5705f29-b928-48e5-8f18-e95f0de19583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02a3731-648c-440e-aed0-66aa4b30c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c16817d-df23-4f53-9027-1ff519953fb7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91981551-745e-4eed-8bad-35ce21067d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d4403a-4950-4f5a-ac37-5d01dbd4784d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9f6009-42fa-4d8f-9955-6c1245dd0e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c536977-ae74-45ae-a640-f6c566747aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7514b8e9-76fb-405d-bd89-49886d8b42fd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a32243-8470-4a0c-b52f-9585089678a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda047ce-2b64-4d8b-83f4-986a2da4dfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd2d92c-8f6a-422d-8264-cdf49b1293e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb45c57-d2a6-4005-9ee4-b99d509dd784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9b1ced-bb3f-4346-9d13-25ee390d690f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f84b08-4166-4df6-a5f9-243551cca514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352d6ac5-31b8-4487-b08f-7148abd6f728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5298afd0-2cb3-465e-8fe2-f726d68de88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fccddc7-5959-40c2-b46f-3d59ee32f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273da109-a8f7-4b3f-a0f4-aad77ae464fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4724c-fd45-4e1b-a130-ac6da0193804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdabe9aa-0886-4af7-b3bc-c4e79be20f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b59cb26-bc5d-496b-934c-df6ce07491e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e4605a-b23e-4791-a1cc-6bf185791f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfdb8a4-e413-49b8-805f-3d6cae572501",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da051f-0bcc-481f-9042-0c15adc2dd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3c1b35-3b94-4e69-95b6-91bf031b1569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c2fada-4fde-4fb5-bc6a-beaf21993307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3b5a12-83b3-4ab2-b272-656d18a32734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a559662-0bbe-4ab6-90d9-d4562207bd34",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a77a7f-4956-42df-a8b0-def8eed5a95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fe1d8c-a9e6-45cc-b7db-b8efdda5c3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1dece5-e4fc-4345-bdad-2c796c000bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a870c425-4eb5-4f2c-86d0-fd6e2290c532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b32684-7b64-43e9-891c-bfdfd9175098",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9319641e-6420-4b4b-9a77-cfb8002509ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4b1953-41d6-4970-adff-5bec78e0d5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5809f-c9d4-4824-9b57-25522420daab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe587d1-581c-4e52-a434-13e6da5f00fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14bb5ec-9e2d-4136-b7de-7be0c28bd68a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5073f-012d-460a-b551-6c512d821980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a158c425-7edb-4241-8b6b-56eeccbc74c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ccddb2-5b43-454f-8d13-8acc837b616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a229babf-b94e-4dba-9437-8fc986ac0981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3e71c6-c74a-4671-9dea-e73f59828aec",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f067dc97-2446-4c19-b8b4-354b2779d559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4040362-dc4f-4020-ad61-c0b442c94a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620ece4b-6473-4881-9297-e0867863061b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bfc118-922d-47d4-bf79-88f37d3b22db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5956b4de-268c-4035-9453-b693ac4f01a4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227edb71-72f4-4250-9593-96410acff1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a607aa-9335-4092-817c-7f6202a2ccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cfc111-049a-4a36-9e4f-0875477266d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6015acc3-809b-4a57-b125-d895c35eb6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91601fb-99ce-435c-b00f-62020ed27803",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f124dd7c-cf8a-4b9e-a6db-683eecef29cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcec6554-5a91-449d-91e0-fe14522a9b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f29b76-0609-4e38-b89c-2af1c2445404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b848462c-58cc-490d-a87d-7c453bc32900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d04103-fc6d-487d-a56d-981f80a3b2f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b809ac02-b261-4047-8233-eb64e177e179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad891968-2626-4a1a-844c-ee1a53bb7eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1244fabb-0eab-4e2a-a91e-164040ebd5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fbe1f8-e202-46d2-ae6d-812ad8692dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f7616d-13d0-4109-b47e-67aafdfd6365",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eda7ea-31d8-4504-9aad-550571f5a536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8b91e0-68af-490d-af1d-140a822fcfb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2847dd4e-3576-48e8-b821-c515a92067f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3299b141-0ded-4953-8c85-e26e84b71bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d188c51-dfa4-4e0d-b699-ca9895d981a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea8ff6e-aecb-40a1-ab68-e94c9a689b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3764dc79-8861-4859-a6a2-040c99ec189c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15689215-d0d2-4d5a-861e-0577541f588f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f239513-0b54-42d2-af1f-3873a4089534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2c8968-f23a-4ae8-b74e-d3c4faff2553",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c500532-ab57-469c-8315-f25853931b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c11121-d2e8-490d-8664-f60ebc1cbace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bdfe6f-4c8e-4de1-a213-a441131bcb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f46cf8-5389-45c3-bf17-ea2c071418b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905cd5a3-b364-4103-9529-dde234dc2c10",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f55146-c171-468a-b730-9f24d52bc5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f22ae5b-e583-46af-b39c-8b064833171a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ea27ff-8fe2-4dd9-bc83-05a2c7221985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2482b4c6-5dc0-4e8a-87b4-6edb736e843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d135684-d640-44f1-b52d-e29e7c76fa63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5bc9f-5e5d-4e42-8b32-68b62c0e1aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d23877-62c5-442f-a339-12c0c8ca13b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e734faf-79fd-4ca0-ac0c-ce9dc0cbfb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25832231-c543-41f6-b430-0941d96a96d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6c456-e172-46c7-897b-7dac8d47423b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378cb318-053a-4b2a-a50b-f26745779c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c22096c-f55c-40ec-a12b-cc7509bb7694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0adcf3-5322-4377-8df6-b1e9c6a024d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f4a869-c84e-4f36-925a-cca3e4364892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4a6bf0-cac0-4db4-b179-c5902c034dd6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711355d8-b8e1-4330-92f2-64c5fd809d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e83ddeca-bde0-411f-af3c-e7094c76dc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c6385b-e7cf-453c-9a57-95c1ccf27112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334ed993-8284-4ba7-a252-bfd43255ed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2dd956-8537-42fd-8272-ac08b04f3b3b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f09fc0f-d813-43be-834d-6a34d569b962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31f719d-014e-40f7-828f-b4d8037dca1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397ed391-be50-4fa9-a5a2-3c5f76416406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043c3289-9757-435c-a290-99866e095d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8d2d83-f341-4e79-ad27-2be907cca97b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaff19e-ae91-4764-8117-a9bbfadcad04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b507fb-aec5-42be-8737-b94a89015ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30daae49-14fa-4e1f-a66b-4ae60687ead1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc50e67f-6a11-491b-8c97-bc33e0c124c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee89c74-a963-4c8e-8216-c41b85cfa5a8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df8a64-6f31-413d-82ae-508bd349ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8ca236-27e4-4e93-b9b2-c537a6cfe1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9da379-f757-42ec-a686-db448b70116f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3542bc0-0a29-48f8-b45a-9dad5c0f3438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0e9098-cb00-4686-a523-6e3dbe4d0123",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4bec94-3bd6-43ff-a735-2add6d487cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1848b9-2314-4f1e-ba07-4a043a353412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a3bdf0-08c5-4e04-8865-ada509773dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfda84b-6ac7-4683-b526-cda21eb75ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4230816-9ef5-4ceb-8f35-2459ee831449",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8d98b3-4490-4c54-99a1-b483a34e20e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc389b4-6bb2-4b70-912d-a62dba501192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8661fa-164f-485c-8586-1c4f8db10a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce74ccc4-7ee5-48ec-8532-6b7462b6f09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accb4546-942d-42f2-9038-c149581d7410",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714b9bd-f0c4-45b3-88db-95da4b44625f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785d0dd4-fa1c-4b75-ad31-1951faa03f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3448b72-e90d-4f96-8ed5-082fdf594f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f57f75-f3b3-4853-83c2-e62634483037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6091997-7666-4dbb-a296-2a674c115679",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c816290-7460-4f3e-89e0-571724458924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01006f16-d5dc-4455-869e-bedb5e40ee51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02561795-e642-498e-9784-dd37ed15160b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0309d9-4e92-43df-bb64-aa56ba2882de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a10f6e-2a68-440f-bdcb-27c6f2b4cbb0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdd90ad-a7be-491d-a57a-cff7de917d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd958ef-35a3-4130-9f2a-3f27fc2f0ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6ab767-0253-48b9-b2da-5676a5e2b4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fc5831-faa8-4b43-bae7-942529c37785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5679650-04e2-4603-b953-f35afc652c23",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1006d56-6474-4837-8ad8-374b3b3b1059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61b6d27-a60a-44d8-9054-ccf758c7f017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f44823-696b-481c-89e7-fcc24bce93e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564be571-6d6b-4f3a-aca8-5430f37d7f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbbe493-e8f8-4e66-af3e-dff4bdfd2f7c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4a1da-2972-48b3-ba8c-f3d3bbcdac52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe67491-7f7a-4ad3-a286-edfe36649f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e6ce7-521d-4792-96fd-716ef131d4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbce623-1745-450a-b4ae-ee5bdc1a7bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c2da2e-5b9a-44eb-aee5-e905f91345db",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6bdbf-5958-4cec-a05e-16bae7fb4b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82ecb7c-43ff-4a62-8ef9-6be24612060d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2016969-6765-4c4a-8986-093a2c36e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c5dfd0-7a18-4b4a-abd3-b1f660d3b5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c88807-5329-45ed-8dc5-98b624901e00",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59090ee6-ec03-4040-84e8-910cf840f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05298c3-ea40-4416-a52f-59cfab550b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0abdd1-5c11-4198-8078-c887e4056caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc42c078-6ed6-4aec-9b3c-19bda56d3355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2645db4f-bbe9-439e-bf05-15bfdfb4f7ec",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c20a28-4696-4fe7-8bd4-a381d333f4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d631ab98-b8ec-45f1-ae13-b71b0e96c00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045ed8b5-ed21-4401-9ece-185d4544980d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ab7ec1-a9b3-4480-9573-ec1dbd39466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e67e786-f02f-4348-b0bb-36c5761f6521",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec97f68-42bb-4eb5-bfb1-9d8c87b8a705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e4ccd-655c-4ab4-9371-9c3829cd9179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847fed5d-4db4-43ba-82c5-1d31b3699196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0348a4-4090-4f03-bdaf-cac492880321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041b9d03-6a7e-4da2-88bf-902fc2a985cc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69381335-b265-4378-87d3-993283398503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce5ec20-b31e-4ade-985b-ee1172527e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e975b01-0a81-4cd9-a7d6-e3432a1a6028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959914df-9fa2-49a2-a64a-53b6ee26fc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359fff1-58c7-40a7-bc24-ed873b839c25",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74252630-08cd-480e-bdcd-f54e1aae3670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a2fceb-0cec-4082-b7a3-45c3953b04de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e37f26-f7fa-45a9-a8c5-2dbbbd14c739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146c37e3-ee8a-4809-8678-65447094612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df11104-4f1f-4e81-a669-695294ae920b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6289145-fc78-4cfc-ae56-358ba70e13c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64ebe8b-08d3-4469-9313-10ae5d1e1faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e71774-9563-4b47-b66f-18f6205da41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f995f37-0f05-4c27-aa09-0ec83511f75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ade653-a77c-48df-b98b-545200cb215c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318b2161-00f2-47b7-b755-1cd7583bc4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17cdbc3-982a-4bf1-aee6-e265f8327659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c8cf24-5e2b-45e1-a07b-38d524797049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c33199-0ac2-4500-bbfc-c8db5f9ca17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fcc288-aa71-4184-9f53-7969aadf0ea8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d651e3da-4fe3-454a-9d07-179d1811dc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcd275b-711d-458c-9c18-cc3b45de3d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d839448-96e5-4ae8-9718-7e2eb303524d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004ce6e2-e670-41ba-999f-5a79cc92c494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57452a65-b9d7-45ff-a249-fe66e9edaa8f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c051346b-4fe5-4f37-8b8b-ba7229afa294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26e91f3-3e23-4448-9f42-a40b34bbd3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e00ab4-bdc5-4973-919c-2fa67e4b0c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d63c8d-b221-4b08-b958-26baa61027ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29977242-583f-43ad-b4f7-ad55b2685214",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f832f8c-7297-489d-a6fb-e8abae0c10b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15406caa-169c-4abf-a1de-1fa121750612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad4e667-2e75-4ef2-abca-aadbb21d47ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898b9565-7531-4ca6-8ab0-94fb3822a0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47ab0cf-de5f-4048-827c-6e6753175820",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1b8260-c26d-486c-8e68-02da02daf59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91879b26-a45d-404c-b994-a8f619b302c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a312f080-e12a-46d2-a2ad-4ca03e0a3e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d1cf92-a347-4fdb-bb87-5273b734c205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1bb199-25a9-417a-85b9-989e671e787f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce0f069-d6af-43e5-8042-c5790adbca5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230fe789-e83f-4b48-98a9-89758963286d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515ff39c-f849-4af0-a409-07fc2ccdfbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f27e0e-0bdf-4396-b2a2-b26205d5d35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9b420-39a9-4b0d-8f43-3ef62db7a7e4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4adbf57-974f-4533-89df-95fc5f0dc143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8379b3f4-4c9c-4b7c-b48f-998f3e1c52db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b124e6-d7ac-4d80-8ce3-17551bc638cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a44fefe-8482-46d9-8dce-30277062592d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027633ad-84a0-46ab-a4ef-3b1f266e306c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5491d61-bd6d-4c31-a073-845186ce88a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89177960-8219-4a73-89e1-febc76ae0580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9cc282-222f-4879-9715-bd2b23294809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c4b176-a6eb-463b-9ac4-d2b3b759e21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16600f9-14e2-45e6-a172-48f22777eea7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78830b63-0720-4809-8c47-0632d1a4cddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e472367d-bd4f-4968-b572-62682350f2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f4691d-b83f-4019-a695-5ea42056bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43deeb4-b897-493d-baa0-807e904d4522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17cd572-800a-4dc8-92cd-e3498fcb6482",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21facc11-8627-4278-a3cf-bb6c16dd4f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2103e3-43ef-42b3-996f-6572e14b85de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3c37b-e3ac-4bb2-a569-e0a3e06d3f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e14a91d-1433-4891-8a27-a36c45d00bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3018b7e5-9052-4088-8534-6599111d4db9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c038e4f-94be-4542-afba-7175e9bdd7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a79699-2a64-4797-a8d7-61fac69fd8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38649c7-13fe-4129-991e-17e9db16c6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0496f2ff-2729-460b-9d3e-ab5269b66705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b1511-b8e3-4218-9b5a-c94ff4ce52a0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0578b8e-70f1-4585-b580-d653fe6fc59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf584d4-abac-4469-a9d9-27bc58ce4415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9b9d4-227c-4b47-8f25-148e8b116f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cdf86d-4c27-49e0-8f39-7cecc16bf558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4264b947-5224-4914-8927-7379c13adf93",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9274103f-bed3-4c4c-b697-773a99c8534e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39045b0c-38d8-4165-b5cf-32046a602457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3991bb3-e472-489d-a335-960b89308131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e87b2-d9f1-40ca-8bf8-49f39198fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e294a-9c83-4dda-bcca-12243a997749",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0010f39-c984-4dae-8d72-06fe7446b971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8dcf8-8d9d-4608-b934-ec9ff2748984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb17d92e-65e3-46e0-8b57-fa74852d8cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c5c14a-d3ab-46b0-a523-133ff75f60d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74988855-240f-4391-b779-19ec4023352f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e00d363-2efe-432d-97a1-d6af356a4d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6945969-8244-44a5-bc6a-d15ed4bc3170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81dfd3c-729a-4c38-9b7c-354b81573300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32db2dd-496e-41ef-9c2c-b20c69156929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af22c3-8d15-47dc-9270-82d7ec58517e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e505724-ad04-4374-a379-65766aa764c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e385f24f-a4d3-4511-bdea-c91ade87bca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1ce74c-e0da-4cc7-90d8-13805ad915ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37bc955-5fb3-463b-af9c-1ef539f3222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04231316-0e31-4b6d-9797-2a5a90cbd978",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057fbd2e-e5cb-4dd0-8306-1adab702a1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a53b4b-f6bf-4f26-a8cb-583fe84cbdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e77e528-12c9-41e5-bca5-eb2a6ea04f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64da85c-e8c5-47b1-ae62-f6df655b5a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7c680e-3dbb-45a4-92f6-a69676c584c2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c33826-b838-4c1d-b039-6ff6cc8c3e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3dfdc0-ff2c-44ae-bac5-0fbe9a546a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0915b007-7af8-41b9-acba-77461a707d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d152bd-cb33-4f2e-8ac3-60f844179ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61832fca-549a-43f2-a59e-97142cb3aba5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc35b68-74eb-4059-aecd-435182d979c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6d75d2-ffb5-487a-a27e-493c41b3fa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e2b446-7505-4060-ae36-31ebb81aed89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ab655c-5499-499b-8d8a-fa01e3c60033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d2b169-cbbe-4441-9bbd-dacb72d2253f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef21f2-c8f1-4222-9628-a198748a483f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5a792d-0ed6-4a6c-bfb0-e50829fee0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cce0ea-887f-40d4-8443-a29ed921f15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dae451-62d6-495b-bf56-a2a9321915bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6d1703-7b15-48c7-980b-52e43a95b5e7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820aaef9-a39d-405f-b146-9bfa554d40e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "955c3f5f-6b4b-412f-85a9-6d748067825a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09053784-9b34-4eb4-9d38-36ce15f298d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7e695-3ffa-4440-a0ba-f6b6515b6a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d6d0a-f1d8-45fd-89a6-4d1f4e957858",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd5aede-39ef-4dc3-a8b5-98a22da1a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40035a87-022c-473d-bcb0-01d212b0ec18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52efe309-6ad4-4ba8-8c40-4e86df1dbf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4c0844-58c9-44c2-be21-00d6f9b91ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7783fa-9b0f-4728-9952-61c45245c0a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59821c3f-69e9-4c59-aec1-eac4f9e70bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b04e140-56b8-4a84-bdaf-7a55d1b31393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071adeb2-ec83-423d-a922-ae947aee394d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ee2ad4-0f05-4be8-b748-79ce58a7199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac788a6d-deab-4c86-85e2-1b62642c65f5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eda690-e720-474d-9943-bd0a141bccac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5e23e5-2499-4dc6-8fd5-7e563d4af6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9496855f-9453-4dd0-b84e-74fcf8f08146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d7aa3c-5e41-405c-91d9-dab157a0234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ca72a0-851b-4ef3-8679-a1c1fca53146",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d060e00-9561-42f6-b9b9-4144324e2141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0049926b-1426-431f-8698-2d3fd805324e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3014efd-7c06-4907-a2e3-8b2243fe79f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1267bdc8-d316-499e-90b9-35da643edf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2082156-7427-43e1-aa1e-a5806e3bce6c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f9d98-80cc-4356-b82a-1657f0527861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efef6e19-d4f1-4f86-b22e-0afd708ee778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e044feb-ec75-41c2-913d-c1f907f7b42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7741603b-e8fa-4d9f-856b-56165c1574b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45c8371-55dc-4937-ba86-6e4d3326bd80",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb136f92-4c7c-4b0b-b805-ae7846ff5651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80822982-13bf-4efc-9bcd-2a93bd8c56e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e86126-1364-40d3-93aa-e9b4e34e58c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8b9a5e-c166-4f60-aee9-64604449d772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a731ba-1c5d-4567-91c1-69631b1a2ede",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39122d65-7502-40c7-9c8a-cea3a9bf2af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f884270-8242-4775-9c59-1bb8ced9c415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d98db9f-d340-4cac-906f-4931e84a0979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed4d965-f12c-4d2a-a817-b2a3fc403f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab73569-67ac-4688-9afb-edd01fd0be92",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0b4db2-52cc-4c2a-9d52-a53bf6e0d0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a97697-4e64-483a-b19d-dac56e7565f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc7b714-21ce-4c34-a00d-66c31752bd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece205e-7b76-479a-888b-00cfbaffed30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882f6255-b053-4df2-8832-36a66ef40143",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e13d9d-8611-44b2-996d-e5153680adfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8bf2cb-d561-4814-857c-ebed585c092c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5b190-1a25-4106-96bb-502651bf4d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d65f2b-45e7-468c-806d-c43b819a99e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311cd5bd-abeb-4434-955a-5bfefe2a50d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fa28cf-2814-42ba-8b6a-1ae79115dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac8fd162-37bb-4251-8007-59571b28f51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d7da0f-2db0-4a97-aea0-81778926eb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615d355a-d58d-4219-b394-88967d356de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7d948b-a03b-4daf-a911-6347cdc65094",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e83666-7774-4e5c-b93a-18cc9f00c214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48c3857-9f0f-4c7d-89d1-6b134e27cbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07981f56-2f41-4e44-bced-4949ed24b679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9039d922-b24d-40e5-aeb8-16b7bc99378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb0d656-69d8-4780-b916-68b6e42b9a60",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480319fa-d255-4c86-b158-b797b6227baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03625bf3-458f-4f9a-9732-e7023d27e555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92832111-7f24-4acd-a6d2-6a7d4d99cc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4656f4-0272-4e67-ad5c-726a45d93470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa100837-7b91-48c0-83e4-f7c7ae82693f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40461173-396a-4b41-ae8e-76c6be33fc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8205dfe7-f6c8-47bf-9dab-ab79d8dc4b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e355cbb4-0dce-4116-add1-3c7f3be20fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ea7d48-68a4-4328-a851-c8db3926d4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576712a3-e1c4-49b7-9d9b-2d8e00e2a090",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6904380-d168-4c1d-ad8e-d58adae47db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6117ea8-1d85-4460-91ca-c59dc4cac34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8123c-3335-470d-aa62-f34643ff6643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6ff99b-2aac-46c4-bc53-b2d7356f200f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7be33d-8a41-4a37-a1d9-fc3823d158d5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe8a70a-96e7-4031-a1ec-9c1de2ca2013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0703ca-4da6-448e-969e-512db447bc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc31fa4-127e-4034-a32e-619aeb71e8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826face1-74c2-44da-aea7-40053d4e610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1d4af-735c-4c3b-a152-b220555b6ba2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd60ef4-da84-4b25-a830-fa0770b63149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e479132-23ac-4747-9f77-7d5a651ef1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98098772-b1e4-4a4c-993c-af12d3b313ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33278c9-ebb1-4b04-9771-2d283be3c0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3204691-86de-40ce-8c25-302eb804008e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6d1503-8918-44fe-917a-065e7744d801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57304dd-710f-455d-870a-9ac3151df0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3380de88-344a-4be0-b27f-dd10fac02a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724530a7-bf75-4e92-9a2f-7bade1b15774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f8ec1d-9663-486f-83dc-1fcb9b324987",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dbc853-eb42-485d-8429-d7dde4b78329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f0daca-f0b0-4147-9dcf-3a4a93d74036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce58c9f-261f-4cfa-8f8c-9ded8ceec01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c667706f-74c7-4828-858b-6463d28769f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fc5554-e113-446a-8d7c-06868290c538",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00964e92-2304-4927-95fc-807cff59727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bed3a8-c5b0-4655-8be3-b324612f70d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f381b1-2734-4d3a-b0b7-c638e77423e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d942262-4361-427f-aaeb-5edbbcc1e3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506d21ff-c67a-41b6-bbe7-c55e032999a8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfd6c2f-8e5c-42f2-87e8-57680411a486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbf3130-0dda-42a6-9a6b-cbcbf7ade7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f55c7-67f3-4a22-8fdf-bbe11f9bf284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6574f881-d2dd-433e-8bad-f91a1072498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c1479-c93c-460a-8c2f-ea7c2a27a4b4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295a755c-72fd-45c9-a6fb-62e05f82fcff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3171735c-8ebb-47cb-9a36-149236d9eaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46782fba-ef5a-46bc-b2c8-b736b24e4ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d0de0-fc78-49c7-8617-d769052bb674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b261c2-a86b-4a30-bec5-42837af3b534",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c5bb16-2144-4474-8568-b783b531f1c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32fe8f0-3781-49f5-9c7c-ec0c90f62ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b3c81d-ada9-4f91-914c-e8827eb0d881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7e4ca2-2dc1-4260-bf6f-12d84f7b1ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0556d1da-e849-4e24-8ecb-0edda32dd5f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6ee165-1d15-4978-b5e4-90cba0430df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d5a782-c1e1-4541-875e-30daf72caf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aedc9d-3ea9-4f84-8610-42fa16fec644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73849a1-70fa-46bc-8b27-0b0d304a1c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119ce417-8ca9-4dce-a7e0-7134c314832b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d783aa1-a856-480e-b915-21c32f60ea35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c91da2f-8b90-4189-9d5a-d1ea4d6fc601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e2f10-c072-48dc-b38d-e4ded48a97ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54badaa5-d8e8-42e8-80c3-4f9394ff3641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62257ada-3dba-40a6-a74e-74665912803a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b9792b-366e-44fe-bee5-2169598918ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc4aaff-4063-416f-bd4f-58ed27744889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3439808-4580-4ccb-a8b2-715040bb600c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0f17a4-ee02-4aa9-a9d7-694ef11093a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0bc770-580f-423f-acee-e474fc066be5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63d570-fa1e-435c-9398-87af949e500d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd21bbc-8e14-41b9-a7c6-74d4e5108104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93977b22-daff-4e22-bd9c-947421cbe1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4664188-c770-439d-a8b7-9a6c7d6f0d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e171ebe1-8901-47b0-9849-99d3f8a6e5b1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee8c73f-c0ab-4ecf-a72e-b6b7ee605188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fad5421-1303-459e-bc00-e8df9b97fd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49e4d24-4ba0-43e3-a134-4f7b38b9bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda65e2f-20de-4a41-82d6-bf4ff49b82e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4712c51-c878-47fa-87b0-0c57abdb1aa7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c70d582-750f-4d69-973a-ecc6cc427f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6952ab1-9d34-407d-a0be-ce61cdaad1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62949d1-017b-44ef-bba9-075cb3419f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4976875-f4fa-401e-a1e1-6fa7ac574150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb792e7-6874-4993-954f-7dececf9d010",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed35ce8-a019-4f3e-9d08-f01c5f9146a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f70008-eaab-4e7a-99f7-7cb289b2b592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4956a-a1d9-420d-b980-7d814c9d29dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c15a96-1343-4d97-9708-27b5807a903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5582b8f6-863d-4f5b-bd17-a19de3d42183",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33f4d7-e4a2-4aaa-8249-bbda8cb79c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59ff63e-4518-4e44-accd-74c942202677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9654db70-aa56-49d5-b30a-4b7d8c9b5fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca127ae-de55-4cf4-b353-1bcc3ac5b9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784b59b5-1451-4304-9b80-fd528192b00b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dc5a55-4d85-4244-ab49-c4fddd864b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2fb5bb-6480-462e-87f5-299ce1ccfb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ed221-08a7-47c1-97b8-f75a5b0e28c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a035208-7056-4588-bcda-9f93fc77a918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1514fd-7c6c-4561-9c6e-f8ab888529a5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21d4db9-32fc-4439-b219-fe43a45140c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8651b031-3274-461c-a794-0233dc1e4e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6f0ed3-f48e-49f7-9f9f-50dbf8aac75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc6b081-6498-4fdd-8613-f0bed4fb9294"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b64bc433-d59b-4c48-ac18-62d9c854fcdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea33583-90fb-4c78-9dac-cccec5b6d236"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86a8d064-20db-4c34-9c36-2f20f1d6d3e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96e406ce-bac0-4d13-9e79-e09cc838f198"
                    }
                  }
                ]
              },
              {
                "id": "3e4cb6ab-76f4-4c27-95ac-75a1a40dc626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5015185-9a90-4f08-bc3e-72fd79418f50",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa46c73a-5e7b-4d08-8a2b-8f561b88331e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bbdadf97-b654-4df5-999c-84b513080995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021015c0-ae3c-4a41-a7de-02015db65c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04afe044-3a4a-4af0-89dd-341417d8f68c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91faf710-705c-40da-96d0-59b72031ccc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f450ea92-4356-489d-b1d0-02a430d78a2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa599e1-5946-4680-9cc2-5f524e1c49f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e947b457-c5cc-45cd-8bc0-d26397520432"
                    }
                  }
                ]
              },
              {
                "id": "4891a830-e725-45e2-ac13-a5f08d2bb593",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "edc8ebe6-f5ce-4476-940f-3182fd2484ad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7bc585-a843-40c5-9333-2101dab727ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3a0e3f05-0447-4a8a-8024-424e8369cba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ddf4c1-e9ce-487c-afbf-c9b39d0dad19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba679e7-e3eb-4dea-97e9-52ad718dca38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3dae403d-0b25-4f4f-91da-c5db60fc452b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da379710-1a0a-4780-99b6-6bd7f8ffa7fa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e817e3e-cc7c-4d9d-b85e-a235919c790c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f69cfe0-fa48-45af-b355-5522f22b1e41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2c2eeef-8ebb-4a73-9936-23e64409f00e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f91c003f-b24c-4a04-a812-9e29bb0961a2"
                    }
                  }
                ]
              },
              {
                "id": "0ed8b273-dac9-4be2-afa6-1d244f4e1579",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9c9dc9a-ca51-4024-8007-e272c9c10153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3b24387-729e-490a-8335-79fb112dfba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1505523c-8535-4679-9e1e-2ba9a64f480a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be6db802-6a01-4b8a-869f-74899e135988"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25bff696-d160-4097-8d60-666dc9dddd02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "87af2c3e-68d4-4155-a54f-4be49aabfa48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20b430fd-0830-4615-a930-7be0f88244ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c946248c-9451-4702-a6d7-561114173600"
            }
          }
        ]
      },
      {
        "id": "9a3ce29e-486b-40a1-951b-2cd63f1914c7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "85c04780-d4cb-4de3-8ad2-75732f880dfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "380626df-fc80-48d9-8bf9-cc532c2ee1d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e204ce3-2069-4665-a057-f8abcc9c1b2a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e900f3e-b99d-4ce4-bcdc-199f5633c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f99a65f-ea89-4c4b-9980-df00d46df5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41c38b2-dbb6-4671-acdf-07829cf8e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c1f1d8-ef52-427e-afa4-dba8f82d5f4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf0f914-9b32-4122-8aef-5a7268c0290d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "184940de-b8ff-4dbd-b251-89184ff8545c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1750b5b-f513-412f-a0eb-ec166703264a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1af39df2-85bd-4a56-b30d-c9ca7cdede2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cb93df6-ff04-462b-a799-d8d099d1d719",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2d099800-a43f-4946-a2f2-1bcf21f9eeee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61235b00-25ba-47ca-ba59-8ca4c6834958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63b0b9cd-b0df-4e97-9f9c-7b0fb8397298"
            }
          }
        ]
      },
      {
        "id": "c56ef996-642d-4044-b1cc-8052fbceded6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "464e2308-e8b7-4cc7-b9e5-a067948c0f40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e5b0926-28c3-4849-a060-e51b8a394bd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4a0aaa4-4a64-465b-b6bd-cf2d0561a2a4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e741554e-6aa3-4da4-89e1-923a1db7ae85",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc235b60-807f-40e4-8070-c5fb9de46688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e427c-ce58-4102-b208-007642063a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0ad3c28-a20e-4ab6-96a2-d069931b9c6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4545f1bb-914b-4bbf-97ac-40bee15e2e49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66212ea8-8289-42d8-9c21-212230a456ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a00f8976-bea9-4d51-808d-0fdc93acddf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b69163-bb62-42b9-a2dc-27fa0068d927"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00b4d8a3-f06e-42a8-8ae1-2967ef77cb17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fc647b9-16b8-4a65-ab30-d627f8b7be58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4cf31b2-0368-4a9b-93a4-c4475cdbfe1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "938bfba0-f41d-41a7-8ad5-d3775cf1bc22"
            }
          }
        ]
      },
      {
        "id": "7a5096f3-a442-46b9-b963-07003ec5b0ef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c91e1702-4476-478a-971f-0f922c49e671",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a4ec3be-eb0f-4159-8f20-cda410f4880e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77dcca2b-6bd4-4531-9f80-e608d9461bc0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3318c98d-98d2-467d-8d4d-f62d706d7004",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b89c387-00cf-4f24-b0ab-31e00a151292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42db5c46-2dfd-4fa4-bcae-7370884f9fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47490cda-6790-4b2f-b1f1-096f38b1d477"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea3081da-eb33-4481-b711-dff38bd8c9bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf3faa7-9cb0-453e-a284-f4429e8cbbbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "268c2313-2fc0-44cf-9ae8-dd07879654cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35ba482-e513-4ac1-9bf9-51b50f1e512d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78c12ba9-26c5-432f-be8a-c082e278e0a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5886b77-7c2d-4500-aa81-edd1fd8893ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b7b2c8-5612-4172-a575-cbd956aa29d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0825a4ec-d427-42fd-97b7-d34635f3b301"
            }
          }
        ]
      },
      {
        "id": "a6407831-ce8a-4889-81d6-21e384c4abd5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a94aaa2b-1f2e-4cd1-9f57-28f1f8119840",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad61ef84-189f-43c4-9a4b-7f5958643dd3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb7966c9-ece8-4c9d-a91a-9e1ae2e5c5ed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d04dec44-683f-4dc3-8181-141847a73aae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89e45e1f-5007-4d3d-a315-a2040f9f27f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.22887323943661,
      "responseMin": 19,
      "responseMax": 275,
      "responseSd": 24.85182307192003,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689555097075,
      "completed": 1689555118777
    },
    "executions": [
      {
        "id": "40ae0c9a-408f-4c09-992a-2dfda40995c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4760a7c7-d325-427f-92f9-c55ffef78f95",
          "httpRequestId": "bccd8ff9-70fe-4ccc-b31e-c013232c6809"
        },
        "item": {
          "id": "40ae0c9a-408f-4c09-992a-2dfda40995c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ca573376-1e9c-4efd-9733-426ca90f78b9",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 0
        }
      },
      {
        "id": "fee106f9-29dd-4467-8831-c8aa7861d0c2",
        "cursor": {
          "ref": "e948eaab-e952-4357-ab9c-fad1d6d802cb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "18377394-a471-40e5-907f-2ca0acb86dd8"
        },
        "item": {
          "id": "fee106f9-29dd-4467-8831-c8aa7861d0c2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bbc4ea75-cbe1-4b09-8f4c-6945c66fee95",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "1d2b22bd-1f09-4dab-857c-87d4714b5d04",
        "cursor": {
          "ref": "60fd24da-7aee-4463-9959-e2185d371d89",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67a0a67c-088b-4bce-858f-b1c8e7ec8141"
        },
        "item": {
          "id": "1d2b22bd-1f09-4dab-857c-87d4714b5d04",
          "name": "did_json"
        },
        "response": {
          "id": "8c0f008f-6f31-4e8b-86e4-51407d7d7f83",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ed475-6180-470d-bad8-f895cc57e0e6",
        "cursor": {
          "ref": "11853729-fa48-48ec-b548-2355b1193c57",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50418140-bbc1-451d-96c2-aeaef82f3413"
        },
        "item": {
          "id": "964ed475-6180-470d-bad8-f895cc57e0e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb2af729-8bf8-4c1e-9f4a-9684ec85e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ed475-6180-470d-bad8-f895cc57e0e6",
        "cursor": {
          "ref": "11853729-fa48-48ec-b548-2355b1193c57",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50418140-bbc1-451d-96c2-aeaef82f3413"
        },
        "item": {
          "id": "964ed475-6180-470d-bad8-f895cc57e0e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb2af729-8bf8-4c1e-9f4a-9684ec85e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de44809-e93f-4eeb-88ed-75be90a9688a",
        "cursor": {
          "ref": "aef1e4bb-f2de-4b88-87ae-a7d6a9f2e18d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "77348f87-9cc8-43d1-9784-143d8d4a481b"
        },
        "item": {
          "id": "9de44809-e93f-4eeb-88ed-75be90a9688a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ccf5ac21-9aa7-48a0-9f87-d0478aec1d07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 140,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a00608-ec54-4012-95c0-8573d25dfabe",
        "cursor": {
          "ref": "9240e1ac-94cf-4d43-9da9-1795d4108804",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "661109c8-1940-420d-9357-0d1751eb7ebc"
        },
        "item": {
          "id": "42a00608-ec54-4012-95c0-8573d25dfabe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c2139e27-ec48-467c-bc5f-e09efa6aceb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f236312-173b-472e-aea6-b44caec9ab89",
        "cursor": {
          "ref": "d1059995-3737-43e2-83bb-4cff10daf7b6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "539c923b-c2a7-46a7-a73a-ea8036588e48"
        },
        "item": {
          "id": "7f236312-173b-472e-aea6-b44caec9ab89",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43035c93-90ce-4487-a502-41dd5a45ca0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1860dd01-6866-48b4-affd-379c7a3c066e",
        "cursor": {
          "ref": "c4d559f3-9881-4bca-8cbc-df7c4ee2c635",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "51d7d5ba-0730-4550-8f61-de82001655a7"
        },
        "item": {
          "id": "1860dd01-6866-48b4-affd-379c7a3c066e",
          "name": "identifiers"
        },
        "response": {
          "id": "22adcd81-da9c-4950-b6e7-027aae7ebed2",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fede8f-3ded-439b-9ef4-c7d4dea07fc6",
        "cursor": {
          "ref": "2c3bf307-93fc-4772-b9f7-0f059f4c200c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0409137b-4f35-43c2-9e26-c3fe53306b61"
        },
        "item": {
          "id": "92fede8f-3ded-439b-9ef4-c7d4dea07fc6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ae9ff3d-c276-446b-8bc5-adc5d3be229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5111d475-2703-4775-bed0-210d1a34f8aa",
        "cursor": {
          "ref": "f2872e1c-0264-4a8c-b77d-141613cd8605",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "40327108-0d09-4650-b1c9-2dfe9ea36322"
        },
        "item": {
          "id": "5111d475-2703-4775-bed0-210d1a34f8aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3496fca3-fa00-41a6-a62a-d3bb71da8292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8e597e-e3f1-4501-98c6-18ec61e7a846",
        "cursor": {
          "ref": "b7b3ec06-92e5-4759-8f79-5661a943966d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88c6fa8f-ff5c-424c-b293-4e671a2b0909"
        },
        "item": {
          "id": "db8e597e-e3f1-4501-98c6-18ec61e7a846",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "22868037-2390-4fe5-9c7b-c19010e56e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efb3b87-1e07-47b4-b206-8b3c577e3126",
        "cursor": {
          "ref": "1e5e1bb6-06e3-4e60-8535-5fda74b9b10c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8291867a-3b8b-4c06-8800-9c2b96d18fdc"
        },
        "item": {
          "id": "2efb3b87-1e07-47b4-b206-8b3c577e3126",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ed2b1564-0efd-4eb5-985c-f3b3d69e4cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1ebca7-5d9f-49b7-9f55-44b1f8d2a140",
        "cursor": {
          "ref": "fdef2a5d-f511-46bf-9c7e-d41e7dae3fee",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2826fbc2-0500-49fd-9858-3fb6ad96f3ba"
        },
        "item": {
          "id": "ec1ebca7-5d9f-49b7-9f55-44b1f8d2a140",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bbfc8a12-029f-41cd-91e2-5e2eff979bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d43aead-5a77-4325-906b-a1fcbf0703ec",
        "cursor": {
          "ref": "49405e2b-c3cd-417d-aaa7-135b0eabfe6a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f5801696-a206-4226-8650-dcd520a636cb"
        },
        "item": {
          "id": "8d43aead-5a77-4325-906b-a1fcbf0703ec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ee5d404-3c2d-4132-b3fe-73fc851dda8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae059b-0fca-441c-b4c2-391411eea87e",
        "cursor": {
          "ref": "74285465-e0d8-4afd-89fd-839d96ff486f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "406d1abf-3ba5-4db8-bd4c-907bee677ddd"
        },
        "item": {
          "id": "48ae059b-0fca-441c-b4c2-391411eea87e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4571591c-1e90-414e-9db0-3ac8685b2ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9036c9-ee5c-4a42-9862-040353c3912b",
        "cursor": {
          "ref": "dcadcbb2-aea7-4266-a18d-fd2db3e4ca04",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1872c94f-5eda-49e0-85aa-eaf9b0724066"
        },
        "item": {
          "id": "9c9036c9-ee5c-4a42-9862-040353c3912b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bf1caa29-a289-4273-9b10-c8a48508a6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f79a032-7e92-4d6b-82f8-8df589cf60ae",
        "cursor": {
          "ref": "8c92e71a-23b3-47ad-bedc-943feca70f09",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "825da2c7-f37c-4d8d-b892-831ba163bd01"
        },
        "item": {
          "id": "8f79a032-7e92-4d6b-82f8-8df589cf60ae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "105af886-3d21-4044-9bd0-f6c3add34d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff9f373-c3e7-4b0e-a249-2ae94ba215fd",
        "cursor": {
          "ref": "0bdc3ef4-472c-45b3-844a-4421332715a1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14c520e5-c254-4ef9-af60-211a612133f9"
        },
        "item": {
          "id": "4ff9f373-c3e7-4b0e-a249-2ae94ba215fd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ad6551c4-1db4-4acb-89a6-dd7882e77b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f3255-1b74-4a33-ac81-26fda9e83c24",
        "cursor": {
          "ref": "2534940f-5cf3-4fc1-85ba-337f09f9aeb5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bb4a49ed-481c-4bc4-bdeb-71fda89210c7"
        },
        "item": {
          "id": "957f3255-1b74-4a33-ac81-26fda9e83c24",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "69937234-5353-430d-8713-e5051160329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaf630b-f10b-4f5f-8005-568eb6fd67b5",
        "cursor": {
          "ref": "732b0657-e802-45c8-8335-e62c6741cd55",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "34e284b6-8940-4977-b617-6030144113e3"
        },
        "item": {
          "id": "3aaf630b-f10b-4f5f-8005-568eb6fd67b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9088f70d-ac20-4bfe-bcd6-6bc2266daffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88829822-083d-4e55-99cd-474286ede2a6",
        "cursor": {
          "ref": "e9e89b1a-9943-4e5c-97d9-ad5a2c1db7b7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b7873f4-90e1-4aba-8112-eaee3a1a7ac7"
        },
        "item": {
          "id": "88829822-083d-4e55-99cd-474286ede2a6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "33ceb547-00e6-451b-9860-50c76d113378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61510c02-78ed-43a6-91f9-357ed96c305e",
        "cursor": {
          "ref": "053c421c-70c1-4b6e-be99-62f70fd69bc5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7193883b-3f33-45ae-a469-21ee2e37c3bc"
        },
        "item": {
          "id": "61510c02-78ed-43a6-91f9-357ed96c305e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ccaae709-56da-4f17-9024-5ec90bb03fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae4ad5f-e889-4d7e-87b9-d9c4ce909abf",
        "cursor": {
          "ref": "1edcbc05-fe4d-43fa-8f4e-5adb59ead596",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0bc12e8-c4e2-45da-8af7-6358c903d1ca"
        },
        "item": {
          "id": "cae4ad5f-e889-4d7e-87b9-d9c4ce909abf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c5002b1d-f88c-4fd0-80cd-f5d5f3a476bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c1077c-ab16-49eb-8bd0-32609b119a48",
        "cursor": {
          "ref": "159184a0-6ced-4289-b922-206c943c487c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fb7557b1-c719-46e0-b2c4-7fe87ef69852"
        },
        "item": {
          "id": "56c1077c-ab16-49eb-8bd0-32609b119a48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7edefb8e-7fde-46ca-b266-e83a9ac895b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8b476e-4032-4924-91a0-60d62a7876f1",
        "cursor": {
          "ref": "244b8a72-5bb3-4eb4-8534-259799f52fd4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bbb79348-97cd-42ff-ae3b-25570c55b5da"
        },
        "item": {
          "id": "df8b476e-4032-4924-91a0-60d62a7876f1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f0d01f07-2d1a-4c9f-919b-3b87eaa611a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b0b4c-cf65-4800-bd3b-0ee5580e9f53",
        "cursor": {
          "ref": "0acb71ca-17ba-4d08-b64d-20a7613a8676",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "835d185a-2849-473a-9247-b8eb755debad"
        },
        "item": {
          "id": "d22b0b4c-cf65-4800-bd3b-0ee5580e9f53",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1b0254e5-8649-41fa-a74d-55c41f558da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77c4ef6-025d-4f01-b481-828794d45665",
        "cursor": {
          "ref": "53da4ee7-fe60-4abd-b38c-ce71c44548bb",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3e44a3f-60e5-45a8-b1ec-b5e67d7e3888"
        },
        "item": {
          "id": "a77c4ef6-025d-4f01-b481-828794d45665",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "84bd4eab-02f3-48c2-b1e4-d12871b5c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242d7eb-3f49-41c6-a656-d0766d1e49ad",
        "cursor": {
          "ref": "18de0171-900f-47d7-8db0-073c73baebca",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5014d6a7-9373-4ee8-ba38-c6bf07943037"
        },
        "item": {
          "id": "f242d7eb-3f49-41c6-a656-d0766d1e49ad",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a5f7b34-8fae-4972-acae-00c77951f540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c819b5d-5e59-49b0-a7bd-0637ae934db9",
        "cursor": {
          "ref": "030d6448-627d-414a-b322-f8cfeca29cc0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "074bf865-8da6-4a21-a1d9-0e817d619032"
        },
        "item": {
          "id": "4c819b5d-5e59-49b0-a7bd-0637ae934db9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "da70865e-8fe0-40d8-99b9-b42cda6673fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aae85b2-ceab-4b7b-890a-2fd0a54dd948",
        "cursor": {
          "ref": "63b1d4e3-b4e9-4db2-b74b-d70f4d8cef2e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "533e87dc-c49c-4a2a-a9e9-bb51ec19a69f"
        },
        "item": {
          "id": "2aae85b2-ceab-4b7b-890a-2fd0a54dd948",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "54597270-2be9-433e-a1ae-2b1469a5f71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108b5a62-ea10-4142-998e-abb49f296b8a",
        "cursor": {
          "ref": "490dadd3-c150-4b78-96db-084c0789db8c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "437d2267-cf82-4bfa-a1b8-49e483dfa0d1"
        },
        "item": {
          "id": "108b5a62-ea10-4142-998e-abb49f296b8a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "10a8d6f1-45ae-475f-a8c8-8e502714af5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87efc9a-a7af-4a43-899f-54f0279c1cad",
        "cursor": {
          "ref": "a31a6791-e2d8-4da9-aa78-13013dad0cb3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c4ddd57c-1118-4c4b-bb18-899ea9a98d5e"
        },
        "item": {
          "id": "a87efc9a-a7af-4a43-899f-54f0279c1cad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a103b861-3490-4fbf-8253-45109ea79bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e86028-2d7b-4c39-b84f-9a8b6c44d2c3",
        "cursor": {
          "ref": "35b507c7-8c6e-4c19-8a85-ef6283c0d9b1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4e099af3-7f81-44ba-911b-1dd22a94b139"
        },
        "item": {
          "id": "b1e86028-2d7b-4c39-b84f-9a8b6c44d2c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b1e3b1ee-ef55-410b-9d06-11d481782333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3760a799-23fe-4abc-9e85-1c7819ae0767",
        "cursor": {
          "ref": "ac121297-0a28-4bff-81e4-79a6200b8e3e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3883d5e9-b060-47c3-bf19-9a4103d4e8a8"
        },
        "item": {
          "id": "3760a799-23fe-4abc-9e85-1c7819ae0767",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2f021c3d-d739-451d-b25a-0d4d28953aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedba9e6-cdc2-4523-a5d5-8b4dd4bb9770",
        "cursor": {
          "ref": "2931bf05-d370-4072-81bb-6aec54986f1b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5ec9189b-2346-4184-b2d8-eaa6cff6cec1"
        },
        "item": {
          "id": "fedba9e6-cdc2-4523-a5d5-8b4dd4bb9770",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "93847760-b672-4993-839b-5a8d6fb62c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79db8a10-736d-49f8-accf-c0187bc2b469",
        "cursor": {
          "ref": "6f84bbba-ce2b-4689-baa7-477427f22617",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5265abde-7ad6-4c79-9030-04a482a95260"
        },
        "item": {
          "id": "79db8a10-736d-49f8-accf-c0187bc2b469",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9b544d65-5df6-4051-b556-efafefb6074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6adbfa-77a1-497d-85e4-8a47dd67cde5",
        "cursor": {
          "ref": "ae9a5172-7eaf-479c-8fc2-8d8e80053e4c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "33372af7-2a2f-4e1b-afbb-54043709e78b"
        },
        "item": {
          "id": "bf6adbfa-77a1-497d-85e4-8a47dd67cde5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0d9e613d-bfcc-43ad-a5b7-51661ef73fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d2d17b-ea88-4c67-b6f3-bd3e7fc0a6e0",
        "cursor": {
          "ref": "407fd2f8-358d-4b6d-a9bd-e45fb76842f3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1dee8eaa-016a-4102-b57a-c2d9811886b0"
        },
        "item": {
          "id": "c8d2d17b-ea88-4c67-b6f3-bd3e7fc0a6e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92a4ec82-fdb7-4a2d-96d9-0d4949dbce40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bde1fb-c14e-4443-ac51-37085d8d6986",
        "cursor": {
          "ref": "d1d9e45a-46f4-4e31-b474-fdbb10e36889",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "19ea54dc-a406-4a91-9647-632c104995c1"
        },
        "item": {
          "id": "55bde1fb-c14e-4443-ac51-37085d8d6986",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "62bfd808-b908-48ca-ae35-97d80c2df573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792eafbb-f0e6-40d4-ba64-181184c6ed41",
        "cursor": {
          "ref": "cc7f02b0-6b37-419e-a837-fd780aad7db0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a0801253-7d03-45e1-9563-128e924e0010"
        },
        "item": {
          "id": "792eafbb-f0e6-40d4-ba64-181184c6ed41",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a1723372-1c2b-4cb5-b9cb-8d37e7614000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe13d13-1fc5-4d35-94b9-16596cf44be6",
        "cursor": {
          "ref": "9eaf7704-57ba-4663-b0ed-82fde760a10c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "75285d66-8034-433e-bf97-ed3d77ed2dec"
        },
        "item": {
          "id": "1fe13d13-1fc5-4d35-94b9-16596cf44be6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71e3d95d-c905-4cb5-9a73-56212b02e3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d3d1a7-25b5-49ce-a583-461da9a6c0a2",
        "cursor": {
          "ref": "f82f0ff9-2587-495f-9405-fd88b8f982be",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "488e2a1d-2e31-49d2-9f35-e6b9219dfa7f"
        },
        "item": {
          "id": "d4d3d1a7-25b5-49ce-a583-461da9a6c0a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "404d8811-4429-4d74-a660-cbffe64bf86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9acfe-8a7a-410d-8831-26ad6588a493",
        "cursor": {
          "ref": "76009457-7b25-49df-b53e-2cf7da45d6f7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bdc4a305-3f97-47a1-8912-d939c7ac874a"
        },
        "item": {
          "id": "e5e9acfe-8a7a-410d-8831-26ad6588a493",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0bd07e82-ecad-4744-afc0-8f9a38c35f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebfa87a-4752-4e16-baae-c26109451efc",
        "cursor": {
          "ref": "5e599ca0-a672-464f-9152-2f75fd4e15ff",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c87c7065-4e73-4823-bc40-f59d85a4fa41"
        },
        "item": {
          "id": "4ebfa87a-4752-4e16-baae-c26109451efc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9085dd79-1ccb-47b1-8105-99944fe28769",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200605b6-0942-4291-a743-9f145bfbe847",
        "cursor": {
          "ref": "9c900084-52cb-43c3-9dc3-5ca6e34d9f16",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c8507474-29cf-499a-9ba6-5601abf9833c"
        },
        "item": {
          "id": "200605b6-0942-4291-a743-9f145bfbe847",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3445c799-93e3-4c7f-84c0-3dd8df41dff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474753d5-946a-46f9-a029-b1471f77c6e3",
        "cursor": {
          "ref": "35a4e5fc-95e6-4c0d-b9f8-91adcf090950",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e7f11de8-53c7-4b36-9226-6c3b0e058353"
        },
        "item": {
          "id": "474753d5-946a-46f9-a029-b1471f77c6e3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "346b6761-a157-47fa-a81d-e2aa6fcc0bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c96681-38ef-4d95-ad57-5dfe4bf27ffa",
        "cursor": {
          "ref": "71f4e6d1-3341-4c70-80d4-141da9e0d36c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0ae498d4-9051-4f3c-ae56-24e2a2aae69c"
        },
        "item": {
          "id": "d7c96681-38ef-4d95-ad57-5dfe4bf27ffa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3bd6f1b4-d64d-406e-be7a-b57fd3bdb363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e299a3-a2f2-4330-8758-47e2af04318f",
        "cursor": {
          "ref": "b5105daf-fc24-4d3e-aafa-fafb99e9c7ec",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1ffc0785-a20b-4b10-9c08-3c243128d83d"
        },
        "item": {
          "id": "d9e299a3-a2f2-4330-8758-47e2af04318f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "19278923-2b61-46a3-8f43-9bbed5f1a0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de19de2e-8bd2-4595-915d-248247909a0c",
        "cursor": {
          "ref": "1fffcd11-e2b0-437f-a877-4bd1629f9fbb",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b8031b3b-8668-4faf-9f7f-c33be40497c9"
        },
        "item": {
          "id": "de19de2e-8bd2-4595-915d-248247909a0c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d2fa263a-b292-4d36-965a-6a6be0c81cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff9a09b-5868-4843-b142-7fb8f93293fb",
        "cursor": {
          "ref": "b9d028c3-cc39-4182-924b-8d187c8f876f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "73a8bdd1-b676-4744-9d2b-5f9e9de6d663"
        },
        "item": {
          "id": "5ff9a09b-5868-4843-b142-7fb8f93293fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2c11e453-4819-40db-a3ae-40d275dee0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dadb66d-edea-4663-baa8-754894d8e4fd",
        "cursor": {
          "ref": "eae171f2-79fb-4007-ab50-a4a128e883ea",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54ef7643-5c54-4fae-ae86-0755fed87098"
        },
        "item": {
          "id": "7dadb66d-edea-4663-baa8-754894d8e4fd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4f03b65a-7a94-46f0-9874-ab6e77fc4136",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3b3d5-177a-4570-b880-31ec3bfd2b0d",
        "cursor": {
          "ref": "fca08ae5-94bb-4ed6-861f-72cc43c25107",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5f4a6bab-901d-4034-8e3e-11355e12a425"
        },
        "item": {
          "id": "0bb3b3d5-177a-4570-b880-31ec3bfd2b0d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5dcbb351-9df2-4018-b7bf-9e746a051ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81044fec-4e90-4f20-88de-8e850b99030d",
        "cursor": {
          "ref": "8ae40c6e-3dd2-4b5b-8602-8a65069822f4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2167697b-1af4-4927-80eb-3e26f306abd1"
        },
        "item": {
          "id": "81044fec-4e90-4f20-88de-8e850b99030d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "68997af9-f527-447d-8a61-9b50f386d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2d69a-3106-41c4-bca8-27d8415ebb00",
        "cursor": {
          "ref": "b9ba762d-c2ff-4bf3-b8b6-8279da3c20a1",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b371c60d-22c8-46b3-9462-a2e16fa71f97"
        },
        "item": {
          "id": "fcb2d69a-3106-41c4-bca8-27d8415ebb00",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "71a1b911-18c9-46e2-b44b-8de0bd21614e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d40cc-6e3f-43e1-b2ee-9b43f659aa7b",
        "cursor": {
          "ref": "35ad7ab4-8e02-482d-b4d7-fa99a1ad9017",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e0045d18-1cc7-4297-93df-e33cd509290f"
        },
        "item": {
          "id": "6e9d40cc-6e3f-43e1-b2ee-9b43f659aa7b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "505210b3-c41f-4056-86a2-a7089a1cc173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a83e59-d306-4af9-8ef8-2954dfd342e0",
        "cursor": {
          "ref": "99d30c4a-eff7-4ab8-a305-4debdde2dd1f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5d663f23-21df-4fb7-9d05-78f46092d55f"
        },
        "item": {
          "id": "b4a83e59-d306-4af9-8ef8-2954dfd342e0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ba13edbe-3066-4a09-aac2-13bc5b28e3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc87f8fa-a947-4c2d-b1e9-996952c9e38d",
        "cursor": {
          "ref": "9a70f9c2-2a44-4f4e-a8ad-f967a073b21d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3d81b5cd-da3d-404a-aba5-e98da5854023"
        },
        "item": {
          "id": "fc87f8fa-a947-4c2d-b1e9-996952c9e38d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "befb245c-1676-46e7-8e91-d096bc45d2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76054f9d-297e-4074-9369-11a21277ae47",
        "cursor": {
          "ref": "866aee9d-ebac-47bc-a44f-f8c021ddf662",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4e180a0e-3df4-4efb-b8c2-d0c6dacaee34"
        },
        "item": {
          "id": "76054f9d-297e-4074-9369-11a21277ae47",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "97901533-839b-4ee9-8ca0-d05d645b527d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0227bb6-2779-4feb-ba68-b4adb49b9f7f",
        "cursor": {
          "ref": "1d92469b-6315-4d0c-b478-9b5ece08cda0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0e019b2a-ea17-4490-bf57-28004345f19b"
        },
        "item": {
          "id": "f0227bb6-2779-4feb-ba68-b4adb49b9f7f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0d736da1-4e69-4ddb-9c00-9e4c3742552f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd03d5d-e5d8-4699-bca4-9976a50385e5",
        "cursor": {
          "ref": "c38b87bf-869b-42cc-8e07-45f8ee101001",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08337e73-c394-464f-bcd8-7b6a21ef9bdf"
        },
        "item": {
          "id": "5dd03d5d-e5d8-4699-bca4-9976a50385e5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d24610c2-b74e-4def-a50e-8b41474a5560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b713e6d-bea8-4a7e-adf3-f40e95871322",
        "cursor": {
          "ref": "f419c4a0-952d-4b92-9cae-0540d061c307",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "398cca5f-c079-41ad-acac-15c68ba842f0"
        },
        "item": {
          "id": "4b713e6d-bea8-4a7e-adf3-f40e95871322",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43152fd6-7600-443d-84da-d7c22887658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264ca872-af1d-421c-9a74-4217a22712eb",
        "cursor": {
          "ref": "d91e3c87-25ea-40f1-947c-59d63684c5b4",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c6fd3658-eeeb-4886-8938-a915dfd61dae"
        },
        "item": {
          "id": "264ca872-af1d-421c-9a74-4217a22712eb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4eb277f4-c685-4e22-b4c7-59f92690d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3f751f-6d77-4c7e-85ab-b384bf1d5bf5",
        "cursor": {
          "ref": "4bf03f36-fad7-4f0d-b699-1f7a74f555e3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b41b025-fd46-45e1-9321-a01cc5c923ad"
        },
        "item": {
          "id": "fd3f751f-6d77-4c7e-85ab-b384bf1d5bf5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7fc9eca4-7ed4-4db9-a135-fab1430ba9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0a00c5-d482-4401-98d1-d82492a9aced",
        "cursor": {
          "ref": "fe98651e-bcc7-4332-ba91-95542e2e0e4c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "83fdcec0-ea9f-4857-8b50-890cf28196ca"
        },
        "item": {
          "id": "bf0a00c5-d482-4401-98d1-d82492a9aced",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4482cd68-7c2c-466b-8d2b-91e441094ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d254401f-b694-4f85-a7e4-67bf0c3d44a9",
        "cursor": {
          "ref": "b28cf76c-fd06-446e-8382-9892beb9420d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e48ce776-08a8-488b-ba88-4d52ef4c553e"
        },
        "item": {
          "id": "d254401f-b694-4f85-a7e4-67bf0c3d44a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ec32d8ef-c064-47f4-b483-d937704da56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368d29c-80eb-48c8-a60e-0900d8d3bf80",
        "cursor": {
          "ref": "e05d4665-5f31-4432-8403-115cfb0b640c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9efbcc76-47dd-46ca-9122-ad364a441e8a"
        },
        "item": {
          "id": "6368d29c-80eb-48c8-a60e-0900d8d3bf80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "26fb0498-9b44-4e18-bd8b-d856654d1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16857dbb-4d3d-40f7-95fa-d86c268c873c",
        "cursor": {
          "ref": "207e1125-18f8-4753-8b39-1cfb16b0a0d2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "31eb8ef8-145a-4331-95ac-5e66894f0255"
        },
        "item": {
          "id": "16857dbb-4d3d-40f7-95fa-d86c268c873c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3a34d818-43ad-4b76-8e90-6a3e9e41e771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f6ddc-19a0-42c3-afa2-ebd0392bd9ef",
        "cursor": {
          "ref": "35446f04-2d72-4155-99cb-88e70c7651a2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1c748f99-b491-4a53-8ada-1d410fc174b6"
        },
        "item": {
          "id": "256f6ddc-19a0-42c3-afa2-ebd0392bd9ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "24db9b3f-3e85-4909-ae33-c579aa2b0e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef8280f-cedf-4ccf-a972-d17f94ab1059",
        "cursor": {
          "ref": "a47186aa-1f9f-4e00-b33c-a1e83dc436dd",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "59824092-84b9-440d-a484-23b03aae6243"
        },
        "item": {
          "id": "bef8280f-cedf-4ccf-a972-d17f94ab1059",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "60b5a3bd-b83f-4c2a-9fb5-0ebd789144e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15369c43-7aaa-471c-aa1d-eac92d6b5ee5",
        "cursor": {
          "ref": "16649cb3-8dd6-4062-baf3-8f786e06b99b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3bec9ab3-a5e4-4726-ae4c-632d0a59a822"
        },
        "item": {
          "id": "15369c43-7aaa-471c-aa1d-eac92d6b5ee5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f80a5e68-4f8e-4ca8-802f-40071b286c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f6500-8282-4e3a-aada-a40fd38abc63",
        "cursor": {
          "ref": "93c56dce-456e-4e6a-894f-2b71aa647ba9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "45dcf464-7ffb-4f7d-9277-0540903d1cc4"
        },
        "item": {
          "id": "4d0f6500-8282-4e3a-aada-a40fd38abc63",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7ca340f1-5727-4a19-bc3e-5708ff44096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c014af51-511c-4a1a-a962-1f197ab0659b",
        "cursor": {
          "ref": "b60b3e44-8662-4e24-8f36-6a8524b92e90",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2fe0f2a7-67a8-4f09-8175-f9c22175ca5d"
        },
        "item": {
          "id": "c014af51-511c-4a1a-a962-1f197ab0659b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8f2e2873-8031-451c-b350-4c00ace8b880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc0575e-3fc5-442a-b944-80b0994c9083",
        "cursor": {
          "ref": "1260a79f-f634-4b44-b5d3-7fc4f3fbd036",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4016aa1d-3f6f-439c-852d-42ccc29af948"
        },
        "item": {
          "id": "7bc0575e-3fc5-442a-b944-80b0994c9083",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c690c602-8021-4383-a4ff-694f7d25bb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70b07e6-8992-4c46-9c05-c75637b86c86",
        "cursor": {
          "ref": "15f8db00-3f8b-4088-b562-5c7c0d686e38",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "125917ed-fe09-4f9b-bece-1680cdb12559"
        },
        "item": {
          "id": "b70b07e6-8992-4c46-9c05-c75637b86c86",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e14b412a-e6e8-47b2-8cab-2a42d30ccc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7bcd60-1ba3-4a12-9177-fe7f6f235e14",
        "cursor": {
          "ref": "175d7022-26aa-4977-a5d7-7d1100123c85",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18aa2bb0-265b-4cc3-b026-dd9a7b7e26ba"
        },
        "item": {
          "id": "df7bcd60-1ba3-4a12-9177-fe7f6f235e14",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7728420-cd4e-4bf8-9189-485ec3850f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437fcc82-9724-4270-8541-bf38404662c3",
        "cursor": {
          "ref": "08fd83d6-8ffc-4cac-b23f-1225577a287e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "acee4751-0676-4c41-9a83-13d0fd205bac"
        },
        "item": {
          "id": "437fcc82-9724-4270-8541-bf38404662c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2ab9983d-9213-4297-bcce-c8ffb4af314e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e81dfa-5f10-4679-92f8-1fa26f119cc6",
        "cursor": {
          "ref": "eb3138ff-61ce-49c8-a682-71be80476102",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3bbbf780-5643-4dfa-86ce-5cd6294e49b4"
        },
        "item": {
          "id": "e1e81dfa-5f10-4679-92f8-1fa26f119cc6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d7874155-eeb4-4b7b-b9cb-9037c8b9d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb8ec07-efb7-4528-97ef-a02bd32282ee",
        "cursor": {
          "ref": "32ad10c1-bf06-49db-a87f-915122cdd2a4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7f6186d-872e-43e7-a5d8-7c2b8147dffb"
        },
        "item": {
          "id": "bdb8ec07-efb7-4528-97ef-a02bd32282ee",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1669c773-af79-45bf-8e98-33e3b83857ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0834676-bb97-4385-a7ed-e2e2f292bb3b",
        "cursor": {
          "ref": "4521e5ec-1c73-468e-a3ac-8eaffba6db7d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bda91ae9-0217-44d0-8099-c0456a8b502b"
        },
        "item": {
          "id": "b0834676-bb97-4385-a7ed-e2e2f292bb3b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "aab649cf-0b15-45a3-b8d2-bd95b5a03cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8a435d-84e3-4cc9-977e-94e9b441096c",
        "cursor": {
          "ref": "6e0e3709-19f8-4401-a9a6-f6f5eba11e31",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c9c2114b-1d0d-4b50-8dbb-801bd5749b0c"
        },
        "item": {
          "id": "4d8a435d-84e3-4cc9-977e-94e9b441096c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1ea89de6-e69d-4f08-9916-3ec461b7c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342d970b-5aa5-4f69-9995-419db723e71e",
        "cursor": {
          "ref": "6698d0a4-4606-429d-b8d3-3df1a53b6263",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aeddc5d2-ec4b-4f84-a2a6-1c5ba9921455"
        },
        "item": {
          "id": "342d970b-5aa5-4f69-9995-419db723e71e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5db9dc43-8a8b-4f58-ab8e-e366faba996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fa9039-c4b1-44e3-b33f-c6068651029b",
        "cursor": {
          "ref": "913f1bb3-d6a7-41e1-bed2-94925793de5a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "849c9bef-138c-4632-8428-8e94bdbcba5b"
        },
        "item": {
          "id": "f5fa9039-c4b1-44e3-b33f-c6068651029b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5813e0a9-9d64-48cb-8771-81ca54c64b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3e49c-c6e3-44d0-a169-2a986818a138",
        "cursor": {
          "ref": "4fdd6e74-643e-4742-b18d-39e8cea94ba4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7a4abbac-bcf2-4bbe-9bdf-353562684f83"
        },
        "item": {
          "id": "93b3e49c-c6e3-44d0-a169-2a986818a138",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60458f16-378f-45ea-a080-edc5017f9385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263377c7-0f4a-4cb8-ae9d-e537a8dadfdf",
        "cursor": {
          "ref": "9ef70549-b08c-4d48-996b-433863b9243f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9eaad81c-843c-4c0a-9efe-4570458a9f4c"
        },
        "item": {
          "id": "263377c7-0f4a-4cb8-ae9d-e537a8dadfdf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7fd08b3d-4678-4a8e-bd97-fd0034bcd731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2931fd-f1bb-4d12-8bdf-163e18492b2f",
        "cursor": {
          "ref": "09a5144e-9cdb-46cd-a3e4-08679c6c9c73",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "69c21eb3-291d-452d-ab9d-093f21820e19"
        },
        "item": {
          "id": "9c2931fd-f1bb-4d12-8bdf-163e18492b2f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a8e69588-7ddf-4288-8135-4048d9e88102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54821f6b-958f-4282-a88a-f415a64ffee5",
        "cursor": {
          "ref": "10d3eba5-4952-48af-947b-2bfe21d772a2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7867d689-2930-4b4d-9005-0f9823f93c55"
        },
        "item": {
          "id": "54821f6b-958f-4282-a88a-f415a64ffee5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dedeb6ac-91f6-4b3a-9c7e-bf98f1433fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a51205c-e9f2-459e-b06e-8f24ecc9fa2d",
        "cursor": {
          "ref": "f0e60445-b03f-41dc-a3ee-048f90d0e839",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b37da9da-2252-49d6-aa5c-3df91180563a"
        },
        "item": {
          "id": "7a51205c-e9f2-459e-b06e-8f24ecc9fa2d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b0a29580-6dfa-49b6-bce6-4b8378c6f680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf209e-43f0-424a-86cf-ac5910865a9a",
        "cursor": {
          "ref": "9d0dc655-1e09-4d11-9ef5-c01d4c8c6015",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f971c4e-165e-42c1-92e1-8265a17de4b8"
        },
        "item": {
          "id": "7bdf209e-43f0-424a-86cf-ac5910865a9a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3637f75c-b211-4664-81a6-d1a849d74f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a5ae8-46db-437e-a9c3-c86dbb03d53e",
        "cursor": {
          "ref": "addbd067-0388-4181-99e8-b101977f3e0a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3666bb0a-7153-405b-937e-c82a7bae496e"
        },
        "item": {
          "id": "c57a5ae8-46db-437e-a9c3-c86dbb03d53e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "36fd5519-111e-45bf-b63b-a5ec3c574c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acae642-ac96-424e-adba-79b1595adc4b",
        "cursor": {
          "ref": "e52fdac0-00b7-4faa-8057-10d83cfef6ce",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fd7a6f8e-4e37-489f-af0e-edbf7cf4f541"
        },
        "item": {
          "id": "3acae642-ac96-424e-adba-79b1595adc4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "510e3971-3b64-4bbc-a29d-e5b935dab2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbeef7d-ff3a-4fdf-97fa-2633f7e2035e",
        "cursor": {
          "ref": "ad053165-3347-4e3d-a9f4-7c56c0651d6b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d723888-cc26-49f5-be9a-40691ac4a43a"
        },
        "item": {
          "id": "5dbeef7d-ff3a-4fdf-97fa-2633f7e2035e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "947b0d48-63e1-4c4a-a49b-f4bd5a9a0120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68323b1c-3ba1-45b6-b019-151e8431d849",
        "cursor": {
          "ref": "f5d5512c-eb44-43f9-8d5b-3e90365a7a3c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb0b5270-d625-4f5b-94bc-9d8b0f12adff"
        },
        "item": {
          "id": "68323b1c-3ba1-45b6-b019-151e8431d849",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8142c608-2526-44ba-8f71-e3e8a9a360e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af02f4f6-ce7c-4699-bc5b-78bd16886aeb",
        "cursor": {
          "ref": "3e17b61a-e57a-458a-872b-f6760a2e16e7",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3baaf80b-d168-4da3-ab1c-6a14bcbd5127"
        },
        "item": {
          "id": "af02f4f6-ce7c-4699-bc5b-78bd16886aeb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7bc53399-d52f-4007-9c74-83ba4ef3f15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc648a1-40ca-4afb-b8d6-876d110c439d",
        "cursor": {
          "ref": "b09e3a14-ce52-480e-8c21-2ba5d398fd5a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b60ade21-6b2e-49d3-aae1-a5785f68b12a"
        },
        "item": {
          "id": "1bc648a1-40ca-4afb-b8d6-876d110c439d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dfb8187d-b9a8-409b-b64c-4aa5d6f80a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc50328-ea19-4f79-9d55-dd399cc66f98",
        "cursor": {
          "ref": "3e606914-d034-48c7-b826-c484af0fa9ad",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ef4759c7-c6ee-4bb3-8927-6c81a3c78bde"
        },
        "item": {
          "id": "8dc50328-ea19-4f79-9d55-dd399cc66f98",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d7487770-a745-4f85-9e76-c00faa69bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41121c0-c599-44fc-a8ec-6f6ce1a2cef2",
        "cursor": {
          "ref": "702295b5-d3e1-41f6-820f-3bb43559a42b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d5e8852e-b2c4-4375-9442-77c6f2c73261"
        },
        "item": {
          "id": "e41121c0-c599-44fc-a8ec-6f6ce1a2cef2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5d4d598a-2a4f-4223-9863-a2e6dae17ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1a0df5-99c3-42f6-88aa-d6355114de16",
        "cursor": {
          "ref": "b787fa0a-82c7-4b9b-95bc-7e66e6f4eeae",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2fcabfd1-62d8-485d-9ef7-d550525adb4c"
        },
        "item": {
          "id": "ec1a0df5-99c3-42f6-88aa-d6355114de16",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e91c51e6-7881-4fbe-a63b-c3a4106d3ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f10662-0599-4f38-8896-6ac3b44445cb",
        "cursor": {
          "ref": "98566b50-8f5d-45a5-90c0-b9051f06821a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6b0a1035-c00b-4693-a135-565ca962d208"
        },
        "item": {
          "id": "61f10662-0599-4f38-8896-6ac3b44445cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f12e9a2f-c085-46d6-a649-d017d7dd994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4adfd1c-31a8-4874-ac77-79b5642d237e",
        "cursor": {
          "ref": "9e390eef-dce3-4f1c-ad54-84e83dfb259d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8cfa67a3-c2db-443d-a5c8-61fcc1538a71"
        },
        "item": {
          "id": "f4adfd1c-31a8-4874-ac77-79b5642d237e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d9e9962e-804a-4d2f-a596-26d4639a7c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2371f1c-aa36-4c05-8d3d-e9a279699779",
        "cursor": {
          "ref": "06d8003d-34b0-4114-86ab-b20e0a66b4a2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5bfacb53-ad95-4e15-9a0d-d4d9d22569f9"
        },
        "item": {
          "id": "e2371f1c-aa36-4c05-8d3d-e9a279699779",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "905a717a-70d8-40f2-aa15-ab26e0083ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed309eb-d1c5-4bc2-854f-15547be92c7a",
        "cursor": {
          "ref": "dbb18af1-e8b2-48af-b643-70a1de76181c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b64021b-2618-4f39-854c-a2661ce7eb6f"
        },
        "item": {
          "id": "bed309eb-d1c5-4bc2-854f-15547be92c7a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9cf004ad-060b-4808-a6ef-c9fa8d9c3cd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eb8a1f-2fdb-4b7d-9997-3f7935b76739",
        "cursor": {
          "ref": "cec11203-555f-4003-b03f-beaaaf1e9a1b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "563251bb-bc21-4a00-92dd-e3d78da7c3e9"
        },
        "item": {
          "id": "13eb8a1f-2fdb-4b7d-9997-3f7935b76739",
          "name": "credentials_issue"
        },
        "response": {
          "id": "32dae61d-129d-4524-9c00-34b92673c369",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9459fdcd-5264-4546-b7b5-935049b1c193",
        "cursor": {
          "ref": "c834d6dc-bc5a-4d3f-a1b0-b36a9fc14d7a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "660ce1fc-2dc4-4923-9826-2d92f9ca1d91"
        },
        "item": {
          "id": "9459fdcd-5264-4546-b7b5-935049b1c193",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eafc4196-7eec-4338-b948-17ae8e56d079",
          "status": "Created",
          "code": 201,
          "responseTime": 156,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b02adca-aa7a-45b9-8453-e825c40d4db2",
        "cursor": {
          "ref": "73de85aa-b27a-4d93-a209-46565ba6ea28",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "86123d92-11f3-444d-84df-80f95d5b3721"
        },
        "item": {
          "id": "9b02adca-aa7a-45b9-8453-e825c40d4db2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "df6fc300-1dc4-49ff-8b24-f67d870889a6",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf7c49d-f20e-4554-a2f5-8d3fde9bd66a",
        "cursor": {
          "ref": "3b1acd15-e9ea-46ce-b1a2-8ce507d9010b",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2450f640-0e00-40da-8248-30b8117cccc0"
        },
        "item": {
          "id": "9cf7c49d-f20e-4554-a2f5-8d3fde9bd66a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "06e16351-bd39-4583-bba7-be7c6dca8f46",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16b8ff0-1dd0-4457-8cdb-1e661d1a1ad3",
        "cursor": {
          "ref": "b798c7e5-1d7e-4f21-87d0-e55f781542a3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c0b84498-fce8-4f82-bff8-099fa22ab4cf"
        },
        "item": {
          "id": "b16b8ff0-1dd0-4457-8cdb-1e661d1a1ad3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a0633b7f-8261-43cd-9919-e22889923349",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "062715d4-56e0-417c-bd05-26c064f48147",
        "cursor": {
          "ref": "feffd885-6b70-4ed5-ab23-d8d1fa5605d2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ca9325e6-4ce1-4d1d-b45f-d721f6676202"
        },
        "item": {
          "id": "062715d4-56e0-417c-bd05-26c064f48147",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6569c553-0270-49ac-b7b5-4db6812db738",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31299ddf-8acb-4e78-924e-f12b6d6465ab",
        "cursor": {
          "ref": "6a164bd7-3e06-4054-a3cd-0ad4179ff255",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "af45c8b9-aa35-4e34-bf3d-1a3e1a9075dc"
        },
        "item": {
          "id": "31299ddf-8acb-4e78-924e-f12b6d6465ab",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "620cef33-4df1-45aa-8a63-1db5fb1a7335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7ed4a7-91d6-4d7c-83ac-9bb6475eb981",
        "cursor": {
          "ref": "e5c2d9a5-4027-4686-8738-784d64fdf8c2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5564937d-acbf-4c59-b94b-9dcbb9848933"
        },
        "item": {
          "id": "8a7ed4a7-91d6-4d7c-83ac-9bb6475eb981",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5bb6319a-b131-4412-8d9a-e6fdb72b0af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd80fd0f-814a-424d-896d-ae0ff0b52ffd",
        "cursor": {
          "ref": "77a61fc1-763d-43dd-a72b-a66b70cac121",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "196f32dc-28a9-4b78-be1f-deaeae3a6555"
        },
        "item": {
          "id": "cd80fd0f-814a-424d-896d-ae0ff0b52ffd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f3b2f976-9062-40a6-ac7b-9fedcf680159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80842b05-83a1-45ad-bafd-18f3012daa74",
        "cursor": {
          "ref": "d0d32162-82e1-46ba-b763-29b04cad591d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d5a23c8d-f29d-4536-bab0-9875b5d8d3a8"
        },
        "item": {
          "id": "80842b05-83a1-45ad-bafd-18f3012daa74",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4f5547c6-d103-4f0e-8061-b74d518d4577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d9fac-8fd4-4313-b957-869c734a2eed",
        "cursor": {
          "ref": "cf5a88a0-f625-4cf8-8464-f66eda3535c3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c3461816-05bb-4906-95a9-61aefb2e2070"
        },
        "item": {
          "id": "d41d9fac-8fd4-4313-b957-869c734a2eed",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b5aa74b6-7eba-405a-9a57-5db4e259ac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4236ccd6-8702-40ba-b3f4-1d7513df7838",
        "cursor": {
          "ref": "68a87320-e108-4d39-b767-64986f0a0bf8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "afc4e7ba-a66f-41fc-9f84-20d10e9ff90c"
        },
        "item": {
          "id": "4236ccd6-8702-40ba-b3f4-1d7513df7838",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13f70032-5dae-4db0-b65e-27e921779fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8140d43e-3b93-44f2-b88c-fa74a3a60972",
        "cursor": {
          "ref": "bd148040-d4fb-4471-888c-a77e37d53e8a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c119639-0d5e-44ac-b272-3cce0b96f0a2"
        },
        "item": {
          "id": "8140d43e-3b93-44f2-b88c-fa74a3a60972",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1e36f44-492c-4d07-a520-a8601acd74fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791e7c17-ae1f-408e-b49f-9872bce0a7a5",
        "cursor": {
          "ref": "cf9b89fb-0248-44f4-a2e5-1d14f95f7036",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1f81ed7f-dcdd-41d6-9399-3506ee19cd31"
        },
        "item": {
          "id": "791e7c17-ae1f-408e-b49f-9872bce0a7a5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ac5cdd7-8c42-4245-a578-0cf17971ce1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2fd438-c12e-484b-9414-65664ce88d32",
        "cursor": {
          "ref": "6d7a16e9-b35c-4adf-b888-fc0227bf4df5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f559b91e-fe31-4276-b3eb-2c8d4ab21742"
        },
        "item": {
          "id": "da2fd438-c12e-484b-9414-65664ce88d32",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35c2155e-95b7-4b5a-b088-8963d696b04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a660992-f3b1-4665-9484-369b4c7b3ec2",
        "cursor": {
          "ref": "d8c532fc-20fe-42ad-b6d8-a949740abdd5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4af6d7d1-d545-41ab-9577-8bda97b63b3a"
        },
        "item": {
          "id": "9a660992-f3b1-4665-9484-369b4c7b3ec2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ddf36bdc-76f7-4b97-940b-b7762eea34eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcaeb98-5613-4be2-b37f-c2cc93bd430e",
        "cursor": {
          "ref": "e692c883-4016-4e8b-a805-88a8e0e53ae9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "af4bd0f6-8446-4447-8e63-65a37ddfc38c"
        },
        "item": {
          "id": "bfcaeb98-5613-4be2-b37f-c2cc93bd430e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0102a01-3f85-4053-8d18-5393d20bac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe533fe6-6f97-46af-ba15-e65af92d6854",
        "cursor": {
          "ref": "3b25e53f-f52b-47f0-bd61-0ac747678c8e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "95090e71-f1e5-46e3-9d7f-93fc2d398f0a"
        },
        "item": {
          "id": "fe533fe6-6f97-46af-ba15-e65af92d6854",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c41ff065-3cad-440c-8491-25a3a22fa9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13fea67-3750-4df9-a584-1f658ba6e8b9",
        "cursor": {
          "ref": "532b45a4-8575-4ab9-8446-328dc1e134ed",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7c77d074-313d-4923-b45e-1c7482e91b50"
        },
        "item": {
          "id": "f13fea67-3750-4df9-a584-1f658ba6e8b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3f26803c-3f17-4e8c-bcf8-55afd7896c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3541a799-5575-4fc5-b5ee-f8cb7ae2fb9f",
        "cursor": {
          "ref": "9a4c88b6-b528-497b-89fe-f4ebc7dd784a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "74016e45-582f-4e2f-b49d-c27838603854"
        },
        "item": {
          "id": "3541a799-5575-4fc5-b5ee-f8cb7ae2fb9f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8ed9db2-456d-4722-b063-ecc2aad87738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37910ead-864d-4e4d-81c9-eb825a702f25",
        "cursor": {
          "ref": "89ab3194-0f29-48c0-a740-fec1f45088ce",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "79b8d78c-3cc0-4e11-b60d-215afe520821"
        },
        "item": {
          "id": "37910ead-864d-4e4d-81c9-eb825a702f25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b989d1f8-6332-47cd-8b4a-1cc6c5e58bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafb3d59-37d6-4727-baaa-0c11e6cb3f5d",
        "cursor": {
          "ref": "c48e141e-d724-413a-bbba-3fe05033c978",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "565a2077-736f-4925-a820-75eb7b1a4ccd"
        },
        "item": {
          "id": "aafb3d59-37d6-4727-baaa-0c11e6cb3f5d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61e89967-e055-4bfd-8faf-a255663a7a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f6892-c519-48ab-8cf4-f138a9ecf85b",
        "cursor": {
          "ref": "054a8d14-2ca0-428d-8d67-abc287ce46e3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fe797822-cf12-470c-96ab-9cdbab72e027"
        },
        "item": {
          "id": "2c1f6892-c519-48ab-8cf4-f138a9ecf85b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "371fdf40-4cf3-4d1a-94d3-6084b8db4889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87868941-46f1-46ed-8cdb-463bd85cb1c1",
        "cursor": {
          "ref": "c0eb2642-fa83-42c0-b268-3867abb7bbc5",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0d53eb8f-4e57-468a-acd1-7db7384bd9c2"
        },
        "item": {
          "id": "87868941-46f1-46ed-8cdb-463bd85cb1c1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12053200-956d-4d37-bce0-dd06c8653bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f735e7-132c-490b-8328-b2862138fe7e",
        "cursor": {
          "ref": "f2909207-8c39-4c38-b78e-0a1b894cfb54",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6bfd2969-d1cb-4dcd-8bc9-f735317365cf"
        },
        "item": {
          "id": "54f735e7-132c-490b-8328-b2862138fe7e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ead5464e-3a49-40e0-a6b2-e24045bb5b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b14110f-67e9-43d5-a985-229f8dc9f112",
        "cursor": {
          "ref": "b4f17b19-9491-404c-ab43-a10b17bffc3e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d901b250-198d-4f86-a32e-0b94178a2b0b"
        },
        "item": {
          "id": "4b14110f-67e9-43d5-a985-229f8dc9f112",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e30dd029-d100-47c7-bc59-25df1972c461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad597f0-0d41-44f5-8a3c-9489d840877d",
        "cursor": {
          "ref": "3a8e5d4e-554d-469c-b78c-48fc5624ae86",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "57d9d1ba-545f-4d1a-9f75-836316c04a98"
        },
        "item": {
          "id": "cad597f0-0d41-44f5-8a3c-9489d840877d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "36808a21-3cbf-405f-862b-a9cd1c369ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c4569d-7084-466d-bd9f-9cfaf5efdca6",
        "cursor": {
          "ref": "9122a773-a781-4763-b445-a1873820efb0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3e5d3752-f6da-4f1c-b456-053aaae57ede"
        },
        "item": {
          "id": "c9c4569d-7084-466d-bd9f-9cfaf5efdca6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7bdc15f-5661-4174-ae82-4e22383fed48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eab7258-5e0a-4d78-aa3c-ec0152924314",
        "cursor": {
          "ref": "c906b2dd-0958-4d2b-ba0d-fa6b1506cda0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "060b12f6-aabc-437b-a796-aea7e6455dc6"
        },
        "item": {
          "id": "5eab7258-5e0a-4d78-aa3c-ec0152924314",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "925d6e95-5876-4e47-b787-d6665475727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55476a2-949d-4ee3-812e-3d9541408387",
        "cursor": {
          "ref": "7081335f-ebcb-483d-a335-bdaed2fe5bd0",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4177880b-871a-4247-b406-3f8837454b07"
        },
        "item": {
          "id": "a55476a2-949d-4ee3-812e-3d9541408387",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "af4820a5-4b28-40be-b133-25b04a0e0b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df775b9-98c5-43cd-8694-c203c928d448",
        "cursor": {
          "ref": "06281617-852b-476e-b666-c177ca21a11c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "623451fb-fc4a-4659-a322-137bbd804d14"
        },
        "item": {
          "id": "7df775b9-98c5-43cd-8694-c203c928d448",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d335ab7b-9d3c-4af2-82e4-2c95b7ee60dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05b064-2e44-4cd2-b966-c2a1286907e8",
        "cursor": {
          "ref": "c7b980a1-bbdd-4128-af98-802c458030b3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8ff6d461-af81-4981-be85-da034f4a08b4"
        },
        "item": {
          "id": "6f05b064-2e44-4cd2-b966-c2a1286907e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "549bf09a-7f4b-4125-b0e4-4e83829b887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df7c531-d78c-48de-b70e-afa4bb2cfbb9",
        "cursor": {
          "ref": "4be44512-aefd-4d47-8a78-55c496b2c1db",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a01c8ae8-49aa-4f0d-99eb-a763f37373d0"
        },
        "item": {
          "id": "9df7c531-d78c-48de-b70e-afa4bb2cfbb9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "89e1d0aa-4f13-49a6-9051-c410b3f80717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daeea53-4d66-4bb7-aeff-2fa4e0c24f77",
        "cursor": {
          "ref": "71e4d467-949f-49e7-b48a-705fb6cbd8c7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e320880a-435c-4464-a4f0-cf2294f69503"
        },
        "item": {
          "id": "8daeea53-4d66-4bb7-aeff-2fa4e0c24f77",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5bbd9898-4cdd-4da1-9bd3-186b266959ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f77fb-08fa-4986-8197-8bd07c48191e",
        "cursor": {
          "ref": "e69e2ffc-2596-4621-96c3-eda5d225c68f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "01edfa85-2f93-40e6-ba06-06767d3b5b78"
        },
        "item": {
          "id": "7f5f77fb-08fa-4986-8197-8bd07c48191e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1d10dc9c-abbb-4362-b284-3fb7f4ebc364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a597e1b-79ac-4214-a0c4-cdae7f9d18c6",
        "cursor": {
          "ref": "b265623e-4749-4f6f-a871-e08598938c91",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ea4f8911-67e8-4cce-8c56-a82d86272cf7"
        },
        "item": {
          "id": "8a597e1b-79ac-4214-a0c4-cdae7f9d18c6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cdcf3576-5adb-4f9a-a2a3-e074779077bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb0823-f602-43c7-a8ef-57d736949929",
        "cursor": {
          "ref": "d94ab9d8-2387-480d-be48-2cf6050389c2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "163c8ec6-7d40-4f3e-880b-9cb29190158b"
        },
        "item": {
          "id": "35eb0823-f602-43c7-a8ef-57d736949929",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2e6b96e-f8b9-4677-b29d-679cdc7e7d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523235c9-e589-4d0c-89f5-041b51900a32",
        "cursor": {
          "ref": "674ee50e-d25a-43e1-b080-dcd1a1913c60",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2252f7e9-a6a1-414d-9762-1e2ed3073834"
        },
        "item": {
          "id": "523235c9-e589-4d0c-89f5-041b51900a32",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b1c7cae4-5139-44b7-9208-f6a2f567d685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e565b63a-50db-4b38-b51c-e51bff4760e2",
        "cursor": {
          "ref": "c83784a5-2a9c-439b-9014-19cd9ddba012",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "54012d9d-ed7c-47d7-b0ee-ac1d859274f4"
        },
        "item": {
          "id": "e565b63a-50db-4b38-b51c-e51bff4760e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89045f85-0edd-4172-bfb1-09577119b83a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b027dd88-d46d-4297-a139-c8f92c0eeb6b",
        "cursor": {
          "ref": "286294e4-4251-48d3-873e-822fc094dfb0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5fbb343e-386d-46bc-b6f2-ad7d25d290f7"
        },
        "item": {
          "id": "b027dd88-d46d-4297-a139-c8f92c0eeb6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "219f1c76-5d5d-4364-a9ed-cd681c86135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d430a1-374c-4029-8ff2-89845937509c",
        "cursor": {
          "ref": "a00e5afd-7085-415e-ab48-c955249a44fe",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "096a95e1-eb51-4742-af33-b0329b8f69b3"
        },
        "item": {
          "id": "e7d430a1-374c-4029-8ff2-89845937509c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "750d8b9f-8964-43aa-93dc-5a75422fadfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c22a19-8084-46da-9d50-310f896121c7",
        "cursor": {
          "ref": "52b6795c-ce4e-4904-a679-3d1e2903e656",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "584e9bca-e378-4f67-b36b-fedcd6f1e7fd"
        },
        "item": {
          "id": "28c22a19-8084-46da-9d50-310f896121c7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52f90eb6-5b75-4365-a619-f0c3edd41d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d43eb8d-e5f5-4b76-baec-de58c836bf05",
        "cursor": {
          "ref": "3e4b88b5-6eec-41a3-ace0-72b4025424a0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "057659c3-e711-47f2-a07e-1c271cee9e2a"
        },
        "item": {
          "id": "3d43eb8d-e5f5-4b76-baec-de58c836bf05",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "384c01e5-45be-4930-98f4-914d380233f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c49495-9e25-4f37-80a6-30ad18fd20f8",
        "cursor": {
          "ref": "1b845033-bbb1-4711-9326-264b2a57958c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e9ff3be-8560-4d6c-9dc8-f6a7ee6e7a9a"
        },
        "item": {
          "id": "12c49495-9e25-4f37-80a6-30ad18fd20f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d7bd754-c9d0-4bc9-aae7-1943a7ed905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1a2cc6-76f4-4d8d-a4d6-283c4dd5b73b",
        "cursor": {
          "ref": "a2e810a1-4b20-45c8-8062-c43c3c28d05f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ea98a01-70dd-4d2e-948d-06d76a322945"
        },
        "item": {
          "id": "5d1a2cc6-76f4-4d8d-a4d6-283c4dd5b73b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a85ed05-8e0d-485c-93f9-e24d08bcf2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656d212d-6083-4558-8d92-749f9846c572",
        "cursor": {
          "ref": "ddd85ac3-4528-46bd-b635-1c9901a82669",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "94c451f1-ca55-402e-a1bb-4d01b5232e8d"
        },
        "item": {
          "id": "656d212d-6083-4558-8d92-749f9846c572",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c764cf7-d746-4991-b224-9a878615e52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86496ad-d7dc-4eec-beee-43ddf738299e",
        "cursor": {
          "ref": "0d432417-b750-458b-b4ef-b535d4ccb3c4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2a2d9e73-2f69-47fc-9f4c-105e326c181d"
        },
        "item": {
          "id": "a86496ad-d7dc-4eec-beee-43ddf738299e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c47711cb-4a02-4f9c-9e00-893faaed5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d082e7-8ffe-4444-8e19-9e0a2b7ed418",
        "cursor": {
          "ref": "1d2d99d1-d633-4bd4-9156-709da559291b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "793b986f-2b23-4b3d-a52e-eb6b96b3b65c"
        },
        "item": {
          "id": "54d082e7-8ffe-4444-8e19-9e0a2b7ed418",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a91044f6-55fd-45b0-8215-fc14330ea13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b633178f-c0bc-48e3-af01-e997790c9aec",
        "cursor": {
          "ref": "5c41e593-0f88-4aed-88c6-6295e831c702",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "646ff23f-97d6-4a28-ab09-e2275b8e51c4"
        },
        "item": {
          "id": "b633178f-c0bc-48e3-af01-e997790c9aec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21a6cbb2-2796-4100-8a07-1973f5703c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdebb93f-eeaf-412c-a330-d44da5dc6a11",
        "cursor": {
          "ref": "1476f483-34e9-46ac-b773-65a21b926f78",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3c20fe16-701f-4d24-86ea-7c745bb3fcb3"
        },
        "item": {
          "id": "bdebb93f-eeaf-412c-a330-d44da5dc6a11",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f5dfa3f-0c77-4770-917f-85c6f146a6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425fb115-6148-44d8-87b6-a5bb367892b5",
        "cursor": {
          "ref": "321ade1c-994a-4129-bd23-6a334ca158a8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f4ef5f3b-cfa2-432f-bdfb-5479c8da1c17"
        },
        "item": {
          "id": "425fb115-6148-44d8-87b6-a5bb367892b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "071a7486-3fc7-4522-a8f0-f9668cf2743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e76f9ff-0c78-4893-b1ab-e443b254c46b",
        "cursor": {
          "ref": "77c99751-da63-4acf-8320-1193e506660a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40a8b031-0094-48e3-9f9b-de9357938b7f"
        },
        "item": {
          "id": "9e76f9ff-0c78-4893-b1ab-e443b254c46b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a6beee96-052a-4049-b0c5-61917492f5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09583776-c5b2-4c73-b978-e1c529fc258a",
        "cursor": {
          "ref": "d45420e1-16b8-4360-b0f5-78359aacfde6",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "372aee5c-ac07-476d-9da1-8f9534110d82"
        },
        "item": {
          "id": "09583776-c5b2-4c73-b978-e1c529fc258a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f0b292f7-3cbb-400f-9f64-39c6790c9158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3266f620-c2b1-4049-93a2-db2f90a082f9",
        "cursor": {
          "ref": "348a8348-e40f-4fc5-a3f7-4107918a1755",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e22df558-aed8-4338-95d3-5a2742aca556"
        },
        "item": {
          "id": "3266f620-c2b1-4049-93a2-db2f90a082f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "efd967f3-d9de-44ec-8b1a-ddc7c627df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7070fcc2-c0e9-4708-ac9c-c24fffea923c",
        "cursor": {
          "ref": "2855d5ed-1543-411b-9cf6-7863d02a2b98",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "20e2e7e2-b208-4b72-892e-bb4c255a6203"
        },
        "item": {
          "id": "7070fcc2-c0e9-4708-ac9c-c24fffea923c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90632ef6-5652-4126-9745-de98ff78e498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff054ee-a4c9-461a-aeda-8283d4a6ce1a",
        "cursor": {
          "ref": "7a5c7935-378b-4b5d-96b5-256ebcea6325",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "134b601d-0f96-43cb-872e-445fe73ac54a"
        },
        "item": {
          "id": "1ff054ee-a4c9-461a-aeda-8283d4a6ce1a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9848a31e-ba9f-4c5b-a5fe-e7e6c932b688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b77e58-e9ad-4bc0-80b4-b48ea6289a02",
        "cursor": {
          "ref": "98bf69f5-fc91-4e55-ac72-0ca397ebb4d8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0fe75bdb-66ac-4231-a816-ad84c4bbe993"
        },
        "item": {
          "id": "45b77e58-e9ad-4bc0-80b4-b48ea6289a02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "231ff36f-bd1d-42a3-96f4-14623a81bfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a21f3f-a4fe-4031-92d8-10efa79bc37f",
        "cursor": {
          "ref": "e35c044f-b214-4d96-9b2b-9e3acef466e0",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fde01636-c377-428e-9ced-021548449e3b"
        },
        "item": {
          "id": "a7a21f3f-a4fe-4031-92d8-10efa79bc37f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f6acc10-3d8e-4f70-8b4a-49468c691213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4155b23-53bd-40bb-bad1-aa3283a33142",
        "cursor": {
          "ref": "d0174bb5-5c81-4292-b7fe-022a586f8166",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d8d102f0-46dd-454c-96db-91ecdec15710"
        },
        "item": {
          "id": "b4155b23-53bd-40bb-bad1-aa3283a33142",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8de62443-414f-432f-9a6d-f4dc8fdf4a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a231fb8-1397-4f08-8f1d-655ac5f43902",
        "cursor": {
          "ref": "ecbcaf7b-6e8b-4f15-9c30-c8b478f3b116",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "964b1c5a-ae75-41a5-871e-7d4ee1498b5c"
        },
        "item": {
          "id": "1a231fb8-1397-4f08-8f1d-655ac5f43902",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a72233e-e339-4a8c-95f4-2a1daaca5d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a8e072-380c-47ee-88e1-41caaec05fc3",
        "cursor": {
          "ref": "e6a6aec3-042f-47c2-ac42-a791600594d5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "56910c8c-7e43-421f-858f-cc1efbe1cd3c"
        },
        "item": {
          "id": "11a8e072-380c-47ee-88e1-41caaec05fc3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "196bed35-4049-461d-852e-75dbfcd8062a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bc68c0-a35a-471b-a88a-d938dd80dd88",
        "cursor": {
          "ref": "1fc8118c-b6e2-4bd5-ad00-fcfce0ea1b7e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6c7cd860-eb13-4eb3-853b-a28e52587504"
        },
        "item": {
          "id": "d2bc68c0-a35a-471b-a88a-d938dd80dd88",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6e47f936-7957-412b-a2fa-cc3ae6ca6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e03aac-aa9b-4aea-a2be-79485b5451b8",
        "cursor": {
          "ref": "6632b733-0f6c-429f-86c2-0ceac212b14f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "75b9f587-c24c-4fe3-9120-4f0d59768f11"
        },
        "item": {
          "id": "47e03aac-aa9b-4aea-a2be-79485b5451b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c91b30ff-6a5a-4c57-bdde-f3aabfa936c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e6947a-dbc6-4a20-9134-4ab9ee9766b2",
        "cursor": {
          "ref": "424a4b7c-27e5-49d2-94d4-62763bc333a3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "432a5dae-8fe3-4302-8440-27a7b5be1a94"
        },
        "item": {
          "id": "12e6947a-dbc6-4a20-9134-4ab9ee9766b2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49912d9d-3caf-40dc-8cad-fb8fded8cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7652f774-2ce2-4fb9-88c0-987bd6d876ed",
        "cursor": {
          "ref": "78d916fe-73ff-44ea-9330-32a24f39d1f7",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9622a81f-a442-4027-a457-2fe5eee2433a"
        },
        "item": {
          "id": "7652f774-2ce2-4fb9-88c0-987bd6d876ed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "243220c9-6fef-4004-8a26-b65ab97c4f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29af4abb-4dcb-4ad0-8821-39fca77a9a80",
        "cursor": {
          "ref": "85649bda-4b83-46da-9a30-bccfa4dce606",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "89616fe6-c6f8-446d-83d6-78185e0235bd"
        },
        "item": {
          "id": "29af4abb-4dcb-4ad0-8821-39fca77a9a80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "345739d2-b3f3-4dba-8f3e-c58d16252eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b45cb5-0a94-4006-9a65-e22a183a692a",
        "cursor": {
          "ref": "4e7a91e8-65ea-4059-8733-6729eaea9da4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "110f1bbf-349b-469d-8788-4901cc661cf6"
        },
        "item": {
          "id": "b0b45cb5-0a94-4006-9a65-e22a183a692a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0d154a8e-6c97-469c-893a-57fa141b9387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad0313d-82c9-4df0-a547-06a1d13b1dde",
        "cursor": {
          "ref": "60cd577c-427e-4da6-9bc0-be789c6fffc9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "523cae5f-f2d1-4447-8740-3c9898ab5609"
        },
        "item": {
          "id": "5ad0313d-82c9-4df0-a547-06a1d13b1dde",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d65fd324-00e8-4edb-bbc1-825e5de8ddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc0bf5-27a6-449f-8917-7004e45e62a4",
        "cursor": {
          "ref": "4660c609-0e84-42e9-8c2d-c160d6ffc454",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "848d3750-7a84-4377-a954-504067307815"
        },
        "item": {
          "id": "36dc0bf5-27a6-449f-8917-7004e45e62a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6dd4acce-51ac-4c8d-a748-91f893a5d563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6aebad-a9a4-434d-b01f-0135cbbf39b7",
        "cursor": {
          "ref": "7831f877-1c84-4df0-bfbc-4227c1aafe50",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "df962fca-7167-48fe-a514-4cf7ab5d2883"
        },
        "item": {
          "id": "6f6aebad-a9a4-434d-b01f-0135cbbf39b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28fd1300-99cf-4cbf-bf19-af55510d4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e4e17e-201e-4795-bf94-c54772702791",
        "cursor": {
          "ref": "c98c84b9-ff00-4c74-ad0e-f9906581fa3e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "abacb64d-ff74-465f-aa74-6727ecb21c8e"
        },
        "item": {
          "id": "a6e4e17e-201e-4795-bf94-c54772702791",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b0f06e80-b104-462d-9c23-68941d81a939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9843c3fe-aa53-4b9a-9216-417591becced",
        "cursor": {
          "ref": "83f7db88-b6de-4ef1-98c0-7fdf563b249b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5c838690-5f55-4704-9c93-54c655eec52b"
        },
        "item": {
          "id": "9843c3fe-aa53-4b9a-9216-417591becced",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "46623990-df9a-4fa8-be5e-190577c46c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4add3-fbf8-4450-b864-c57a4da044eb",
        "cursor": {
          "ref": "f4d1ccf6-766e-4e09-86fb-93dcd6ed4ad3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e09c0608-1e6f-44ef-a84e-1581d55d3fe0"
        },
        "item": {
          "id": "c7c4add3-fbf8-4450-b864-c57a4da044eb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f421e8f-8795-4305-a420-9aa408c5d0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f57214-a349-4a14-ba82-ea2f74ccb5e7",
        "cursor": {
          "ref": "a372afc5-7c01-4a50-b774-ca1d557876c4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d60440bb-d867-4255-b3c9-63d651e064f7"
        },
        "item": {
          "id": "c2f57214-a349-4a14-ba82-ea2f74ccb5e7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6be9240-241e-4973-8882-a560a092bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc77b61a-250f-4145-ade8-1cdabf16dde5",
        "cursor": {
          "ref": "13ba4231-3aba-4127-a471-bb73c9494e26",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0cc359c0-451b-49ac-9c6e-caf99fc37899"
        },
        "item": {
          "id": "dc77b61a-250f-4145-ade8-1cdabf16dde5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8764b92b-1ea9-4b7d-af4a-d2d01c31cb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cdc140-bf6c-4d1b-8231-cb72257b4fe5",
        "cursor": {
          "ref": "a99d24e3-c857-43a1-98dc-496be07341ae",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "00ac571e-9fb7-4186-a854-398cd4b1fd7e"
        },
        "item": {
          "id": "b6cdc140-bf6c-4d1b-8231-cb72257b4fe5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9146a5f8-9b77-40fa-8043-1a033d82bc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f73ca7-0691-4bf5-b593-8c47d33ddecc",
        "cursor": {
          "ref": "435370a7-83eb-489d-871b-359c20c62b4c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b32733d-2ee5-451c-9f1f-688cdfb2ae7d"
        },
        "item": {
          "id": "15f73ca7-0691-4bf5-b593-8c47d33ddecc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d58637eb-0a11-4d28-ae2a-78065774abd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2084d757-e536-4095-8eba-46c61f55c2d5",
        "cursor": {
          "ref": "a602d1b9-a977-4cae-aca9-0740a664b451",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c544fc68-7eb4-43c4-86c8-50cdbf632291"
        },
        "item": {
          "id": "2084d757-e536-4095-8eba-46c61f55c2d5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9cd03e1-ba38-4202-b089-5b46a37d50b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3023e790-d415-41b4-a338-f92fe58159b1",
        "cursor": {
          "ref": "8547f38f-b63d-43cd-877f-b8f48712cc43",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c55c2d24-519a-4502-9f0c-a587d145e571"
        },
        "item": {
          "id": "3023e790-d415-41b4-a338-f92fe58159b1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bf890e01-04af-4bc6-867c-6abee060f349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126f3414-d6fb-4b72-86d3-21a6dd5f7999",
        "cursor": {
          "ref": "848a35dd-1320-4bae-8f20-23d674c91a7a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c7e7389-6c5c-4821-86e6-445a80871436"
        },
        "item": {
          "id": "126f3414-d6fb-4b72-86d3-21a6dd5f7999",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2f9bead1-923b-4499-9931-4d2c5d170837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f657981c-7b60-497e-80a2-66e6dc138803",
        "cursor": {
          "ref": "da6868a0-0b7c-46dc-a4b9-e9e9fc2a8330",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7ba93e39-d18e-47ff-9e66-3cfed92c3212"
        },
        "item": {
          "id": "f657981c-7b60-497e-80a2-66e6dc138803",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9aed518f-acfd-46b4-ae73-ebca57a41e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639c7a6e-6886-4e54-be0b-f7170a284b34",
        "cursor": {
          "ref": "582d8525-1531-459e-808d-22a2e989caa9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d1c66c9-922e-4567-bdf1-d84a60d7bcd6"
        },
        "item": {
          "id": "639c7a6e-6886-4e54-be0b-f7170a284b34",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e375d58f-67a7-43ad-ac54-6fe316779f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe616dc-f355-46e7-8ca0-1822049e5d4c",
        "cursor": {
          "ref": "0e8e7606-3b1c-4907-9f51-85d216a0a3ea",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1ca740d5-5d83-4ee2-baa8-c22e2bb04019"
        },
        "item": {
          "id": "2fe616dc-f355-46e7-8ca0-1822049e5d4c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc36d992-272e-402e-921e-16294af8b6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238948e2-35a3-4aa9-9d32-7e8fff88bf3c",
        "cursor": {
          "ref": "c4b1b41a-8be6-44b9-8be6-03a287a8bcd2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "97ff313a-a01f-4ea2-bb69-8b6bc477d116"
        },
        "item": {
          "id": "238948e2-35a3-4aa9-9d32-7e8fff88bf3c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe3fcfc4-6374-4bd5-82f7-989a852a4fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef061c8-bcb7-4597-9ce3-42e4e9cd1952",
        "cursor": {
          "ref": "d3f64de7-34eb-4ae2-beb0-3351f7b98a02",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7003a15b-fc13-40db-99b6-1f2049412262"
        },
        "item": {
          "id": "7ef061c8-bcb7-4597-9ce3-42e4e9cd1952",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fbf0db65-73e9-462a-ab58-530d9e0db0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c16817d-df23-4f53-9027-1ff519953fb7",
        "cursor": {
          "ref": "61db9ba6-0136-4a8f-8aee-45a56c18ad9c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b59da6b2-f63f-4c1c-af99-ddb86b62b8a1"
        },
        "item": {
          "id": "5c16817d-df23-4f53-9027-1ff519953fb7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ccae10c9-1184-4219-8a07-6868a81409b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7514b8e9-76fb-405d-bd89-49886d8b42fd",
        "cursor": {
          "ref": "3552b7c2-fc75-4958-a42c-ca28c6a5fee6",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0440be52-3356-4833-8e95-8d69364e5f20"
        },
        "item": {
          "id": "7514b8e9-76fb-405d-bd89-49886d8b42fd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3e40c161-d1bf-4e82-85bb-ef2c53c285d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9b1ced-bb3f-4346-9d13-25ee390d690f",
        "cursor": {
          "ref": "d3e89ad2-b297-4b9e-ae43-118cad600ef1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ab041b36-e9a4-482d-97f9-20b2027ef795"
        },
        "item": {
          "id": "0a9b1ced-bb3f-4346-9d13-25ee390d690f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b79737d5-c9b4-44c7-9ee2-37aec4695737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273da109-a8f7-4b3f-a0f4-aad77ae464fd",
        "cursor": {
          "ref": "3b2a3182-1580-44b1-8b03-c3e416592e4e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e9490c8b-4269-48e5-98f5-0b248d2d73ed"
        },
        "item": {
          "id": "273da109-a8f7-4b3f-a0f4-aad77ae464fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4883b7a-7274-4376-bf03-4d0ad51e21f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfdb8a4-e413-49b8-805f-3d6cae572501",
        "cursor": {
          "ref": "9bb0d54b-5f37-40cd-aa02-95f7c3cf09f0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "91210e12-c80f-4873-bde7-35fc74c56e9a"
        },
        "item": {
          "id": "acfdb8a4-e413-49b8-805f-3d6cae572501",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2c5a26d7-93fc-4226-91d4-ceec34064a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a559662-0bbe-4ab6-90d9-d4562207bd34",
        "cursor": {
          "ref": "29942e46-824b-45d4-a219-e10c56631775",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6ea9f0e-639f-462f-ad34-988db7e15046"
        },
        "item": {
          "id": "6a559662-0bbe-4ab6-90d9-d4562207bd34",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "06136cd3-e65f-43b5-9a7b-37a7631e34df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b32684-7b64-43e9-891c-bfdfd9175098",
        "cursor": {
          "ref": "660f8ca6-eb9d-4fc1-a82b-4e38367e65cc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0352edfc-a706-4de3-83f0-73940df05d0a"
        },
        "item": {
          "id": "19b32684-7b64-43e9-891c-bfdfd9175098",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "44486003-135c-42fa-8474-61edb4cd088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14bb5ec-9e2d-4136-b7de-7be0c28bd68a",
        "cursor": {
          "ref": "921aff75-f6d6-49a2-bf1f-fd3592506496",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e46f8796-fb5f-4c3b-9b9e-b2af4c16a1db"
        },
        "item": {
          "id": "e14bb5ec-9e2d-4136-b7de-7be0c28bd68a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bccdeaac-0448-4074-a76f-91b20dfa19cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3e71c6-c74a-4671-9dea-e73f59828aec",
        "cursor": {
          "ref": "f29325d0-9702-47a5-8fcf-7306fbce71a4",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb58cbf3-ca39-472a-a266-0773f393bb35"
        },
        "item": {
          "id": "0d3e71c6-c74a-4671-9dea-e73f59828aec",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e4cfffa-962d-430d-aeae-80d155ed26b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5956b4de-268c-4035-9453-b693ac4f01a4",
        "cursor": {
          "ref": "de995bab-ef22-4467-80f6-2075782187d6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "60f82313-cf74-4b0b-ad80-4b051e33586f"
        },
        "item": {
          "id": "5956b4de-268c-4035-9453-b693ac4f01a4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "84155bac-1e01-4340-b479-ebfed9e0c2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91601fb-99ce-435c-b00f-62020ed27803",
        "cursor": {
          "ref": "83b6250c-e983-45fd-a030-cc38b6ef05d1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "965ff667-3872-46d5-bed9-f6b1f28ee5a7"
        },
        "item": {
          "id": "e91601fb-99ce-435c-b00f-62020ed27803",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cdc7bb24-403f-4941-bf20-ecb961ed7d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d04103-fc6d-487d-a56d-981f80a3b2f9",
        "cursor": {
          "ref": "699668df-33ef-4524-9095-d97a56b75678",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a415ec8-694b-4c9a-9018-f8c6ea3a6854"
        },
        "item": {
          "id": "d2d04103-fc6d-487d-a56d-981f80a3b2f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4a848cb6-2e27-4275-89e2-7ee25157431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f7616d-13d0-4109-b47e-67aafdfd6365",
        "cursor": {
          "ref": "0de9d6cd-9c24-40b1-a70e-a6c2fb0b2658",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "05210f39-e2da-4f53-b158-acb10c6003be"
        },
        "item": {
          "id": "36f7616d-13d0-4109-b47e-67aafdfd6365",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "972ff01d-f31b-42f8-9346-6df4bfdf17de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d188c51-dfa4-4e0d-b699-ca9895d981a0",
        "cursor": {
          "ref": "da8fa076-a6cd-4641-917c-756688bf83d5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "907ade19-abb7-4b38-948a-0780b8ef05ed"
        },
        "item": {
          "id": "8d188c51-dfa4-4e0d-b699-ca9895d981a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d03aebd-d0c6-44f2-b8e8-3786eb25e36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2c8968-f23a-4ae8-b74e-d3c4faff2553",
        "cursor": {
          "ref": "f3a863ab-b5a2-4e77-a7b8-17ef2d925d47",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "385b5459-03b2-44fc-95fe-d8a677fc31ec"
        },
        "item": {
          "id": "0f2c8968-f23a-4ae8-b74e-d3c4faff2553",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "988be796-2814-4fe7-8154-26b27902ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905cd5a3-b364-4103-9529-dde234dc2c10",
        "cursor": {
          "ref": "d47d2f25-d6a7-472a-a495-0bef1e4f1f7e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fed23794-bbbe-40d7-8441-ba105c77776e"
        },
        "item": {
          "id": "905cd5a3-b364-4103-9529-dde234dc2c10",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8aa3ab5d-7fca-4f9e-b497-327a37820d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d135684-d640-44f1-b52d-e29e7c76fa63",
        "cursor": {
          "ref": "49641bb3-9f30-481b-953d-9be1e9201729",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c21df1b0-78ed-417a-bcac-682e7f384dcb"
        },
        "item": {
          "id": "5d135684-d640-44f1-b52d-e29e7c76fa63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a63cb4b9-fcaf-4344-af17-3bf25d970b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6c456-e172-46c7-897b-7dac8d47423b",
        "cursor": {
          "ref": "2e5283a6-e69d-42ce-bec7-06bea6ab9973",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f2e8877d-22bd-4a2a-aaaf-29f3927e5a57"
        },
        "item": {
          "id": "96f6c456-e172-46c7-897b-7dac8d47423b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bff9bef5-8357-462e-8dbd-80be78cb017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4a6bf0-cac0-4db4-b179-c5902c034dd6",
        "cursor": {
          "ref": "de230f8f-1840-470a-b615-b3935d54d112",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e012d28-acdd-4716-9f7d-b7ad1301ae65"
        },
        "item": {
          "id": "0a4a6bf0-cac0-4db4-b179-c5902c034dd6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c362d275-bf78-45b5-be96-aa2de8e47814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2dd956-8537-42fd-8272-ac08b04f3b3b",
        "cursor": {
          "ref": "52b9e42d-e60a-4d81-b05f-56722d09443d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "531aabc7-3dea-47ab-8b84-149cb51c6489"
        },
        "item": {
          "id": "1e2dd956-8537-42fd-8272-ac08b04f3b3b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2919a6e3-bceb-40f5-81c7-41065fa21dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8d2d83-f341-4e79-ad27-2be907cca97b",
        "cursor": {
          "ref": "23d6d611-24b2-4000-ad87-43ce8619800b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7314e779-f160-4a90-bf97-45fd105030f6"
        },
        "item": {
          "id": "4c8d2d83-f341-4e79-ad27-2be907cca97b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6fd197c6-cbc2-4fce-8bb2-ab024c086abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee89c74-a963-4c8e-8216-c41b85cfa5a8",
        "cursor": {
          "ref": "e724ce61-8db2-4da4-bd3d-bec1adfa32ab",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ab1ad567-b2a1-4834-a010-630891bfbc1b"
        },
        "item": {
          "id": "5ee89c74-a963-4c8e-8216-c41b85cfa5a8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0b86b3b4-a6f5-4423-9699-45a8c3236ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e9098-cb00-4686-a523-6e3dbe4d0123",
        "cursor": {
          "ref": "a8057564-d4ef-42d2-ada7-eb497fde55dc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "272a6b95-e495-48e5-9d4c-9840e74ed566"
        },
        "item": {
          "id": "6a0e9098-cb00-4686-a523-6e3dbe4d0123",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "80d528b8-12a7-4617-bd85-8a73143b3d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4230816-9ef5-4ceb-8f35-2459ee831449",
        "cursor": {
          "ref": "46aebff7-7bb7-4e8c-b33c-bec47368c5fb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3015b27d-4501-4961-8b3a-99272a1be28b"
        },
        "item": {
          "id": "e4230816-9ef5-4ceb-8f35-2459ee831449",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "25bfcc29-8067-46b7-9cfb-37c547351684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accb4546-942d-42f2-9038-c149581d7410",
        "cursor": {
          "ref": "23afc80e-3e27-4e56-b032-d29006a4aaa6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "278a928f-d84b-43ed-ad1b-dcf7b19960a3"
        },
        "item": {
          "id": "accb4546-942d-42f2-9038-c149581d7410",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "655d9e39-950b-4f18-856e-e2d14f4c738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6091997-7666-4dbb-a296-2a674c115679",
        "cursor": {
          "ref": "9c4f2659-65a1-4735-84c3-f4b060bf4009",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de384c04-6331-4d3d-91ed-f1ce3a30b3d6"
        },
        "item": {
          "id": "f6091997-7666-4dbb-a296-2a674c115679",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee7af122-f1bc-4138-a302-006b1e5e1639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a10f6e-2a68-440f-bdcb-27c6f2b4cbb0",
        "cursor": {
          "ref": "88c145c8-09e6-4a3a-91bc-5c3fac7294af",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f1473f83-2205-4e47-9a6d-1292ee64d998"
        },
        "item": {
          "id": "47a10f6e-2a68-440f-bdcb-27c6f2b4cbb0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ea1f489e-de54-4721-a59a-082d7ab9d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5679650-04e2-4603-b953-f35afc652c23",
        "cursor": {
          "ref": "ef938b2e-4895-40e8-a72b-626944d6f409",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d79ef794-d9ac-4d07-a078-59763fc1f956"
        },
        "item": {
          "id": "c5679650-04e2-4603-b953-f35afc652c23",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96560880-8cfd-40d3-9150-fcbcfd7b959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbbe493-e8f8-4e66-af3e-dff4bdfd2f7c",
        "cursor": {
          "ref": "75908d0f-f5c3-404f-b29d-f290e074ac8c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3e1ee4ff-de28-4dd3-9250-82b51c504b1b"
        },
        "item": {
          "id": "8cbbe493-e8f8-4e66-af3e-dff4bdfd2f7c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2267a1fe-0d57-4fd0-bdc6-467870811dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c2da2e-5b9a-44eb-aee5-e905f91345db",
        "cursor": {
          "ref": "4dbb6136-095a-470d-b48e-b10ed6fc60ac",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aab083df-bf3f-48dd-b2c2-7e2cf5a1b7d6"
        },
        "item": {
          "id": "90c2da2e-5b9a-44eb-aee5-e905f91345db",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6de09f0c-c0fc-40b7-912a-ad57dfb60dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c88807-5329-45ed-8dc5-98b624901e00",
        "cursor": {
          "ref": "0ef79193-90c6-4864-8430-4ef92499a90e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4b193d40-30a6-4e80-b6e4-9fca8a36a3dc"
        },
        "item": {
          "id": "38c88807-5329-45ed-8dc5-98b624901e00",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "792b7664-c918-479d-b8c8-fcb83a248cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2645db4f-bbe9-439e-bf05-15bfdfb4f7ec",
        "cursor": {
          "ref": "e86f3581-4589-46d2-b696-3978543e64ed",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8a5efb13-f941-436d-9ec0-92fd300447cf"
        },
        "item": {
          "id": "2645db4f-bbe9-439e-bf05-15bfdfb4f7ec",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c6134b03-9e78-42da-a86d-fbcf11df41ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e67e786-f02f-4348-b0bb-36c5761f6521",
        "cursor": {
          "ref": "2dd0ba79-37f9-4f04-b0c0-dd2ebfcc3678",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4f939f41-1348-47e9-8fc6-31c39a396be3"
        },
        "item": {
          "id": "0e67e786-f02f-4348-b0bb-36c5761f6521",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "66e6a58c-4ee3-442b-a28c-f92595915b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041b9d03-6a7e-4da2-88bf-902fc2a985cc",
        "cursor": {
          "ref": "7f7bb4f1-0808-4d0e-a263-69ca988067c5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c5717a1b-af70-4912-bf44-a38a43ec6694"
        },
        "item": {
          "id": "041b9d03-6a7e-4da2-88bf-902fc2a985cc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf7912c6-c596-4c45-bf80-81b97f24e4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359fff1-58c7-40a7-bc24-ed873b839c25",
        "cursor": {
          "ref": "7ca8e1c6-9a79-4f53-94cc-b3e3a6dd4cfc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dc17ac59-26f1-472d-9992-5b89d1f58d7b"
        },
        "item": {
          "id": "7359fff1-58c7-40a7-bc24-ed873b839c25",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6cf5588e-65ee-4009-b32b-c35d001fe160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df11104-4f1f-4e81-a669-695294ae920b",
        "cursor": {
          "ref": "dc118957-8b97-4c4f-a479-a023e1e06737",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ad04c148-442d-4c2f-9a7c-a8fca18c480d"
        },
        "item": {
          "id": "6df11104-4f1f-4e81-a669-695294ae920b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "73ef78da-2c28-465d-a802-fcb8e6879647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ade653-a77c-48df-b98b-545200cb215c",
        "cursor": {
          "ref": "f5a7ac84-ae4e-4b31-80d9-96040fc2fab8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c21870ea-e47f-4cac-b17d-f7d1c3d4b6b7"
        },
        "item": {
          "id": "64ade653-a77c-48df-b98b-545200cb215c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5c49f829-234c-4c24-b015-dcd6c9f90aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fcc288-aa71-4184-9f53-7969aadf0ea8",
        "cursor": {
          "ref": "234ef0ee-b147-4350-93f6-fbae6da912d0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "86729f56-36be-42e0-943f-c3b54ecc79d9"
        },
        "item": {
          "id": "69fcc288-aa71-4184-9f53-7969aadf0ea8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "33c1a789-d2d5-4c04-9dac-16b966d5b59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57452a65-b9d7-45ff-a249-fe66e9edaa8f",
        "cursor": {
          "ref": "b3db8842-e87d-4203-ab9c-9fb7281f4b81",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "90eaf886-21f0-4b19-823a-f5fafe98ab0d"
        },
        "item": {
          "id": "57452a65-b9d7-45ff-a249-fe66e9edaa8f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "098879ae-44e8-4f8b-b32b-cdfb6dd5468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29977242-583f-43ad-b4f7-ad55b2685214",
        "cursor": {
          "ref": "e79cd162-e29e-44c0-89ff-926c8890c2b5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7bc37676-5d86-43a5-bbe1-b7f82be84b3b"
        },
        "item": {
          "id": "29977242-583f-43ad-b4f7-ad55b2685214",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a2f6b7bd-fd25-4576-88b1-962747314cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47ab0cf-de5f-4048-827c-6e6753175820",
        "cursor": {
          "ref": "028c2ff7-6812-40d0-8baa-4e4714829b32",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ff213c96-eadd-4fda-852e-6a90e23e06dd"
        },
        "item": {
          "id": "f47ab0cf-de5f-4048-827c-6e6753175820",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "33336eb9-844f-45fd-899c-6a47ffc7c5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1bb199-25a9-417a-85b9-989e671e787f",
        "cursor": {
          "ref": "3715e1af-7bdd-4388-b076-c51b33876c11",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8ed6a0ec-4efe-47ef-9df2-2bb142d4ee96"
        },
        "item": {
          "id": "de1bb199-25a9-417a-85b9-989e671e787f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "76bad90a-c26b-41c8-809f-972c95a3506b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9b420-39a9-4b0d-8f43-3ef62db7a7e4",
        "cursor": {
          "ref": "06b56168-b314-4405-a381-fd3170f362be",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1aeab8a4-d7e5-4124-a565-1f3eed652ad2"
        },
        "item": {
          "id": "d2e9b420-39a9-4b0d-8f43-3ef62db7a7e4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4815375-3125-444b-8e6c-da1959797d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027633ad-84a0-46ab-a4ef-3b1f266e306c",
        "cursor": {
          "ref": "d20f1463-11ea-41e7-a7f4-cabcdf623214",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "97cfb529-f900-40d0-9be6-1494457844a7"
        },
        "item": {
          "id": "027633ad-84a0-46ab-a4ef-3b1f266e306c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1cf3665a-d5e4-44ad-bd3d-d1e6a7a0a1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16600f9-14e2-45e6-a172-48f22777eea7",
        "cursor": {
          "ref": "c7e74e14-71f0-4c61-abcf-704675e28666",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7314d81a-77aa-4c0c-b905-ff42d18bd24a"
        },
        "item": {
          "id": "b16600f9-14e2-45e6-a172-48f22777eea7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5448f6be-4ab2-45e9-b21f-e6e7fc0c6f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17cd572-800a-4dc8-92cd-e3498fcb6482",
        "cursor": {
          "ref": "1006547f-e8d4-462b-80df-b17a252ec7e7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d9e34437-7b7f-486d-9acb-d481b143c901"
        },
        "item": {
          "id": "b17cd572-800a-4dc8-92cd-e3498fcb6482",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd79f703-3733-41a7-96d7-d344527fac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3018b7e5-9052-4088-8534-6599111d4db9",
        "cursor": {
          "ref": "6df85904-f791-4375-a6e4-1fd8e5a30cfd",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "373fd535-0f35-4338-ba11-d2dfaf16b720"
        },
        "item": {
          "id": "3018b7e5-9052-4088-8534-6599111d4db9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cc914056-40a6-45a3-aee7-1b8e574ca8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b1511-b8e3-4218-9b5a-c94ff4ce52a0",
        "cursor": {
          "ref": "36329e5e-2dcc-426d-b84e-d136ae82f733",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b2284c3-8123-411f-9cdb-1e0fa26e9cde"
        },
        "item": {
          "id": "cc0b1511-b8e3-4218-9b5a-c94ff4ce52a0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d2564f94-ccff-4032-a612-b1bbaba14443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4264b947-5224-4914-8927-7379c13adf93",
        "cursor": {
          "ref": "bf15a713-f756-4816-91a5-a4f093d9738f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "16752c97-ce7b-45da-8405-77e7752b4951"
        },
        "item": {
          "id": "4264b947-5224-4914-8927-7379c13adf93",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e86abfa5-d95b-4192-a3bb-fac2bbb35d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e294a-9c83-4dda-bcca-12243a997749",
        "cursor": {
          "ref": "9418c88f-0637-45b9-a583-21bbbfe74d58",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe305f34-ea24-43f2-ab23-60afd0fec6d3"
        },
        "item": {
          "id": "a48e294a-9c83-4dda-bcca-12243a997749",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3840b57f-a443-4a11-a13a-20daf31176db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74988855-240f-4391-b779-19ec4023352f",
        "cursor": {
          "ref": "268d3fca-d270-4ea2-9f5f-a8491ff16fa2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f524527a-6e7b-499a-a460-5707d0470b07"
        },
        "item": {
          "id": "74988855-240f-4391-b779-19ec4023352f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cba28775-fa57-4a44-918d-6473b0d613b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af22c3-8d15-47dc-9270-82d7ec58517e",
        "cursor": {
          "ref": "d3e5628f-5b2b-4ef2-a1b3-db86f1a58019",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0fc2cd67-2154-41c7-9484-3077b65025ff"
        },
        "item": {
          "id": "e0af22c3-8d15-47dc-9270-82d7ec58517e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d8cd25bc-a2ea-41eb-8acd-fb9c6dfa1178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04231316-0e31-4b6d-9797-2a5a90cbd978",
        "cursor": {
          "ref": "d4659e0b-8da9-4a60-8c80-1f484f1c42a2",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "787c0625-268e-4fdf-92ed-adc45c4df83c"
        },
        "item": {
          "id": "04231316-0e31-4b6d-9797-2a5a90cbd978",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4b2dbe6c-b34e-40c2-8ed1-7e70553be67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7c680e-3dbb-45a4-92f6-a69676c584c2",
        "cursor": {
          "ref": "f0f58c26-dcc6-455d-8c71-bd1d942ab869",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "30f50162-b2fb-415d-b4b6-0d06b637b505"
        },
        "item": {
          "id": "cd7c680e-3dbb-45a4-92f6-a69676c584c2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e01a1ce4-d5ca-42b6-9e7d-ce48dbfa8cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61832fca-549a-43f2-a59e-97142cb3aba5",
        "cursor": {
          "ref": "9df1d73a-e497-4daf-aab6-273360307401",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8aeec7e4-c747-4228-a4fb-3030c5a29b56"
        },
        "item": {
          "id": "61832fca-549a-43f2-a59e-97142cb3aba5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "53957f95-7fa6-4cb2-a73c-43febeffadc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d2b169-cbbe-4441-9bbd-dacb72d2253f",
        "cursor": {
          "ref": "d0c79417-e12d-45ae-b564-dc932db14d66",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "59d92a4d-31c8-4ced-9628-e161ea143f31"
        },
        "item": {
          "id": "80d2b169-cbbe-4441-9bbd-dacb72d2253f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cb58b9cf-9ce9-463b-be1b-f1b5a1a1de85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6d1703-7b15-48c7-980b-52e43a95b5e7",
        "cursor": {
          "ref": "66fd5909-884d-43d5-953c-de3ea4213be0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cf82da4f-4d5d-4f41-94b0-73276321cadd"
        },
        "item": {
          "id": "0a6d1703-7b15-48c7-980b-52e43a95b5e7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c885c6b7-b5ce-4865-9738-4e588f598fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d6d0a-f1d8-45fd-89a6-4d1f4e957858",
        "cursor": {
          "ref": "589e2cec-491c-4682-80b7-3f0f31f479bf",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c8dcd8d1-bf71-45fb-97ad-db0b42dbe56a"
        },
        "item": {
          "id": "090d6d0a-f1d8-45fd-89a6-4d1f4e957858",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c3859ed9-d7d8-43a5-be22-04c4ad77c844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7783fa-9b0f-4728-9952-61c45245c0a9",
        "cursor": {
          "ref": "74e6751b-f3d7-4e3a-8597-27382598a595",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9690f573-9833-4e3a-a38e-2735cffcee72"
        },
        "item": {
          "id": "7a7783fa-9b0f-4728-9952-61c45245c0a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "19638417-69d8-4564-9bd1-3e967670e34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac788a6d-deab-4c86-85e2-1b62642c65f5",
        "cursor": {
          "ref": "c669e006-764f-4eea-8e2a-0d83b75e8cf6",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dd315149-478f-4cc0-81df-f8ae152bbf04"
        },
        "item": {
          "id": "ac788a6d-deab-4c86-85e2-1b62642c65f5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "00d3549f-5eb6-4bf4-93f4-ca65213de9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ca72a0-851b-4ef3-8679-a1c1fca53146",
        "cursor": {
          "ref": "2f5ab0be-e6b6-4459-afd8-3e5fff67cd45",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fc2b1f96-e047-46fc-9374-de296de9939e"
        },
        "item": {
          "id": "29ca72a0-851b-4ef3-8679-a1c1fca53146",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ba543517-0fc2-4c4b-a935-70dc7667dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2082156-7427-43e1-aa1e-a5806e3bce6c",
        "cursor": {
          "ref": "69050edc-71a5-4c5d-88e8-7bde3ee3476c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df80aed7-69eb-4b98-bd30-ca3da8781b08"
        },
        "item": {
          "id": "a2082156-7427-43e1-aa1e-a5806e3bce6c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "01087503-90d6-4712-9718-51d76fa79f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45c8371-55dc-4937-ba86-6e4d3326bd80",
        "cursor": {
          "ref": "420f4c6c-c1c2-42b6-9672-2070244e3612",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3eb728ae-3861-4578-915e-64f191a50116"
        },
        "item": {
          "id": "a45c8371-55dc-4937-ba86-6e4d3326bd80",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4d5d7039-d53f-4063-9beb-837b7b7a326b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a731ba-1c5d-4567-91c1-69631b1a2ede",
        "cursor": {
          "ref": "d5c05c30-6e38-4029-b92d-f67af6b371d9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ab01eef1-3971-4e0e-b097-7efb097da773"
        },
        "item": {
          "id": "a5a731ba-1c5d-4567-91c1-69631b1a2ede",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "40c19abc-d577-450e-a46e-99668466d2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab73569-67ac-4688-9afb-edd01fd0be92",
        "cursor": {
          "ref": "dbe983f5-2bde-422a-918e-a9a559bdfb90",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d7a6c4bc-32d9-4329-b952-e41644872cef"
        },
        "item": {
          "id": "8ab73569-67ac-4688-9afb-edd01fd0be92",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5bf7582c-85ab-42d5-b682-6c3b08a9fa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882f6255-b053-4df2-8832-36a66ef40143",
        "cursor": {
          "ref": "4f8dd15b-bccc-40ad-bae9-0a8aea371f43",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f4f4907b-aec8-402e-a550-56e755af5239"
        },
        "item": {
          "id": "882f6255-b053-4df2-8832-36a66ef40143",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dead2363-1a92-4ac0-917d-5753f0d9f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311cd5bd-abeb-4434-955a-5bfefe2a50d9",
        "cursor": {
          "ref": "76c00ad0-4185-4aef-9e81-dec788c2058d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "32b4bc82-f0f1-4086-86c9-0e3c9a8e6792"
        },
        "item": {
          "id": "311cd5bd-abeb-4434-955a-5bfefe2a50d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fdd4882c-7030-43a0-aebc-d470defd944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7d948b-a03b-4daf-a911-6347cdc65094",
        "cursor": {
          "ref": "1d528b67-8bf2-455a-8edf-e06ed0a45568",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "730c766c-b609-48c7-a011-dd7e77f18c0e"
        },
        "item": {
          "id": "ad7d948b-a03b-4daf-a911-6347cdc65094",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "782a062a-221c-4558-8705-fc21dddf9268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb0d656-69d8-4780-b916-68b6e42b9a60",
        "cursor": {
          "ref": "b4b1073f-ac29-4a71-b1b1-a25c9445a06c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "be39d9cd-6957-43b1-a17b-dfd51125db59"
        },
        "item": {
          "id": "9bb0d656-69d8-4780-b916-68b6e42b9a60",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1dcff715-b76e-48fd-ac5f-34c9188a42cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa100837-7b91-48c0-83e4-f7c7ae82693f",
        "cursor": {
          "ref": "5ba8c48e-3133-4ea2-9c9b-23eb7d0f9165",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5ba4c5c8-5c30-4143-8989-003dc6976596"
        },
        "item": {
          "id": "fa100837-7b91-48c0-83e4-f7c7ae82693f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5238d327-8abd-4219-9ea8-6ed208d37dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576712a3-e1c4-49b7-9d9b-2d8e00e2a090",
        "cursor": {
          "ref": "4fbe43aa-a378-4eb7-8a26-4fc041832f62",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "055dc242-27f4-4e4f-9b04-83e58a65bd1d"
        },
        "item": {
          "id": "576712a3-e1c4-49b7-9d9b-2d8e00e2a090",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "465c4a57-35ee-432f-a477-39f6012b86dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7be33d-8a41-4a37-a1d9-fc3823d158d5",
        "cursor": {
          "ref": "d864431d-f166-437a-9aa6-ccb777828e29",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b67ecdc3-0891-4e99-bc2c-73fd3b0f8163"
        },
        "item": {
          "id": "ac7be33d-8a41-4a37-a1d9-fc3823d158d5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "94ceb1a4-ca24-4205-9f87-adee0efcae30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1d4af-735c-4c3b-a152-b220555b6ba2",
        "cursor": {
          "ref": "33f36bf4-d905-41ec-a309-5033b6c992a5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0dd5e2dd-ed54-4481-b530-ecab1555f6b0"
        },
        "item": {
          "id": "10c1d4af-735c-4c3b-a152-b220555b6ba2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1991e5d1-653b-4e5e-b811-09d9d0e11f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3204691-86de-40ce-8c25-302eb804008e",
        "cursor": {
          "ref": "380ecdfd-fdaa-400e-a00a-c41b2d0b491a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fa48c36b-0999-4870-a4b1-e731fea680fe"
        },
        "item": {
          "id": "f3204691-86de-40ce-8c25-302eb804008e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "14a33f77-34df-487e-adff-8f83f46d5e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f8ec1d-9663-486f-83dc-1fcb9b324987",
        "cursor": {
          "ref": "cb08988c-0d6c-480c-91c4-100a207ba263",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "adcc8a58-f629-4364-b231-84eb361fee21"
        },
        "item": {
          "id": "79f8ec1d-9663-486f-83dc-1fcb9b324987",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fec78417-3557-454d-b813-68185f4c905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fc5554-e113-446a-8d7c-06868290c538",
        "cursor": {
          "ref": "c190644a-e571-4c44-9580-a7922448dbb5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "05fcdb0e-4a0e-4514-b1e6-cb6bba338bfe"
        },
        "item": {
          "id": "80fc5554-e113-446a-8d7c-06868290c538",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3510acb0-86ce-40a8-bbf3-024efc4dab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506d21ff-c67a-41b6-bbe7-c55e032999a8",
        "cursor": {
          "ref": "a27e3b4e-1d0e-4a1c-9d3e-cecdd1dcc037",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a3489551-b2cf-45ea-b8aa-ed2159a7e662"
        },
        "item": {
          "id": "506d21ff-c67a-41b6-bbe7-c55e032999a8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0fac0d93-d707-499d-9ff1-f0e0bd37015c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c1479-c93c-460a-8c2f-ea7c2a27a4b4",
        "cursor": {
          "ref": "e8a7bb90-e842-41d8-a88a-7a669a4083d7",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c0807620-407e-48e0-b914-60e45b3a027b"
        },
        "item": {
          "id": "654c1479-c93c-460a-8c2f-ea7c2a27a4b4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dae673ea-02ab-4163-a4cb-66752e8b6ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b261c2-a86b-4a30-bec5-42837af3b534",
        "cursor": {
          "ref": "e4c8bf76-1a52-4468-93d7-65cedabad57b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0f07f366-827b-4005-af59-fb8468364cb4"
        },
        "item": {
          "id": "94b261c2-a86b-4a30-bec5-42837af3b534",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb8eb002-2a2c-48b4-be6d-05955715e29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0556d1da-e849-4e24-8ecb-0edda32dd5f1",
        "cursor": {
          "ref": "3172ba74-1c23-4c69-a2eb-f1f4d99f4bda",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cd18c4d1-4a6d-4d96-9f9c-51abe8c0bb42"
        },
        "item": {
          "id": "0556d1da-e849-4e24-8ecb-0edda32dd5f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fc40e8ab-2cea-4611-8ba6-7a6b0264b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119ce417-8ca9-4dce-a7e0-7134c314832b",
        "cursor": {
          "ref": "995c5fa1-eb7d-46e2-bd1b-d95b115fb280",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "08fb8d8a-3407-430a-a608-bc262e82cd0f"
        },
        "item": {
          "id": "119ce417-8ca9-4dce-a7e0-7134c314832b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2318d089-e948-4c3d-8ce8-4f2e1cb39d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62257ada-3dba-40a6-a74e-74665912803a",
        "cursor": {
          "ref": "1ef1fa20-170e-461e-b07d-b43b90375c85",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "aa97dc02-2a70-4bf9-ab6f-cf6859b2b294"
        },
        "item": {
          "id": "62257ada-3dba-40a6-a74e-74665912803a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b6686d38-33cd-4250-9311-ad1d3d4f96bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0bc770-580f-423f-acee-e474fc066be5",
        "cursor": {
          "ref": "58aa4d13-7dc8-4dbe-8cd8-42dbb1297b43",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b8a92aa1-df5b-4b25-96c9-be816fca982f"
        },
        "item": {
          "id": "cd0bc770-580f-423f-acee-e474fc066be5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "48b2410e-dc3d-485d-9a27-8f051edb422c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e171ebe1-8901-47b0-9849-99d3f8a6e5b1",
        "cursor": {
          "ref": "2ce1f8ad-681a-43a0-8ec2-ce85ff290644",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "23431192-2f4c-47b7-ae93-bce3292ead56"
        },
        "item": {
          "id": "e171ebe1-8901-47b0-9849-99d3f8a6e5b1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "536cfcf9-6efd-407d-a06a-a716befffe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4712c51-c878-47fa-87b0-0c57abdb1aa7",
        "cursor": {
          "ref": "59aae672-361c-435d-96c6-fc719b071ed9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "86e803c6-1947-4c5a-93a1-b9e6bdbaf87a"
        },
        "item": {
          "id": "c4712c51-c878-47fa-87b0-0c57abdb1aa7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bd0360be-21f6-41d8-b600-9c739af38b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb792e7-6874-4993-954f-7dececf9d010",
        "cursor": {
          "ref": "0756a0f2-7032-49cc-bcb1-b9366bad510e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8f84dbf4-765b-4d81-87e2-84fc51b885a8"
        },
        "item": {
          "id": "ccb792e7-6874-4993-954f-7dececf9d010",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "29fb055f-6d65-405d-bf8d-2aa6daccc023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5582b8f6-863d-4f5b-bd17-a19de3d42183",
        "cursor": {
          "ref": "72fc4452-0978-450f-9d21-006e55be5de2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c4449879-7b75-42f3-bd66-c9018fe55d85"
        },
        "item": {
          "id": "5582b8f6-863d-4f5b-bd17-a19de3d42183",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c4edd3e3-abac-4cbc-ab3f-8f719cbb706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784b59b5-1451-4304-9b80-fd528192b00b",
        "cursor": {
          "ref": "6fdbfc74-c13f-4ee5-89a8-2bcc0b27e5c8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "11b28f9a-b62d-46c1-b0fe-c3535264d42c"
        },
        "item": {
          "id": "784b59b5-1451-4304-9b80-fd528192b00b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87bae573-ce65-407e-95a3-324763eef923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1514fd-7c6c-4561-9c6e-f8ab888529a5",
        "cursor": {
          "ref": "9fac2665-4c19-4d12-a0c9-fa8e46f64143",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ca1f0ef5-5a04-400c-9103-5bcdc393fca6"
        },
        "item": {
          "id": "db1514fd-7c6c-4561-9c6e-f8ab888529a5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1addd65e-990c-43bd-bb22-de5159586728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5015185-9a90-4f08-bc3e-72fd79418f50",
        "cursor": {
          "ref": "20485b52-7ebf-4102-afdb-eed6e2fc3302",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2542b3a1-e7f9-4dd8-b949-f37644f0be90"
        },
        "item": {
          "id": "a5015185-9a90-4f08-bc3e-72fd79418f50",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e9386664-f06e-46d2-b586-3667c375ff8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc8ebe6-f5ce-4476-940f-3182fd2484ad",
        "cursor": {
          "ref": "84dc8c10-9877-4493-9303-a4ed01f2fa78",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c10e4024-fb63-48ef-b257-1fe5d4326574"
        },
        "item": {
          "id": "edc8ebe6-f5ce-4476-940f-3182fd2484ad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e7fa2969-42e5-4450-a717-1add31467670",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "da379710-1a0a-4780-99b6-6bd7f8ffa7fa",
        "cursor": {
          "ref": "9b45a1bc-94c7-4676-8d15-3a8184b4014d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "edcb7463-d732-4e76-bfa4-abf2b04748ec"
        },
        "item": {
          "id": "da379710-1a0a-4780-99b6-6bd7f8ffa7fa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0a9cf59d-05fa-4d40-9ce6-5796569ad240",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed8b273-dac9-4be2-afa6-1d244f4e1579",
        "cursor": {
          "ref": "ef30547f-7711-4844-b31f-b9d4a774155b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b8e11fc7-f3eb-4be7-bb14-e0f70bf65f09"
        },
        "item": {
          "id": "0ed8b273-dac9-4be2-afa6-1d244f4e1579",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b23418c3-c9f6-48f5-8a72-c40c369056e2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e204ce3-2069-4665-a057-f8abcc9c1b2a",
        "cursor": {
          "ref": "16d44259-4565-4c9a-a684-6e2d20d42a1c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5a69be50-8637-4a71-b392-ae651a918871"
        },
        "item": {
          "id": "3e204ce3-2069-4665-a057-f8abcc9c1b2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14a35d1a-7b92-4e14-848c-c84c5eddbf5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e204ce3-2069-4665-a057-f8abcc9c1b2a",
        "cursor": {
          "ref": "16d44259-4565-4c9a-a684-6e2d20d42a1c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5a69be50-8637-4a71-b392-ae651a918871"
        },
        "item": {
          "id": "3e204ce3-2069-4665-a057-f8abcc9c1b2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14a35d1a-7b92-4e14-848c-c84c5eddbf5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a0aaa4-4a64-465b-b6bd-cf2d0561a2a4",
        "cursor": {
          "ref": "2648cf8d-00ac-43a4-b2b2-2eac30699e1a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a229f7ab-c475-4968-a170-2913773a39e8"
        },
        "item": {
          "id": "a4a0aaa4-4a64-465b-b6bd-cf2d0561a2a4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "253d33f2-26cd-4e3f-9146-68f91c0906df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dcca2b-6bd4-4531-9f80-e608d9461bc0",
        "cursor": {
          "ref": "23c219e0-f7dd-4c5d-9bd3-6c9a48dcca68",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f6c3c164-d127-4601-a583-8e88c56e49d3"
        },
        "item": {
          "id": "77dcca2b-6bd4-4531-9f80-e608d9461bc0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95ebc38f-a5b0-4f1d-86c4-a3a152dac635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}