{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4b6b378f-49b7-4623-bb9d-b59a453dbe5c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a809845-e47c-41af-902d-423c832b65f8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aee7f172-6dae-4f95-bec7-223ecb705b04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "364933c4-0379-4e75-bbfa-270fcab52c99"
                }
              }
            ]
          },
          {
            "id": "c40609b9-b99f-4a2f-b537-92f298670e1a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2fe958b-0e9c-4848-9677-03ddd13eca39",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4598f1f7-91c8-4ff4-9014-994eceeeceac"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "99dd9671-d6c3-47b1-b517-7d74373596d7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0189dca3-d5a8-4afe-8d95-86e43f0884fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acaab25b-d4c9-4ae7-908e-05955ee33760",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "029f7e3a-5845-485a-9d45-d5e6aea2684d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96363fdf-1a56-4812-acbd-d10e5b2981ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37ffbb86-e2ac-4f43-abd9-4db3ee284760",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "604db001-609a-4eeb-ba2d-b795b8deec03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "583ef9e3-30af-4eb6-9571-31d364179080",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "385490df-3583-4915-b8a6-2a33d471d53e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4b10404-c414-4685-8741-0415e4e817be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "336dfa30-856b-424a-b002-ea866bf5f806"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c9d3bbb-3aa6-4d01-863d-f8109f373bfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ed146d3-1725-4e45-8dbb-3ff67dcbf203"
            }
          }
        ]
      },
      {
        "id": "58b34a8f-b7eb-48a0-a9bb-550842a7eb3e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35785125-bca7-40da-90b2-6781be108bde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75b7e5e5-388d-48c1-a6cd-c98fa8f53e40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8611e385-d75a-4c76-b136-1aeeca491028",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bec403f-a714-47fb-b63e-15e92763e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bbe3114-51da-4143-86bb-47be6363bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937c0a39-ace1-4cd9-b291-6a29b142a50c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373fc84e-2969-4a24-b4d7-98d56c4d3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a80d7139-2014-40c0-a429-7bcca6c59de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47943e13-1d33-48a2-a4d1-8d927814257b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31427d81-da4c-43bd-a4f1-8faa4e380ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "995b86be-3e2c-47f9-b87c-4f1a7c012557"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8627cb3-3086-4ef2-b08a-d9964b1ba992",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfe22c7a-9aaa-48dd-85b1-0667c382e3cd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bac98d5-dbbe-42b1-ac53-b9a3f3155cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1a6e09e-82af-44f8-b771-a9020f5cb6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309ea395-011a-4870-973f-92b932919d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d8840-b328-42cd-8d3d-500f27d3bb7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39a6755b-2e0d-4adf-a2d8-6a2c8d26f832",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18271322-d066-46e1-8ab4-60663eafc625",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7518ba6-07bd-4fa8-91c0-36451a43e263",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e33e6e4d-a1fc-4209-9402-ea692d5e1b23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "506f66c7-a010-4c8f-9e1d-05580854c28d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1369f167-dca5-45c6-a311-6033a49441c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1296285-b987-4c41-95e3-16fc7da6ebb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1dc6d36-2894-4e27-856b-a1253aab845a"
            }
          }
        ]
      },
      {
        "id": "7e66f2c4-8769-43d1-81b3-16ee3e985290",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aaae69b9-1a16-434c-9aa5-602fdf942408",
            "name": "Negative Testing",
            "item": [
              {
                "id": "532de626-865b-4f59-a503-5182843d765d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8211bb36-54c2-4c1c-957e-9e0ca421bfef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c71a9-18bd-4de9-a1c8-6753d8089a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c24f9-23d5-4926-8300-edfef2c727f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4769e3c2-8dc7-4b4c-a0a6-0a2cb39babcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a04960-7f9e-4fa0-b8f9-84f1e60015ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8e32e5-6c89-4dea-a46a-e3c43be3b65d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94b7345-887c-4edd-8b6b-81efa97d005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f01c4d-0377-4fe9-9963-034d34b293f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0230ce5e-85c1-45ef-8214-f015f1f98cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6788840-fb83-4fa6-8017-08e3f769617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127f2e2f-0a74-450e-b042-c53dbdfeb0f0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd14581a-2598-4b90-ba93-ef4f52ce66f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a021dacc-52cc-4b04-a75a-ec67856ea835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7588fb-1871-4997-9a91-6d58fd20c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1502a8f2-f5a2-40af-8d03-7f9f71b67538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb59c9-723b-4a15-b5b8-27da57bc41ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8a0713-22d8-4931-b023-83940deb512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbde0c53-6fa6-4ebb-af4d-5b97aad6497b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ba54d-9201-4c11-a3c2-7f6f91a64698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "662e0a83-219c-4f9b-9973-aa1d11af8d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d158db9-c564-40da-98d3-75f48400705a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93bfec2-e0c8-4ec6-844c-99e6810515b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b52672c-fe0b-47c6-a201-44258934db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6fbe70-e677-4d08-9cf8-966e87c6a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52652433-a042-40c6-85f2-086f777f1554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfc3950-df8e-4485-8775-aeb7ac5d2285",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e0df09-126d-494a-b97f-f52738877f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73078fdf-606e-4874-b62c-36da4196ef20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81637d74-06ae-43f5-ba12-6de0b8e89f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a5d9d96-d256-4129-91d8-e111669348c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0c6ae0-106f-4b8b-aade-587ef5e675fb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a938ce44-ab7a-427d-830e-73d7d63ea20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bea172-8626-4249-9a02-426099a7fb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f72e24b-02e9-406a-8ff5-c77076fc4003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588cdb97-847a-4f77-a714-0a76a22323ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fc90ff-7d03-431c-87b1-7c6ed28b4d2b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dea2df-91f0-4296-9ee9-00d978a8b311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f0689a-fef8-4f46-8688-f179e6c74505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ad5ad-d908-4dcb-bf45-484d6fd0e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f74a65f7-572c-44fc-8b74-f297a878f081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa83ec-3cd6-4876-ac7a-cebc1759877d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7914d801-f95a-4d32-a63e-8bfb1b62cade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cbc028-99db-4def-ac75-2ae34af8eb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d49c5f-6c49-4ae6-89d6-92a2599bdb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab43a56f-3fec-4ca6-8b1c-020b2934ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f7fb83-2900-4b5c-bad0-a7eb18e1bdcd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a09a0a-143f-4e22-a108-0f0b5c8f9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf8a9dd-e823-4673-ab96-183f6af39f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12df691-cf93-4acd-b24b-a928c9a5f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f334e901-2ee0-4833-81e4-3d9c9b089f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414ea867-738c-4963-9125-718f6ec82025",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43247e-3e14-45fb-a213-50f58af75df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ffd9e7-b9d2-4100-a219-430a05994b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8648ed20-6b9b-4480-b31e-fbfed30c620e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "222e7742-d0c0-40f0-bae5-7367fe353c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821b6af-5f9f-473e-ad5a-372aab2ea008",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db70ed-f970-44ca-9867-b925ce0fee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6875ab6-3e9c-4257-9e4b-dc20bd743c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7a1403-d062-4f8c-96d0-0741d41a56d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a24371d-abee-45db-a77a-49a33281fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec45baa0-45ad-4786-8aed-ae71297be859",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eed89d-9584-4354-b69a-890022317ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1089edb-6ab1-410b-b55a-6218d7a8b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91766bcc-0d77-4156-9a9d-341490c12402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e16aa1c-9f4c-478c-bf6a-b2ec651eca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2443e926-05e5-477e-aa8e-46eec434c3ac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a280a4f1-e4a9-409c-b0b4-aa0213af5218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a24cf-0f7f-42f5-b1ed-ed18e39d5aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2661228-22d8-40d6-8b70-e9db9b07a66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54d38a94-6f7c-45a8-934a-c2685ae98aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8189df-8b6f-48fb-bb75-71701c91bab8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02ecfe0-8436-4a0d-904c-0a4bef518910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a70b9b3-c364-43d7-aed1-e9f494508597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8783e5d9-fa58-4339-9eaf-bea9110d9c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e7bb9a2-9e39-463b-b266-db5a6c1a10a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862e3184-907f-4b16-8c64-e6af416279cb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b94e4ca-0495-448a-a097-900b816179a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6dd7b4-41bf-4a75-aebf-d3cf457dec1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6675cca-8813-4c06-b7c7-e41073d8e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee88ffbb-ca62-4831-97af-50f42e2009c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a317f3-dc71-4d4c-ac40-7e8523578130",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf8302f-c6c6-45fd-8f35-e77e7c57edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82b36e1-564d-483f-8a92-be3e84a6c8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4860b5f7-6cc7-4a50-8863-d6f0e37233c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "983739f7-b3c6-45a4-b52b-0383564d641c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e56465-8aa5-46ec-bbee-129c5296b427",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9540152f-13e8-459e-83cb-6b210ebdce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8876d9a-32e3-4acf-a753-3b37e9f2e18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2560ee97-c45f-408f-bd2d-ac939b0d4432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec9050f-efc6-40bd-901b-5ffdbed84279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051d1ab3-5475-4806-9b99-45e4fbc0977f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ac0388-0061-41c1-85f4-e7172da95754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424c3b1a-eae2-49c6-991c-182f04b6464e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668ec43-b62c-4063-b98f-995109828db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f2af8c-abac-4c07-a7cf-eb2f9f604f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0b2a5-f42e-421c-b59b-d03d9b057ce2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1bb02-7739-4ff8-a458-994296d4f493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973d81d6-0271-4c81-8508-8b7081c21842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba985372-74df-4094-92dc-d898abfc8212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1567e6-21b6-40b5-bb59-8058a3e8aa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d1d9e-7493-470e-a942-1a0f4ea44060",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565be6d3-26b3-42ae-9318-96318f50fdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaa96dc-4b19-4220-b054-b186ae272038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc59d170-bf64-4a31-bc62-5aa584eab9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33efadb-9e65-4ec2-b18e-b1d30f15a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78c4443-7e3d-4467-aabf-8b6d2e3cb40a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d0804d-f7e8-4349-b667-f4df932e4dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc868fe-7b69-4aa1-ac43-3c760b3f0006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f206f-bea3-4206-a9e6-a01cd07a9374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c4be7-64a2-42f7-a3e8-fdbc86c38bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc18b59d-b391-456d-ad8e-e644adf8e291",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8cfce5-cde8-487b-a9bc-28427296f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef37c5e-d5fa-418c-9df3-af79918de460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f5de81-5c9c-48c8-a851-9ac08e4310b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bda96a33-9cca-4322-84ae-3d6d4b7353b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c6a3c8-1ff3-4d19-a1d5-24d893bc5877",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703e6a02-3010-4a46-b1ce-95d872766ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6426c0e0-87ba-4a0c-9e86-f49ea8b5a654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5b3217-1432-44fc-a2fc-a8d69a86fd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c384fb-a2cb-45d8-b060-aeac30083133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d998de-a66b-44fd-9396-75a8f28de3c4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de346548-bd16-42c4-b257-577189be9b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89370e32-6e21-4e24-8f8d-5f3615b7b74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9321388-c977-48f0-9d21-bb7bfc67e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef01dbc-d4f6-426c-b321-a0a042d00210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e0180c-2b68-40c2-97a7-e0379ec6f465",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3539b59e-890f-4304-a8f2-9066b420d622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4acb4e-85c1-4168-b06f-3b46da1f6d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d313785-c000-480a-acca-072496124c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "144e088f-17b9-4470-8257-19bfdbd0065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b90c4f-e286-4625-8a02-30af83117a09",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a25189-27ed-4bc3-b7d2-d5eb8301a32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51ac929-3226-4d9b-a62a-166373b4c1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c00ea0-81bc-4036-ac30-c8fba21fc92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf57bb6-5429-4ed8-8389-fc76d6852506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad851af4-b4fa-4bd8-b162-97ebdafc3a65",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2b24c7-7b23-4cca-93a1-6a1b0951855a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0be13e6-9458-4cd3-bb69-8b65f3ef7a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb5d74f-b6d2-4506-90f2-a64e2bbc88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ffa901-4290-494a-9b05-0e3838c081c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98618e53-e328-4e9e-b7a5-5dfeb1da31fb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37326103-aaa2-43e0-a17d-5df3e551b873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769d3a2f-1a09-4466-9da4-58cb7a9c502d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f259280-ddb2-45b2-aafc-7255fb39b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5c2846-4298-4909-bec9-b3f73248c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04904f7b-517b-4d98-a6d3-b98b2e2abcaf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdd8262-b9e9-4746-abb0-85db40feeb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f28f2f8-4399-4c9c-848d-47a6723e3712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be159c92-8a75-496b-a29b-10ecba1f8e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b647fd-7a8a-4caa-95ad-922b4e882f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07e199d-90ed-4380-9f1f-c7fd50a66bc6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d4598-be1d-4482-9a06-59c3f5e3decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a810f1-5d6e-4960-bdd6-14c59de2b664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3583f6-78b8-4109-8c14-e90579b796d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8957c8f9-6f30-49e2-b98f-e7726d165742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baa7144-bef4-4ea6-8299-7e07820b3334",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a2bf84-d0a1-4b0a-939f-ecc9421d6a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23fbd94-e616-4662-a8ea-35795d51652f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b269a2-6709-47a9-b0fd-1e0ecd629070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c737caf8-dd12-4104-8de1-df69bef3c963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb1e26-1250-42a1-89f5-39dddb0438e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2484f88f-745e-46d9-84f1-9ff069cdbaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9ded42-93a1-41a2-bf5c-bafda63dd037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df34f4a5-1f95-4195-80d2-6180ab6da83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0b433b-f4bc-4882-ac83-a739c8d7f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a853d2-107c-4139-a489-a835c092ae0a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b3ff5a-f54c-4a59-ad57-a81868f0d541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e26192-4424-4d68-8534-97dd33244d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533a19f8-6fc3-46d1-b752-3984cdf5b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1aef8c9-636a-4e24-8366-335e678f94b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac4dfd-9015-4420-8aa3-81774648a0b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901a04f-ccca-4b0b-90af-4c3cdd6677f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f86d54-26dc-4592-84c7-38d30ff1a024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d821dd1-72f1-433e-b8e7-c356b0ae67d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b18c1051-6547-4ddf-b153-8ad20d367cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15bf638-d328-4715-bb09-5db3c0dc9b46",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834a05e3-9784-4426-b1e2-38764658865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68599319-2ac1-44af-b739-e7832081c766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3301323-a56e-4e77-ab30-09151afa4965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbb048d-678f-4760-814a-de62c4e421ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74481b0e-3aa3-45af-95ec-904d952afeee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ffbb7f-a105-4f90-8eb4-ee02afcde20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc441fe-c6ec-47ad-9744-19e535980a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbfb593-6bea-4b39-8d9d-2918c00a6faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9becc52e-aa52-4411-bc7d-0a3ade23ddcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e3169-18f5-47fc-b6b8-b88985818c3b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74b8533-8f0f-46e5-ae85-81380bbf1d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fb5e6c-d653-4455-b676-2c7202a8c9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a140d5-afe6-4e21-a9ae-735afd770065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce8d4bd-f971-4ff3-b70f-830ff3a3eb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dfec9a-71ca-4e22-aa51-98281769020f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a2366-cf85-49d7-a403-6ee6c92bf63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b921f00c-160c-42b7-9572-88017a6117cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b838c3-293b-48ac-a136-48e3c9fca9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a287afab-f74b-4c0c-afca-6d47e4260611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a947d025-b976-4b10-b3ec-8364ee9df2c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b74879b-dd29-4ac9-8c1b-ccf621481592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8354975-5181-4416-9648-7569926c6ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930087b-4397-4ce9-afff-a240c1cc25ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d25700e8-f0a6-4057-a8e3-f3b231452f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3fa52d-3c46-47da-a481-ef4aa2f623f2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4616da-0655-4f7d-ac12-63dd5f216550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2695308-06ae-4ae2-9015-465bde91f706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bd6156-0fd9-4d7e-9bcb-447d0d6506a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd97393-bdb9-4135-a034-f0a9b67379c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a289afad-d732-4460-a09b-78310f2730c4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c8ca4a-83b1-4fe7-81a2-e1eecaccb466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c012cd0b-493d-4d75-8fda-4d15d4abbbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a3243d-fcbc-4dc0-bfb2-99b105952345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fee32fb1-0e10-470c-8e15-656572abc8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fcf937-159f-4d33-ac25-729305024318",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c5dda2-6c17-4876-aebe-dc25cfe14f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc5a689-fe5a-4f61-8ae0-2678c0819c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b372e6-ec6a-498b-94d0-6f210335882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "672efd07-9dd0-49fa-89a2-62d1c97367b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2842539-f845-405a-be8c-8d833e6dacb8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a595703-79bc-49d6-b5a9-6da6bdf35d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809b62c7-34a3-40e8-b547-526d97c47ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe65ba6-2ddf-4736-8449-ee53547c151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f2635a-798b-4b8c-bb78-72a6e2aa2b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e863b8-9618-4598-a2ac-be7586c0e41e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63e1330-b520-411d-8572-b4141443cd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486b86a1-f359-4343-b46c-dc7459607ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703a9654-d232-4ce7-9ad6-5328ed3a9fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3a965a-a67e-4c1f-89de-515ff502b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49213cb-5d66-4519-a2ca-572ed7d13149",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1329c2cf-6de7-426e-ba40-d9e90096ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8fe69f-89cb-401d-916d-5879605b1e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f2ecee-9ea3-4ffa-b6ae-b0b8f6e8aa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9dead4-e77a-4f77-be6e-df8f9a131c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e289cf-c102-4f22-80d5-3e554285087c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b190c8dd-3d38-40e0-a982-9cad432fd03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac78649-d85e-4222-9b62-e536639f0edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a576d22c-bc23-4a3a-a0ce-8bed061ff766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df1fdce4-b177-409c-b00f-84554a1b3551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b142dad-3bdb-4554-b657-40757159f46f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d681fa-bfd8-4541-a40d-e6f5636cf375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16da397-7e02-4f88-b2f6-b31d43722353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b6b887-8f95-4483-aa25-8898ce29c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10a2dfb-49aa-4ee6-aafc-8182406c8771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7045841-2f61-46eb-bce9-3e9f2df1369e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2041a8f-90df-46cc-ba23-de912ae1be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc5abad-b2f8-4340-a52c-1ebe944ff330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133eed8-ca16-4a09-87e6-1aafc7182a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e4f1a9-76f8-4450-a647-703d3ea8740d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3539daa9-b552-4d5c-a0df-c050a81f6516",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fde2f-8f8a-4d74-af6b-e513d14a336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7da42d-93bd-4af6-aa4c-291a18c8ee18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eb8581-0a83-445b-a7d4-8a6fda224ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4435ae23-3fb4-4919-ad0a-5445d00f1221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c09648-d798-49af-826f-3a250dbffb6d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0902c38-4fb8-409e-b6ee-3a308edc903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd5cfc3-b8a1-45c5-b5c9-4e560636a5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b5a8d1-d318-4b06-a5c4-5886597ab16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf67c70-ab07-4843-bf98-6c57c61d57c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3cf7d5-fd55-4ab6-a367-22dc57d52064",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30610c80-aa4b-459c-8e70-457f7b44a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8c463e-c97d-4067-a7de-5211840e6624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30975f27-b8c1-484a-9328-af53b044d1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "226ea32e-d7f6-40d7-9b9f-7f4e3cf0d87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83500e67-1aa9-4cbf-bffe-60fd3f07dd74",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814c45cc-35e0-48ac-8dca-79e0c6a2f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e49debe-56c1-4329-bd95-575909212f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e46b7-cebd-4f85-94c1-f6d101762d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d66c129-f9b9-433f-9e8e-241c1615506f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b190a4d0-7062-4f8d-9d5c-74756438e1f5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd22fe47-f908-4027-9c6c-859b75848538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70486e0e-34ab-4acd-9af9-1d26dff595d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52588da1-056f-466f-a041-dae6ea394af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75390ff-7d63-46a4-b6bf-bd15dac5fb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a627d4-13d1-4120-be2f-cb98a118f15b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128980f2-206c-4469-b00d-e5921183cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d64aa7d-0f1f-4e2a-abb1-8f0dddd8ce4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6446c2d3-7763-4e3e-afb6-a6de449f1f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace7f532-51be-40cc-b2f7-ff1f57349843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51ce632-2cb1-4ca9-9483-9b457def9310",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ea24f5-09b6-44fc-a97f-18b4427c588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1acfcc-7c15-4509-8a9a-fc6b912398f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a04a25a-af68-47d5-b949-1d99ec6ee3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb6ec58-824e-4da9-aafb-2b7f29d97bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8461e6c6-21e1-4c54-a128-da6a293d6eef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e44be6-a39e-4774-b510-3d4749f4fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44151b98-bf12-405b-9f4b-7cabe3c204f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d411ba-e197-4a7d-8037-1f1acee44087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f068e4ab-73b8-484f-bf6e-98968470861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94481d53-362e-4ee2-9803-523e2c0d30d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7f11ce-f966-44b7-8700-6f6150bb5a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f2833f-6340-4bf9-a356-4dd7f8017b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b4a57f-e6f9-4215-b627-94d4d8f47743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1b366d-357d-489d-b107-e8968ce4a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99c4c53-9a4e-4823-b1f0-5ea6248f4bb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3410825-fe4a-41ee-a551-beaccbca983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addf2f89-a1b7-443a-92b8-0313051deebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c067c874-a8bb-46c5-b9a6-69142cb3fa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32715de5-a727-4e30-80cf-101b4eee3556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e913c64-4a1e-4e22-95f6-e625d21d9402",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1076a344-52cd-4824-81f8-29140f7609fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516134bc-8f33-4556-882e-45f67e5ec0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3042a55e-fb08-4414-bf89-b71e4e69564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7c974b-66cd-41bb-adde-c330e7a08e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98541ad-6924-4bc3-96e3-f3b3f5677e2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a883f9-4875-47f0-9a02-9f3d8ef7f99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2ba4d9-9e09-43ab-a540-d6ab7663dc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20937211-9759-4f25-ae65-90319d559e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e715d1ab-e514-49c4-8728-653c379e492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f215dc9c-7b7c-4478-86b6-5ff2610febc4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb34843-1955-43c9-af62-6e07729809c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4609dc59-712d-4846-a76d-26c77b47bd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa398ce7-63b2-4232-ac5d-2659f4625ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6889f8-d5de-4d6a-9a65-94cd72fb3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b316698-9a1a-4cd4-af3f-e816c3bedc2e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22cdea3-1bba-419a-b971-6a9184d8ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab64df60-c439-422b-8335-1af9ab2beb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af0474-8c29-487c-acaf-7ee43b60ba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1652ce8-8b8f-4056-8a83-6058c20aa926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ea5e24-c6e8-4070-a6ea-03ca72b1df0d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d6625d-8b43-4948-8dcc-fbcce1cca478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ebc464-5778-4070-808e-7becf28585cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb90e3f-3c8e-45fe-85c0-72d212707099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94188cb6-cca4-4161-abd7-d22886078cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9effb254-ae94-42e2-8b1a-ddbb13c56acf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82cbeb8-5018-403e-9649-c0ba1bcf4da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497af63-81b1-47dc-92f3-c508a3828b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074e883f-5b0c-46e3-9821-a2f880c9fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9e2ccc-0058-48b5-a1f6-c385ebbb7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ee9a90-536d-4830-8951-58ac299f0471",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57700d50-746c-464c-83c4-5e2d3ca8f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e76d458-5e24-4786-a73a-67c53676b513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2777ca-e33c-4a06-a31e-cf09cbbc666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a701487a-f783-4d24-9210-8cc1f1d599e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831b89cc-cc00-4e6b-b14f-5f892f13beb9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6ea0dd-1ee8-41d3-a67e-15809904f229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e106a8-5c23-4d41-b647-e99ab9895479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb7f111-81e6-41a3-9455-437c49696f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c59f57-ff6b-4d1d-91e4-f726ea3fe9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6217919c-86df-41d4-86cf-644290059f94",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2942c476-ad5e-42ef-be6e-93d379b18ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec71162-da66-4dd8-95df-be6965bcb5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b03f7f-7774-4b26-a71d-943504103ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a35a2a-75af-4f82-b277-015ad6e73c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6319c6b2-503a-41d2-a5b0-8cdce34164d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de196d9c-2ee0-40db-8d49-a124d4faac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ce4cd1-0741-4664-af53-c5134af4cc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb34939a-f5a8-4c5f-8dd9-8ef251702acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a56e54-96fc-447f-b6fd-58ebc8cd0a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b188c0-bf50-4484-a92d-67e20774deed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f327c19-fd22-4693-913d-7b31c8496b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110cff01-98ec-4ddd-82ad-3bbbbf12a553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae43471a-fdfb-476b-8ca7-0d015b6162bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d77a0c7-b5ec-48ba-ad2e-1d8725609bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0e0234-6216-43b2-8a7d-1764582a76ad",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8e5f6b-1fa0-440d-b7c4-3601f366aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e43fc0a-2ab0-44a8-bc84-9192216dc4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e1b4a-c5f3-4bf2-9fac-39b8721c701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c205812-e994-4db9-ad8b-105cefee81b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7085fdce-9f2f-4bda-82ed-244f60063486",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86902423-6159-4b9c-a014-c938c7eff90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b9ca52-ec63-4ee5-a493-4571ae75c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea019b2-5047-4d3b-8aeb-1b82571258db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4158b6a-218f-4166-958d-18d4e41709c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab1ccee-a586-454b-9bc6-2e5594755cc6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114482e4-83ef-4b89-9989-f82feeec66e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea734a2-b775-4f30-af4f-a187586d6d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fa0aa7-10b2-4a21-8d70-f78294189414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1511c2d-b7ce-47da-93a2-5c85808afa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f6eab4-be9a-451f-9543-852bfe6210dd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e8816d-7989-43d4-a963-3212e4d8b6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40caf654-a9d7-4c48-8a35-6ad69b8b99ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaa4bfe-1ead-491a-931f-78428ca108f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9efbb7a5-8c41-4f6b-a3b8-5a85290299dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0999f94e-bf81-4dde-8238-234e30fa66a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ee3d5-5084-4388-930e-32017cd42452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95a7f0c-4625-4a62-bff3-e0a65afe01db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a837c4-3d8b-4dde-b964-6a790a099472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69ebd34-d991-4bef-b5b7-fa09df3d9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a968a7-fe27-4676-b1cd-48b155db883f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9bf6a0-358c-4df4-81bc-ee337821c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2588e4bc-2e4a-4a9a-933f-c7498ebac98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf1ed1-2b8f-4c55-8c10-c409c1027386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f431331e-af11-4f0f-b287-36e9d440f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c53b7c3-48ed-44d5-b107-4cc907de4446",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a652229-2ac0-4997-aca7-766b3b20a331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20cefa4-b2c5-4b7c-8d00-4003e59e131c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6edbb45-e5b3-4a3d-98ec-a142f4441933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34fc944-a901-40ec-ba0c-2ab872735150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb4bac6-94a7-453c-8c41-27fa92bdab19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea9cb05-2016-43b1-bdff-3c7f6296a1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecec4b5e-fdd5-44be-815e-c5e58bcff1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d7101d-d857-4faa-897b-5b48172028b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd37ff7-40d2-42f7-8a31-f13a4b78df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ed2ed3-5483-42bc-9f9d-c706a7f4204e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318245f-5a08-401f-8b5f-1c1bc49bbcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199674d1-0849-4295-99b5-941ebcda6196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0380a-1957-4e4c-89cf-1b93ae50392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e61d5267-d066-4a6c-8a2b-19b31387f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd924aea-7e47-406e-9221-f4df32c1c42f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93752ab-1a02-46e3-8bcc-be18b517a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8b88af-bb56-47f4-a16a-1a0dcee73f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19380b54-83e8-4d8d-99a2-1cde9db0e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2d6e1a-0b4d-4725-9a77-9e738c059266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab209728-1e79-4cf2-ae5c-cf6eec3d935b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d10b78-887e-4fc1-af32-76dbd38c314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4502b786-8102-40f3-afbc-67c983bc01d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28b9c3c-a5dc-4567-ad87-1a7de7ff40a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea66a02-9dc0-4942-8ee3-20a6ad847d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d954a16-b1ad-4b00-bc4a-19508efd4673",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac985f2e-a9d3-4fe3-9bbd-66eff5500745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26bffb2-b2fe-4f5d-83d4-568ebcff507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079144de-0379-4d3a-a2c4-d8610d7a6f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae5c6a9-69cf-40a1-a005-7342bff24f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f5b08a-3723-4760-8e6c-ded81a42323a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86725d28-dd24-4024-9558-f70ee34dcfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6f8919-4cee-4cdb-9bc5-6502819cf163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b2c012-7aba-4d38-8762-7c982ca4ce31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c982b57f-70ec-45da-91a0-b56ebef7bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3466cae-050f-47bb-8ad4-516801bf5d0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eb1916-628d-477c-a7af-2de6847950f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed71a96-5f4c-45f3-a2b7-8a016915538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714962a4-0744-483b-93c9-58f1cd597145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4e979d-1cca-416b-8d60-94c6c27e4e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efab8a2-ec0f-4144-8c68-a0a7c59c3e86",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40952970-fe3e-46c4-b6b5-f8af76cbac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2842b9a3-233b-4880-bdb1-89a6704776e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623e1055-b727-4fb2-bce6-5f2db6cfa957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a599d972-f413-4d4d-8cad-de184da94542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b28afe3-46ca-4e18-bdb8-92dde9c8e184",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dff626d-49d8-4d5b-91e4-545112334a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5600e383-89a4-4b71-966c-cacfa360bf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0c2371-92f3-4d10-bfcc-630c639dffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa85151-8506-4bbf-a311-989a4aeb704b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78323e94-c7b2-433b-be47-d20971d5ef74",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925a58b-87b6-458e-9d86-f40d196c16ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c814e47c-def0-495e-ae66-501be78af7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59c96b4-d197-42c2-9bd7-00fe533c13fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a77248-69ea-44d3-ae99-6738b0b2e572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d92bfa2-d5e2-4bbe-b815-e5f6e16ad6ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c53cba-e531-49ab-85ef-fd64e5e83d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7603b2-abde-49f2-99ca-5c2a1fc8402d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78434233-2f13-4246-bbe2-7ac5c3d0a580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c27cc71-6aaa-47d7-b1a8-3c2118c774f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82e2826-daa3-4770-8377-e52b8fb4741b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448c313a-6401-4487-972d-b4b036b57044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65c3895-a97b-4bb3-ae63-0a776c65d835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3200dd-c7ed-422e-b949-1148a7a8b2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cf837b-c886-4a90-be67-5d3de0139126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b692ed-87dc-4d1c-9996-18a753cf5e50",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d71e2-9c14-41fe-b479-55bf0cedd56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f7acc9-769f-4748-b1a8-63e1d18f9e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606afec2-ee27-4d5e-9dda-ecc7c40bbac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b1c9d6-23a0-46ee-9337-183b53978b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f957f-d0dc-4a4d-bfa5-3580c7f96f5d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed998fdb-3b02-42c7-9123-8ef5dfbcc4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5910c8be-86b8-44e9-93a6-abb6f19af68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af93549-446c-4d3f-a5b4-6210d4e38545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da59dd4a-4291-42d7-b74f-7957753967bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c69ecb-81ee-4582-88e2-281a86debd58",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0f0b95-d1ab-4be6-af87-687300e6ae18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d6190d4-415c-46c8-9abe-1f49d3d96cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316772a-e752-4475-9ede-00d3c9674da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a7dc46-9369-452b-bd3d-7e759b82ff73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd30c2d2-d3bd-40d2-a9a6-b80246c46555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86e4ba67-f71d-4b0a-b78f-415da9c12b1c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c793a3a5-ce14-4abf-a52b-eaccb690ff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95cb78d3-21bc-4add-9e95-e5114d4c6bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4637e8d7-bb14-4d89-8499-33e033400a8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd137c2b-7514-4ca1-a6a2-2c289c9f292d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa7894ff-0816-49ef-b84d-fd2ac825f293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b104abf1-cb88-4a04-8569-6bace13dbb6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8748fe77-ea94-4fcd-a305-b7ef55091e46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13997a0d-3513-4145-a833-4a42bbb26d57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c16e77e-58be-4e56-b077-9a938209f8a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d058cf8-da4f-4ffb-8782-f52b9f26229e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9bda126d-2b1b-49e3-894a-41c060bc665a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4974c17d-6668-4da0-875a-dc16a71ae3e0"
                }
              }
            ]
          },
          {
            "id": "c4c77ec7-ee97-4485-b15e-17fd5b75c9ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74d5a29a-ff05-4be4-b945-cd9d49d1eeb0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ba621c2b-1a87-4285-ba30-b752297d15b5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f06561-fcd9-4fac-8b3a-67e14347c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1c4dee75-590d-4d67-b64b-20c090eeece9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2f52d6-9965-47f7-af75-1367b59b54b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a25bda-a455-4d62-ade6-5d32b4750c0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f1c9651-8804-43f1-94cb-872abfed023a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8f8a62-40c7-4516-81f2-a1cd52262e05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73930dcd-aae4-4b41-a280-a68d4de65ad0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6605e04a-e696-4340-9f8d-67c64e93a50a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e599b138-b61c-4eba-b4db-b7f9717086c2"
                    }
                  }
                ]
              },
              {
                "id": "53228bc2-1aa2-4276-87b8-9a77d4bc69c6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f10dfa2-c0ee-4a9a-a1a5-7ff65271af43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51cfd5bb-9f44-453c-9a09-f87aaf2fff74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20f56e4b-7eaa-4d24-89ca-9a90be01ec56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcb80b27-9d10-46f0-a400-98955ea80092"
                    }
                  }
                ]
              },
              {
                "id": "bc871d32-3bd5-4442-9ab3-c5ae739101b5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0bd7ad9-4a49-4800-ad83-3042fc539ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "822a4492-5eca-449f-8111-d0237b18c7b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7562b792-d7e2-4db7-acbc-61ba4be55e8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ceee3a5e-8510-4e17-a701-41f7568cd023"
                    }
                  }
                ]
              },
              {
                "id": "34d588bf-971e-45b8-8f0f-fa8562b8b855",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "651d42e5-3b06-4615-9a10-45b3843d8f30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09640caa-4160-46d3-b095-6c7f9d85be27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ac976a-95d2-482f-a7d5-1e802c54a773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5a21e63e-e391-4386-a3b5-9a813cb842ff"
                    }
                  }
                ]
              },
              {
                "id": "1032cd7f-8638-4fde-899b-7dc5e0433e1b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60ffd7ba-cb81-4da7-89af-4f471742c15b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c39b4c7d-879d-4e77-a857-0cafc1a54b47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "129f520d-02f7-4abd-98e1-69a8f69ccb48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "75d4ad09-a8ca-4644-9feb-bfada1d17021"
                    }
                  }
                ]
              },
              {
                "id": "38f91800-3109-4d5b-9dc5-97757a446079",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32877fc9-3ecc-4d34-a51d-c7df9bdc5a04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e6d9663-416d-45b4-91ac-509378cf6b65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca1a8462-ec21-4dc5-afe8-6f277ca89a83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d89369eb-75d2-45dd-9506-cc04d9483c36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0207fb6-2c3e-4641-89b1-960481f6f57d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0a11b2c-f038-46a0-b813-d363b7cc528d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f025b0fc-e428-489f-a2bf-4e970a7af535",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2dc5eb9-8e14-4c53-9384-1b4a799c6850"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90272205-98e9-47cd-a1aa-fd6c8b795613",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4f070f82-56c7-4c13-a5f5-e677d6adfb8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7d137ee-9bc2-409d-8428-cc450b12248d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fda2daf-4f37-40d9-b424-6cef50edca92"
            }
          }
        ]
      },
      {
        "id": "8557982a-01ab-41df-a75a-496c1519d26f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "010c7f3b-2288-4d6c-96ff-011d9bde975c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3ed0b33-a997-4363-b499-730a0da305cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "622eb4d0-f67f-46d2-a3a6-f652f4891892",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9019da8-e5bc-438a-b921-99375f066c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47e78ad-6af3-49e2-bd88-0f5637a0ec3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609b548f-14ec-494a-b2cb-2704af6b0dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad695d0a-fcbb-4cc3-a9b5-db42273712a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dff21a-c677-43b7-b2e2-1d4d6fddfd12",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e2c7f4-3805-4e00-a863-39e5fa928248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aeb2b8-b929-4a6b-8470-d10ad9418996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea10c796-76bc-4908-ba9b-c123f681d444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2f610f-e111-44b2-b689-ccf2201c8b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652cb82a-7fc2-486e-afac-baa518bd13e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25959175-a860-445f-8cfb-e2b88bffd21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7e9745-78db-43f0-a162-9703380f8b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1629e46e-67b6-4f88-b7fb-3058af775c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ff8a26-4fb1-4f66-81c1-f4db7366dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19acb384-0a38-4ee2-a1a6-859df8a7f918",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bf8943-2e92-4f8b-a437-c24f3579be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930651e2-3adb-4c7d-8d2d-6d004168c97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d551bf-d816-4aff-8727-cbbf0f61c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ce1a7b-4758-43d1-9964-bbc11ca99afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a65d73-0269-43db-8425-e3e0c5842614",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fb091-2dbe-4f2b-8d5f-8670ba063946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f6372e-78bb-406f-8fd9-c94c4f0afd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f561ade6-cffd-43c1-bf8e-98bd3179e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5f845d-2c60-49cb-bc29-e4650d58643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7df50c-93f1-4894-83dc-211ffcc7b261",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0881557-70cb-4574-b48d-20267b184d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7afe8f0-10b1-4ae0-96c9-54170a81bd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd709450-0850-40e3-a166-f94e7dd9fd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc158bb-a248-4055-8307-a0c81bf93a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600af41d-1ca3-408b-885c-d864dae2625e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29306e01-ec52-40ff-88df-ce4130ed1c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afddbb-0378-44a4-8b22-cecabb4339f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30bcde9-b27c-4aac-9ec1-4fbbf676c865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3334fb6-34ef-49dc-9551-25933fff321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6962e66-543b-4e7d-9d58-771e6198d6a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9b02c9-d61a-4d6e-bfaa-41090f1ed2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98875389-e155-4235-b8a9-e513ab2040d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a3a045-731e-4035-92dd-dc2974b6a144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9f083d-61f5-49f6-ac9e-08e3ea412e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5994bf-bb15-4877-9a8f-354c20599cca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb72d0-5415-45e0-98dd-0275a94efee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4016aec9-30d1-4804-b74b-fdbb7f082980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e774ff-23ea-4667-8ad2-017c6676cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0395d53-b786-4166-ab5a-2ff2633c92f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a8241b-3037-423d-b563-a62ac5db0c2d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3a71b0-55db-4b55-bda8-ee764758bda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1408a28e-d121-4bb7-b751-a696f9790d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36af22e-e6a8-4910-bf42-8ae81160eacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a4c01b-77d8-427d-9b2a-5d2aad6e73b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20db731c-82b8-44e2-9220-9e04d6371e26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bae468-f871-415f-be65-3611af97c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df837af0-7a10-4aa0-8b5c-bea05c46098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d95a0e3-b70b-4f50-95d8-539bc4259c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f4541f-0803-4e90-b34f-75a30e118b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e28b06-4964-447b-b668-8fabb3931136",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09bf400-6aea-4deb-a35d-f45ce0094c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe2d2c8-71dc-43e5-aad6-997632f24145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9fb96-1daa-4f7f-ba89-460803e1cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9078fe5-1058-4e94-8b61-ea3bcdeef007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba16f4d-c5f7-40ed-ac6b-4421f802b9c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a75b5a9-f025-470a-8382-e7528336dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22adf4cc-44c0-4a5e-9aa2-884bed275321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddbef71-366f-4f3e-8aa1-f892e5ee87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "069d4e73-634f-46b1-a1c4-80b60f05d9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85c58f-1b27-4cff-b04a-7597bd68ec62",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9e7797-1480-4c70-bc5e-6b67e1369676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1571e1b7-2a2c-470e-93c1-3e8400328e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e77903-dcd9-4dd3-8ceb-a165cce3a911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9462f3fe-54b3-4038-b8c7-cdc10569b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269ce4a0-5e71-4ed9-ba4e-a5e21e3b9476",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570db403-6391-4d1a-8c16-cff5599221af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11aafbc8-99f5-4257-a1dc-077699df0f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986df245-1d9c-44a1-9c0b-ca855933d39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e23c0e-3c36-4fb4-9735-396486e48e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b29662-b1ef-44af-8055-e7e578da534c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8a2723-9d65-46a6-af48-9aeeb23a5031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5983fe-418d-4dcc-9f86-d083391fee1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b42e51-6cec-415c-a804-24336e56681e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6543a176-8474-464a-b5cd-bd7473efad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d384206a-d510-43fc-bedf-f0fb30d80da4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbe9599-d7e3-4497-a655-5cbcdf2548e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5464891f-1a87-4f05-ac12-e253727f22b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d527477d-8bab-46a7-93d5-292471c16351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "079d78e7-6077-4bb3-a60c-f60cc7671f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d7aad-b92d-498f-affe-0fa101f63fde",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbe1e67-6006-4f1c-9271-95f4ae609e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460e5001-b8b9-48da-a21a-ea3c6c3c72fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d510277c-251b-4708-9bb9-a95f1943ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9410d443-37c2-4a3f-846e-45721bae1d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf73c17-0f3c-4c1b-be82-c30b61ebb567",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659fc0e4-19c6-47fe-acf6-bfad86d3938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44a1e7c-4d8b-4456-a21e-c39697a12740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43faff74-a932-4ea9-904f-cef45e4cb7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ae87af-53da-49e7-bca3-ad5d22b58cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e81e605-3196-4b87-816d-8a2ad0049283",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f51762-f595-47a5-8fdd-dc81d4f60693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3c91e3-85f0-41dc-b4b0-675df5214dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7204ea-f293-4f04-b213-1e651580c5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c92325-8986-416f-afec-7d9b5b54d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f756042-555f-4dbf-b164-caee5bad951a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87cd581-ff98-4f61-95cd-a867f1496032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0438e47-6c98-48a6-a825-9710438c7aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa40304-ce58-40a1-8545-8f37d5a3443a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf13aae-a17c-4e75-bc5d-f271866a9bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85c683f-a9e3-4964-a4dd-56f631c16148",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7cdbe-d265-4e4d-ab0a-9bc74e135b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86736b2-aa13-4b3b-8fc8-2893376989d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c156cab-dfc7-46f2-97dd-c52747611441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d375511-b741-431b-874e-1dbcd596f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7300d5e4-1746-42ad-926e-9eab49a8b5da",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd083cf4-272f-4773-b5d8-5c860317955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd48945-813e-4d1f-81ac-72561550c263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f30d7f7-ca3b-473f-a590-c40563ded371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4774f2-63d8-449c-93b8-48e4fa7b4200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72364b8d-1827-48d5-a844-85fcd95a3814",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75e5509-82b9-4e0c-a267-b7303bacf2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce32925-07ae-4206-bc8a-22b4ca709d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d750518d-2462-46d8-8272-333416bab763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75957ec9-be07-447b-97b7-6c33a4588d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1316ab03-c852-46f9-85fa-9b26806e98d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9a6f04-1201-40d6-bd2a-55fb48b73ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f79be3b-8236-4c1a-a508-bed4ae86d8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4a5a2b-101a-4aa2-93a3-845b893d56eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad69c51-c22a-4fd1-9950-9f270359ca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eecab2-3854-4c02-b36c-2c6ea7a1bf70",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996d730b-99f6-431a-8987-0b249cd74730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce975b14-a8a1-4efb-a5a5-284b38a8c7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd23216-279b-43de-bab3-d0c1e67176d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d74002d-cf1c-468a-b244-7def9ad62125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9aae23-44b9-40ce-858c-e72a5aa3c782",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785d7cb2-19da-461e-8181-6a0744281155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856859f5-f51e-44f0-a036-94fefff30ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3b69e8-b1b3-40a5-be78-098c77d42fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5875997-5ab4-431b-8353-128855422989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1fcbd9-4b06-4094-b517-7f1efccf05e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fa908d-0224-4990-823d-555ff6842727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af861ef-4f6e-45d7-8dde-8cbf151baa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290c692e-971d-4ec0-a0cb-e43f794b5e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43696f60-696f-4435-b15b-a1bde33f871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9738b29-b131-4aa1-8b71-b796fde230d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09a348f-b918-4fa9-b7bc-809595708ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f47fa1-fb9a-4763-a4d4-f88d371eb406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9872d84e-99df-4586-a2a3-5e5f87f5874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d6b37c-8301-4f85-a532-c26ba8fc5da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe9e4df-004f-4e15-b2a6-c9d634fbb339",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81026424-945e-400d-b268-5626bc24ea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6855466f-3cae-472f-a770-ecdff9a4fb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877af50b-0561-498e-8e8e-793603207d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0420ac9-2459-4016-9ade-9b9a9170d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59c846d-be21-4cbc-9fbc-75ded4356bde",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb31cbc8-7af3-4b60-86e7-b03bbd96ba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6739eb-1bad-47e4-8815-619eb1ef22da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e66dd8c-8704-4df0-a08c-8cb645bddb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff869bb2-b418-4e3f-bf35-c5337ec278b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e01758-974b-4db4-8b4d-63d5b6832094",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb7e28f-e0ba-4d90-9ece-f5be92a2cdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ab2a9e-469d-400c-b6e9-9748e39d3e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1394c630-cb85-418e-9a71-cb13c1932d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a48a1ce-2741-40fb-b05a-ac039c1ca5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e0f784-567a-43e4-8ea2-4e67f9372eb8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45687d93-c48c-48aa-8f23-11a93876d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2188695-f714-4752-953b-ee061030e9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713be2a3-2843-4119-81de-e4d7b72994b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a16092-26d6-4ae4-a614-366aab1a9e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028e33ec-1f9a-46a5-9575-7f8c4717141b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fca815f-f154-478e-a60c-dafce37d839c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fb05c1-bcb0-485d-8227-788b00008087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abffc03-4bcd-4a44-80d4-83bcc6542a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd62976-059b-4cb7-a9dc-17f7003276f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b783d68a-0198-40aa-b0e8-93dfb488ef87",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8499aa-2f11-4df0-8991-8966452838fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45754fb-2e5f-44d4-9081-3738c874e5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deacfda-adc0-4690-9991-51329ea1b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18e26a5-4000-4482-877c-5bd4d85adae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0208e4-2593-4923-ab36-3e34d1da2623",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2f645b-1285-4aa9-a788-f19c3216f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f291f132-ab5b-48c2-b1cb-62aa9bbf158b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c06f8-d7b1-45ef-838c-93c026d42b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b87096-db3f-461d-8779-bfd2d9a6b0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8ca7d-d106-4199-97dc-88ba9b88a125",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabab71f-7162-42bc-b551-057bcd1bb740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7c10cc-3bae-4bfd-bc28-8c9a17ed0d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55304825-73d5-49a6-b444-93d6550edeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6bc305-ef24-4f89-b940-a2008eb72820"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f65a7bd-05d4-47b4-abb8-42eba748b6da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a24de8f0-b35d-46bd-b1cb-2a915ff27a36",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab4584a-8c96-402c-b399-a29c26bb779c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1b6b39-77cf-4688-ae81-d4c27bfc989c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9497df19-90cd-4f16-9e76-eadbdda86299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b2c8a2-c5ea-4c6f-8b78-8b235b912e47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a92971d-d724-4e1f-a69f-3ed4697c4c70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71f51ec-dc49-4357-ae6e-7714f9ea988e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75144bff-613c-4afb-9fe8-98d10565827e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d280e6-f35b-45b2-ac1d-14625e8cde5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5efc55e5-4090-48c5-87f3-8cafe0399eb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e43d84df-da34-4470-9b95-75b5d50f5a0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "167114f0-1c91-40a4-94dd-624d975a99e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca11aaeb-f7ab-45d1-98fa-fe481cfbd3f8"
            }
          }
        ]
      },
      {
        "id": "bca0c488-e659-460a-a9ed-c53d136fa486",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "feb45219-6d34-4b94-97a8-ec7f08c309de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "766a09df-ba42-43be-b467-ebfb9dd0d39f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1574559-ba6a-44f4-a57b-0896dd994e94",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580ddaa1-715b-4f1e-aa5c-d90a9ef36aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abce1b7-e958-4e08-a3c3-f423670b74a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72acee00-1187-4c2f-868c-193c52aaaec9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7925ca0-30dc-407b-b429-84e8162156db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1de259-1dca-43ef-b410-aba74b6df93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe5312c-2917-4f63-b6a3-2a36c4f06dde",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2220e7-ea35-4dae-8e56-cc32f6a2f6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498757c2-314e-4db2-b410-dcb0040d4097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b248f972-3599-484a-a1b0-7c836a988441",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6840ec-8453-42ea-9c60-0dd66cab7f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb74075-82c7-4d4f-ada9-ff4ecf491681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f4d561-82fa-4444-9b02-f3abe9fbb981",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cffcca3-5e49-4a93-a064-cdc8d2fffa0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab482c8-f3f9-4a3f-be63-91e7b89e2686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d115298-8fbe-4548-b6d5-34d50fd74c9e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5650ae9f-70b4-4957-8248-5e236ac1b4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b67dff-a0cf-4971-9179-f6e380eca365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382a6db-bc10-40c8-a534-c05bd1f6cd53",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7637ef9-e0a8-49d0-a9b5-5e4311ab23aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567da772-2b58-4431-bd02-0359bb1db0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88d7b1-28bd-438e-b976-6775f26dd1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0528f182-5de9-4048-ae7d-ad1af2967e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5284d5-2ecd-423c-998f-e18468685dde",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1eee01-6251-40b5-aced-24474d2964d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00db3197-a883-430b-b3ab-5fa0d33fde0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4893291c-54ef-4b4c-b2e7-b1e2c5f1c5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3bd683-8878-412c-9a61-fe420eb0a1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222483f8-2504-440e-b01c-aedf4c17ff9b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b925316-c68b-4ec2-a9ae-ab3d8b122028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e30ab1-b8a5-4f9c-a595-6e2033717f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e7072-5905-4e64-9360-e0cb0ce8f88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4667f867-650c-4870-9bd4-39ab4c54ff80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c865903-8d17-4803-a362-51d03861c8bf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9230124-c0f4-431a-8399-9548525d4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39967a5a-da7b-4e86-b0f1-20f9d5229996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914550b4-9abf-4ae6-806f-3a2747e11062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc789b5-aa36-424e-9cd6-8f51d9615340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78da1281-b61b-480d-92bd-8e46dff447a4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61091772-60ce-48f8-8dfb-8ff5052ec05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f67c88-da2c-4746-a332-800a72f5d8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44bba1d-8b25-4767-aa10-919a46d6ece4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebf52f0-b3e9-48a0-9f61-7345142e0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ac4d18-5405-4099-92e7-c7bfdc72932a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c45f3b-41b1-474c-98c9-5bd5c9f7a30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2d8314-2ffe-4573-bd9a-bfc1057ee1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caffdfd-0632-4439-b70f-adade2960a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4887ea-562a-4bc4-a377-ef190a9d4606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15216472-5af8-4a6a-a76f-47ffd2efdfd6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a4d3fa-81ae-4388-a608-a8078b34e808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a54a4e-e89f-4f67-85a5-c720a08e0619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a3898e-53d1-4681-92d6-a7e898e3a582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162075d5-a9f6-4452-961b-0685bde26d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9301ae55-e27b-45ed-b705-af3b09d45570",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57816e2f-4431-4b03-93ff-d8f1dd8e144b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15d4fa4-1a01-4eed-8528-3b9727895e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f8e9be-9980-48f5-8563-a787aa556fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7986c2-2955-4e03-a450-fa74ab782d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7701000c-ba1c-4e28-83f5-6ed5b3954d9b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624393d7-7364-4194-b603-848654044476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea72295-f16d-4743-8642-555c2414dca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6babfd14-fa30-45b9-836d-422a2f07fa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e16522-f7f1-4e0f-bef7-e6cd7d2698ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61db4e4e-a36d-4c29-b732-a08fe94f8396",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3f3371-0550-4912-a0e4-c92abeaff3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "921dfbe7-6549-4245-8b07-0453482b5b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2068aefd-34c2-475e-81bb-6fe8ab72a1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e28ad2c-1132-4296-8826-3138ab0908bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e9426-fed0-49e9-ac85-e87ef530b410",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4c987b-1e2e-46a2-85db-83111587e750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff4a833-e1f0-4dbd-bfeb-d78667804850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75f495a-feee-4c7a-bd10-7d81e3475b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f59e93-7a1c-4109-9f37-eab0914b7c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7784c9d9-ff10-4428-afa5-3d67f7d0d9e0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512fbdf8-3d13-4094-82fa-1b7de827ccba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f46c70-3344-4eeb-a138-a07d4c5fb179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0d85bd-3789-449f-b76b-5b8279f5840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad73344b-0b5a-4436-ab7f-afd4051f07f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d527ef43-f07b-4abf-a15b-54a9730de2a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b872b09-1c70-4939-a83b-6873c8793ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8bfcf4-8025-4cd8-8a5f-1217703e3918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2427caf5-480f-4ad5-b089-bbb44ebb98e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f550da-285c-4d45-a545-02c666d6a25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64572edb-aacd-44eb-ad91-69a2990656c7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538b9148-1e3b-4323-8438-760b482af297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f9d394-97fc-4efe-bca2-8efe102f9576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefbe2c2-5b50-4e09-8436-3453ddd4fa0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81225f9b-8d14-4f63-966a-059f8a851b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538b9b52-cb93-400b-951e-928e18632cdd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f7aed6-2591-44b1-80ac-8cb5cea74f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2063f4-b9c1-421f-967d-73903394eb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8542af1f-4986-4a73-8536-6afe64dd31e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda0ce8e-0ae2-47d4-a8a9-6a70c08fd66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752ae1e6-e6d6-4249-b51d-0adabe94efcc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca86e73e-6da6-4dfe-8414-f05743adbec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c76733-294f-46ba-8f68-ef90c9fc5529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507094d9-8beb-474a-87de-0ae39b9bb1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d702d6d-42f8-4d93-8494-29788c05adf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ded473-1dbe-4df1-b5bb-65ad52b0294a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f530d9-75db-4c46-aa8a-03a99b16e9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae482ed-7b53-4709-887e-f9f5f4460d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a722521-cc7b-4535-ae09-d04774b329c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e09b70-40e9-4bda-97b7-f22395537dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7613b0c9-4f60-49b1-9ae1-623a833ce5b2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe69f72-30d7-429c-8031-58a489a5d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2033bf5e-cf20-4930-8afa-97d27c11f928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb19f28-5e9d-45a7-b9cd-cc68775306c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c596816-115c-4fe5-9f74-6a9a96ee5419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8f9459-52f3-4eb3-a111-3fe7ddf29588",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29a4a90-db0d-4d4b-8615-acc064373493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcfb0ed7-aaa2-4ae7-8290-9387c3217ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca5278d-c3a0-4b5a-9e49-86d763176e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3237bdb2-8997-4d8f-9573-29ac59173798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4adaa4-12c1-4663-9e4f-c973aef680a6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9b563a-ba7b-469e-8ca1-f61a88b74a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7ca3b0-7425-485c-aa64-49df32180c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68c1f24-2138-4c4f-a598-44cd189e6cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ba16ba-9d71-4e98-ab90-7025a3ff7e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404885f-8718-4483-b47d-abd16695c9e4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e4851-c37c-43bb-a21d-243e780e2534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a30e8cb-c162-4819-9142-43f77bd55f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bac148-0557-41c1-a824-7f61da3a2161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c439ca-ce2c-46a6-8529-081f537308aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4323d4-037f-4f4f-8e7f-2a755fb4a8c0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9687b-17f2-429f-bae8-7c47533329da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae001bcf-03d1-4b31-832c-48d974050a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eb2271-5cd3-4e53-8280-ab6520ef91c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03afa07e-c160-4770-98d1-16cca9b554fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6003abfe-bb90-4792-858e-560e02aa167f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d9a9d9-76f2-4e1e-9757-dd76d211b8f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7023e7ef-9e97-4583-b0ce-bbb6facf49e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6613b2f1-3350-4dca-bf07-e5dde662f4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b56d3f-c6b4-4634-8614-c4b8e33b0e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cf2236-4090-4d43-b038-461b08dee25c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf50bd69-9dc0-43ab-a42c-bf06a77ff3d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa58cd0-6e6a-4616-898d-432695f6af4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112aafda-2b0f-4838-a0d8-837bd6bffbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cd68ca-9409-4dd9-a39b-141863cecdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f29f16-6f3d-4c4d-9481-1f085d6a5343",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b75582-a366-4cd0-8391-4085f586f4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ba4163-aac4-4427-939e-4a03a7ca76ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abf40dd-b2a4-4916-978d-dcfdf573ddfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e88b81-4b26-4dbe-a697-a143b7dba3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8879fc-635d-4831-8216-e032935112d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07310c8-54cd-49ed-9ccb-44c29f53f38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac4c9f4-d837-47d5-9307-919f64c2b5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d68ead-b7a3-4168-9b28-a24a32eff549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9846bd5d-3fc8-464b-af1d-556a71eba223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d32208-a23d-4ea9-985e-c35b69a72b31",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace35e2-0e5b-47b0-ad9f-ddcf3781fe25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf7619c-ddb6-4ce2-b955-8458eaa432b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8a54f7-8821-49a4-9d67-22bd362c3103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2e5c53-47c9-4448-a28a-5648d79a1150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f958dd32-0337-489c-92d9-f1df268e3870",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e7e4d4-ddee-41d2-875e-67e415930ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d48d5b9-13e1-410b-a8df-8a3aea09f6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d723bb0b-e6d9-41c8-b73c-08078a4ab54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c9f715-86d4-4b2d-8567-67afd87be29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038e5286-3c4c-4656-a217-4ee9ed4d6e9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6226eb84-77ee-410b-b914-09adaffb49a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf1b2c3-827b-4d44-921c-e8463785417c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f71e674-d469-4f59-8bfe-76c0e2222af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcda56a8-701a-4848-9ee5-37b63d4eb5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e7f89b-539b-481a-9b79-2aec85e9e30e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296e63d-6fed-4bf1-b85f-8f7449257b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184d2baf-2c7f-43dc-87e5-58483f6082ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd5c498-d88f-4923-bf61-a45cec564d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce667460-63aa-4d9c-9af9-013a82591b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd3c1a0-6744-4b3f-9f21-5af1d8a990db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d63e1e-5556-4a8c-8211-480f570f1875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccab6ded-e79b-4a70-83a0-b12d0af55bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c8bb9-1aa6-4796-9c77-65389e204049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea60ecb-d06d-4e9c-9576-2f1a085c58ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef43fcd2-c490-4468-a148-edfac98c0d2c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f40e1dc-dd21-4847-9f40-05d179f0cd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b72c48-1616-4ce2-bafb-7209c63c7c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd21a40-d976-4d91-957c-d9592d2d7606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de06f32-30b0-4e37-aa79-57dfaa0eb5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49548242-02f5-42a6-a8e4-e59acec1181c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac9b31-5a37-4bb8-b0e1-e881a7b1b8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe87894-b95b-4a54-a864-6fa1eb460cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff2d9db-2df3-4491-b625-4a80a3f99c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910b0194-7e1a-49fe-8d47-359114336b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a72ae-bbd5-40d1-b41b-41da01bb92ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1347f1-59ed-4ad1-8e3c-c1bea77f3cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ac462a-824d-4771-a4c9-e6039f6f4308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26167ca4-9aa6-4ff3-9d07-6a5f5a31f7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c9a727-d240-48a0-bdcb-dd2731b16896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d00da-0bd3-410d-9c59-d93e99b69d07",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e267560-1134-4d2b-a571-eaf9ae7d37c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbbc174-368a-4a4f-8250-e9b3b09de74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c816e-4505-42d3-854a-c3c1a63c0404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a525a065-ff8b-4385-bf4f-d91b045305a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be57276f-3690-4561-84c0-e2313bb04437",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2973d546-32ce-432c-a8a0-6d427e26e7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75e830b-7afb-440c-881a-f99162b7a68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1546295e-4d1b-4560-86f9-52e6eae7ad7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64f8210-7e9a-4f3b-be4a-63debbd2ee3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e444ee3-5f66-46a2-a56f-34f3e9709b56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebdd388-e717-45f1-8bd0-0575cf08454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac208ef-cece-43e5-a2a7-b4b5a8698809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30572bc1-c23e-4afb-b7d1-4e3feda34ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b07e0fb-bcd0-4991-bb71-8ae0e7f56828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa7722c-2837-482e-8319-fc3218b4b8e8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cbdd26-b53d-44ce-969b-7c506fa3afb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1810385-223b-4797-9dc6-c2b3fe7242b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722e744a-5068-47b9-a698-b2448b6d606f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e3655a-7447-4c96-898b-633d3ef7fb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb76ce0d-1f34-4785-a1b4-229a1891938f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc763a6-db09-46bc-bc07-576f7571f8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed096ae-4555-4e98-b120-bcee0265b9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b08c7e-251e-44ec-84d2-66b00030598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1950f73-d8cd-4291-9216-d9b6e39a544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aee18d-504d-4baf-98db-0d4e02988714",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2c09f8-311a-4908-a6b9-43f9ea4ed3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f5470f-b81d-472f-9bd5-5ffef2375900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b644921-6b57-4a38-ad61-4934882e82ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78427287-68af-4129-aec5-1e199e0cd1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a267575-8342-418e-a50e-d30ecd644c1f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21caae8c-aef4-412d-9f74-1945770a86dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49833fbb-89ae-431b-92a1-08b4c2aaf0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cfb872-a385-46e0-aa49-ea777a39cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9b3d74-551c-4702-b354-6efb4b92d0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3bcae8-dbfd-46fa-b4f1-6018617593c8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bdc609-e32c-462e-9e8d-e6c8d79e6b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ac62a-7d9a-4d2b-b21d-b05a59ca8290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a2565-0291-4349-b6bc-4271f6febd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c8f554-bbd1-4cb5-802d-166c42571bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe2575-1f51-497f-a835-f2dbd77e7193",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672da7d-d87e-4bca-b56b-9ac04e7b39b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974f93eb-71a0-4051-9f32-64e0625e8a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190af3ec-f32e-438b-bdfc-c8eaddcc0792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08f95b8-ddf5-4127-be85-04560726b646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ee6c31-bfa1-4173-8ccf-01a0a4dbf852",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f31bff9-c701-4bb9-b570-4dd74b5c4edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a60622c-dc51-4bd0-a815-d9b3ebb402b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbdac07-eec2-4338-a3ce-a6e3772e18f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfaf3f81-1160-45cc-939f-746af2ca9fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34901cf6-c75e-48d7-8cde-4db5770a659d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bb7695-c459-4442-8428-83a8ccac1959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8028af6-e741-4877-9de9-91c2106d6421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f666eb8-1b68-4296-a9d1-27b959221657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39994ba1-ede4-4c47-b993-0a5fb867779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8019b5b7-8a90-4385-8d79-cda0b2eb025a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7834231d-b49d-46bd-ab45-3c9f13e49424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc72dc2-0c8a-47ad-af9f-b0d0e257d264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca147b5-124f-41bb-abe1-a4a5ae177d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c77911-adcc-490f-9a5a-e92b883cc7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d12e5a8-a4b6-47cc-83b1-f8d82a214aa4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b077a6-061d-4aea-8944-b93121b54fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424f3983-03ad-4f22-b757-79d9d1cf3468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571586fb-4673-42d7-8118-eb5668940ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72552bb3-9b05-444d-9b51-8bb64a53e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2796fbef-9a7b-42ab-b5c8-65291d625190",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511dedac-9d81-42d3-b542-b6a1b33e1c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a4b862-31a1-4c45-9dd3-b936d051e95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4686d45a-1bd7-4b44-a4a7-a4482a7761b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93acd9e2-5b80-4178-b3a9-49d7759f55e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cfd959-fc2f-447a-a924-fc6503b21c72",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb1b551-eb5e-4776-8b23-a7e9d0c64d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f7035e-3d53-4197-81fd-10d0841b3a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b57ff8b-7cbd-40cc-8c5c-bcb1779cfe87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799d5fd7-e12e-4dd6-802f-c1d42017dbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ce1751-3c64-409c-988e-e6b2f7b11a17",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce10437b-7b5e-4f0d-a7d2-14cb5421cc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae4c0a0-b02e-41ed-836e-058d2360971a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c309df9e-ab66-4087-a916-93b2c59f6c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7893372f-1166-4741-9f74-18e5ba174f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f688885e-76a2-423d-970a-7508c3cb190b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0513ed7-acab-4d5d-8c03-9ce4f72e86a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ea64cd-0b45-4191-a1b4-5b6448f8b596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e2e3f4-47f4-49d0-b1a2-e350ce689be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f46068-dd22-4f84-ba05-7eb6e0cfd3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a33655-fe53-412e-bed6-c6f549e361b2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f97ef07-1e81-43ec-b981-1479bb7cd1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a055ef5-5855-46ad-b292-e3155f03c4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7b79e7-1011-420e-aacc-3e10a425e491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f0ad0d-270f-4ab4-b578-0b5ac21dfc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f578ad-1221-4089-ad2b-cd9c06630a0b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40692fb0-6366-4de0-8299-cf59e7e7cc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51897d4d-580e-462d-bddd-0fa619435bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3627cb87-02ed-4c9a-a948-70bb6da325da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95b2675-12a6-44d7-8976-b17ca504d70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90d5073-73c9-4d89-a8e4-1a6ed622d261",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6c70a7-1ffa-4aeb-b5df-de14842f54ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb514e6-28c1-4366-b187-fd5af577c12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a90804-0c28-41f9-8808-754e7007eb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e162dd9-0187-4f3d-b10a-6088b9be0af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47305d42-f8ba-4739-994c-c7472bbe2155",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7d4fb6-6e85-4f48-867a-54a96e029aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f807ba9f-717e-4180-8efb-4429de99c2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653cd8f-dfd0-4450-b1c8-a5ad02386b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f9797e-6633-4367-a069-a3b5e7eceac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79eb97-f41a-430d-a4ef-580d626d4002",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9524c40e-52c0-4d07-86d7-1e9cf5c95a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf8d679-14d7-45d2-a9dd-d55831cce578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19db3cf7-0aeb-4766-856b-19e568e272cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6f0357-84af-436e-8036-3c1ecbb77834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ce9c33-c1e1-4270-91a2-288e98cbe26b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f83eb9-2356-48e2-ac08-c687aad55fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d29102-3033-41f1-931e-7bd2b681502d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bb685e-8ead-483d-b1f0-242f5db072b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91111baf-318e-48ef-a289-535e4d049b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9add7ea6-b812-4737-a54d-ece7fd01f924",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cb0c5d-20ea-4f56-acf9-3e8a1e3b7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0692bffb-3b49-4271-b993-f4fe66e8405b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d660f9-2511-4293-bdd0-0089957a7a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6327013b-d2ad-40ad-8af2-1b94953d01bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4be1dae-d241-4754-9a4c-7491239e3bb6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e49c83-ec32-4707-9007-7a060a3b8798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22fb2f6-0fc2-4e06-b907-b82d9d70c45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae0c920-b9ae-48f7-8ae7-c4aad65c0d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006c7a6c-be71-4491-9536-9f77c3ab74fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9425e8d-f806-4435-b377-9610bd4dc35f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55776c51-6b04-48b2-aebb-672cae545826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdec923-061f-4a3c-a169-6d7840d6ae6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5d0f07-6be9-4250-8846-f6dfcb9376e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421d8cb5-b6cd-474f-a292-6e3a3f2c1231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150c8b45-53a6-41a2-89f3-02f6b40b728c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89798780-2329-44d8-be21-526491ff553f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6c1f9d-e61a-45a2-90fb-ce4f636d110c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb511825-0f5b-4771-a8d8-ed85b9e4543c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccd3ec6-81ef-48a6-80a9-54c7e324b062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae3e8b3-e1b1-4baa-ab84-f371fbe5af80",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612733bf-9ad7-4351-a0a8-2062e2151c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4b6eba-b486-4ae5-a4bc-5d526cf067e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3175c6f-eb98-4ea5-92ea-5ea21a71d4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57277785-750f-4b8a-81af-8a288c01bec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72efcb05-c1c3-4306-a491-5cd652f9225e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be231125-5cc0-4513-bd45-19e42be564ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4123fb-fed0-44fa-865d-93106f5b7549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1250dedd-188b-470d-9d35-48432df530a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4bade3-a4a7-41f7-b05a-e3064152e1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef9324b-0c1a-40ef-8193-e84874573d78",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e2ece7-fa76-4806-bc38-f605b9c6a531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aeaea05-4bd6-41c4-a016-4068d9c92a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f87122-b452-48bb-b834-55d2233f5b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98d67eb-5e6f-4260-8b58-18ff9e774878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0914e927-c06e-4436-9d70-13d327debf24",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb7b46c-af5f-477d-b308-f66e401cf9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98312f0-cf90-484c-bda4-39bde97c301c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1495fa08-7b59-48d2-bc3b-f8061187cc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5721bed8-ae4f-4c3e-bcc3-2edd1730e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aa0107-9b82-4e91-9d95-6d298d84ee16",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f06b0d-5161-4066-a1ea-11a6530c8d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab0a14a-ecc0-44f5-804d-07483faf412f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3725e7cb-0b54-4ed2-8d34-1e7335c87e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41521126-9b15-4c4a-9943-4cde4562b724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfbeabd-d09b-438c-b621-aa4947590959",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32925c8-2997-4e86-aec8-8d71e42f60b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d853e9f-cf82-4b13-9491-073e19489710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a976ebd-361d-455c-a26a-c20403be2ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa40b92-33cc-4853-b31e-24c3805c8551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae4afbd-fba8-43f9-b514-33b2ac2dfbbb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b71253-f786-4456-a515-fa1b3edf3a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7325748-475e-4f7f-b3b3-699547af200d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2500d4-f77f-4c39-b8cb-e05d27d48393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6ee152-2c00-47ef-934b-4284e871c751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46313b1b-f590-44da-bc7d-952241710908",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eeb137-f2fe-4580-afa5-b6d75846f8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e12f8b-030f-4c02-9028-cec6c5e204da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfbe87d-6181-45d3-96a0-58482e24d8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcee6932-3a3b-4199-847b-d3830ddac2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e40c576-4917-48c9-9f91-5b43b2192e01",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea3f947-4135-47ce-9235-6818b28ce12a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53414a76-0013-4db9-a070-2a7328a4c9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d317e9d8-3cbc-4ced-84af-24dada877a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b62f0b-5c57-40da-bb76-bf9574b19816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053adcaa-b079-4f64-9346-a4af59fd0f85",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b373a527-5c96-4806-b6ea-fdf591f26947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffca109-657c-4188-8914-0c688055b6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e08fe11-e09f-4f09-ac7e-af7b8f9f9736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02014bab-a9d0-436f-911e-b7c0d6213b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8059464-3709-4ff9-999e-895f8b0d212e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da127cb7-7cde-4d63-be3e-04bde9da13ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec0d1f9-b56a-48ca-8185-3f957e1c904f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c80bb7-0273-41e4-9219-c5a4e5a11124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cf58b7-d6d8-4685-931d-8b9ee3341963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dc9808-9902-406e-8223-424eb69b1dfb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc67c1a-1f7a-4490-b7fc-63da4b31ed52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5c2887-ba7a-48f3-aaa1-f40c2005d3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d90e7b-2ced-4224-9ce1-175c2d4b2988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3245923-fb9f-48ac-95b3-b98d8609a9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000cb70c-02cf-4c6e-a137-4916ffc454fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee6760f-8bd5-44e9-9d31-be085abdfc53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ef737a-96db-49bc-8636-fe49f2865ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c3ae50-0e79-4c74-9a06-b3e8b78a2a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47bbf2a-718a-472a-aaaf-8b20bb7865aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c812df75-093b-4d6b-a2dd-477a80e53c8b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a60e4-fc6a-451e-8157-2008c45a2db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec50c6f-67b6-4ddf-b2c8-c2185206c13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162d6b17-51b5-4c10-8f93-9a1deb23c699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a7537a-ada7-4f04-9485-8032f0be1662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e10107f-3675-4c7d-a260-9e50e3f27661",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128d5fe7-1a93-4a03-8501-c6320899d3fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4e6fa1-4e88-46d2-9d59-3f29771107cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f6a3b-a24f-4f18-9e7d-181ffe6e2d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3707b0-4f96-4944-9afc-1bc73103bfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72f7fc7-b93c-4f88-99b1-65b0eee4596e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bfb549-74fa-4498-9c6e-ab55a85b0a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6cb07a-5e26-41e5-a8e9-990707b0f929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8ec7d6-2fb3-44f0-9122-8aa27460424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61297d6d-669e-4227-84fb-0329b894bee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d37c977-958a-43a7-bec6-6211484b0f1e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01f56c9-e3b3-4faf-ab32-0478c5329cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78e7052-52da-48de-830d-9bf99c40638f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e4ba40-4553-494c-8a5d-cdb6611087f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074eab6b-aefe-4c41-a7c4-198ae832846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d37340d-bd03-49f1-a81a-cc1fa51bb3ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948d17ed-d2e9-41eb-aaa1-e2b11ac8b90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7335f9-72cb-4ec1-8ab2-17fbfbb7e588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3b36b1-22ec-4b0f-aad3-3b584c80bb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d612ba-f5f0-48ef-8f5f-61a6064929dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032ca29b-f73c-44b7-93ab-66ab9cc2655e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58be4730-1ebc-47a2-a853-7ee39d77667a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661281df-cfdf-426a-97e1-3976c013d8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35846552-b757-44ce-8c44-dd12181e2a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96886ec2-a581-4079-afc8-699746afe208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0442de-5d2d-4b49-87af-5f4052df1321",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65187eef-baf2-4dfc-8437-05e38a3144e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c54ecf5-e478-46c0-9850-971e37346883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507f08a5-8fa6-4567-95e4-5cb30ebbd16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686e9523-cc5b-411a-8430-63b2daae5b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0aef7b-7296-4e18-845e-9b274c0e3b61",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04286159-7499-4ffd-b599-188c6ad02de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98117d33-3bfc-47e4-b885-f5dc55243403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d58972b-a603-4b31-8280-4aae07dc42e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7a95eb-7788-40e7-846a-7a18e5eeff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84dbfed-69c6-478a-b90b-6047f26ec3cb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a696f40e-a6e7-424b-b6b9-c650637576b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338bc0cc-3755-42f1-9e50-683386f9bcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104e8f67-14cd-4eb9-a051-8afde7b5b089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ebb40b-03e4-4c3b-818e-3e7e4cb65484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dd537b-6ee8-4e86-abdc-56b28c647f14",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8e79bb-e6b5-4293-a7be-e2d33fe2ec8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a63b7b09-52ee-4512-829f-2d8066528014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b545b0-9d76-4c21-aa57-9b2f2873fe1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6067ea-1a68-4f88-a849-dd3a3a10a331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65cdcbc-db95-448f-b5be-3f84bf4179f6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294c5b51-5abd-4766-a935-4010786cedc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7725dc02-9cbc-4018-abe8-9cd7bad768f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6d65ab-8a47-4de2-be40-0c83fb436d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7353ac82-ca43-4ec7-abb6-3ea78109e17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841f0c9c-6dd5-49f8-aa14-41f667bd01fe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ee3a41-3d38-4606-b1bc-cf9a1a07409a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6947ab-ebbf-4f19-a365-a5376dadcf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832755eb-c1b5-43b7-9bc8-6cd91f02358d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7a0c40-ac6a-4499-9702-7d3b5adfe638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e68cbf-08d3-4122-bb00-eaec787ca525",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f8d586-c035-4f86-b669-db32e40550c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1957071-78cf-4813-8428-385a0851c941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad85daa-22f0-4f90-ac1d-2de9409444cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7f646c-ad68-4d05-86d5-eadb7e7d9688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e11bb-c5a2-4138-bece-845bb394397b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ae45f2-4b60-4bbe-a28b-922d2adc4e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5296c208-072a-4e41-acaf-d413de9b098f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885f05b3-44c3-4ac8-9e60-64767bc257f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cafca5-c9b9-4d0a-bdaf-2ae6f2a6ecef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5658f6b2-88c5-461c-855a-cca9b688ce1a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a33e5-4237-48d5-80a4-2e271118d193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0269d1-36f5-488d-8ad5-85dcf725a0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b707246-b3d6-4f55-8080-5c6783fb0f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fff18c-473a-48c6-92fc-6cf59e3e6194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d81283-9b29-4ebb-9055-4390f21f4d02",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808e87f-dab9-4638-9ee2-bb04f07e1a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45dc9130-9335-42e8-a21a-6cef5933da43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4910478d-3c9b-4cf4-8164-68d9b6ddfe66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9692ea13-ea63-4779-8de9-f2cdafaee10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fff778-14f7-483e-89ca-f02fa8c51979",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245cddaa-4ec6-4eee-a263-0874ee7ec599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3ee0c4-e904-4239-8a1c-5d31c8de29c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe52f9b-0771-43cf-a12e-204427bb59d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42523962-910f-4aef-91d2-020b94b27a93"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97c3bac8-7637-42c3-bb3e-152e04502dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "741ac51a-6138-4d41-88a4-da96b79a2b2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd2027f4-daa4-4c50-b8c0-a70d9b6d169d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08a54b8f-14dc-4b88-ac8b-5d7c2c3c866a"
                    }
                  }
                ]
              },
              {
                "id": "fe2893f4-5ece-4572-946a-5a709ab0f7c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65d63950-4117-4814-8038-c30fb0dd214d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56506bff-8421-4ca8-8b2a-840174393d40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8205c8eb-a101-4363-aced-5253232b5783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf6623a-10d0-4d39-b8c6-0227b8180334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92f636bc-eee6-41ad-9435-539dcf2c93ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85889446-0973-4e77-82ec-5350cf05bf32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cffeee0a-1e42-40da-bb7d-6e16afa2e095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae339c5-0315-4a5a-9449-2045157d4ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ff3197e-88be-43a9-8342-cebda9b4bc89"
                    }
                  }
                ]
              },
              {
                "id": "8de0cadd-f3f6-43f0-b693-c578efa4c0fb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3cdf8f8a-fa65-4c3a-86dc-eb55baffefc7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd4eb2d-34b6-46d3-bb34-5de138056301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d1928d20-58c9-44ca-ac86-c567c8cab796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21800297-1fdb-46c2-acc5-23d9968ab99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9cbda9-b81e-4469-95c1-d350737d508c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72025c20-e327-400d-ade4-4e07437fdf61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5729085e-19ec-4da0-b1fa-ffd056c76c16",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a79982d-1fc9-4315-80d2-16cbbf21a5cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92fa6759-ae18-4db7-bca0-81e682393283"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9071b2f9-aea4-4e4e-b823-a7d4178c76c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2dfce93-21ae-4fb9-97d2-bb27ff44328a"
                    }
                  }
                ]
              },
              {
                "id": "a27d8ad6-5473-4060-b6ac-1478361ef118",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "839da952-07e5-4f8a-a885-af86d6288c8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ac20f1c-352a-48b2-85e0-d982c77fbede"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b66d3adb-957f-4946-9d5d-1333281958d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b4406c-8426-49f0-80dd-4cb69343b074"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2e9374b-5be9-4f21-a64f-62a48e5e1889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8cd37b89-578d-4507-bfcf-a7319ccb3656"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb3d15b2-846e-4bb4-9b1c-71f0d3bdc89f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4291c1e4-53cb-445d-a86c-5bdb533dbf9c"
            }
          }
        ]
      },
      {
        "id": "2d43cc74-f72e-46e4-832a-db440a185ad7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a35355fa-0142-4fab-a902-9c57f771f562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70ff645a-4de1-473b-87ce-d5d4148b28ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a388306-04ec-4ba7-8919-b576a54fc5a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41bd2ec-5bd1-4bfc-9580-fc0b7ad3b93c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9175fb9-344f-4d1e-8d5b-e87f5d4717a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8776e717-22dd-4537-bd19-0df8d7818d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "670c1760-c34c-499b-bdda-25dd79c7e722"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d2847d8-e784-4ef4-a004-d04fc7a9888c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8b5766-e849-4443-b7b2-1d0a6bdcf1ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6c0a061-de4a-4268-ab09-3f2e06edb4e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a06f1c0b-fe06-49e9-b1a0-51f6f54ab7b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8314842-1c31-4977-85b3-b963c73630b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8bf10249-3fe7-411f-bd59-2d0216f1d4a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e73f360-f4e3-4318-9aec-c70d36182d38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dc0559c-d5ac-4771-8117-5c3055a3a94a"
            }
          }
        ]
      },
      {
        "id": "8d2576fc-7491-4010-9eb3-2850db2c5916",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0a7d48f3-6f56-4ed8-b8cf-abe69a679a77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90180d2f-386f-4785-8d83-1cd2e62c08bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "751efe7f-b67f-43c8-8aef-1a370d7c0947",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78148c5b-43b6-47e9-a5a5-589a1007f561",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "117cdf44-3cc3-4475-99df-f97844bdf47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bd706b-aea3-4646-ae7f-e77263f84bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a606f146-98b1-424f-ae4c-d63986ab7171"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f055fd53-61dd-4bb2-a79d-a9b0112fb33a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f37f6b-3e49-49b0-85d6-5d1cae0ebf37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40370164-c9cc-40f7-b2e6-8972f246b321",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42de3658-53d4-4ead-98a7-85419c0e35a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9c69a5b-0bde-4950-95de-6c8f92539cca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e28ccc6d-efd4-4b64-8001-2d7324c4996a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b9dc1e8-3161-4bec-b6a3-90a535e231da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9729c40-781f-4c43-b76b-f910dfee3014"
            }
          }
        ]
      },
      {
        "id": "8ebc6191-7b71-420c-b59a-3f0975b44e9c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a44a6352-ba65-46fe-8af1-05ccdcee6e1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cae93179-fcd4-4e63-83ab-126aae911365",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9be47ef1-6e94-4ed5-b75f-648d88ace9ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4a298-dcda-46fb-a2e1-9799d61eba62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35124050-0f08-40e9-8b84-f9c070379888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93304c2a-5fa0-4e95-a9a7-3c68a53d5b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1401e7c0-fae5-4623-bba4-a89ae096b9f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a3ea9d-693c-431f-aa88-f74e9e335942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192e24a6-ed8e-44b0-953b-d0ed6511d20a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87957c2c-2c53-4b0b-af6f-c53cc80b7641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29119022-6b07-4251-b58e-59a54fa520b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77467b6-db30-4157-817a-606dfabc357f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdb58dcf-4f1a-45b0-b920-bdd60053e8bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab18d105-0949-4fad-a5c6-233d0d42e095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "534a5be0-39cd-4801-9230-0d9b1df37817"
            }
          }
        ]
      },
      {
        "id": "394fda34-e9bb-4486-85cd-fa06b8ff76dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "790f071a-0b0e-4851-97e9-8d04d56515c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7edb82f-ecd9-4a1b-b7d5-4b070998d1d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ea7674a-66b8-47ff-b99f-7cfdea500d06",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16301989-096c-45a8-aacd-a57a9ab32954",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "016c6e9d-5887-4e71-9a06-73b3fe54d51a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.47619047619047,
      "responseMin": 6,
      "responseMax": 651,
      "responseSd": 39.6726114564348,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727829913599,
      "completed": 1727829939661
    },
    "executions": [
      {
        "id": "3a809845-e47c-41af-902d-423c832b65f8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7bb895e-e428-42de-adbc-23ddec39c909",
          "httpRequestId": "bcc10e49-77ee-4e54-9c0c-0cca486ad666"
        },
        "item": {
          "id": "3a809845-e47c-41af-902d-423c832b65f8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "11e1eec1-3d4e-4104-b030-06c1d34f7bdd",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 0
        }
      },
      {
        "id": "c40609b9-b99f-4a2f-b537-92f298670e1a",
        "cursor": {
          "ref": "f78a21be-a43b-4a77-a04d-9dabadf8d111",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c82647e9-8d6d-4817-bb9f-9b9b76253b32"
        },
        "item": {
          "id": "c40609b9-b99f-4a2f-b537-92f298670e1a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2f387524-f244-4f98-8b0b-11c3aa069b03",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "acaab25b-d4c9-4ae7-908e-05955ee33760",
        "cursor": {
          "ref": "6071dbc5-ac85-447a-b6a4-90fd17439ebb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cba12d8d-067b-4725-9333-a6cd226d0b12"
        },
        "item": {
          "id": "acaab25b-d4c9-4ae7-908e-05955ee33760",
          "name": "did_json"
        },
        "response": {
          "id": "94ab4759-dc44-4e5c-b30c-2e196e9fbe7c",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8611e385-d75a-4c76-b136-1aeeca491028",
        "cursor": {
          "ref": "a3ab87e9-cf8f-4c08-a9d9-bdda3738f49a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12645aa7-4585-46d6-8448-c31529def6db"
        },
        "item": {
          "id": "8611e385-d75a-4c76-b136-1aeeca491028",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c99ab6d-d9a2-4ea7-8f80-95ea2a70f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8611e385-d75a-4c76-b136-1aeeca491028",
        "cursor": {
          "ref": "a3ab87e9-cf8f-4c08-a9d9-bdda3738f49a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12645aa7-4585-46d6-8448-c31529def6db"
        },
        "item": {
          "id": "8611e385-d75a-4c76-b136-1aeeca491028",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c99ab6d-d9a2-4ea7-8f80-95ea2a70f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937c0a39-ace1-4cd9-b291-6a29b142a50c",
        "cursor": {
          "ref": "b0413cb8-5653-4a95-89e3-428c8a871dda",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "774c0fa9-fae6-4df0-9628-c1a43f3c9d68"
        },
        "item": {
          "id": "937c0a39-ace1-4cd9-b291-6a29b142a50c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb7983a7-be68-4b04-a46c-8623be40f07c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 136,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47943e13-1d33-48a2-a4d1-8d927814257b",
        "cursor": {
          "ref": "c75119a2-8511-4da2-8f3a-4e062005175a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e5b83e8f-a7b8-439a-96fb-133f2be1b49a"
        },
        "item": {
          "id": "47943e13-1d33-48a2-a4d1-8d927814257b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cd896d16-c37a-4eb7-9380-9dadd9d88ed6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe22c7a-9aaa-48dd-85b1-0667c382e3cd",
        "cursor": {
          "ref": "4953b464-98df-47f9-9430-286242e68df8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1adfd68-17d2-41aa-a3f5-f47c17c3886a"
        },
        "item": {
          "id": "bfe22c7a-9aaa-48dd-85b1-0667c382e3cd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "be28dff9-bedd-4fc4-bfb3-75ff1140e7d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18271322-d066-46e1-8ab4-60663eafc625",
        "cursor": {
          "ref": "f0a281c9-31cb-4120-a06f-12e5c5943f43",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "017407f1-371c-4ad9-b54a-e21f51e83c64"
        },
        "item": {
          "id": "18271322-d066-46e1-8ab4-60663eafc625",
          "name": "identifiers"
        },
        "response": {
          "id": "7ff18984-4633-4bc4-81c4-136e35bfded1",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8211bb36-54c2-4c1c-957e-9e0ca421bfef",
        "cursor": {
          "ref": "e0d68279-d493-4bec-8c5a-78cf4a220a10",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ed706e6-9869-4c71-b359-6af36919bbe8"
        },
        "item": {
          "id": "8211bb36-54c2-4c1c-957e-9e0ca421bfef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69fe9e30-2a81-4cd7-97a6-f7b811b52197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8e32e5-6c89-4dea-a46a-e3c43be3b65d",
        "cursor": {
          "ref": "fa0226c6-c340-4f86-8fac-1408accface9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d48f451a-9dd5-40f8-8966-56dd0244912a"
        },
        "item": {
          "id": "2a8e32e5-6c89-4dea-a46a-e3c43be3b65d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4de8ba4f-610b-4527-9292-e8d3746ee961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127f2e2f-0a74-450e-b042-c53dbdfeb0f0",
        "cursor": {
          "ref": "2c7c0a60-b938-4d93-be41-4a542afbad9d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9d9e3212-cc4b-49b7-8fd6-0cd0dc4ac9ea"
        },
        "item": {
          "id": "127f2e2f-0a74-450e-b042-c53dbdfeb0f0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e389884b-0560-419e-8d03-43ea4f5c4d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb59c9-723b-4a15-b5b8-27da57bc41ac",
        "cursor": {
          "ref": "8402f238-b8eb-43b6-a073-1d87fdb105ac",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "501ce6bc-96a7-4822-acea-39366240c430"
        },
        "item": {
          "id": "b9cb59c9-723b-4a15-b5b8-27da57bc41ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0511ad44-d59a-452a-96a2-cc5882bdded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d158db9-c564-40da-98d3-75f48400705a",
        "cursor": {
          "ref": "e496df2a-1e60-435c-abcb-ce0382713543",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09d49cfa-c80e-4b2e-8484-02d822256f71"
        },
        "item": {
          "id": "1d158db9-c564-40da-98d3-75f48400705a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c69286e3-d93a-4209-a186-1e9c595a4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfc3950-df8e-4485-8775-aeb7ac5d2285",
        "cursor": {
          "ref": "88b9d954-0b1a-49dd-aa86-aa998eb55962",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c6d00e17-1465-4cbc-ad0e-e2d92e7eceee"
        },
        "item": {
          "id": "bbfc3950-df8e-4485-8775-aeb7ac5d2285",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d46faa10-4c36-4b94-95b7-0f296f17efb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0c6ae0-106f-4b8b-aade-587ef5e675fb",
        "cursor": {
          "ref": "9b8d35ba-123f-4f4b-b162-8adcb6a42a34",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f27ac3cb-b568-453c-93bc-6add36b46ad9"
        },
        "item": {
          "id": "2f0c6ae0-106f-4b8b-aade-587ef5e675fb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "043b560a-e47a-42e4-a766-7232a8c49a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fc90ff-7d03-431c-87b1-7c6ed28b4d2b",
        "cursor": {
          "ref": "782ef2a5-674c-43bd-8a12-1e95f78ade10",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d267febc-15b3-4a2b-88b5-04182e773392"
        },
        "item": {
          "id": "13fc90ff-7d03-431c-87b1-7c6ed28b4d2b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0453b6fc-b15d-4b3b-890c-7725affc9479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa83ec-3cd6-4876-ac7a-cebc1759877d",
        "cursor": {
          "ref": "717b3704-2aff-4db9-ab07-ef03e5e244d1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "016aab24-f292-49b5-9f72-90cb55b20dfd"
        },
        "item": {
          "id": "bbfa83ec-3cd6-4876-ac7a-cebc1759877d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7d1f8df4-ac16-45e3-ac48-42b883fe141a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f7fb83-2900-4b5c-bad0-a7eb18e1bdcd",
        "cursor": {
          "ref": "16cf52bc-7463-40cd-8d62-83cc6d19af81",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b40f8198-b600-439c-9b0f-da55f2b56f59"
        },
        "item": {
          "id": "63f7fb83-2900-4b5c-bad0-a7eb18e1bdcd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b92bc12e-2f34-4b98-83a1-8ef00dbb9743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414ea867-738c-4963-9125-718f6ec82025",
        "cursor": {
          "ref": "9f40b8a6-88ef-45db-b367-626cf3df57e0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e23852a9-5088-42ef-85b8-9bceb3cc8e58"
        },
        "item": {
          "id": "414ea867-738c-4963-9125-718f6ec82025",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "09019193-56c4-40a3-942f-7f2244fa33ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821b6af-5f9f-473e-ad5a-372aab2ea008",
        "cursor": {
          "ref": "51ad7e98-7a4c-4328-8822-3da42ee3b949",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e5b7e6f0-0517-4b10-ab38-243544626e15"
        },
        "item": {
          "id": "a821b6af-5f9f-473e-ad5a-372aab2ea008",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6faa364-2724-4086-a8b0-100bc89578a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec45baa0-45ad-4786-8aed-ae71297be859",
        "cursor": {
          "ref": "743c67a9-f99c-4e1b-9649-ed77838078ac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "175e4b5a-56cf-4113-a3b7-83ab3281df1a"
        },
        "item": {
          "id": "ec45baa0-45ad-4786-8aed-ae71297be859",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "13af73cd-c49f-4921-b6e5-c943abf4d88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2443e926-05e5-477e-aa8e-46eec434c3ac",
        "cursor": {
          "ref": "42dc271f-b920-4525-bbdf-bfd1b1b5e766",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "52189ec0-c061-451e-8669-750709d28a89"
        },
        "item": {
          "id": "2443e926-05e5-477e-aa8e-46eec434c3ac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e6461e8e-e86f-4fe6-b7d1-3bb39b01d007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8189df-8b6f-48fb-bb75-71701c91bab8",
        "cursor": {
          "ref": "b83e0c1a-500a-4da6-bc6c-8fc1d24c39cb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2e13a0a1-3bb3-4e19-be42-027432d7c045"
        },
        "item": {
          "id": "6c8189df-8b6f-48fb-bb75-71701c91bab8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2885bd29-88fa-45c7-9b24-977a33206039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862e3184-907f-4b16-8c64-e6af416279cb",
        "cursor": {
          "ref": "0452d22f-434e-443b-b5a2-604e2d72862d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3faa8cb1-cb97-40ee-9009-2bc550b5156f"
        },
        "item": {
          "id": "862e3184-907f-4b16-8c64-e6af416279cb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "92931541-3442-40b2-bb58-37786c6cdcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a317f3-dc71-4d4c-ac40-7e8523578130",
        "cursor": {
          "ref": "088b968f-bf93-4c28-b7f5-ee23e84a681b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "336c3fbe-8424-4c52-ad28-7123baa73d68"
        },
        "item": {
          "id": "59a317f3-dc71-4d4c-ac40-7e8523578130",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e78b129a-b838-4444-8a55-0037aa3896ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e56465-8aa5-46ec-bbee-129c5296b427",
        "cursor": {
          "ref": "e35f0d14-6e6e-4e34-915b-7160be9eeb88",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "049d143f-3b17-4269-a905-a6fd3e87350d"
        },
        "item": {
          "id": "67e56465-8aa5-46ec-bbee-129c5296b427",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "54c7f975-8909-45de-9793-1e4641a99b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051d1ab3-5475-4806-9b99-45e4fbc0977f",
        "cursor": {
          "ref": "f05b3761-1a4c-4473-9f1b-efb1d03c452b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ad82ae11-1c78-4979-b9af-67da3ee025c0"
        },
        "item": {
          "id": "051d1ab3-5475-4806-9b99-45e4fbc0977f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef1a5aa1-4cd3-4698-8cbc-93f77a7dbcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0b2a5-f42e-421c-b59b-d03d9b057ce2",
        "cursor": {
          "ref": "07e90c7d-0189-42d3-97ef-281557ee7ff0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "29d1ba60-6aaa-462e-85d8-167ad48fa35e"
        },
        "item": {
          "id": "89b0b2a5-f42e-421c-b59b-d03d9b057ce2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "48dd7639-1f6e-402b-86e7-104394ec8d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d1d9e-7493-470e-a942-1a0f4ea44060",
        "cursor": {
          "ref": "81ac67b5-2e43-435b-ba13-40e9ee21f075",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a724e4fa-2200-429b-8dfa-8a29767b28e9"
        },
        "item": {
          "id": "f38d1d9e-7493-470e-a942-1a0f4ea44060",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9bada157-a25b-4408-91ed-976be963489d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78c4443-7e3d-4467-aabf-8b6d2e3cb40a",
        "cursor": {
          "ref": "7ea7cad8-5d35-47a8-b419-f7e7c52796f8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "753fd142-db0a-402f-a847-84ce1c866fd1"
        },
        "item": {
          "id": "a78c4443-7e3d-4467-aabf-8b6d2e3cb40a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "330f9c1b-752f-446f-a04e-272c009826b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc18b59d-b391-456d-ad8e-e644adf8e291",
        "cursor": {
          "ref": "5c8ec1a7-f0fc-477d-bdb4-4f6c0bb927e0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "22675d94-02a9-42de-9c56-204e08a3a37e"
        },
        "item": {
          "id": "cc18b59d-b391-456d-ad8e-e644adf8e291",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8865a5e9-b7af-44aa-8023-b4b7ebf8cb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c6a3c8-1ff3-4d19-a1d5-24d893bc5877",
        "cursor": {
          "ref": "21a708fa-5f40-4989-874d-8264ebe7745d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8378106a-d943-4b8f-abcc-372452bfd942"
        },
        "item": {
          "id": "12c6a3c8-1ff3-4d19-a1d5-24d893bc5877",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6d6fabad-6892-4396-a30b-cc477d500b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d998de-a66b-44fd-9396-75a8f28de3c4",
        "cursor": {
          "ref": "11c66a5c-58c4-4364-a604-816445ef4c34",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "12830cfc-c3bf-443b-9782-aa706bec8147"
        },
        "item": {
          "id": "07d998de-a66b-44fd-9396-75a8f28de3c4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c23da37-c980-4272-b187-d6c9e85cb023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e0180c-2b68-40c2-97a7-e0379ec6f465",
        "cursor": {
          "ref": "74e4b864-8ea4-4f17-9bbd-993483b8bffd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c7890151-6390-4af1-8d2e-32afb3dd6658"
        },
        "item": {
          "id": "f5e0180c-2b68-40c2-97a7-e0379ec6f465",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cc2d500b-0757-4afa-88e2-05aaa877cfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b90c4f-e286-4625-8a02-30af83117a09",
        "cursor": {
          "ref": "c69315ab-6852-479d-98f1-64d82b105eb9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "adc9d31b-9efc-4a82-bddc-8d8d45a1b7b9"
        },
        "item": {
          "id": "58b90c4f-e286-4625-8a02-30af83117a09",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d700df6e-76c9-45c5-a516-f82f27a6c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad851af4-b4fa-4bd8-b162-97ebdafc3a65",
        "cursor": {
          "ref": "31dd28eb-f243-42cc-8339-a25507ceaab4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "91923dca-c58f-4d87-b63f-2e8dba0614b8"
        },
        "item": {
          "id": "ad851af4-b4fa-4bd8-b162-97ebdafc3a65",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f9a0f6e5-9c74-4c0c-b672-7295779a6348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98618e53-e328-4e9e-b7a5-5dfeb1da31fb",
        "cursor": {
          "ref": "a6eff441-b1a9-4c9b-bad4-a1a7c3c76e1a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c241f785-be9f-4516-b7de-4e6f199be13d"
        },
        "item": {
          "id": "98618e53-e328-4e9e-b7a5-5dfeb1da31fb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6a03f21b-b7c7-48c7-bf11-e71dbad2eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04904f7b-517b-4d98-a6d3-b98b2e2abcaf",
        "cursor": {
          "ref": "6e2a7ba2-e0fc-46f7-8be5-188fc1a9cbdd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3cde5ab3-cd5b-4382-bbd0-a8ce6dcf1653"
        },
        "item": {
          "id": "04904f7b-517b-4d98-a6d3-b98b2e2abcaf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d26efb79-ccd8-456e-a5e0-f341a3c0178c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07e199d-90ed-4380-9f1f-c7fd50a66bc6",
        "cursor": {
          "ref": "d36af9d4-a16d-4493-9696-04817fa29da1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f72fd2c-90e8-4d36-bd95-4e6529c7366b"
        },
        "item": {
          "id": "b07e199d-90ed-4380-9f1f-c7fd50a66bc6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8e9186ac-b892-438c-86b6-fcee9451abd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baa7144-bef4-4ea6-8299-7e07820b3334",
        "cursor": {
          "ref": "260e065a-12e2-437f-a876-7c5ef67fc2d3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d09476c1-f26b-4e1d-b6e8-12ee2ed40522"
        },
        "item": {
          "id": "4baa7144-bef4-4ea6-8299-7e07820b3334",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2e626b84-8280-4d44-bf8b-b103f2506791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb1e26-1250-42a1-89f5-39dddb0438e5",
        "cursor": {
          "ref": "11ce143b-832a-495b-b62e-4e887b4071c5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "84fbcce7-68db-4354-869e-6b99b7de35a7"
        },
        "item": {
          "id": "4deb1e26-1250-42a1-89f5-39dddb0438e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7da13db2-9f61-4559-9a76-4c1944680573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a853d2-107c-4139-a489-a835c092ae0a",
        "cursor": {
          "ref": "7ae69652-61e9-46cc-b64f-79781cd727b4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eb03a0d8-74c6-42e6-b45d-b1566762a200"
        },
        "item": {
          "id": "56a853d2-107c-4139-a489-a835c092ae0a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b12459bf-aa7d-49a3-911a-9f4b87bfb85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac4dfd-9015-4420-8aa3-81774648a0b6",
        "cursor": {
          "ref": "f9ff8c5a-b2ee-4478-b57e-ff51e8413394",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0bfd1db7-f476-4317-b01d-7a3086419b37"
        },
        "item": {
          "id": "e8ac4dfd-9015-4420-8aa3-81774648a0b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bdb98b6b-6137-4c0e-a085-0b104c969d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15bf638-d328-4715-bb09-5db3c0dc9b46",
        "cursor": {
          "ref": "36335b4c-658e-4d2c-b058-fbd6c9cca51b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "09b1def4-6a90-404a-baab-88b84c274b2b"
        },
        "item": {
          "id": "f15bf638-d328-4715-bb09-5db3c0dc9b46",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8e0aa89f-07a5-4e66-934a-622a9583b27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74481b0e-3aa3-45af-95ec-904d952afeee",
        "cursor": {
          "ref": "fa8ee4a5-e55d-40a7-906b-9b5b0f141b64",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6669845f-ef9e-40e2-b23a-cd2ba3063bd0"
        },
        "item": {
          "id": "74481b0e-3aa3-45af-95ec-904d952afeee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "036d9252-7627-4c47-bede-87103859b74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e3169-18f5-47fc-b6b8-b88985818c3b",
        "cursor": {
          "ref": "d1c0b877-f2f5-4386-868a-ca43be3e6c53",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "78266bbf-0fad-4508-b3a9-e0a2835e8e4a"
        },
        "item": {
          "id": "b70e3169-18f5-47fc-b6b8-b88985818c3b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ddebda96-b7d6-419e-8c26-f1876130edc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dfec9a-71ca-4e22-aa51-98281769020f",
        "cursor": {
          "ref": "0f103bd8-3a3b-4a4f-a655-1aa9c86df268",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "76b47181-3dc3-4485-bde8-7b4184503b11"
        },
        "item": {
          "id": "63dfec9a-71ca-4e22-aa51-98281769020f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d46a4109-b756-47e3-94fb-2255b47eaec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a947d025-b976-4b10-b3ec-8364ee9df2c4",
        "cursor": {
          "ref": "08067ac5-c7a0-41f9-9cd4-eddcb23ee34b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1cdee3f5-c5da-435c-9d18-6641638bd634"
        },
        "item": {
          "id": "a947d025-b976-4b10-b3ec-8364ee9df2c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "89c03f12-96b4-4a2c-8e86-6ebe56436f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3fa52d-3c46-47da-a481-ef4aa2f623f2",
        "cursor": {
          "ref": "6b4e1513-cf5a-4ea7-bb31-ab9b54cc11b7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d38d1986-5e97-419b-81ba-d13e7802b134"
        },
        "item": {
          "id": "4f3fa52d-3c46-47da-a481-ef4aa2f623f2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5931e6a9-140b-4b5f-8204-0c1f7d6cffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a289afad-d732-4460-a09b-78310f2730c4",
        "cursor": {
          "ref": "ac0b2de3-9965-4334-ad24-6d0c10cc5673",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fb6d5552-0fa8-44a1-bc71-1b2968f6a681"
        },
        "item": {
          "id": "a289afad-d732-4460-a09b-78310f2730c4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f1cb5bbb-bd87-41c3-9192-3a21bd27cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fcf937-159f-4d33-ac25-729305024318",
        "cursor": {
          "ref": "03c97ec6-d486-4bd2-9a3d-ad778f989e01",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "74f61cde-aa91-4b55-8d53-41458c4b8b66"
        },
        "item": {
          "id": "c8fcf937-159f-4d33-ac25-729305024318",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2a9177c4-6f87-4d11-a2fe-3bcab31cb4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2842539-f845-405a-be8c-8d833e6dacb8",
        "cursor": {
          "ref": "edf82ad3-8f71-4e64-992a-9808083552db",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9e2354b9-3579-4370-9bf9-aeaf59566225"
        },
        "item": {
          "id": "f2842539-f845-405a-be8c-8d833e6dacb8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c70497e6-90c5-4701-b6ba-c5d070109e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e863b8-9618-4598-a2ac-be7586c0e41e",
        "cursor": {
          "ref": "d240f858-3fc4-4e1e-9e42-9d85df959096",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fc10ca02-616e-4bf1-b001-3f6830f975e4"
        },
        "item": {
          "id": "95e863b8-9618-4598-a2ac-be7586c0e41e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd4b9d98-6e52-4dd3-911c-f8366b57f836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49213cb-5d66-4519-a2ca-572ed7d13149",
        "cursor": {
          "ref": "0cb1da77-f608-4053-b8f1-39f2475284c8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0e8752be-8333-4d2b-8b3b-943e92bfe807"
        },
        "item": {
          "id": "b49213cb-5d66-4519-a2ca-572ed7d13149",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8a2defe-0c09-4f2e-b864-35f1f8f2cafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e289cf-c102-4f22-80d5-3e554285087c",
        "cursor": {
          "ref": "dfe90f69-849f-4a73-9c49-ada139bbd2e7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3ca3329b-bf6d-4edb-ae88-8f8136a51845"
        },
        "item": {
          "id": "55e289cf-c102-4f22-80d5-3e554285087c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a41aa131-a569-4fec-8086-c4115db5ee29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b142dad-3bdb-4554-b657-40757159f46f",
        "cursor": {
          "ref": "328ff6b1-c433-4cb6-bc45-69972aa9317c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6cee8c36-f449-4ef3-bb46-e3b3573bdab3"
        },
        "item": {
          "id": "6b142dad-3bdb-4554-b657-40757159f46f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6e210f4b-515b-4ebc-abe4-e1a9d329a6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7045841-2f61-46eb-bce9-3e9f2df1369e",
        "cursor": {
          "ref": "db3edb07-3eb2-496e-a9e6-94193271e2c3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "93967239-16a9-4fa6-bcfe-3caf89903de9"
        },
        "item": {
          "id": "d7045841-2f61-46eb-bce9-3e9f2df1369e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d19397d3-c823-4bc8-982f-a6dcbf709de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3539daa9-b552-4d5c-a0df-c050a81f6516",
        "cursor": {
          "ref": "5cfdfae5-d32f-419f-95a5-711270acd431",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "85db6257-69ae-4abb-9a58-106e9278d523"
        },
        "item": {
          "id": "3539daa9-b552-4d5c-a0df-c050a81f6516",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "378ae377-ef6a-4109-bf51-135ee4cf4baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c09648-d798-49af-826f-3a250dbffb6d",
        "cursor": {
          "ref": "01e5b91d-ddcf-4a30-9712-eab1d89b380a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cf0d612b-72d5-4a69-a1d1-fe25c3a2e765"
        },
        "item": {
          "id": "33c09648-d798-49af-826f-3a250dbffb6d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d272c2ef-c17c-4a2d-9f2a-c7e25ff972e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3cf7d5-fd55-4ab6-a367-22dc57d52064",
        "cursor": {
          "ref": "573b2a35-2e9e-4a4b-94c8-9a6aa1d693d5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8ebeb0d3-0883-44bc-b284-612c6c4e3f7a"
        },
        "item": {
          "id": "df3cf7d5-fd55-4ab6-a367-22dc57d52064",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5d617acd-06db-4e10-903a-1ca4b7a6cc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83500e67-1aa9-4cbf-bffe-60fd3f07dd74",
        "cursor": {
          "ref": "6a7dd998-47c9-4e87-a078-d477c3ab325c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cade27d8-4aac-4057-b141-8f7b12685c80"
        },
        "item": {
          "id": "83500e67-1aa9-4cbf-bffe-60fd3f07dd74",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6f76255-8bea-4491-a168-cc272dd3a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b190a4d0-7062-4f8d-9d5c-74756438e1f5",
        "cursor": {
          "ref": "4ceb73a7-c29f-4533-b7c9-9b6f456ff873",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "045d6b95-9d90-4303-bf02-cd6363b5cff2"
        },
        "item": {
          "id": "b190a4d0-7062-4f8d-9d5c-74756438e1f5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a841a0f4-8c1e-4bce-b355-0022982b17d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a627d4-13d1-4120-be2f-cb98a118f15b",
        "cursor": {
          "ref": "6927eee0-66da-4346-bd00-4615192c6811",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "33c3cacc-924e-4e8c-8fef-23c113056d72"
        },
        "item": {
          "id": "15a627d4-13d1-4120-be2f-cb98a118f15b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "722c04ee-ee0a-4579-b9a4-522d13bb81ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51ce632-2cb1-4ca9-9483-9b457def9310",
        "cursor": {
          "ref": "f788116d-5d42-466f-a4a0-2664a160736f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6519118f-0930-4d5a-a4c7-c3cea668ab41"
        },
        "item": {
          "id": "c51ce632-2cb1-4ca9-9483-9b457def9310",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "64ba7709-b761-46e4-8e4f-575d11c0607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8461e6c6-21e1-4c54-a128-da6a293d6eef",
        "cursor": {
          "ref": "d539b0c9-eea9-44c9-9168-ed27f68b00ce",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9e1584a7-275d-4241-82e5-a1cb42d62f10"
        },
        "item": {
          "id": "8461e6c6-21e1-4c54-a128-da6a293d6eef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e7a1281e-dc18-4c23-b2f1-713cafbbec92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94481d53-362e-4ee2-9803-523e2c0d30d9",
        "cursor": {
          "ref": "c96550ec-6dd8-44ad-9e35-2bca96895e76",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "065890bc-73ca-4fe9-be34-0b749463e418"
        },
        "item": {
          "id": "94481d53-362e-4ee2-9803-523e2c0d30d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb3220df-b30c-4fa4-961d-c2a1dbc40e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c4c53-9a4e-4823-b1f0-5ea6248f4bb3",
        "cursor": {
          "ref": "d199866e-7d57-41d8-9eee-56d1342f3e8d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5df09314-1455-4536-9021-2611cbe043c1"
        },
        "item": {
          "id": "d99c4c53-9a4e-4823-b1f0-5ea6248f4bb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "07223a2f-276e-41e3-8bdc-0f6ee130847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e913c64-4a1e-4e22-95f6-e625d21d9402",
        "cursor": {
          "ref": "bd7f2437-48eb-4227-ba25-252d708ef979",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d034c309-6751-41f3-b391-5ebcb57808f3"
        },
        "item": {
          "id": "9e913c64-4a1e-4e22-95f6-e625d21d9402",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b4d632a2-a938-4c1a-89e5-53f4f884bd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98541ad-6924-4bc3-96e3-f3b3f5677e2b",
        "cursor": {
          "ref": "25194ce1-dc70-47e0-a3d4-8947e81588ff",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "188339e9-4c24-4d31-a512-468f27897510"
        },
        "item": {
          "id": "d98541ad-6924-4bc3-96e3-f3b3f5677e2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c263580f-fd40-46a6-af96-13bf1b4a93d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f215dc9c-7b7c-4478-86b6-5ff2610febc4",
        "cursor": {
          "ref": "290e8e97-955b-4b15-9d0b-89bf8fa9b47d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e8a8e97e-7058-4a89-8801-23e2013c1570"
        },
        "item": {
          "id": "f215dc9c-7b7c-4478-86b6-5ff2610febc4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ef488f52-8716-4576-977a-e8fe710cbcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b316698-9a1a-4cd4-af3f-e816c3bedc2e",
        "cursor": {
          "ref": "77380a27-6550-4881-ac85-7bd9597170ed",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "05977510-dd97-463c-98ca-272b5e9516f9"
        },
        "item": {
          "id": "7b316698-9a1a-4cd4-af3f-e816c3bedc2e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae924c97-55ac-46c6-a31e-d79f8dd2d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea5e24-c6e8-4070-a6ea-03ca72b1df0d",
        "cursor": {
          "ref": "d9f3575f-d161-4a1a-bb5b-15fd9253a198",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "361f77e3-b6f4-4a75-a085-ec06fcc6ab28"
        },
        "item": {
          "id": "f9ea5e24-c6e8-4070-a6ea-03ca72b1df0d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ed21bdbc-a4e9-49cc-9eb5-38f3af9f666b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9effb254-ae94-42e2-8b1a-ddbb13c56acf",
        "cursor": {
          "ref": "57b68ac2-be04-4902-a2fd-e77072eeb785",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9965eb2e-b0b8-47a1-b72b-9abb86a67c4f"
        },
        "item": {
          "id": "9effb254-ae94-42e2-8b1a-ddbb13c56acf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33a54942-5fc1-402e-827a-4bbca5e95309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee9a90-536d-4830-8951-58ac299f0471",
        "cursor": {
          "ref": "26498f1d-06a4-42f2-acf3-46c349be0f31",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c9e5f4ea-5837-4a71-b4d1-8bd8eb4810eb"
        },
        "item": {
          "id": "79ee9a90-536d-4830-8951-58ac299f0471",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a8295a8e-8749-48ef-bad3-ea2953dd2b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831b89cc-cc00-4e6b-b14f-5f892f13beb9",
        "cursor": {
          "ref": "941d5a3e-512c-4a48-9b0c-3869f24357f0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9d506fa4-9623-41d8-8202-d4fe63f17e4b"
        },
        "item": {
          "id": "831b89cc-cc00-4e6b-b14f-5f892f13beb9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dc791796-7f0d-4da9-8297-e90cb1fa49de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6217919c-86df-41d4-86cf-644290059f94",
        "cursor": {
          "ref": "c8cecea4-5800-4825-a49f-bf65dd76476d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9dc8c3a7-7a0d-4543-994b-dd6d8b0cdea0"
        },
        "item": {
          "id": "6217919c-86df-41d4-86cf-644290059f94",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6e8340bf-32ef-4f2e-a98e-735948120f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6319c6b2-503a-41d2-a5b0-8cdce34164d0",
        "cursor": {
          "ref": "101be499-4557-4c5b-be91-122818e2a020",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c7de43c1-f996-41f9-9155-8e0eea8daf43"
        },
        "item": {
          "id": "6319c6b2-503a-41d2-a5b0-8cdce34164d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14ee2179-668d-46bc-9992-7eb24ddaae70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b188c0-bf50-4484-a92d-67e20774deed",
        "cursor": {
          "ref": "6e6a7399-ec53-4590-bb25-9ca9319f6d68",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e4d6053-65f5-439c-a6d2-86de536e9cfb"
        },
        "item": {
          "id": "a8b188c0-bf50-4484-a92d-67e20774deed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f640532-0fa9-40d3-8d70-f1c3383445fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0e0234-6216-43b2-8a7d-1764582a76ad",
        "cursor": {
          "ref": "acd7eaf3-104c-48e4-8007-aee316b7a1ca",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c817efde-8418-482b-b1e4-3566712333f2"
        },
        "item": {
          "id": "cd0e0234-6216-43b2-8a7d-1764582a76ad",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "84b0fe49-b5f1-4277-9700-334301678877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7085fdce-9f2f-4bda-82ed-244f60063486",
        "cursor": {
          "ref": "bb19016c-2026-4bca-9557-d15a5aa5d0f0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9da77cd1-ba0d-4f6b-83c8-57708bd1b935"
        },
        "item": {
          "id": "7085fdce-9f2f-4bda-82ed-244f60063486",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "571c1691-422c-4433-82f0-0013899986f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab1ccee-a586-454b-9bc6-2e5594755cc6",
        "cursor": {
          "ref": "af449699-3d85-4e23-9b86-c2a3773c6ec5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "22629a77-dd99-422d-b8fe-8cd2a5adafda"
        },
        "item": {
          "id": "5ab1ccee-a586-454b-9bc6-2e5594755cc6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "701978af-cbb7-4035-b10d-51bf402535b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f6eab4-be9a-451f-9543-852bfe6210dd",
        "cursor": {
          "ref": "9674120e-61ae-4449-8e8a-513db1139906",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3ce9f8b-86dd-40d7-b9a8-44fc73d70e1a"
        },
        "item": {
          "id": "49f6eab4-be9a-451f-9543-852bfe6210dd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "68a4b847-7390-4c8d-8c92-2e7f7a758ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0999f94e-bf81-4dde-8238-234e30fa66a6",
        "cursor": {
          "ref": "c3e2cb2a-301b-4202-b6d9-8192f1840296",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16071b73-5a09-4207-b41c-60197b1a112e"
        },
        "item": {
          "id": "0999f94e-bf81-4dde-8238-234e30fa66a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7932f523-1209-407d-b673-89f8bf763bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a968a7-fe27-4676-b1cd-48b155db883f",
        "cursor": {
          "ref": "915e562d-a7d0-4aad-a281-09c9748f9028",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7a5df16d-350f-48c5-b991-e2bb03799035"
        },
        "item": {
          "id": "60a968a7-fe27-4676-b1cd-48b155db883f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3db0cb05-ce07-4812-a918-8cb8267b6dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c53b7c3-48ed-44d5-b107-4cc907de4446",
        "cursor": {
          "ref": "41b1043c-f2c2-471e-8edd-dd931c528d5b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16ca76a8-abf6-4485-ac71-ea3adb8193f3"
        },
        "item": {
          "id": "5c53b7c3-48ed-44d5-b107-4cc907de4446",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e8bba920-2c4b-4cb6-9f7d-2146bc9b1922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb4bac6-94a7-453c-8c41-27fa92bdab19",
        "cursor": {
          "ref": "2e76a96e-96c9-4d25-ab3e-22b559dba51a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d1723a4-71b0-416f-a76e-c21215b004c8"
        },
        "item": {
          "id": "8eb4bac6-94a7-453c-8c41-27fa92bdab19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3fce7c0d-cc76-4943-bc0e-4dd95dc5484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ed2ed3-5483-42bc-9f9d-c706a7f4204e",
        "cursor": {
          "ref": "03c826d9-712e-4e62-bd69-e69952ce4ee1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "73b61b39-09e0-4ca1-89f2-60838d6cef21"
        },
        "item": {
          "id": "40ed2ed3-5483-42bc-9f9d-c706a7f4204e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "25f7a281-2bd1-48b9-a332-02ff9d797511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd924aea-7e47-406e-9221-f4df32c1c42f",
        "cursor": {
          "ref": "d351b178-9aed-48fd-ac31-de657775be77",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "68251a34-9f0c-46c9-ba7c-15234ae857f4"
        },
        "item": {
          "id": "fd924aea-7e47-406e-9221-f4df32c1c42f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "75cd9545-c171-4beb-93a6-c7b90b98d0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab209728-1e79-4cf2-ae5c-cf6eec3d935b",
        "cursor": {
          "ref": "26fe52a9-3244-4fd9-8156-4900bee45677",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7183f57-c82d-4809-8231-c9bd407e4133"
        },
        "item": {
          "id": "ab209728-1e79-4cf2-ae5c-cf6eec3d935b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7b981f1b-11eb-47e6-ade9-dbe14982d0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d954a16-b1ad-4b00-bc4a-19508efd4673",
        "cursor": {
          "ref": "17282117-da09-4235-a13f-f41e2a5fad9e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f01d1ce0-b1ff-4c07-9d19-5c2bca038ab2"
        },
        "item": {
          "id": "9d954a16-b1ad-4b00-bc4a-19508efd4673",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d833a3d-5a43-46ee-9ce3-9db1ce3a83fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f5b08a-3723-4760-8e6c-ded81a42323a",
        "cursor": {
          "ref": "3e843201-ce49-4426-9752-462fcd86b5ec",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1cc2f76a-a4f1-4b28-a399-8ba145c4d36e"
        },
        "item": {
          "id": "55f5b08a-3723-4760-8e6c-ded81a42323a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "980f1a8d-4259-4482-a9ab-acc499480f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3466cae-050f-47bb-8ad4-516801bf5d0f",
        "cursor": {
          "ref": "48ad7f7c-7557-4e27-b5cd-4b02881c65cc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd6b0b35-3b6a-4d16-bc13-0f45271a437b"
        },
        "item": {
          "id": "e3466cae-050f-47bb-8ad4-516801bf5d0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "17f763f5-6400-4eba-9a35-51791f9f95ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efab8a2-ec0f-4144-8c68-a0a7c59c3e86",
        "cursor": {
          "ref": "1997c148-4b5c-4889-b07b-eb38e18b72d9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2b505d13-976d-4373-901f-267ec54d6864"
        },
        "item": {
          "id": "3efab8a2-ec0f-4144-8c68-a0a7c59c3e86",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1ff7161f-5718-4227-a2f6-072d6bcd70b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b28afe3-46ca-4e18-bdb8-92dde9c8e184",
        "cursor": {
          "ref": "85685059-d282-43a8-9498-4a9816ea2933",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "115f268f-e60f-47a3-97b1-34a2aa159112"
        },
        "item": {
          "id": "0b28afe3-46ca-4e18-bdb8-92dde9c8e184",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c11ee950-d026-42f5-a17d-11a77c57c13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78323e94-c7b2-433b-be47-d20971d5ef74",
        "cursor": {
          "ref": "1bf54aef-db48-4df2-9612-dc41dea4090a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "156dd13a-87e0-4c7b-9fd9-89db4ec6b360"
        },
        "item": {
          "id": "78323e94-c7b2-433b-be47-d20971d5ef74",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "36b45b07-f7e5-40f6-a936-63e4b3e4a2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d92bfa2-d5e2-4bbe-b815-e5f6e16ad6ff",
        "cursor": {
          "ref": "afef4de8-f320-4a8c-b1c9-4d5b681da5a4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1d54396c-edcd-4cc3-a1e9-a64dc80dbf21"
        },
        "item": {
          "id": "1d92bfa2-d5e2-4bbe-b815-e5f6e16ad6ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cec993b3-a0eb-4cd0-bd98-e3cac9481fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82e2826-daa3-4770-8377-e52b8fb4741b",
        "cursor": {
          "ref": "fd7b5377-56fd-4214-acf6-c9eacb9f2375",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4c12824c-26ac-4da0-829a-55abf1d8e984"
        },
        "item": {
          "id": "b82e2826-daa3-4770-8377-e52b8fb4741b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "663e7494-7f10-44dd-99fc-1bffd940c158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b692ed-87dc-4d1c-9996-18a753cf5e50",
        "cursor": {
          "ref": "c3ddaadb-899e-48a9-933f-7a432043c1ce",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dc851619-d688-42ae-85aa-b2b537020b4a"
        },
        "item": {
          "id": "31b692ed-87dc-4d1c-9996-18a753cf5e50",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4ad409bc-1615-4fe6-82e9-18f550ff7c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f957f-d0dc-4a4d-bfa5-3580c7f96f5d",
        "cursor": {
          "ref": "cc7b3c08-1402-436e-beb2-e94074d9efeb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41cf95e3-d403-4228-be16-9cdfd82afcae"
        },
        "item": {
          "id": "286f957f-d0dc-4a4d-bfa5-3580c7f96f5d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f167fe0-40c3-4524-8f43-5b9dfc66f186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c69ecb-81ee-4582-88e2-281a86debd58",
        "cursor": {
          "ref": "25212a58-5f6d-4516-913f-36e95f9c7179",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c902457d-fb31-483e-8c6b-d28ac39e5b1f"
        },
        "item": {
          "id": "82c69ecb-81ee-4582-88e2-281a86debd58",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a50fae25-9af3-4317-aeab-2f11c08b580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4ba67-f71d-4b0a-b78f-415da9c12b1c",
        "cursor": {
          "ref": "f7f083b6-360d-4cbe-a11e-6ae4cfd3b475",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "443fb966-1dd3-40ef-9588-ae542fa7fa5f"
        },
        "item": {
          "id": "86e4ba67-f71d-4b0a-b78f-415da9c12b1c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "08c9d4b3-8552-4569-b4ea-bac3a2dbfdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba621c2b-1a87-4285-ba30-b752297d15b5",
        "cursor": {
          "ref": "6043d5ba-26e4-41c9-9935-bad67fa5f270",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d666eaa1-b0e8-4c2c-bfed-570e7efb2fbf"
        },
        "item": {
          "id": "ba621c2b-1a87-4285-ba30-b752297d15b5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "17ba7187-a910-4d74-8b01-d97f6b64028e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0f1c9651-8804-43f1-94cb-872abfed023a",
        "cursor": {
          "ref": "f90058ac-ad1b-412f-a62b-014294312e38",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b3bc5ae-5377-4947-a863-3fa39f1f897a"
        },
        "item": {
          "id": "0f1c9651-8804-43f1-94cb-872abfed023a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "07555aff-661c-494b-87b4-30120e6dee78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "53228bc2-1aa2-4276-87b8-9a77d4bc69c6",
        "cursor": {
          "ref": "4ab029d3-de32-4615-93e9-d2d73cbb2550",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b150dfc4-2027-4836-b211-1020c77e0410"
        },
        "item": {
          "id": "53228bc2-1aa2-4276-87b8-9a77d4bc69c6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fccdfd4b-2161-45cb-af8c-9007082be167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bc871d32-3bd5-4442-9ab3-c5ae739101b5",
        "cursor": {
          "ref": "8efb32ac-942c-4429-a7ff-8e261a3af414",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "33d86f44-cd7d-4268-a6dc-8b72f59c9409"
        },
        "item": {
          "id": "bc871d32-3bd5-4442-9ab3-c5ae739101b5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "25f693f2-3358-46bc-a59e-016d68424a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "34d588bf-971e-45b8-8f0f-fa8562b8b855",
        "cursor": {
          "ref": "7e627027-b181-4a9d-91b6-f58a226547c3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "523c7db0-4a59-4e6e-a3bf-7a0576fb6121"
        },
        "item": {
          "id": "34d588bf-971e-45b8-8f0f-fa8562b8b855",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5022343a-2df2-4093-b47f-dd3789ec8285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1032cd7f-8638-4fde-899b-7dc5e0433e1b",
        "cursor": {
          "ref": "3dcfafc5-91aa-4286-9542-199e9000e3e6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "42303278-5ca9-4cfc-979b-18ab340061ca"
        },
        "item": {
          "id": "1032cd7f-8638-4fde-899b-7dc5e0433e1b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a3676a3d-ab10-44bd-b4a8-96f314d8071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "38f91800-3109-4d5b-9dc5-97757a446079",
        "cursor": {
          "ref": "e260d454-2531-43fb-ad62-d6b468956e3c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3ffba059-2f12-4621-9efa-0b1d03e18cfb"
        },
        "item": {
          "id": "38f91800-3109-4d5b-9dc5-97757a446079",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f437eda9-3acf-4352-b8c4-f8bf2e77b8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "622eb4d0-f67f-46d2-a3a6-f652f4891892",
        "cursor": {
          "ref": "3c10ff94-06b5-4bd6-a8f4-a5dad400adef",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7708c4bd-2a48-4a1a-ab60-6f806ad31694"
        },
        "item": {
          "id": "622eb4d0-f67f-46d2-a3a6-f652f4891892",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e0129bf-5ee6-4538-b969-0f18e5455e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dff21a-c677-43b7-b2e2-1d4d6fddfd12",
        "cursor": {
          "ref": "6aec2b8f-5082-4d8c-91fb-2d946608c113",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2367d796-f60c-4945-8f30-3c124da3d648"
        },
        "item": {
          "id": "85dff21a-c677-43b7-b2e2-1d4d6fddfd12",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "baa08228-d2ad-4256-8f75-f9c8d834e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cb82a-7fc2-486e-afac-baa518bd13e7",
        "cursor": {
          "ref": "31bfe46a-f151-442e-9968-c91de60b1577",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bd22ce18-49a1-4f9b-9fe8-3f86300b9df0"
        },
        "item": {
          "id": "652cb82a-7fc2-486e-afac-baa518bd13e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8dbda90b-849c-4273-86b2-cc387ae25ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19acb384-0a38-4ee2-a1a6-859df8a7f918",
        "cursor": {
          "ref": "9baba66e-6ec5-4e6e-9b65-528a86331570",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "48184527-058f-4344-b422-e18fc76ddb27"
        },
        "item": {
          "id": "19acb384-0a38-4ee2-a1a6-859df8a7f918",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "83c650dc-b28c-4b0d-82e1-fe1a0afca390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a65d73-0269-43db-8425-e3e0c5842614",
        "cursor": {
          "ref": "f5b586e9-102c-41ac-891d-12ecb71fb6dd",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "66bd869c-1487-453d-b7f6-c84c329da9e1"
        },
        "item": {
          "id": "40a65d73-0269-43db-8425-e3e0c5842614",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7cfc548c-5943-46dd-80ac-5a43d58e52e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7df50c-93f1-4894-83dc-211ffcc7b261",
        "cursor": {
          "ref": "04c1559f-aea9-42f1-a203-6bbb9dbc32e7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ddc1e138-fc7e-494e-88be-1d817699086a"
        },
        "item": {
          "id": "ec7df50c-93f1-4894-83dc-211ffcc7b261",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "340f2c51-8429-40d4-9410-015f43befd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600af41d-1ca3-408b-885c-d864dae2625e",
        "cursor": {
          "ref": "d9009c20-c3f6-419a-ba59-9b0861277a83",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "04fd25f0-0f38-4f06-a1ec-a421c5752b64"
        },
        "item": {
          "id": "600af41d-1ca3-408b-885c-d864dae2625e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c44deb96-4918-4ac1-89f5-6eeebd6ef7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6962e66-543b-4e7d-9d58-771e6198d6a6",
        "cursor": {
          "ref": "7bb9a8c2-080a-4f56-935f-73def659c538",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "72bec90a-2225-447f-9087-baeddbb9d2a2"
        },
        "item": {
          "id": "a6962e66-543b-4e7d-9d58-771e6198d6a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be87b165-326c-448c-8f54-ebb5b1ab67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5994bf-bb15-4877-9a8f-354c20599cca",
        "cursor": {
          "ref": "c5af4edd-54df-4d7b-904a-1e6878336f34",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ff36a9fc-9c4c-4001-a84a-475fe17b2245"
        },
        "item": {
          "id": "8d5994bf-bb15-4877-9a8f-354c20599cca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7d6a2a90-16b7-427f-aa5f-0de97cfa2068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a8241b-3037-423d-b563-a62ac5db0c2d",
        "cursor": {
          "ref": "8c8a666a-29c5-490f-a687-234159a2c5c3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "82dc4ba8-3b38-40a7-920a-872869bbb470"
        },
        "item": {
          "id": "c4a8241b-3037-423d-b563-a62ac5db0c2d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0e7994c8-6aa8-4952-9816-5d2b6d8733be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20db731c-82b8-44e2-9220-9e04d6371e26",
        "cursor": {
          "ref": "3775afb5-3388-4d0e-8dbe-dfeb56734966",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da844ff8-b290-4fc0-a410-723a5ac7fa2a"
        },
        "item": {
          "id": "20db731c-82b8-44e2-9220-9e04d6371e26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03d40ada-9209-481d-841c-293b967f8654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e28b06-4964-447b-b668-8fabb3931136",
        "cursor": {
          "ref": "ec6d8ab8-7472-4b4b-84a6-9b4d947cf656",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8496688c-2060-4abc-8c86-018525b0386a"
        },
        "item": {
          "id": "33e28b06-4964-447b-b668-8fabb3931136",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "564ad68b-7a82-40ac-a23e-49500418f8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba16f4d-c5f7-40ed-ac6b-4421f802b9c5",
        "cursor": {
          "ref": "b85b60c7-8eae-4a76-9f60-2eaca1faf46e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bcc6c860-2e48-4ab8-aec5-7be108d00494"
        },
        "item": {
          "id": "0ba16f4d-c5f7-40ed-ac6b-4421f802b9c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "696e50da-315e-4ab9-baf7-f9cbe4774dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85c58f-1b27-4cff-b04a-7597bd68ec62",
        "cursor": {
          "ref": "dff2cf61-40db-4169-933c-92b15c0d7672",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4827376a-4dc0-44d2-80d3-da36d6981f90"
        },
        "item": {
          "id": "ad85c58f-1b27-4cff-b04a-7597bd68ec62",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dd4cbee1-124e-47ab-8b87-4534a9a758c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269ce4a0-5e71-4ed9-ba4e-a5e21e3b9476",
        "cursor": {
          "ref": "15347cc7-6909-49b9-aa9d-417a55ba0bf6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c2e7f874-9f56-4397-93dc-f58760c9d2d6"
        },
        "item": {
          "id": "269ce4a0-5e71-4ed9-ba4e-a5e21e3b9476",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49ee4633-0267-4a84-a2f5-c3d4b6f7f748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b29662-b1ef-44af-8055-e7e578da534c",
        "cursor": {
          "ref": "348e9211-c4c1-44a4-87a1-4c13735bae32",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af7e86d5-e7c7-4191-b366-e2b5709c86aa"
        },
        "item": {
          "id": "24b29662-b1ef-44af-8055-e7e578da534c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b59b3998-61d5-4990-8da7-5944b3a48f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d384206a-d510-43fc-bedf-f0fb30d80da4",
        "cursor": {
          "ref": "5f744548-3956-4029-ad96-d0f484aec5cf",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1d118249-ce6b-4f53-90ba-e989bd580047"
        },
        "item": {
          "id": "d384206a-d510-43fc-bedf-f0fb30d80da4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6cd561b6-6912-4122-81fc-6a07a58f023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d7aad-b92d-498f-affe-0fa101f63fde",
        "cursor": {
          "ref": "d3ab2daf-ac4c-4286-96f2-46d5c3887735",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "da50f459-fc44-4fdc-bbd0-e52c6488e445"
        },
        "item": {
          "id": "2f3d7aad-b92d-498f-affe-0fa101f63fde",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9c7a9dda-49f9-4e77-a17f-8595840051a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf73c17-0f3c-4c1b-be82-c30b61ebb567",
        "cursor": {
          "ref": "33366d9a-17b0-4084-b159-3d3a283b97b2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c93c84fa-18b2-4990-945c-47442dee7230"
        },
        "item": {
          "id": "cbf73c17-0f3c-4c1b-be82-c30b61ebb567",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "436de1f4-cd13-4242-b3f1-94b372952ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e81e605-3196-4b87-816d-8a2ad0049283",
        "cursor": {
          "ref": "88ae6ed1-4221-407e-9374-6125408e36fa",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca68cd5f-f3ea-4eaf-95fe-f3752bba3160"
        },
        "item": {
          "id": "4e81e605-3196-4b87-816d-8a2ad0049283",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "758b5f07-dad9-40d0-827e-cbbe949ab8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f756042-555f-4dbf-b164-caee5bad951a",
        "cursor": {
          "ref": "0ab6d982-ff06-4306-87b9-35b718751425",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8fa3897c-2724-4a50-98d0-e6774c2287cf"
        },
        "item": {
          "id": "5f756042-555f-4dbf-b164-caee5bad951a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8024dd8e-7cf8-4f87-b30e-5d4ebea645ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c683f-a9e3-4964-a4dd-56f631c16148",
        "cursor": {
          "ref": "799b8434-5dcf-49ca-a198-d5f22cb9d16b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d6e89b6b-3c99-48bd-97cb-154555ffbc5e"
        },
        "item": {
          "id": "b85c683f-a9e3-4964-a4dd-56f631c16148",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1bc7c59b-7625-4be9-8d72-a757cb16987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7300d5e4-1746-42ad-926e-9eab49a8b5da",
        "cursor": {
          "ref": "6ec23b9f-4769-43fe-851d-f01d4d17b9e9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8b09e470-66c4-4423-8dd9-32b54c43dc34"
        },
        "item": {
          "id": "7300d5e4-1746-42ad-926e-9eab49a8b5da",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb96120a-df81-459d-84ba-63ffbf189319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72364b8d-1827-48d5-a844-85fcd95a3814",
        "cursor": {
          "ref": "a62e8b46-5c7d-4334-a08b-3eed51cb24f2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9ac91028-8b06-4d60-9c3a-22171f84f76b"
        },
        "item": {
          "id": "72364b8d-1827-48d5-a844-85fcd95a3814",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "186ed731-eeb0-4185-b36d-fb2b698ee097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1316ab03-c852-46f9-85fa-9b26806e98d7",
        "cursor": {
          "ref": "6020ef8a-8fae-40b9-b15e-91eeb323db3c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "31f5447b-14c7-4577-9752-4ad5d5c0255d"
        },
        "item": {
          "id": "1316ab03-c852-46f9-85fa-9b26806e98d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "610abc4b-f120-47cf-a7c0-ba12c55af21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eecab2-3854-4c02-b36c-2c6ea7a1bf70",
        "cursor": {
          "ref": "c27e315b-e064-4269-ac48-257fdadc164b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b8f5b58-22a8-4bca-9ffb-98d5ee60125b"
        },
        "item": {
          "id": "08eecab2-3854-4c02-b36c-2c6ea7a1bf70",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e76374a2-ee64-4398-b0d1-1cdbb61abefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9aae23-44b9-40ce-858c-e72a5aa3c782",
        "cursor": {
          "ref": "b5ac4d75-9bf9-4733-a4b2-81f4735aa65d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "83fbe2f5-2f57-4f4f-af2f-e88d118e2d98"
        },
        "item": {
          "id": "2b9aae23-44b9-40ce-858c-e72a5aa3c782",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "23b74c35-92dd-402e-9ed5-2ade6399631e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1fcbd9-4b06-4094-b517-7f1efccf05e2",
        "cursor": {
          "ref": "4f7c03fa-b3e6-4e5a-92c7-f9e636fb8985",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "477d5e69-2c64-43e3-b61f-4b5c6147bc46"
        },
        "item": {
          "id": "1e1fcbd9-4b06-4094-b517-7f1efccf05e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6141500c-6741-4012-8692-1900ae78d65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9738b29-b131-4aa1-8b71-b796fde230d7",
        "cursor": {
          "ref": "a27095e6-4dc4-4e78-8964-856f9361b413",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7947afff-c762-45dc-b396-05939ec45399"
        },
        "item": {
          "id": "e9738b29-b131-4aa1-8b71-b796fde230d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a63af540-f361-48d8-9e4e-cf9ed9a863cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe9e4df-004f-4e15-b2a6-c9d634fbb339",
        "cursor": {
          "ref": "d9a03888-694b-4bd7-9754-742cc4fa8029",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0236145-df79-41d7-9a42-dd34da67d2b1"
        },
        "item": {
          "id": "dbe9e4df-004f-4e15-b2a6-c9d634fbb339",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b0dde719-92e6-473f-90f1-c33b22099ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59c846d-be21-4cbc-9fbc-75ded4356bde",
        "cursor": {
          "ref": "ffe5ad8c-f5eb-49fd-991e-8803a5a3e4b6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8416fb72-e06e-4585-8a77-9d6f03dfa9c5"
        },
        "item": {
          "id": "f59c846d-be21-4cbc-9fbc-75ded4356bde",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfa2cbc2-2948-473f-b935-34a340055f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e01758-974b-4db4-8b4d-63d5b6832094",
        "cursor": {
          "ref": "fe13e751-599a-4c98-a8f2-a1a70ea96425",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "86469620-54a1-4747-915f-bec10a441148"
        },
        "item": {
          "id": "80e01758-974b-4db4-8b4d-63d5b6832094",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0493bd75-b04e-4515-a804-eb0f572f4ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e0f784-567a-43e4-8ea2-4e67f9372eb8",
        "cursor": {
          "ref": "855253f6-3835-406c-a8d8-de80924eb875",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3795782-ae69-459a-9705-3bdcd61e3163"
        },
        "item": {
          "id": "f6e0f784-567a-43e4-8ea2-4e67f9372eb8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "34f3a8f7-5b2d-4f0a-aa32-e088c85f8038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028e33ec-1f9a-46a5-9575-7f8c4717141b",
        "cursor": {
          "ref": "b687f2b8-4629-43f4-92e8-ab9a4c9871e6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ced1db34-aef6-4316-ac0c-0f511a480aa9"
        },
        "item": {
          "id": "028e33ec-1f9a-46a5-9575-7f8c4717141b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "74b6fbfc-b3d4-41ce-a188-33f096ad5abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b783d68a-0198-40aa-b0e8-93dfb488ef87",
        "cursor": {
          "ref": "1f5af328-b61b-4319-a171-a74d69864a88",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e25c05c4-a053-43d9-b158-fb9cf004c972"
        },
        "item": {
          "id": "b783d68a-0198-40aa-b0e8-93dfb488ef87",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6e42273-4ec1-4477-8876-217529f2274b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0208e4-2593-4923-ab36-3e34d1da2623",
        "cursor": {
          "ref": "8e5ee95d-4513-4841-82ca-21cdf7621b78",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3ff0bd8b-9bba-4b7a-b605-2a034571b80b"
        },
        "item": {
          "id": "cb0208e4-2593-4923-ab36-3e34d1da2623",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ef81640d-a7eb-43ed-a70f-88ce83dd24ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8ca7d-d106-4199-97dc-88ba9b88a125",
        "cursor": {
          "ref": "3e775e79-752e-4588-9a3c-476e2ee02eb5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d5b8ec1a-b478-4ee7-816c-aebe1bae1624"
        },
        "item": {
          "id": "fca8ca7d-d106-4199-97dc-88ba9b88a125",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "02b93e43-2a08-43c1-b4e7-8da7150aa582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24de8f0-b35d-46bd-b1cb-2a915ff27a36",
        "cursor": {
          "ref": "4720b344-427d-48e4-9853-27f9f78c0169",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "398a8b5c-99d4-42c9-b2d2-2e0ef8b72ccb"
        },
        "item": {
          "id": "a24de8f0-b35d-46bd-b1cb-2a915ff27a36",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8918dec0-de86-472f-a422-04c0a539195a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1574559-ba6a-44f4-a57b-0896dd994e94",
        "cursor": {
          "ref": "1936a273-4567-48df-a51f-5b1528bf5a01",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "434e01f1-3720-4b24-bfc8-443d96a326b9"
        },
        "item": {
          "id": "e1574559-ba6a-44f4-a57b-0896dd994e94",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25773de2-ec3c-4db1-9e0d-5512f3e886a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72acee00-1187-4c2f-868c-193c52aaaec9",
        "cursor": {
          "ref": "bbebcc45-8745-4a2b-aed4-8f9644d80f3b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d7acde02-b72a-4a90-b381-10d746c8cab1"
        },
        "item": {
          "id": "72acee00-1187-4c2f-868c-193c52aaaec9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1f3b63db-2a5e-4b5a-ba94-51cb78b2e50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe5312c-2917-4f63-b6a3-2a36c4f06dde",
        "cursor": {
          "ref": "2f054937-d187-4e0e-b006-1c5cfede393f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5385eb1d-acae-4e4e-a245-337926ef5ebb"
        },
        "item": {
          "id": "2fe5312c-2917-4f63-b6a3-2a36c4f06dde",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7d867ac3-b9a6-4915-a00b-fc7c5e695674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b248f972-3599-484a-a1b0-7c836a988441",
        "cursor": {
          "ref": "538292bf-a836-4b29-873b-f19402524974",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a32199f-60c6-4a9e-b9fd-a47e8d7e2ec8"
        },
        "item": {
          "id": "b248f972-3599-484a-a1b0-7c836a988441",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9266ecd4-6314-4ee4-8406-32c5bdb060a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f4d561-82fa-4444-9b02-f3abe9fbb981",
        "cursor": {
          "ref": "609f2a90-a6d4-4e34-8829-b7acfd3966d6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "713189bd-1ae9-4fd1-9a7d-d40c8de36fea"
        },
        "item": {
          "id": "67f4d561-82fa-4444-9b02-f3abe9fbb981",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e4c0b3e-44d5-4dc9-94bc-bd70f77c0bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d115298-8fbe-4548-b6d5-34d50fd74c9e",
        "cursor": {
          "ref": "786d12b2-843c-4be2-9173-8efd8afef592",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1ab37059-f57c-428a-ba6a-3292d79b7dd1"
        },
        "item": {
          "id": "5d115298-8fbe-4548-b6d5-34d50fd74c9e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d596bb4d-71bf-4f9f-8581-ab0de106ee77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382a6db-bc10-40c8-a534-c05bd1f6cd53",
        "cursor": {
          "ref": "afbf2a63-01b4-43f6-97f9-184db1ddec2b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d4fb9c05-5970-4931-a4ee-7f0a3f2342e0"
        },
        "item": {
          "id": "b382a6db-bc10-40c8-a534-c05bd1f6cd53",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18892aef-bb1b-45d4-bbd9-fed5a77a0591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5284d5-2ecd-423c-998f-e18468685dde",
        "cursor": {
          "ref": "f4d116c8-84be-4ad9-8062-baa137c88adf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "82aff54b-bb85-4900-b71b-316006c1494d"
        },
        "item": {
          "id": "8d5284d5-2ecd-423c-998f-e18468685dde",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6b00040d-0c93-45c4-aa3a-ce26b17a991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222483f8-2504-440e-b01c-aedf4c17ff9b",
        "cursor": {
          "ref": "1d655dfe-2438-473e-9caa-6bea2287783e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "67a2bdaf-9fb5-4d4a-bbfa-bb153fda79c2"
        },
        "item": {
          "id": "222483f8-2504-440e-b01c-aedf4c17ff9b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2319cc5-3b8d-44d2-a9ef-e2bc8d78c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c865903-8d17-4803-a362-51d03861c8bf",
        "cursor": {
          "ref": "dd0086a5-af47-41ad-b6af-33c52dd27902",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "539ff048-d002-4b73-81ba-f6bf150aa246"
        },
        "item": {
          "id": "9c865903-8d17-4803-a362-51d03861c8bf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a2e20566-e6b5-4033-96d0-a191943b7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78da1281-b61b-480d-92bd-8e46dff447a4",
        "cursor": {
          "ref": "967cafe5-01b0-407b-abc4-e7838d136b16",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae9a4829-c010-4221-a0c5-2b242d62ece0"
        },
        "item": {
          "id": "78da1281-b61b-480d-92bd-8e46dff447a4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e03ecf90-92e4-4ee3-8622-5e0d503ab515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ac4d18-5405-4099-92e7-c7bfdc72932a",
        "cursor": {
          "ref": "7cd22d48-5cf8-4764-9aa3-62aacc1d0a92",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65d74c6b-268c-4429-87d6-3829a9893b46"
        },
        "item": {
          "id": "10ac4d18-5405-4099-92e7-c7bfdc72932a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f2220d05-9f43-44aa-a308-72b42a184723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15216472-5af8-4a6a-a76f-47ffd2efdfd6",
        "cursor": {
          "ref": "c559bceb-e938-409d-80c4-1c4d34357c1d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "666fff03-616b-4af0-b3aa-b5ce22527940"
        },
        "item": {
          "id": "15216472-5af8-4a6a-a76f-47ffd2efdfd6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "af4d0d85-0461-422c-b961-c9889def2f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9301ae55-e27b-45ed-b705-af3b09d45570",
        "cursor": {
          "ref": "4881c67f-6022-4d40-8f13-0fdf9c53f526",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cb626387-f2ea-4bf5-a701-3db7dac0b210"
        },
        "item": {
          "id": "9301ae55-e27b-45ed-b705-af3b09d45570",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "15412d87-fb08-4039-baed-bae66f290eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7701000c-ba1c-4e28-83f5-6ed5b3954d9b",
        "cursor": {
          "ref": "297d7f3b-0db3-4d80-a1e7-93a6b8bb3a2b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5fcac1ed-68ac-4cc7-bdbe-f12525a1b1a0"
        },
        "item": {
          "id": "7701000c-ba1c-4e28-83f5-6ed5b3954d9b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7f525d87-7c64-4308-80d4-27970789b890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61db4e4e-a36d-4c29-b732-a08fe94f8396",
        "cursor": {
          "ref": "2bfa3209-ab46-4ed4-bd6b-6a4ec5f64abb",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8bbb3c6b-3a5c-443d-89af-4ef797555d8b"
        },
        "item": {
          "id": "61db4e4e-a36d-4c29-b732-a08fe94f8396",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b21d0e69-09fe-488d-b574-5fd80e5cbccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e9426-fed0-49e9-ac85-e87ef530b410",
        "cursor": {
          "ref": "cf64d656-93dc-4076-ae40-e89e8438e8d2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b04a3996-eb64-45f4-8248-d94ca18675b9"
        },
        "item": {
          "id": "887e9426-fed0-49e9-ac85-e87ef530b410",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61e59466-a9b5-4121-b507-862afe77c5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7784c9d9-ff10-4428-afa5-3d67f7d0d9e0",
        "cursor": {
          "ref": "957de7c0-a0f6-4657-8b59-0325034b4716",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "74dc37fd-a37a-47c0-953e-8201e9732036"
        },
        "item": {
          "id": "7784c9d9-ff10-4428-afa5-3d67f7d0d9e0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "80e662f7-b998-4c34-94e9-fb2ac034b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d527ef43-f07b-4abf-a15b-54a9730de2a2",
        "cursor": {
          "ref": "3d39fdfd-f119-4522-bfa0-367070475a15",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2ac5c3b8-d72f-4bd5-905a-157513808aca"
        },
        "item": {
          "id": "d527ef43-f07b-4abf-a15b-54a9730de2a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dfe381c1-be3a-445e-81d1-bb1316be4bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64572edb-aacd-44eb-ad91-69a2990656c7",
        "cursor": {
          "ref": "9f7b07b1-5e15-4d97-ba2d-0c24872b4bcb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9e96fa71-be57-49c5-9cf4-e901cc454bdb"
        },
        "item": {
          "id": "64572edb-aacd-44eb-ad91-69a2990656c7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "754a3bad-8056-4e2e-a807-20a4cf9a60fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538b9b52-cb93-400b-951e-928e18632cdd",
        "cursor": {
          "ref": "ca034ee4-c5e3-4cd7-a4d5-bd5b45af9197",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6e3197b-8236-4081-8a47-2b5e98f6c1c0"
        },
        "item": {
          "id": "538b9b52-cb93-400b-951e-928e18632cdd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6eb7eb6f-55a4-4ccc-950d-6a8043c42e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752ae1e6-e6d6-4249-b51d-0adabe94efcc",
        "cursor": {
          "ref": "d52d6d8c-927c-4ddf-b4df-21fd840ef62e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1f279e8d-23fd-4e22-89e2-268684cc96ce"
        },
        "item": {
          "id": "752ae1e6-e6d6-4249-b51d-0adabe94efcc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a9dae47f-d320-4114-9ace-686e41e891c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ded473-1dbe-4df1-b5bb-65ad52b0294a",
        "cursor": {
          "ref": "05c9be44-f187-415a-b67c-a5375c0ea883",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2f406f5b-118a-4b94-9644-da300fb610db"
        },
        "item": {
          "id": "a1ded473-1dbe-4df1-b5bb-65ad52b0294a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "07144e2a-bdd0-43a2-ad56-daf164ab8e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7613b0c9-4f60-49b1-9ae1-623a833ce5b2",
        "cursor": {
          "ref": "e0d000f5-8cfc-4eb1-896d-8556ebbdda45",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a72194f3-692e-4765-98d1-ba811df0d631"
        },
        "item": {
          "id": "7613b0c9-4f60-49b1-9ae1-623a833ce5b2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "097c4474-226a-4b97-ae4e-c5976881c679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8f9459-52f3-4eb3-a111-3fe7ddf29588",
        "cursor": {
          "ref": "4f265ef5-8f3c-48e3-97af-93924f71630c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cf2b8813-b53c-4d8a-9389-b9608a42f386"
        },
        "item": {
          "id": "0a8f9459-52f3-4eb3-a111-3fe7ddf29588",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8e65b6e7-ecbb-4372-941e-5cd2c49800b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4adaa4-12c1-4663-9e4f-c973aef680a6",
        "cursor": {
          "ref": "f5c83d97-93cd-4596-afe1-3d770d3e0c24",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62992965-8384-4186-9128-68512e9317d8"
        },
        "item": {
          "id": "db4adaa4-12c1-4663-9e4f-c973aef680a6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "baa0f38b-abf1-4901-b8f1-8fe895566712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6404885f-8718-4483-b47d-abd16695c9e4",
        "cursor": {
          "ref": "090830b7-7627-44c1-9ca1-ca5214cf55f4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4559df94-6914-4df3-b189-615b3e84796a"
        },
        "item": {
          "id": "6404885f-8718-4483-b47d-abd16695c9e4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03e136ee-5bf9-470c-b9af-7d4cf103d685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4323d4-037f-4f4f-8e7f-2a755fb4a8c0",
        "cursor": {
          "ref": "ebd2ea4e-39cc-410b-9d2c-b3e11aca5063",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "640d1157-5069-4821-aa26-e6263dd3ba11"
        },
        "item": {
          "id": "cd4323d4-037f-4f4f-8e7f-2a755fb4a8c0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "90303fad-b430-4cd6-b0e3-63f0e8c6b3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6003abfe-bb90-4792-858e-560e02aa167f",
        "cursor": {
          "ref": "5d4c22a2-0dd1-4184-b82a-f2caa231fc7b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d2e16a87-797f-4f1e-98d0-20911cec862d"
        },
        "item": {
          "id": "6003abfe-bb90-4792-858e-560e02aa167f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65b5123e-8f54-4d0f-a614-c80f7c87987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cf2236-4090-4d43-b038-461b08dee25c",
        "cursor": {
          "ref": "8fc33656-6856-433d-bde9-9074eaa42650",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e8f80aa0-f812-48f1-9be4-e65dfa1beb49"
        },
        "item": {
          "id": "b2cf2236-4090-4d43-b038-461b08dee25c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "543afed4-478f-4dc6-a279-3742fd4aae95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f29f16-6f3d-4c4d-9481-1f085d6a5343",
        "cursor": {
          "ref": "1ec47a75-3148-4911-8a06-7923871dbd35",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c0a5d65c-749d-425b-ac2e-7da8787432c5"
        },
        "item": {
          "id": "20f29f16-6f3d-4c4d-9481-1f085d6a5343",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c084bf9d-54f5-47c7-ab6c-0d3d45bffe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8879fc-635d-4831-8216-e032935112d0",
        "cursor": {
          "ref": "cd6c6857-1899-440b-abe0-bb5417e6e381",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cfcd3d0f-2d6b-4517-87c0-f3903816713c"
        },
        "item": {
          "id": "6d8879fc-635d-4831-8216-e032935112d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08e12253-0df3-4a53-916d-92e365b194c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d32208-a23d-4ea9-985e-c35b69a72b31",
        "cursor": {
          "ref": "9c0326c4-5956-42f3-9c18-9ddf18727ab0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "28e4a9ba-a6e8-4afd-a564-d104b66ca0e2"
        },
        "item": {
          "id": "77d32208-a23d-4ea9-985e-c35b69a72b31",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "305430cb-a244-414e-8b00-cab69521e5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f958dd32-0337-489c-92d9-f1df268e3870",
        "cursor": {
          "ref": "e683911e-9668-44f3-a53a-b9f3a64e3e2e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9169cc96-c29c-40bb-a3a0-e0f9f88b2df2"
        },
        "item": {
          "id": "f958dd32-0337-489c-92d9-f1df268e3870",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ba3ff3bb-08b0-448f-bb72-c4b92cc1f243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038e5286-3c4c-4656-a217-4ee9ed4d6e9b",
        "cursor": {
          "ref": "e4c8c354-c09f-4572-bf21-66248f738daa",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "38dff614-3e22-440f-bb75-fc76158ea0a2"
        },
        "item": {
          "id": "038e5286-3c4c-4656-a217-4ee9ed4d6e9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dee70e7b-230d-4c9b-b00c-16954c1e55a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e7f89b-539b-481a-9b79-2aec85e9e30e",
        "cursor": {
          "ref": "2ffc5015-930c-4497-bc4d-3fbec2488b85",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "18e62cb0-3800-44ec-b1cc-88f9a149e209"
        },
        "item": {
          "id": "16e7f89b-539b-481a-9b79-2aec85e9e30e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6a79baa9-5cba-4987-8400-80bbceaea494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd3c1a0-6744-4b3f-9f21-5af1d8a990db",
        "cursor": {
          "ref": "32ff2236-b289-4554-8893-c3b7ff439b3b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "27552bd2-ac3f-4669-a5e7-fc73481be61e"
        },
        "item": {
          "id": "5cd3c1a0-6744-4b3f-9f21-5af1d8a990db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6ea5d5f6-98d3-45dd-8029-d69f9310a723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef43fcd2-c490-4468-a148-edfac98c0d2c",
        "cursor": {
          "ref": "841e0ac9-fc53-40c5-8c19-464edc0f9cb3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2ca9abb7-326f-4386-8753-e5e18bd01f86"
        },
        "item": {
          "id": "ef43fcd2-c490-4468-a148-edfac98c0d2c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f24f403f-8a66-482d-920d-92d0d911ac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49548242-02f5-42a6-a8e4-e59acec1181c",
        "cursor": {
          "ref": "ded22aaf-614a-44bc-89cf-2e7bf3040602",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "92e33d36-8332-47aa-bafc-96ac5ee11df2"
        },
        "item": {
          "id": "49548242-02f5-42a6-a8e4-e59acec1181c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "30b2390e-55ea-4305-831f-26b328268172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a72ae-bbd5-40d1-b41b-41da01bb92ad",
        "cursor": {
          "ref": "2e228da4-9555-4948-9bb5-08bad7b191fe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "497b9a08-de70-4140-9111-48cd4097404e"
        },
        "item": {
          "id": "a60a72ae-bbd5-40d1-b41b-41da01bb92ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a580ca7-62fd-43dc-9634-ae3a71d9cfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d00da-0bd3-410d-9c59-d93e99b69d07",
        "cursor": {
          "ref": "4031c4e0-cada-4ebe-b4ec-92f5391861a5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b977e5c-4afd-4283-9021-e88da6e92317"
        },
        "item": {
          "id": "b62d00da-0bd3-410d-9c59-d93e99b69d07",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0fe6a59d-062a-46bf-ab68-9e28aa84ec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be57276f-3690-4561-84c0-e2313bb04437",
        "cursor": {
          "ref": "31a3e7ee-7e33-4b68-807c-62d8d3ae704a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cca9cb02-f0a8-458b-bc31-de76fd89783c"
        },
        "item": {
          "id": "be57276f-3690-4561-84c0-e2313bb04437",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aa76f56e-e87b-4580-ade9-9c3240b9ae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e444ee3-5f66-46a2-a56f-34f3e9709b56",
        "cursor": {
          "ref": "77cc3f99-d256-4684-befc-bfe79394f2a2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dcef097b-6b96-49b5-8eb3-b5e6a14e50b1"
        },
        "item": {
          "id": "7e444ee3-5f66-46a2-a56f-34f3e9709b56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7543b270-5797-4a20-b88c-71cef96a1499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa7722c-2837-482e-8319-fc3218b4b8e8",
        "cursor": {
          "ref": "b68b8c5b-7118-4d07-96c3-43ef5bc75a62",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9cb2254d-7ccc-46e2-8c31-ee0080094644"
        },
        "item": {
          "id": "0aa7722c-2837-482e-8319-fc3218b4b8e8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "37acf461-adc3-49f6-800d-be9f7428352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb76ce0d-1f34-4785-a1b4-229a1891938f",
        "cursor": {
          "ref": "b905140f-3e96-4a60-8284-9697e5d28c08",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "00f4f131-49b4-4ffc-97ec-662fe0a1483f"
        },
        "item": {
          "id": "cb76ce0d-1f34-4785-a1b4-229a1891938f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bf2cfeae-f1e4-4e8c-a88b-2eca48a756d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aee18d-504d-4baf-98db-0d4e02988714",
        "cursor": {
          "ref": "9c522b65-4960-4148-a469-09b8007ae630",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "384eb49a-e446-41e5-8c96-c1cb01fdf7c0"
        },
        "item": {
          "id": "47aee18d-504d-4baf-98db-0d4e02988714",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0a8abaee-66e4-43d2-bcdb-bedb3b7aaa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a267575-8342-418e-a50e-d30ecd644c1f",
        "cursor": {
          "ref": "9dc4ee62-330b-4c42-a1ff-10a9195ad213",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e14611be-2a24-4d07-bcd2-3cf74d39a196"
        },
        "item": {
          "id": "9a267575-8342-418e-a50e-d30ecd644c1f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ef1873fb-cbb9-41ca-af3a-886842540888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3bcae8-dbfd-46fa-b4f1-6018617593c8",
        "cursor": {
          "ref": "0e6444e2-8f1b-4e47-a9a4-cd22832bc490",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "82ab039d-b675-4918-8279-18328d57c3e4"
        },
        "item": {
          "id": "9c3bcae8-dbfd-46fa-b4f1-6018617593c8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e236fcbb-6a8b-450b-8d93-0447e7bb5f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe2575-1f51-497f-a835-f2dbd77e7193",
        "cursor": {
          "ref": "06ff0890-2969-4da6-a304-196411b2897a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e70d45af-0286-49bc-b126-1afed12b0c8a"
        },
        "item": {
          "id": "4bbe2575-1f51-497f-a835-f2dbd77e7193",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "75053664-9bae-4579-b6a0-4593750856b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ee6c31-bfa1-4173-8ccf-01a0a4dbf852",
        "cursor": {
          "ref": "1c567712-fff3-4d74-8d09-e1c7ea58288a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7383bffd-6a0c-4a0a-a6a8-d3cf1fe999a3"
        },
        "item": {
          "id": "e8ee6c31-bfa1-4173-8ccf-01a0a4dbf852",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bd7213be-fd0c-405c-8e66-223011d1e50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34901cf6-c75e-48d7-8cde-4db5770a659d",
        "cursor": {
          "ref": "71a5ffb3-04c3-4a26-a679-6b08865f7c9a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "53358cb0-c66a-4bec-a185-adcc6fe92602"
        },
        "item": {
          "id": "34901cf6-c75e-48d7-8cde-4db5770a659d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94dd9a16-9623-496d-a8c9-db8c025a9309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8019b5b7-8a90-4385-8d79-cda0b2eb025a",
        "cursor": {
          "ref": "e5edb615-51db-4067-be22-f813a7aa59fd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a763edd2-e147-48d0-ab7c-230e40787dbe"
        },
        "item": {
          "id": "8019b5b7-8a90-4385-8d79-cda0b2eb025a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f3a9d59-15c7-44f8-b501-e696fda1e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d12e5a8-a4b6-47cc-83b1-f8d82a214aa4",
        "cursor": {
          "ref": "baed2f36-54e4-4778-8f98-0c71dd58beab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0acbac38-a52b-4444-b7cd-965bdd9e9828"
        },
        "item": {
          "id": "7d12e5a8-a4b6-47cc-83b1-f8d82a214aa4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "02b1ba89-47c7-4742-9278-520b9f21b6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2796fbef-9a7b-42ab-b5c8-65291d625190",
        "cursor": {
          "ref": "b9fa3781-7878-4696-87e6-df475a4d1408",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8f3f7a8-0fd6-4095-b469-c1281563bd4c"
        },
        "item": {
          "id": "2796fbef-9a7b-42ab-b5c8-65291d625190",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2b34be13-8048-4478-9bc2-cf51f20de309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cfd959-fc2f-447a-a924-fc6503b21c72",
        "cursor": {
          "ref": "52aa7f05-49c9-4aa1-8d01-59580f87eecb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b9953520-3ccf-4ad4-9e8d-3fed0f76930e"
        },
        "item": {
          "id": "40cfd959-fc2f-447a-a924-fc6503b21c72",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2e2edc67-0046-4fe5-8829-98554a289b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ce1751-3c64-409c-988e-e6b2f7b11a17",
        "cursor": {
          "ref": "5e4e28af-3034-4a00-b9b7-3acd04c80504",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c27a689-e0a1-477a-8358-d2de79b8f22e"
        },
        "item": {
          "id": "c5ce1751-3c64-409c-988e-e6b2f7b11a17",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "34330c49-cda6-4479-bede-17bd895d7e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f688885e-76a2-423d-970a-7508c3cb190b",
        "cursor": {
          "ref": "295fc739-1e28-4e2c-a217-aa619dc4255c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a222fa40-b2e2-47e1-83e8-6e3691047a36"
        },
        "item": {
          "id": "f688885e-76a2-423d-970a-7508c3cb190b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5b056297-5975-49b4-9222-42c639dd2bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a33655-fe53-412e-bed6-c6f549e361b2",
        "cursor": {
          "ref": "177b7fe8-820b-4b03-a682-dcabb9f1cc41",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68c108ca-f7e8-4084-923e-0290483fc5e2"
        },
        "item": {
          "id": "c7a33655-fe53-412e-bed6-c6f549e361b2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5be8b14e-f37d-40e6-8c00-ac0cc64d178c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f578ad-1221-4089-ad2b-cd9c06630a0b",
        "cursor": {
          "ref": "366cd469-81b5-40e1-b3f6-29fac906d3ed",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70226b5c-1ca6-4e8d-9c90-2fc8dcdd21aa"
        },
        "item": {
          "id": "a1f578ad-1221-4089-ad2b-cd9c06630a0b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c3937181-e06f-49d9-96fd-2162625b1cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90d5073-73c9-4d89-a8e4-1a6ed622d261",
        "cursor": {
          "ref": "8ba1a739-7633-4c98-848a-b07ba9574374",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "79b8e9ba-7572-4508-a867-c8563de5db7d"
        },
        "item": {
          "id": "a90d5073-73c9-4d89-a8e4-1a6ed622d261",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "639a3003-97ad-4a75-bb05-5f0f4a14c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47305d42-f8ba-4739-994c-c7472bbe2155",
        "cursor": {
          "ref": "8583221a-1df2-4c08-8fc9-4c317d1d2e1f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9a350509-4c8a-4186-ab09-59fd1ceb3a5b"
        },
        "item": {
          "id": "47305d42-f8ba-4739-994c-c7472bbe2155",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a1e87f7e-4a0d-47b5-b9d5-a609b1c206af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79eb97-f41a-430d-a4ef-580d626d4002",
        "cursor": {
          "ref": "53abd628-04a7-4471-8e91-e305626b4152",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79d1b4a9-cc92-4d3f-8e20-1d83fc7b94db"
        },
        "item": {
          "id": "bf79eb97-f41a-430d-a4ef-580d626d4002",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1cb55227-b326-4443-942a-16d778253adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ce9c33-c1e1-4270-91a2-288e98cbe26b",
        "cursor": {
          "ref": "6ff0673f-f781-47bb-9d6d-dbb88ffcbaa1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c7d7d11c-00cd-4f25-9793-ab3792cea236"
        },
        "item": {
          "id": "40ce9c33-c1e1-4270-91a2-288e98cbe26b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4fb8fd83-5410-4695-88e2-976541e5e5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9add7ea6-b812-4737-a54d-ece7fd01f924",
        "cursor": {
          "ref": "89dc2457-bbc1-4c70-b126-682542fd787c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "499b3962-a71d-4e6c-9260-4f00d66fee48"
        },
        "item": {
          "id": "9add7ea6-b812-4737-a54d-ece7fd01f924",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "67fce799-473c-4928-8343-08cc46a94d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4be1dae-d241-4754-9a4c-7491239e3bb6",
        "cursor": {
          "ref": "aee3cf46-c7a0-4c6e-ba50-9c0b453b1e4a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c12a14f-d5f2-4f47-9f89-0c0c76654ee5"
        },
        "item": {
          "id": "d4be1dae-d241-4754-9a4c-7491239e3bb6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0ec2c0bc-f08f-4fbc-a4fd-530213725251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9425e8d-f806-4435-b377-9610bd4dc35f",
        "cursor": {
          "ref": "041b2671-27be-4f83-a586-2db8dda76048",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2d0f88d9-3180-4541-bec3-5b3b9e369d39"
        },
        "item": {
          "id": "c9425e8d-f806-4435-b377-9610bd4dc35f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8ba9a74a-c337-45e9-a7cd-77c1a15ac554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150c8b45-53a6-41a2-89f3-02f6b40b728c",
        "cursor": {
          "ref": "8aae8856-c4bf-4407-bf17-dd7f25232511",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "af2941d5-f04f-4c15-adda-7ab550907b5b"
        },
        "item": {
          "id": "150c8b45-53a6-41a2-89f3-02f6b40b728c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "41a3cbfd-955d-4e89-b8ac-5385b1d82cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae3e8b3-e1b1-4baa-ab84-f371fbe5af80",
        "cursor": {
          "ref": "4518c854-f79a-4012-b6ee-0ff135bd26ed",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d07e4a01-de9f-4947-b0eb-d27f832ce25e"
        },
        "item": {
          "id": "2ae3e8b3-e1b1-4baa-ab84-f371fbe5af80",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d6d069b9-52f7-4863-9a6e-8ec2d8481512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efcb05-c1c3-4306-a491-5cd652f9225e",
        "cursor": {
          "ref": "a7fb2da7-137e-4d81-9e87-0a662c154321",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9277f204-10e6-490a-9983-0ce305e6ff2d"
        },
        "item": {
          "id": "72efcb05-c1c3-4306-a491-5cd652f9225e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "02e41f1c-a94f-441e-b920-485903ed5f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef9324b-0c1a-40ef-8193-e84874573d78",
        "cursor": {
          "ref": "5aa08ee2-f6af-40a6-9797-3efb059db0f5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a36834e-1c12-4762-a9ba-ec07227e3a69"
        },
        "item": {
          "id": "6ef9324b-0c1a-40ef-8193-e84874573d78",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d7cb2c08-e1c8-49a3-ae4c-51b906e95f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914e927-c06e-4436-9d70-13d327debf24",
        "cursor": {
          "ref": "70c886b9-9c96-4cd1-a306-b8a18c444641",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4570a714-0bc8-4665-b3cf-049665a63502"
        },
        "item": {
          "id": "0914e927-c06e-4436-9d70-13d327debf24",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19cb7abb-fed7-479c-bc91-b85038335318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aa0107-9b82-4e91-9d95-6d298d84ee16",
        "cursor": {
          "ref": "d71e5322-8169-47f3-bd99-36ea7cdbad43",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "20553e89-ac25-44ab-b024-3a76db234c98"
        },
        "item": {
          "id": "b4aa0107-9b82-4e91-9d95-6d298d84ee16",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "32ab80f4-92bd-48cd-bce5-2698036f8176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfbeabd-d09b-438c-b621-aa4947590959",
        "cursor": {
          "ref": "5f0acdd1-3f5c-4957-bf71-396f3d140884",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "64631e97-0146-41c6-a403-6c98a2e5c005"
        },
        "item": {
          "id": "bdfbeabd-d09b-438c-b621-aa4947590959",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7c6c0444-ef5e-4faf-a637-5eec1485a9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae4afbd-fba8-43f9-b514-33b2ac2dfbbb",
        "cursor": {
          "ref": "0fa4d43c-5b30-466a-865e-b16a3fb65a47",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1616e41e-2028-41ae-86f8-2cb3075c33a1"
        },
        "item": {
          "id": "8ae4afbd-fba8-43f9-b514-33b2ac2dfbbb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8148e3ec-1953-44ae-b40c-f7ae8eb4c682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46313b1b-f590-44da-bc7d-952241710908",
        "cursor": {
          "ref": "9adb7175-7b40-4d5a-943b-311fe7f330c7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8839e6c-eba3-4dde-b04c-5f922fb847b6"
        },
        "item": {
          "id": "46313b1b-f590-44da-bc7d-952241710908",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3aab3a37-8c47-4a25-87be-abc848f50f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e40c576-4917-48c9-9f91-5b43b2192e01",
        "cursor": {
          "ref": "c837a1b0-c0c6-4531-90c6-919903c10cd9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eef996a5-67b8-4271-9661-9a4b1ceec3c2"
        },
        "item": {
          "id": "8e40c576-4917-48c9-9f91-5b43b2192e01",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fbffdff3-6d8f-4449-87dd-7c752ff0e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053adcaa-b079-4f64-9346-a4af59fd0f85",
        "cursor": {
          "ref": "7d79c47d-a273-4c91-ad14-e5ee562445f6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4529bb0b-d33c-45bb-986c-d6d73d3d14b6"
        },
        "item": {
          "id": "053adcaa-b079-4f64-9346-a4af59fd0f85",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "145ea834-1732-465d-9a8a-21463ee97c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8059464-3709-4ff9-999e-895f8b0d212e",
        "cursor": {
          "ref": "6c11c316-b1e9-4600-a7b2-ee326e549954",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "327f02dd-9982-4c08-b874-2851f56c74f8"
        },
        "item": {
          "id": "b8059464-3709-4ff9-999e-895f8b0d212e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d86af357-9c3b-415e-834e-b96845fab899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dc9808-9902-406e-8223-424eb69b1dfb",
        "cursor": {
          "ref": "211c16ab-9f4c-4ea6-92cc-d258d12788e3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0038f59-3b44-4a6a-bf64-d233f21c9753"
        },
        "item": {
          "id": "d5dc9808-9902-406e-8223-424eb69b1dfb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "11f1ad6e-5681-43b0-a23f-2eb48bf87f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000cb70c-02cf-4c6e-a137-4916ffc454fa",
        "cursor": {
          "ref": "d6182073-d6fa-440d-a756-5f46f29967dd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f1d6b16d-afff-449f-bbd5-9603de84297e"
        },
        "item": {
          "id": "000cb70c-02cf-4c6e-a137-4916ffc454fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6067838b-cd2a-4d3a-995a-5be4b5d43ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c812df75-093b-4d6b-a2dd-477a80e53c8b",
        "cursor": {
          "ref": "7311d6a4-c959-4a3b-be65-23ba3a26a9de",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a309d896-9e0b-4baa-9262-aa6c6289e9be"
        },
        "item": {
          "id": "c812df75-093b-4d6b-a2dd-477a80e53c8b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e067b0d1-8721-42f7-aa80-5af522dcca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e10107f-3675-4c7d-a260-9e50e3f27661",
        "cursor": {
          "ref": "1e6d5b76-e5eb-474a-8b19-4fdb77568018",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9a379599-b14d-4366-899c-77e1bd26cbfe"
        },
        "item": {
          "id": "7e10107f-3675-4c7d-a260-9e50e3f27661",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b50084db-0cc7-45ad-8648-2acf45e51e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72f7fc7-b93c-4f88-99b1-65b0eee4596e",
        "cursor": {
          "ref": "34a9fe2d-c3d9-4ad8-953e-497cb0568566",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8a1701ba-dc5c-47de-9dfb-28524686098b"
        },
        "item": {
          "id": "c72f7fc7-b93c-4f88-99b1-65b0eee4596e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9549ca68-f333-4472-91af-f0d5186fb88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d37c977-958a-43a7-bec6-6211484b0f1e",
        "cursor": {
          "ref": "8cd14b94-79c1-451a-a43d-d797f79d36d7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f13afac1-01c4-4aed-99ee-697728821e26"
        },
        "item": {
          "id": "7d37c977-958a-43a7-bec6-6211484b0f1e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "598953dc-923d-45c8-b3cb-874887bffea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d37340d-bd03-49f1-a81a-cc1fa51bb3ce",
        "cursor": {
          "ref": "36e3090b-b1f2-4ca5-867b-2467dd63cc7a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3b1f238f-26bf-43ac-a165-1e0432202275"
        },
        "item": {
          "id": "1d37340d-bd03-49f1-a81a-cc1fa51bb3ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3df12fcd-4290-4617-9ac9-c7aca486b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032ca29b-f73c-44b7-93ab-66ab9cc2655e",
        "cursor": {
          "ref": "508315ee-9991-4206-a934-3d6f11f08244",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "190626d6-8f8f-4ba9-bd4c-3625caf69084"
        },
        "item": {
          "id": "032ca29b-f73c-44b7-93ab-66ab9cc2655e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6673c662-7ec4-4bd8-b086-8fe4375c919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0442de-5d2d-4b49-87af-5f4052df1321",
        "cursor": {
          "ref": "d4060548-e399-4377-8c28-313e0aaa1d1a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c8e2495c-2e30-4384-85c9-b14d14a0f2f4"
        },
        "item": {
          "id": "dc0442de-5d2d-4b49-87af-5f4052df1321",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ccae433e-32b1-4bee-b4c4-ba83a5fd0a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0aef7b-7296-4e18-845e-9b274c0e3b61",
        "cursor": {
          "ref": "8f78e5f5-9dcd-4a21-a614-6604e607ee6d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d2443e17-4adc-4ec2-843c-f8151687b075"
        },
        "item": {
          "id": "cd0aef7b-7296-4e18-845e-9b274c0e3b61",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "62bd1b1f-80b9-48ca-a8f3-97a8db413d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84dbfed-69c6-478a-b90b-6047f26ec3cb",
        "cursor": {
          "ref": "72c046f6-805b-447d-b412-883348428125",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c1e80ada-bd3d-4bac-843e-13f768be24e0"
        },
        "item": {
          "id": "a84dbfed-69c6-478a-b90b-6047f26ec3cb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d4f16674-a4b7-41a3-83f1-f1e7aa6f620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dd537b-6ee8-4e86-abdc-56b28c647f14",
        "cursor": {
          "ref": "011ebf37-5b8f-4045-948e-c1f742ac520a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b4a344b4-a1d4-43e3-a274-b2d85954d2cf"
        },
        "item": {
          "id": "38dd537b-6ee8-4e86-abdc-56b28c647f14",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3d36893b-cba9-4208-8d01-8d2e5fac0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65cdcbc-db95-448f-b5be-3f84bf4179f6",
        "cursor": {
          "ref": "ea238c4a-f6a8-452f-befb-077f1a376839",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eac41488-af73-4b10-9417-8c350c3d182d"
        },
        "item": {
          "id": "c65cdcbc-db95-448f-b5be-3f84bf4179f6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c057b67-64ec-45c4-a2d9-c7f52b96e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f0c9c-6dd5-49f8-aa14-41f667bd01fe",
        "cursor": {
          "ref": "0e13c700-e2d4-4e92-9c14-76de20b86a70",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3d9aa2bd-9d32-43e5-a344-9696cf72493a"
        },
        "item": {
          "id": "841f0c9c-6dd5-49f8-aa14-41f667bd01fe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c92a0f3-bb0b-4836-895d-ec6b28e63b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e68cbf-08d3-4122-bb00-eaec787ca525",
        "cursor": {
          "ref": "f3ab79b8-21d1-4de7-a55b-9639b266bf2e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dbbc1567-a6e2-4979-b7bc-e58f07d7f905"
        },
        "item": {
          "id": "72e68cbf-08d3-4122-bb00-eaec787ca525",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5ebf97bf-1d93-40ec-a27f-b51956a58add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e11bb-c5a2-4138-bece-845bb394397b",
        "cursor": {
          "ref": "a43c200b-3180-4e6f-b761-895e390db646",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d9181910-67f9-43b8-a6f6-8f91ca474958"
        },
        "item": {
          "id": "ae9e11bb-c5a2-4138-bece-845bb394397b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "160f7a9a-c8bc-4699-b4bb-d8a69651b9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5658f6b2-88c5-461c-855a-cca9b688ce1a",
        "cursor": {
          "ref": "d4ae2a7c-d1c9-46b8-bbf7-08352f4876bf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "13a0f0f8-4a6e-4347-9e5b-53346fece140"
        },
        "item": {
          "id": "5658f6b2-88c5-461c-855a-cca9b688ce1a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0716991a-d8dc-4f19-9af0-209e0f7d4b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d81283-9b29-4ebb-9055-4390f21f4d02",
        "cursor": {
          "ref": "c265f074-5718-43bf-ace4-a423d1a67aa6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d5582ec7-5403-41f3-a5b3-21ad30216f73"
        },
        "item": {
          "id": "61d81283-9b29-4ebb-9055-4390f21f4d02",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5a6d8e55-7288-44d6-84e7-e206420e1e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fff778-14f7-483e-89ca-f02fa8c51979",
        "cursor": {
          "ref": "8c9967ea-9f9d-4f69-aca7-15200ad8599a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dc049def-01dd-44eb-8629-a7080a0b1f51"
        },
        "item": {
          "id": "96fff778-14f7-483e-89ca-f02fa8c51979",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c1650404-c5a7-4b59-8df7-dbf348565068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d63950-4117-4814-8038-c30fb0dd214d",
        "cursor": {
          "ref": "c6ee6810-2ff3-4eef-a3dc-c60f2f2ef813",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de29402f-726e-4771-96d4-0a2a5c68f688"
        },
        "item": {
          "id": "65d63950-4117-4814-8038-c30fb0dd214d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5be5126a-69f9-4c8d-ac60-47a756f24a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf8f8a-fa65-4c3a-86dc-eb55baffefc7",
        "cursor": {
          "ref": "34cf314d-7c46-4c73-870b-7db040d9ff46",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e3cef024-dc08-422d-bcac-0d376757926a"
        },
        "item": {
          "id": "3cdf8f8a-fa65-4c3a-86dc-eb55baffefc7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1c74cd8-c6ed-457d-b4b5-8e825112377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "5729085e-19ec-4da0-b1fa-ffd056c76c16",
        "cursor": {
          "ref": "38f39926-a20d-44ca-8db2-0cd20ba08c68",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f48c446-b719-4bf9-891a-c343524f8924"
        },
        "item": {
          "id": "5729085e-19ec-4da0-b1fa-ffd056c76c16",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cbd04fb3-39b6-4619-bdeb-0438f4359fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a27d8ad6-5473-4060-b6ac-1478361ef118",
        "cursor": {
          "ref": "794677f1-3600-4261-8a86-b7683768b4e9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ac40e2d3-ab18-4faf-8a50-77da8cfa4e4a"
        },
        "item": {
          "id": "a27d8ad6-5473-4060-b6ac-1478361ef118",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "713e8e49-cc99-4256-807a-eb684c8cb1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4a388306-04ec-4ba7-8919-b576a54fc5a6",
        "cursor": {
          "ref": "c9245e62-21cc-47bb-8fec-d2d12e3fea41",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24e45365-af50-42b5-96f2-a2a64aa107df"
        },
        "item": {
          "id": "4a388306-04ec-4ba7-8919-b576a54fc5a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2c3759b-254f-49ba-9335-40c33ec7dfa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a388306-04ec-4ba7-8919-b576a54fc5a6",
        "cursor": {
          "ref": "c9245e62-21cc-47bb-8fec-d2d12e3fea41",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24e45365-af50-42b5-96f2-a2a64aa107df"
        },
        "item": {
          "id": "4a388306-04ec-4ba7-8919-b576a54fc5a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2c3759b-254f-49ba-9335-40c33ec7dfa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751efe7f-b67f-43c8-8aef-1a370d7c0947",
        "cursor": {
          "ref": "0d069396-daa5-4f5d-8418-ac53bd1291c3",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3fe8146f-bc2c-4a97-bae6-e9d053a50114"
        },
        "item": {
          "id": "751efe7f-b67f-43c8-8aef-1a370d7c0947",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2455dd37-9cf3-4ebe-8d2e-92daa0b9740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be47ef1-6e94-4ed5-b75f-648d88ace9ea",
        "cursor": {
          "ref": "8e886e39-74f9-41e0-837e-b68a431445e9",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba6fb8b2-f894-474e-b9ed-7251e7cfc218"
        },
        "item": {
          "id": "9be47ef1-6e94-4ed5-b75f-648d88ace9ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0ac19f59-1a9f-426d-a55d-ba28aa8bdcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}