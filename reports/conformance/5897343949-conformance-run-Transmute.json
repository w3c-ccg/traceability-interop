{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "79609934-d848-412f-8ac6-a331a77c6920",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e35824c5-9ad2-4579-8755-ee99c0608e95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa65e4ef-7c31-4752-a2bd-c45bb4f7e945",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8838bf19-90b1-42ff-bb11-95b342f84f80"
                }
              }
            ]
          },
          {
            "id": "cbdbbc78-2686-4865-873d-a34bfbe086e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3950b7c8-221e-48ca-83d1-2456ec5e7a44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed9cfea9-d818-4f7d-bbdf-1200746d4fa3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "24317d83-80a8-4736-bc61-474bc31e7b63",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a4d115e-12b3-458b-89d7-694493fe2678",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96eb857c-44ef-4538-bd18-015b68b08a0f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a0ba573-5eb7-426c-85c1-fc639d681adf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03023280-1a8b-4cc0-bab5-90efe506123f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "504d63f9-e04a-4862-bed1-24737c5b7f99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09b1029c-1d3c-4e89-8640-304cc78574e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fce7bd63-08e8-4fa9-a2ba-c375835527a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44710463-222c-4b09-a298-d5f13c6041f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52a1ed61-1f0e-4062-b106-94b702feb2b6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9c6f6063-5919-4ff4-be96-05379ea38140"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a8c6b5b-5f8d-4a62-9d46-8b449cd6ef81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03819984-c497-439a-a457-8fa3f856a7da"
            }
          }
        ]
      },
      {
        "id": "6833f83c-fc7b-49a2-b922-6c6c0f01ceb0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e56da83b-af46-43d5-a43c-73060c9ac888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e20d4128-2940-462a-ba00-719f1f7ed5de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7912454-1404-435d-97e6-41d04a0f9545",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca21102-c93b-462e-a772-c9839c285120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69acfc77-1fe6-4727-bc09-9eba4d41f5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b28e24-1cb8-4142-8459-685e2be35880",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abffceb2-197e-4d78-a524-7e650f57b7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cb23a4a-8003-47bd-aab8-5436dcfcdf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44630cf5-1e0c-46aa-9edd-5129bfca556f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b481f12-dc9f-4839-b90b-eff9e287f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8038c62b-d72b-4493-89a9-ac59432889f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d547085-a061-4fc5-b05d-72a11bba29f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82b0fdd9-0b62-49aa-a31e-b58f8a940047",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f8a9e-54fe-4702-9d36-11b0ffb149b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c541a5bd-748d-4695-a199-777b4befa34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ed601-b296-42f4-931f-77504f25175a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c468d479-ea44-474b-821e-abf60d122488"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e455bdd-9431-48b1-827c-50a95e547ae0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "faa0092b-a631-46e6-9e4d-2e8565cfdf8a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36075153-2b77-4d94-b7c5-6c8e4cad229e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9d5dd99-78fe-4756-961e-0301cdb9ebbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6c49222-8aa0-4096-9b30-e1c269210045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0cff0a46-60ec-4273-a225-206e214e64a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5934c39d-c6f4-4e19-b97e-94bc5cfc4ed6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9a1d621-ca9f-4707-95a8-3ed01a4d07d1"
            }
          }
        ]
      },
      {
        "id": "f4ce6f92-41a6-4302-a3ff-d514ad5fb623",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a7a7c17b-2460-4703-8492-e9029611dc0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16463335-ea2e-49a1-9524-a99b1a0a2c74",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b851c30-a52e-4217-a072-f4c0f6f09e82",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3442450f-32ab-4ab1-9408-534875097147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc383cb-fdb7-4aa2-9e3a-6b45f46b097e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6b27e4-b906-4b23-9938-179a7088895b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b1e267b-3f03-4c3c-b38d-2498e2990b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b844d7d-0a8c-43b1-9634-1e2c8a34a627",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d377cb72-2399-404f-b9b6-49787c26a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95ca23a-f73c-4b2e-9de4-00267130ba3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd9da3f-634f-4e9e-8a8e-d5fe18e21c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "018d1889-4efc-491d-a7ce-b05559a4b7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f54547-8365-49de-93b0-f4d635ac504f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7d8902-4e4e-49e6-be9e-2a6d9f391d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac3b55a-675c-4196-95a3-68f5da357f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f260a-34f6-4733-9b44-5e04f6352a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40ad872b-8f21-45b6-8aa8-bed8cec76e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83004138-a739-40e4-8350-479c0bfcc409",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db712ab-a2c3-4f43-9d8d-e28341b4db41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e25b9cb-dc5d-4cc0-ad35-73de4837d14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75483006-cf3c-4a2f-833e-bdf37b435ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81be4dc6-98be-4991-907e-496c4becdf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c61d6d-071e-47b6-9b7d-46489d449ee8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcffecbc-352b-4f76-adf6-3acae909655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b3ce7d-4933-4e73-8e84-e0bf56a0d86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3fea2a-b47b-41bd-8f8f-c971efe8c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b72e0f96-0dbd-45fd-aa2e-150a35bd0b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9257d-0502-4246-9ab9-a1e0a0d62f95",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e0184-b9ba-4e51-8728-d59e15f86d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea80ad8-2787-4257-ad45-59a21013243d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a1c26-2ff2-42cf-b56d-709eb123f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10da3f94-cd39-4610-b2cf-bea71167b6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415db739-3f1c-4c13-9a8a-75d09a784e55",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297fe28e-b828-49f6-8249-67f2f43dacb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd77254-0709-4481-a49f-e65861be2196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856ce28-a05d-4c0d-9aff-e50f78f267d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c0169b0-5d23-4129-8d5b-bec0d0529ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4609469-0c64-4bcb-88cc-ce3fab68a977",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41182ba2-840d-4641-8589-94a7bdf000ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c94ce8-4a30-4631-b0de-dcd61bc75fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c62a279-70c4-4101-9dc0-126349616c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0771172a-6d9b-44f9-974f-dfe76ac24df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a88b033-0e49-45c1-bc13-a865a0f29cd5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2d0dc6-62a6-4ce0-b9fd-8bb1ba6ed88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a0d04e-0382-4d09-a0b4-3a298d2704f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192744ef-8aaa-459b-bf9a-40733cb69f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac5a606b-461d-424d-84a8-99cc90539797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bdac5a-9a08-4531-998e-52fcb798845d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c027aa49-6c20-44b5-80c7-1b317ff778e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f637059b-6984-4dd4-8e97-ea79c7a6305e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa83daa0-f6d1-4d5c-8a77-6e8944a5cfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fb565f2-18ac-4dbb-8e81-1e8bb2037628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e658bbc-cee1-4950-8d73-0904671d6e4c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff7d90-68f2-4b77-9995-23e332df067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34bc2fd-c97b-465a-86fb-0b2378fba30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda2e09e-4247-48c0-9adc-74b5505a9974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5256424e-6f4f-4872-a054-a0e3cf5ce23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72abd767-39eb-4c99-ae39-40cff6714d16",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679b2401-f7c1-4277-89a1-13ec72ed4a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc20fa39-05c8-4afc-8331-d8b24179d361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b9cf92-3430-47b6-8c5d-7ee12ec1f62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e2ef967-f57c-4b76-832a-5c5a979ccdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5b3ba3-965d-4011-8833-8dc610e73efa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b9f283-fb7b-429c-9bd0-3b43e7f59ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5bb279-4d00-4334-bc4f-1c266ce82484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c616ff-fe72-41fa-969b-969fa5137933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27909bff-19cf-474a-a427-5dc53e13093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42cc3a7-84c0-4d50-906d-2524fe704cf9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b53d24-5a5a-4fa6-8ce9-65cd840f819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01688fc-4805-42e0-ac80-7586ee23bc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c956eeb-12ac-4102-bd35-27c63ab7c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a0167c2-712f-4125-b35f-a61b522dc0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26939e2a-d648-43c9-986a-e45eb1b10476",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c459a2f4-453f-4207-aa5d-d4fa898e47d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db0e8c8-83c0-45c7-b2d5-57d90327eaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dd24ec-029b-4b66-b3c7-129bfaadddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8ad7fea-3b2b-4386-99e0-817305c04302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fd1fb4-51fd-47e7-a897-80e757c200b6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7239969f-c27b-4cbb-b58c-9029d6c0bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab67c10-4baf-46e5-a0bf-df5c9f37cce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b9cecb-5621-4e86-adb9-b970969c774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f2c1ba9-3428-4f12-b6f4-8f99e5917738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50731b4-ccff-40da-a57d-1523c82be939",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a022e3ff-4bba-4472-9e71-76edf13b35b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaba6b7-8386-45c9-8d04-3aa538b1c576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0228aef3-68f1-4549-b334-b22d764a2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd17512-c414-4519-b9a8-3de2fdb554fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51aa541-e765-4fc2-a6fd-e909b14423c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad5953-550a-479e-9218-c9649f366984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6380fa79-35b0-4f4a-bd81-122f244bd170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91372a6f-4364-4060-8640-6f4e7e23ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6a376b-bd44-4151-9114-d8ca070ec41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3869871f-ccbe-4787-9932-bb8d58cc2dc9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb236047-e6a3-4240-8a04-076419c2148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e65b0f3-fa8a-48bc-b741-d9849ca355e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ddec1d-6750-4ab3-8bfe-e43d1fb4a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341da816-4b00-4eb1-8abd-75718177a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2bf922-6d0f-456e-817c-23893986086b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccddbc1-8349-4c61-b657-4f37c1a45ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0368304f-1f35-47cf-acb6-f9e9f3520b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee4e803-947f-4e18-9dec-597a906a8501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3840fefd-4da6-46e4-b261-f250b1cb3179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e631309f-f5d6-4b2c-bf40-1f54640b24f0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed4f43-e27d-4b72-8659-bda0865aed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b8a25e-43b5-44d6-8bd5-0e742ba295f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acaeec6-1dfb-459e-bf8f-bbac43eaea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ba90e4-050f-470f-80ff-5e049139e3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694599ff-464a-4176-8326-d704850a348e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91b5a3-1026-4304-82e2-42c3288a751e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe2763e-d4ee-48e7-8ad9-d057512da520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c15e9c-730f-4c03-a699-72299e74b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd85d4c-b918-4728-b276-35f4467acb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a05e97-d784-461e-9704-2781579b149d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614d881e-ac4f-40a9-9a04-d68646d8d60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4eaf4c-75a5-4bd2-992b-9df3f8b970bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c23d44b-fcb2-486e-b2d9-923e6d8f8de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c30d71b-cb0a-4101-ac00-163298e59f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41a025a-fa8a-4565-ad2d-658914924d0d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dc9441-e007-4e4b-bc2c-d7727c801c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79436015-667e-41c0-b7b1-87ee2a030fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1968e958-fcf4-4688-91a7-ee63916bfbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef09abff-a6a7-49cb-bdd5-784859142fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a00ce9-83e6-4ad5-9899-a688abb0965b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17b1fd5-104a-402c-8923-29268235b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b16db-9384-4973-9d48-1d0e3dc2de81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d567e-56b9-49cc-844a-6f686502593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4caee334-45b5-42f3-b7ed-43eaae8a2b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05875291-c4de-44f3-be4b-08286758861b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a233748d-bf45-4d63-8a1a-0f31998ab675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c270bf-c53a-4f45-bf0b-1b6a3cfbbf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930e1614-fea1-4a59-8571-a78adfb3525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78410c4-73ae-425e-a421-c4d3d044226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c73633-0f3d-4dcf-a926-25adc7a6b904",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa98b628-a0e1-4076-ab03-a4ec6120f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4778ab44-d3d4-49ef-bd02-1ff5bfe93e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4a5ec-8bfc-429e-a9e4-47eea68bb1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f21f30-d8d3-416b-9eee-af00019ad57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d0a831-6cb3-40b8-9d60-940909337ed8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3183a496-e989-4f6e-b68d-8f299faa6568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae04938-3bc5-44a0-bd62-9fd13cfc5ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb4bb76-e43d-45b0-8520-d7306a45a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6095065-f478-4e38-99fd-5fa9941986dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0409051d-6fbc-4ee2-8498-f42d73b643de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fa0b53-0c8b-482e-bbf6-bce6a226d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad6d00f-3898-4428-8a63-c138fda57d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78578ea5-c02c-4282-abb7-e710f2c9f13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0027b90a-1653-4deb-a88b-054baed0f8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82f15ad-9510-4b11-99dc-f621a2a4335c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33473c88-d570-4c86-87cc-79752fa7df83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43da486a-ff28-49cd-87f9-321a12ed95ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387c7de-421c-4a80-8509-a0b948712e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5569eca9-8f0c-4ad8-9c8d-65b99805a60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a8bf3c-5aea-4ba7-9dd4-2d60f005ec33",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd99c7a-0d74-45c2-bf45-d7c85368459b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf1c80a-5524-4585-974d-d5283ba1329e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef903e9-27cf-4907-bd08-dbef02487198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "455d7d31-5106-4023-bb40-c912c381463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df6e91c-3266-4eed-bc9f-8451190b1f82",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f174a13c-c24f-42c4-8f87-81b1d21aa4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e99511e-a95a-46ce-8b53-d7cc30e16e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc65502-edbe-4e22-85c3-e6d424900f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a32a71d6-a45b-480d-9f11-1cf9e7199abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b5e9c-e3d0-4db0-b317-5ce28cbbebd3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38661196-642b-4fd2-8bff-b23dabbd7a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f036c31-520f-4b53-b5b8-3aa5fa895388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6e99b5-da9e-4eca-9b47-ceeb28dd16aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "350e0552-8625-41da-be8c-2dcea8d09811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30776034-a0e8-4cd8-9b4b-9ba6c89564f4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54e87aa-0aa7-4c9d-b338-9b5c41facc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97be1e52-7bb0-49a6-9800-8aa0c686a014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d8f455-af8d-4033-9abc-010d24b2641f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07225de5-f89a-414e-9353-a6aee422fa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bde338-bfd0-4b8e-a9f6-8d5e7981c8c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33d97e3-1fe7-486e-9af2-32479549edaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cab954-0d55-4710-9a0a-0062bd6d278d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23204c88-87a2-4ab0-8b4f-d46a2a5d196f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcb3c28-3d17-492b-976f-267bd403048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992ca2de-f2fd-4c08-b38f-53b3900681e2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0827226-5bf0-473c-a1cf-0341603fd023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8c50821-274d-45b6-b025-d55718711ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa4621-bdf0-460d-bbe6-2d830930c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bae0527f-dc2b-4eca-a0ba-b399680ebf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b77e1-4e32-46b2-b8eb-5ebb927eaa2a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acdb938-d163-464a-9f29-526e6f5063ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4209671c-4c2c-43be-aea2-ac761885825d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27644573-5e10-4f9a-a8a1-70d532be1484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67113aa-6051-483b-b50d-8283e8f1c0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b9a190-beef-4171-a11a-a84ada4ba70c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce481795-7614-4f70-82ca-d1e3c5087803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fb8cb2-8091-4a7d-9839-984dd7f6f937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b9d76a-11f1-4424-9b38-d643c48b8c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01592c70-8f96-4f6f-96e4-c8017cfb6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ed925b-0172-4b50-8682-6ac87b91033b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9974ad0-7c61-4b4e-99d3-86e7dd99784f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be09ff67-5ca0-49ca-b864-3edbf567888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d1877-e3bb-4ea2-af2a-a20f3d10fe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47a5f5c5-6601-4fe1-9b98-33afe215b38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae75a5e3-bc1e-4a2e-bc5b-94704bed976e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dc05a5-c024-4d23-8192-ddba44ea742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed01c9b-2b3c-48d1-ab29-5685a17da848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b97d2e9-c87f-4727-9b86-f381975d47d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "332606a0-1ced-4529-bb29-60ff33b3e777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef718a2-e360-492c-a77a-8305aac40655",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2a58b8-892b-421a-af88-8095bc4d6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce04084b-769b-41bf-9348-a82ce8172d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7c4e99-ceee-4e9f-a9c7-fbd61ff96eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3985d275-3a33-49dd-8630-c294d5c70d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22535248-9138-4ebd-9e76-d2bfbd21f8a6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93607501-f569-4d96-a3fc-0f2ae426c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b77eb87-7974-4573-80f0-8e51914513b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57abe6cc-9323-4b1c-af12-f4c919f99d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "89460788-44aa-4478-9a9e-39bdd0d5ed86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279ff916-5058-4f0e-b572-e70a3d8db61a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ef95c-f98c-4b0b-b177-cde4f863f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bf9b81-aa16-4307-896f-f26e0e6c4739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65683cf1-3032-4f90-8e22-b732adf17f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b53a1010-f471-433f-a9d5-b94c6eb3dff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082c47c3-cd80-4a8e-ab79-ec3ec421d20d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73fce4-8bc2-4227-a94f-368cab812067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5de54b-5a79-4aee-8657-f462cf24497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674f2166-8d64-4e16-bef2-3008b2bba8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d01d92b4-91b6-4a77-a181-175967f201f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f96024c-137b-4d4e-baff-fc72a1c31bca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b62e3a-d8b6-4311-8ebf-6ebe8bbd2cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf0da0-9680-44b6-bb48-74684c547bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1989f4e5-f4a1-40fb-80b3-0811580e5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e814da8e-4f69-4cb9-b91f-def616c1713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf305bdd-e08d-4ea4-a2fa-d4cfb59ff3f7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104efc28-8f25-43de-9b63-1bf13106d599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d638def2-2388-42ea-ab67-58f68447ffcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792a6c5d-0ffd-48f2-ac05-32b29425961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9becd2b9-b9a7-4537-b2f0-7c356b20479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf20fb-ad6b-483d-80e2-57ed03ccba6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e616cf6-de93-46cc-947c-f5cb08637af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0941360-1687-4c62-a472-fc81ac194184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe8eea8-78ff-44e4-a1f9-42c01223ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf85b8a4-d1c1-4d0f-b1b9-3af8b48c22a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b634a5ca-e946-4ac7-b4c9-7e6d7d0e81d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860efd3-e66f-4728-bab6-80a1f2e24c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912cd843-2745-4bfb-954a-385feeb00851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25f5528-63bd-4959-a877-77d0e1937a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee6902c-70bf-41a2-a68e-6119054b434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85863fee-4e32-403c-abdc-cd1b556e3786",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0cb388-a23d-4bca-9b2e-db80d5aac322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a50e88-d951-48de-a4d8-4707f05d3829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c36c4eb-b70c-4884-9c49-3978df556dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b06194-2883-46b5-a75e-271fe56ee301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d019d2-41ab-4da1-be57-cc950077036b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50adfc0-4e4c-43fe-a470-12be53ef2aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1a012b-7c77-4c36-b8c1-8949e8be1320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c538a56-ae72-47df-9a12-43f2fbfacf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b010fb8-b492-4022-8312-a27e821fddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951263fd-5b5c-4da2-8cea-bf07c413bca0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaa7f4c-76a7-4e58-96f3-2b1ccdc8ca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4970369-c020-4880-8984-8ba380b0adb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81d04f-72df-4364-959b-8eb04ecd2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a4581d-52e5-480e-8b85-4e4b02c9fb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392f6dc5-4c78-4dbc-9816-f497ca532128",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d3624a-5cb3-4e02-894c-e47e63352f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1b6e2e-e210-480b-93a2-42abd9c3bb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641387b8-2ad3-4c8a-963f-7c3a4d433f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d05a0d-3d48-47d1-a42e-b2cb1a1bd138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0558ad66-18dc-431e-9f6a-feaa9382ac84",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9deb81-2a24-42d4-9b60-f3fecb3687d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc565239-1d1b-4cea-9f59-aaa9147a0fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee032a-5456-42ef-975c-f7fd35cc9133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f60ab4-72d0-46db-83a8-7b59b1da482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d695f4-35ff-476d-99cc-62fc36e07164",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd90222-3a62-4e1e-a1a0-9670d6d4a00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9503de89-d085-4902-a2af-6feb7ae59b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcc250b-a233-49fe-85ba-cc39c16eb8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9501f7-6200-4e1f-bee3-07da18db4a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942f1f77-df97-4c4f-ba56-20f7a81553c9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2fb7d4-affb-4be7-9b38-5611397ec344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2ed582-6810-4a5a-8baa-a36d2f3301ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b458b3-52f1-4f7f-9433-07816077eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "147e6d05-3eab-495d-9fb7-24fca5572024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ab384-2c44-43e1-8807-dd51844c9fc3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f1e84-86e7-4c68-940e-3c68fd54fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2035f3-1834-4195-a8dc-c8bee460dce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f74368-6a97-4311-a85a-d6818fe85e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9eced766-cc5e-4b3b-8419-ae9db372f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a55e803-003c-4430-aa91-c79b1e81e566",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32537c6a-95fa-46c5-a233-0fcddea317b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561e44bb-6cf3-45b6-ba2c-6c8372fda8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a8d870-3aa0-4ce0-a802-13ece65c9f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a72ab9c-f724-48a2-bcd6-ba6d16cfa100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a65125-72c7-4afe-a9ba-2344f6a7548c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65453795-81c4-4389-af84-1c655b30996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7553e6a6-2e64-4760-bdd6-85a1d8d2fb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05efe801-69e2-4ac4-a88a-1c8d2f5b289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3babeca-32ce-451a-b9e7-31184b2ff606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecf4f55-3eb2-4762-b2cf-dc7c7a434ce4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7306fe15-6267-4b5f-951b-32969dc5a892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd589215-2192-4264-80aa-681ceb1315dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2cfcb-a8cf-4465-bd81-b5b965c68a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bf03ac-42f0-406b-a5b9-86f3957dbebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc19080b-2cca-4702-b3d1-b3127b796b0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ecb37a-b1ed-4e23-ae4e-bf9210a7dc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f73b0f-1f62-45b4-a601-efed33ab8c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e5422c-8612-4586-a0e6-bc5c43058432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f695555-0545-463d-9b23-e886a23f9404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2e7639-6016-43a1-853a-d1fc270a554b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb063e3-7554-435b-bbb9-2e03b0e07901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfccf2f2-1b5c-4309-bd1b-3e9d4c734302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecd4668-9145-4e22-a306-3a5e86576f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0388bf9-3565-47d7-9b91-5d3c5e8cdee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b8835-b9eb-49fd-9d28-cd53681acd62",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362c46e6-630a-40bf-9d05-3e0ce8e2dbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81452de6-6448-450a-9fcf-88138b54c383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98bc9d0-a8bd-4222-9652-625064f77e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbb234d-c545-4d1a-a7fc-8ca077ec5da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1332831f-6d2a-4bc1-a00e-1aa6bd02ab7e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1981f1-ab8d-45c7-aab4-515acc34b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497ec1eb-0ced-4eac-b2b1-94e15ebe499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39526d8f-888e-4d89-8e41-ecf98099ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9ef443-4669-45ea-a9a1-c49d20587ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d60efa-fa2d-49de-9f36-c39a3bd06466",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d644d9e7-4ba6-4a80-af23-a020d63ba8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f19287-9f99-4cbb-8546-916625bf0daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da177c-6b16-4d14-b120-027c7a06d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d225be-1982-494b-84f6-fe544f8a6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60c867-daaa-43cf-a8e1-580c5a788502",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4274ac62-c496-49cd-83dc-12e27db36974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b42b75d-5fa2-4e9f-ba2f-0954db7d38bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d82e4b-6990-4c6a-8eb3-68d3d8b3c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce249894-ed85-4b9d-aa1f-4580075bfb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868fb638-2970-4ecf-aa7b-1fc66e9df657",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91deb2dc-c12a-459f-b871-778eb1769eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccda6de-5ccf-4247-8ae8-2470119fddc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa594c18-bb3e-4314-b7a7-b00a38413a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a5c730-1de8-4c43-8bba-91ec25ea7101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c49b07-8877-4b37-8cc6-2b88ba14231f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43121868-6acc-4ac2-b964-29b8e59bd447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97ea137-6e1d-478a-87ec-b4f67c04c647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cadec2-6087-4fe8-aa91-03c4235847ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "391cf0e9-1701-4921-9a4f-558b52a34678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7be15d-3756-464d-a9da-177cfd0558e3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c215e65-0563-4395-b526-d31eed935e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88add9e4-d055-4cad-8def-2060316ded64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae51fa9-f7a5-45b0-af26-bc7a205f98de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcad420-037e-483f-8ea6-82aa023ffc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24a746f-4e59-4fc5-84d7-6cd0e3fd0891",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752dc407-cc65-48f8-8534-c1ac2a0d3dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aee762-b219-4a54-8f10-5fe28fcc8b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadade3d-ef8d-4c87-806a-bd8ed2c1d290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddc3207-80fa-402f-88ea-4a22500892c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b1a4fe-bfde-4533-ba54-d8cb6c28ee1c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71a69f4-07b2-4e9e-9502-a87a414a535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5b22e1-5a3d-44ce-9f35-d141fe3f3b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275c3478-2643-46d8-875b-ad0e56473e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ecb168-c465-4920-9c13-1353c127d8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebca3c1-fbb1-4b4d-8d1c-ad047ed49cc2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced97186-708f-4a70-aee1-f2e9f8d94bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77110456-00c6-463f-9da0-6fdd60254832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4fa57c-8bf8-4abf-8d77-d596bd0b6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce976ff-8150-469c-a19f-9e2695b2ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8fe8db-d4c9-444f-b585-0a0a5250f145",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05733e-51c8-4f75-8aa2-15075c1e36a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4534e4-473d-49cd-a587-51f3c8d636ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53981c31-a049-4e09-9dac-fe68e1a21a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1847aa49-04fa-4f6f-be7e-070dc8a6fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafc937d-4fed-441f-a3dc-b0b87979b703",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c61fa69-805b-4720-b68c-4d5a56f022e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b70e40-0f00-4d43-b727-47f98af131a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9e4822-5133-43b6-9e8e-fce11b35e541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "574c9850-3462-4044-8561-7e3dd1c3c34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f3899-9aa5-41b2-8ec4-50707742e088",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c717b645-68c9-40dd-aaf3-e2780f6704fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dbe606-70f4-4b19-a552-59d580841516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b62488-a128-4237-b045-817314beba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4acc40a5-8f15-4aff-b09e-c8d6e204af8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39500ec0-ffcf-45fd-85c4-af119e09b9ba",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbdd77a-ccc9-4c35-8eb5-601f89ed2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ebb960-bb06-4fa0-9ec7-fb4539ce41f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f613efa-b811-4f24-80cd-e8c4e172d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb427637-d1e4-4124-9408-8483fa262663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b8a5c6-f066-4e20-b42e-d5e63d857511",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d2ba06-a4d0-4587-9b8a-e6d70b5cc2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f872f10d-8181-4c7f-ba0b-d309409a8963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d75d1a7-d74a-43e8-bb03-ba40a23ffa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43730bb2-aece-43e6-8647-6a835e8248be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac1a829-7986-4470-a589-6c57ce4c6394",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28cd2fa-4055-4d82-9e57-dc1e69438d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7deed12c-7ea6-4ba1-b64d-898f6be55671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4be7a29-8591-4ece-97dc-35594cf1d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8761ef17-dc47-4f8c-bf8d-3c123694e06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5058266-845a-4e2f-a49c-2ed560d9c3f6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c3051d-4e6b-4aed-9ec5-02577dd0cba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14f143d-074c-47ce-9951-27d3fccd066e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0da736-af2f-4aa8-85e6-941e0a79a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78cadb7-d7be-4399-a77a-acd943b34bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6eb704-cb39-4daf-8ad0-583c762daef8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d36a330-a830-40c6-86e9-f7369d2ef951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004bf8ed-a6fd-4830-8dc6-0fd5f2bf99f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fff869-0928-429f-91d7-55fc4841d373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71675dc6-fb5c-4d92-9127-27e3ec8c4cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4c5987-0cba-4a5a-b0ed-2c93d398e36e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636b596d-4f78-4870-a03f-c07841916ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03344e69-9449-4946-ab9c-e403bf5c51a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440151e8-beff-4b39-9191-2f1b168c0505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6df0fdde-f2bf-432a-abed-7d58006f6ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a27f84-fd57-46db-8c49-6ef1999ea102",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee374419-067c-4583-ad6e-f45d10d7762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7476b31-563b-4d84-b7c8-7ec2bce101d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c647884e-c7f1-45c5-83ce-61327e941136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad56dec-3b86-4c6e-ac4a-44bef241308e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5eab71-0a50-4bf9-acbe-e87893b23f31",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b62c2b-a4a4-48e2-bfec-242e8eb56ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61727e8e-8224-4661-9bf0-ab50d77c05a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e3f333-630d-4d1b-a0e8-7a9b55b1a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "163c92b4-0dd7-4b45-b622-01fca805c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba55c7-7938-4af4-9915-5bc63283fd88",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eae8e10-9db4-4afa-9096-e9d43b43117d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f3827f-c26a-4a18-baf5-5f5ce7dc0778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35708599-1b6f-453c-bbb9-26529ec0f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a82d0ff-1e22-4754-a261-54c7e1cc74f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ee7fbc-f36f-41b8-b649-90cfa418b8e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd947cce-74ce-4da8-8c06-b44339367915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff3a556-816a-415d-b81c-0dff0bcbe29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7653062-de6b-408f-addf-189407699dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ad38a3-fd24-4e4a-8821-18337b59864d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9962733d-cacb-4211-b661-df6f96c0b7d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20afe1ed-4105-4d14-880a-37227771d433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb45a92f-7047-4d94-93c5-7e23a174c07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75a7b57-19ac-4c93-bfe2-91e9e7234ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0934859-76e5-489c-ad18-fe21e098e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e63aa7-2304-47a7-af17-796f70f9f098",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa4c43b-f1d4-48c9-b325-1e80aeeec414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7216c18f-1e94-4b06-869d-949a563351db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefae093-4b16-4275-9a49-a7854aad9044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3ac11d-0819-498f-b6e4-b0648ef1eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4be25a-ad5c-4fc9-915a-19888e31f30c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2f5e1-70b5-420c-a0a2-38fc1e3f0dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60158af-3280-4a58-bca8-7a729750319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1e93db-2f63-4bab-bf09-382532311042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1e2aba-d7a8-4993-ac31-1cb3ab189429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f244fc5b-31d2-4127-a796-5dbc4b448bb3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52ab39b-62ff-44c4-9cbf-39c1f574997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58db1029-bcc2-45d1-bcca-a35787c03050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd56d6-977d-4830-a85d-7232565fba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd28f68-db57-4369-9efd-2c82d572dd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c92fc68-dcbf-47e9-b525-da60ca326512",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f2a3af-7c5b-420b-95b3-f11c26048e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5998fc2e-8712-4bc3-81ce-00cbf2338770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d522a4-c734-4d45-a1ad-c0884e3869a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "736bbe7d-6e3e-438b-b7b5-cbcec3a40245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181cda37-15a8-4c97-b68e-33cd3b23e07f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3b04a3-0da0-4b4d-bd82-384d3975ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5037f872-6dc7-4f53-9be1-10f339f3241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf29be22-3c40-4bb3-8fa3-6f018e312ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93846ee0-e7f3-45d6-b8c0-c3446a17850d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c4d826-c4f0-4ad0-9b75-7f541384b2ae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88652c8b-5928-4ff7-833f-7f28e46c8012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b0619e-19ef-4c02-9bf6-b2cf1c7f3fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cccbac-671f-4434-8b58-7edf70888164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aa4f22-e938-440e-98fe-0c6c6bea2940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d8129e-b142-4ae7-b793-329be42d0850",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3c5922-9414-4747-8337-faa1fe0bc677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f873678a-b18c-4eb3-9639-c3c5ffacbef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6656328f-7c04-42a1-b405-363ac905c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab244033-2205-4480-8418-fad0918f8fbb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86bd062b-c193-4bc1-badf-1d29ed48aedb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eb784ec-62f1-4a41-b2b2-ded2ae0040dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b5ffe-4220-415a-a7e9-5fcd1b3a34f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0d46947-cfad-4112-904c-d05ed4a75f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d743324-25a8-4b92-b215-6b3c02b97e5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d710b29e-1323-4f0d-91f9-dc80cab2eabe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7081e762-6499-4027-a260-6da87189f98c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6505a374-a5d0-4cde-92d1-62c0eae2c107"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a80bbb3-a37b-4239-ba7d-20ddc75a714c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b32a0703-c5cf-4e90-8d03-4a3fb4c4866c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1118d78f-3ef1-4296-b801-41a39a4b6d9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7625e8cf-f040-423e-9248-d6d6b27361e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b33a55ef-d3a4-422a-8368-d408f30c2511",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd10fefa-956c-4300-935c-03fe272124b9"
                }
              }
            ]
          },
          {
            "id": "2ed5c0d6-62f3-4b56-a9a3-34ba48e0c1b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5fbe639-0277-4086-a97b-2cf286165eb0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5735720f-24b5-473a-8111-2609dac7e0c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fbeec1a-2f34-4173-8c5b-04e20d69b120"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25948cc1-b389-41ad-9bc7-153f0c5e3937",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b8d5e0d-33ee-480e-98af-0a64fd4bf7b2"
                    }
                  }
                ]
              },
              {
                "id": "8b3cc5d5-c319-4383-8f9d-8a92c01bb957",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6aa3f66d-cabb-4b57-8951-5f6f1ace993a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec88a8d2-9da8-4309-8a16-93f515abe1f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ad45bf5-8cd8-490b-a216-2231a8ee3dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65dc8305-0792-4ebc-b495-fb490d0b0e62"
                    }
                  }
                ]
              },
              {
                "id": "7317f4b9-ae86-4ab2-9ecb-748d22819845",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06b03e41-9d49-4716-976d-c9000c33c246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14150972-a9af-439c-b90d-a35e9d7db1ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e5e991f-6ff7-4519-99e1-e988ebcac012",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e9f404b-4bd7-4ed6-83a2-6e5d235b838f"
                    }
                  }
                ]
              },
              {
                "id": "937209ef-ae9d-4c99-8e0f-bcfd0ae0b8af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61246b13-f88e-4610-8d5a-4b97e51e4896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04460e75-da44-4859-92b5-73b74b040196"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2793bbde-6ba4-4014-84a7-bf8161394c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "087963fb-41e5-4814-b3f9-dec31f2d59ab"
                    }
                  }
                ]
              },
              {
                "id": "4c55c3c6-2c3a-4ed3-970c-1892089b3cf3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5de728e-bba8-46bf-9e50-e118b002e5d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f88655a4-ecb6-4ed2-b75f-2674c19d54d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f1f4209-00d9-4e73-a17b-66fb0aacbbbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9bce9656-4868-4de1-89a0-e80e843cf855"
                    }
                  }
                ]
              },
              {
                "id": "94f34a9b-94eb-4b30-abb2-af9b42ec8dc0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "782a9fd8-b1c1-4354-bc5a-0d81e5285613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "651c78b1-cbaa-4cc4-add3-ec4d052a7826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3643014b-1f8f-4af1-93ba-7731a1a22581",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9150409-9236-4b39-9bf3-890a0f4cfa30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff0f6ddf-2f9a-40e9-b442-e718b28d0eef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59067541-638c-49f4-9b31-e4e0611d3e69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f8f03272-a0d7-4215-a54a-816469dbd3e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "628b9258-54dd-4bc9-a232-535c7d5e8754"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12d7812d-dff3-4082-8621-7d19b80b72fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c66acc9c-c8a7-4a8b-a493-f1438b047d55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e50797e-1a5f-4a10-af0c-b69eba980191",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f45edd76-6669-4a0f-8d58-7d69b741bb5a"
            }
          }
        ]
      },
      {
        "id": "c94ec7e1-a742-4474-9ff4-d223be01be7b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ecbeac1-ba79-43f9-add9-62067f32dd08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75a7db56-b2b9-48f6-9b3b-5238bd6414d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3fbe231-ffe8-4423-86d7-c67b7522c97f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a8135-c069-47e7-9837-ec9cfb285098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd82883-2267-4d22-924d-66bb2149a7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e825723-e2ca-4f2b-a46b-b81b32997dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98288447-c16f-48c6-8ac1-8bde7d0f7c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf055a90-c7ee-4b82-850f-2255139241c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ed515d-0372-4b8f-840b-a551c76ff977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9310cfed-a4b2-4b0c-a7b3-c6195756b138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f1cdcc-c626-4c54-9290-1267a15732ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08052982-6361-4f3d-8a8d-08c478afee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f56a39f-6c08-41f4-9c07-65440c74bd36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa604be-3b6e-4ec4-ac33-aae604f90aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad64327-c60e-4ae0-9cae-62878e94ae48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9759fbbe-a9bd-41a6-92ea-19444e66abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af2840cb-b939-4995-82e7-7d27498cb5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c7a61c-5053-4e9b-bee6-6388fedf294e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08759cb4-7e3f-4b9a-93f9-60f0ea996070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f149124f-f1c6-4372-858d-070a3fb568c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c276e1ec-e30c-4a4a-9527-c2eba01ed223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d599a2fa-93a7-43e2-b4e8-b34bcc8b9ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47b821b-2da8-4a10-8181-61bf2452a755",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fbd09a-e538-45cf-afdf-b4287dad578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f354ac-d106-4e40-bd64-8779166dfffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f08daf4-a17e-4adc-8702-6e6b8a0d43b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cc5370-22ef-4e54-bf4f-581285ddf962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771b449c-3a8d-4176-a294-4fd251af2335",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a28b1bd-12eb-4567-ba71-89e6d3cdc1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eff59f-1ad8-4bd3-ab04-d64550ed50ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4497067-ca03-4148-9ee6-7c4d0e0d7dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e19d585-20ad-4734-a528-132294b0a63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b05c317-31e2-4fbb-9620-1099ba60673a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa88cc7-63c7-4388-ad2b-7d85654a61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91c8694-d38d-478d-819b-0a7ce55d665d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6095c1e-6c6a-4cf1-9cbf-b146586853ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67afc143-59ee-421e-9713-02ec94d6798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab3b72-0849-4e0a-b1a3-323f1ce8252b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba924679-de31-4478-bcd6-91ab95d2fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f13d84-bc36-4a39-9203-608285067136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0111008b-b781-451c-be6c-8ce8ad705423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14641c7a-d85e-4c40-b21d-55ce21339d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5821f4b9-6b7b-4fa8-89ca-1c4d096f9cc0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14498072-c0a1-4300-9b0c-a0b7739dc846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367206ef-9880-45c0-87a3-3c2196788eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dfb835-d5ed-41a0-bb94-d36c6680daf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a29983-ed82-4145-8cd7-dd64b6504fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726fb08-ea74-4c25-a3cc-8bb13afcedca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08940d-77d7-4c9f-861e-ffa37eb92b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ca384d-1c07-4d11-b634-245eaa89899f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b36665-6cd9-4dc4-877f-9209888ae4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9e946e-81fe-4d03-b25d-bafbc51321e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ccafc5-03e1-4032-b2dd-638a930d8374",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff6ff39-65db-40e1-9e51-2ed390cb5ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0099c7d0-598b-4ee2-a9db-80e48e484d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c578d8-5352-43ca-ad27-de4e981d1a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f01f2e18-3336-4e1c-aec7-d6aeda22fbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2016a530-f1c1-4ef2-a904-36a84bce05aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d6d28d-7f2b-4e49-af43-3d7b3bdbe4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d1e032-d707-4a40-94c8-12fcfa779d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52164515-6316-4875-8478-396a7e2fa157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9b28f5-ebaf-4c4f-80bd-376fed0cf23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ea0dd5-5c2e-4df2-83e9-431221971955",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f94879-a33d-4367-bc53-0060de723e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21125a05-2ea6-4bac-b177-6d43cbfdb9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abeb862-1c55-4115-8e6a-5d91bd9a618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb2ec79-0678-4390-bbdc-afeb2af0f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882d27b8-b8ed-4094-af1c-1f63cabf2a6e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad56f282-065b-4257-b2b5-1419256221b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450b1ebf-35f4-46d4-a663-4817825ea27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2685cdb-7b96-48f2-87fb-53b86fa783f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3afa36e-4826-4d9d-8e35-aec0c6d49d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c718c-195a-4697-8025-04c97b4f4239",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45c32a1-632b-4a9e-a826-fde563589f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222d7407-2f6f-496e-99ee-dad858f34ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ef662-cfa7-493d-b240-ca359e9207c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b467837-acb9-4355-91ec-29b38225db0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709c4a57-841b-4246-90f9-c781bc7ebed1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4cc978-be58-4c48-9570-67b9ecf65d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f2c585-04fd-4258-b4d3-b25bf6c88e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54244a21-a8d1-4058-aaa7-26ad1519495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78de32aa-9a86-4934-9c59-f7fae692e0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e0353b-4000-4131-a5d4-3198244787fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0824b91-4a7c-4844-b496-eb5dd1681dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9ba22-614d-4f7a-8af7-b4b26a4c21aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687d453-1e34-415d-98b2-54b92e9e09e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce441a0f-0b92-4307-b3ad-060fe78b6db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2af77b-2757-4d04-971a-e9b797da36c6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e190b3-e261-4a3d-a12a-cf27ef3de559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb67a18f-524a-41d6-b50c-47e1e368ea72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b5f44-13a1-4b85-bb02-b6ad8f4a5539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa246412-5294-4cc3-8645-77430b1c3096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89261f7e-f264-4324-80ce-74dbe61ed2df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d96b9f-0808-4cd3-9856-12f82051c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9010b222-05bb-47bd-bec2-34d7e66d3634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a62eba-0407-4238-84f3-587cc3e4f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36324c2-52e1-4308-a615-7018036acb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13503385-2f1b-49b7-8b55-19dff0f5387c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9297011-df58-4b94-9040-501da7209562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de910819-1e84-4a36-b082-e0abae8316bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf534ab-c422-4969-babd-2c642261af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec8a1de-a673-45bd-82cb-44bc985a04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9288a45-296b-4c92-8c61-17315cab2793",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daf8c18-beca-4aad-8691-0a47a4e14f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90f0244-3b65-43c3-b9ff-a53f76f0bff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1b4578-2ddc-448f-a95e-7cfd4d41a43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82821ba5-861a-469e-bb4a-d1c8053d1477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152a45a7-1f21-47dc-8a96-fa10da2dfac2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c2e7ed-1681-4d4b-afcd-2f8856387a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea4124-9f83-4bae-9fcd-b24ebc218a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af7e8e-aabb-41ec-ac42-b4b7dca5fbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7137d8-30b2-4105-9817-0f077b51e384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35424246-86cf-4f99-92a1-f098269ce5a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e0f6cc-3aaf-4f70-9957-2d76aa888f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7930630-20b2-4a8c-8af7-916e825f0e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c09b6-7668-47d7-b634-864bece3d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6e166-1bb4-4866-a488-d77f277f807d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c47c2e-65f1-4e2f-b241-75efd269f83f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e457bd6a-a1f2-4c9a-a9a3-a9d06e60d00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c53b042-5b34-42b6-a7ad-d9c2be9e2ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7d91dc-c17d-4546-9f82-697d810d63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22070e02-11a1-41c4-a35a-61dab343af0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ee74cb-fa26-4d65-abca-7b86703d0687",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64f367-a5da-4cef-b429-5a5f87f39e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f0e355-df2c-4886-82d0-03d8d37a37a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b601d53d-a293-469d-81dd-01e3fe9ac8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e16eac-b1ab-4f84-869f-a19c3c942c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97f0f97-18f9-4a46-b398-b4a10ad72be4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021534d-b17e-4403-a19e-4c4fd7d6443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b11268-0d5d-43e1-8a52-785ada8c1c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4660347-c7b6-49ec-88ad-7099c33ee5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "348e0fd3-8f5f-4aaf-9379-5f952102a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815dc366-40a8-44e6-bbd5-2cc30b2643f7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3067995d-8c00-4b51-85d8-903b3131fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27415437-85b8-46ca-9054-a93bf7e33dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c8c585-a1c4-4d3b-8994-79ba5bff792f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004939d9-8978-4d2f-92ee-bf4169d22772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1f574-8ba2-4872-af68-f51d7ded52fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4c1610-2d16-45f0-be56-ce0ed950ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c812f00a-62b8-468c-8d01-e71069296c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f307cf-6d2a-4523-b61b-c59bfaae68fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc729d5-ae32-46c0-aaf8-d888d459cbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c726dbd6-be25-45ce-a9c2-495a9d483c78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359b043-4173-4366-8461-a5c3b50ec1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2900e07d-7348-4950-85a2-9eeeebf38986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f896eaeb-0b56-4485-aa31-588244513e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb48fa85-e57f-468c-b5cd-2d084ebecb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1654109c-acac-45ad-82ed-94dfc57ebc6a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7109e51-594e-4ba5-8a38-61174326ab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e956947-d174-4d7a-b819-81c129c5790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f76822-7063-4d77-9a54-e700ecbc0724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "307360f8-38a4-40b3-830a-12e3e0187bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5275d6-8bea-40d4-9657-effdf175eb42",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e8465-1d8b-4100-a1ac-d580ea2a6336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640cd13b-4178-4477-8d2b-c5db07222f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b077fa5e-5201-4810-9b94-22d73224227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "500ed73e-6a9b-466d-8439-d40d5b2deaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26fa24-9f36-4d31-a22f-0fb3e8c212af",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec05400-6a16-4ed8-9bd0-8cb822ada56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e1ec5a-fb55-4264-9b34-c6b94ee40408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd57f14c-cf23-4e6b-b2bf-464404084394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14d9a40-b38d-46bf-8344-806cf0a81fcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b5b3462-3417-4f29-8cbe-60c6bd2f9d05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4edfae6b-ad70-4bc5-b54a-27dba875d52e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bff9bc-d3eb-4250-8990-94993f818e92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7e4af3-b874-4dfa-9ea4-c46c33e866b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec5d650-4a4e-42ca-91b0-ccf982651dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ab7ba4c-0e9c-4c9f-84e6-832dfdf9431c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "239605d3-e17b-4040-b9cb-37ded49d0c18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d94bff59-6f77-49a4-a42f-e3f70c8ef8c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8237ca2c-06a1-41c9-ae8f-34b36034bc1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "292007d1-a2ea-47e9-a0f9-9077a8133bd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12492dbd-9def-4874-b8da-bd3903921306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31653f11-c11f-42b9-980b-b513b56c8c4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eafbb4d-c8ba-4e81-8683-cfca287959f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec005219-d017-42c6-9679-9331eb30baf7"
            }
          }
        ]
      },
      {
        "id": "1c44659f-c892-43aa-9ee2-8b170cf719b6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "87fc48d3-e449-42e4-8540-fa7dd6442cb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7b7a063-eeb8-4ffb-83e2-48735aaf8ea9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee7ab0e4-f4fb-4e98-bcc4-dc8d660f0bbd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e165c98-02c9-4e8b-b6f0-0657a103d4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03a41da-7521-4579-8045-a2d5a69e819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1193eb-97c7-48e4-8649-3097cd554003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c52196-b278-4294-8af5-4fff1c42d8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da893454-6a94-44e6-bcb0-b6460a144b7a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2f3b1e-dcf0-4c22-a94c-278b6015a506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0889091-6a07-4ed1-8f25-a4a9edbf2d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc959801-55b8-459d-9e34-19941a196adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf00554-ddce-4e6a-ae5e-af53cff8d575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7fac99-c482-4826-9fe3-c42cdb0bdd96",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4058de8-986e-43d2-b9e7-3a772d946ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52ccbc3-0f8b-4188-af47-d642bae10107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565bc4f4-73dc-4231-b517-527eeba34a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc339321-184f-444a-bbab-1a7f57c43344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b75cd2-4706-48ee-ace9-93f48934fdf4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaf3aee-55ca-4974-a454-9be01a3ef8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f611fee-1fff-41c9-a5c5-01bffe651b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b62db3d-f904-43a0-b65c-59021918664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79490b73-795f-4eb7-aad0-5bbca0334946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b561c73-1f1f-46f5-a9e8-132d49037256",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4597aa13-62a5-4f00-bfac-0f6a2611b098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7337f1d9-d9e0-482a-a95e-4dbd7f173210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d5fb9-bb27-4b8f-be39-c99ba691f64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2230f929-3b61-4a27-9615-510c14d5c6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a962a8b2-b180-4f1d-a7f4-807215efe5e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78d0f66-7601-449f-b2b6-a5ef54f0ec03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514e5caa-4930-4352-865e-8a6d35e65b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36c3a9-975e-43e6-800a-7dab92e6a4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a067ae-801f-47ae-a6bd-cf90cf50febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b942b93e-ca32-4c3f-b8c7-5821032f1016",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1fa5d6-90cb-4f48-8691-aa82f0572722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2443a52e-411e-4f1c-8490-b4bd3b3a0f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4187b84b-7e6e-41aa-a8c6-2bf5992e8354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c04fbd7-e735-4fa2-a9f0-b96edf1cfb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e891f2-696f-4766-8604-c2bf77d87355",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4580c38-9cb7-4fec-8b8c-2a422b6b3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c955b9eb-245d-4647-acfb-d0cd5aa84f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a851385a-a7ed-4830-8ce3-88ac7dac242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "435fe278-1a66-4a46-ad86-fdb230f158d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b699704-e804-42ab-98d2-ad90e8fb451a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47443c5c-d1b0-42b6-b99c-ab9e44a440dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30252d6e-db54-4975-b888-535d2ebc3ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfc5ad6-ad71-427e-85d2-81139be1d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7e05d1-690a-4e60-a764-a642f6954604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfdbe2-cbeb-4e3b-9a8e-7f07bfe2d9b7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b3e05-867d-4393-b32b-90c5bea325a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1ab5f7-cf46-4d45-9482-23cebf8d71b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f885d6f8-1f01-43d3-9a65-bb3abf2bf067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d8d011-48ba-4164-bf9e-e23ff66cb9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3335d-5901-4f77-95c2-caf5407f2238",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1948eeba-8964-4eb7-ab6e-17c1d0b1d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7f24fc-291f-46ec-8b10-149e9cf33599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b561bc96-6b19-42ab-8f28-cd63e36705a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c60e91e0-5668-465b-a8bd-261dc79222b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf47264b-8fa3-43f0-ace7-76092490e32b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af619b4-28de-44fe-b8d7-6b242b56b208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37de47a4-1f43-4864-aa50-cc4a69d5560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94961ee6-aeda-42d4-82e1-865f3d8555a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c22e1b88-9544-4930-9c8e-9bbf415e8b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3e6400-2062-44a7-801a-03168c6d002b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9bb94-63f6-4e93-beb0-76cd9871de3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c338d4ab-25cd-43b0-9b73-fac8623d3ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb1f113-8378-4180-a498-9551c0b8a57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d86e2d-3bf5-45a5-903b-0d299e1691a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a754521-38b6-4e06-8d38-81d4f1933898",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4df0526-0d52-4b6b-9bdf-2f3bf1e04503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d8c841-389a-4789-abaa-76c02b6b47a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf26ee8-abac-4d3e-a5ba-89ed0f4f22ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0c54bc-3154-43a2-abb6-af3a89163c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c4754-dd1d-435a-b5f7-364383f300e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48769e74-a614-452b-aeb5-57312ed50217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5530a337-177e-4034-8ffc-6e7ec8865296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d589a-cb47-41b9-bc90-d0d339386ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d1e11-66bd-4a7f-a295-a9a5298b9724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c9328e-6503-4407-aa5b-515a9d813ffd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c067c-2253-4eb4-a1f7-4159598f3e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c72885-d5d3-4e4f-971a-cf7f08082602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b64942-1ef3-4448-9391-106a61d59311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67cf5fc-13f3-454b-936d-63554815a830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f50b0c-be14-4613-8644-092dd32650f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7705f858-ea8c-4851-a664-f4a71153302c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0003e2-ff41-438c-a362-cbef8714a2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8721bbea-07ce-4cf3-83b7-ffff7c851e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a803dcf-89e9-4123-910b-3f22be9d2a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ecb510-84f5-41f0-82d4-bbc8f1f47d0a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ca12cb-d200-4101-9e9f-cbdbce22c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b94153d-db25-4806-8e3c-f303d0fc7500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a638b3b-9811-4ca4-8c88-1b50168ef8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb7b2e5-bbc2-40f1-95d1-0fe66080e51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44039c44-9c0b-4220-bbfb-12be7734e283",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b0a4e0-78b8-4444-a64d-a6b690b2d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f5a48f-3486-4756-a1ee-dac370e98596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59880c50-ae30-4203-a002-000e32a3f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3141ff06-c796-4acc-aab6-5ce40858053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dcb1f2-2199-4ae7-88d5-7613022e8542",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b426d199-7be4-4ffe-9fdd-a9642bae4a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3038fe17-f45e-4361-b143-57f117d7bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5898b93b-51ee-4e09-bcd3-fbe8115b02f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "944c6ab5-1b62-40a3-b8c6-57c5fcf03ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f51a976-0ec1-49eb-b37e-39063c8919ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74675530-15f9-4474-b8c3-bcae78c2e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af4def4-2f4f-4d61-aae8-156cc828fe78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc073c2f-79f9-4e61-b8c6-83059852e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aca80a0-9d30-4fe6-aaea-7fdfe055d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa672a17-bf8e-49b2-925a-f0e3136bc468",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d64529-7a64-4080-b23c-cbb93fb992d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7b74a2-7113-4685-9191-3b760d3aa070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff1b050-8118-49ac-aa0c-6ab0a7772868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c33715-1676-43d4-8924-4204925d0b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dcb8a1-d462-4ca8-a90d-e1b1afa32835",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbef27a6-3629-4864-9cb1-07004316d51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47cd4b7-e459-44a4-a064-c3d559428db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb3d85-be65-4075-9d22-f18399e3e908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a2d93d-7b14-43b4-85c9-7dcbb9049939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf82769-a909-48a4-b126-5e60353aa505",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b36e02-48a0-4db0-a2e7-5ad6198e3d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164d8569-8d24-484f-8627-422ace44b9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01328d12-d927-4c4d-abea-b983b20b4d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26546e2-b14c-4a2c-88e2-18fa963b091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b47a1b-6f73-4971-a15b-59a29d05062a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cfde21-92c9-43e0-9e35-3b62ed94e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1c3c74-266c-4800-928d-6efc1f3ef3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e329978d-c5ce-40cc-a62b-3a25edbfa334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd6a10d-8806-44ed-978d-119049245fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ff1a9-aca3-405b-9883-4c948904902a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9449c1d9-cca0-401d-a13f-4f149b915396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9bb2dd-6296-4c11-9743-c3c1c6286c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c56ffa-cd8a-4d79-9ab0-3d0cef714c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3169dd2-4c4a-4a1c-bf7d-d2889242e716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0b1a19-4990-4c06-b7b3-fdc4b89a1cf4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1cd21a-2027-443e-88f1-25616d49cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccd71b0-85eb-4c0c-9f38-4bf2a5e98a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756e0cd1-e0d2-43d8-8df0-72a861fe9426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b04078-55cb-49c4-8967-61d530e5c7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305a819e-e8fc-4e9f-8c91-9c11448443bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4720eaf-a061-4831-9cb0-68b2ba85c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f98155-7c16-4997-bc5e-374762d2065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1373b7-d27b-456b-8ff7-0b6dbd615324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3f3ea0-10a7-42b4-91e4-3f4687aea5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9564283e-1acd-4d4d-934c-65b2951c23b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2fda7-2db6-49ff-b45e-6f7ec096960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74d1fcf-37dc-48b3-af16-fdfc0f1e0a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1048870-f25a-4b3a-a70e-99942d59bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230c1d6c-f0ff-4e5d-801d-650dbb289c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182182bc-8c14-43fe-b2a8-4e0f6724cfcd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059d8f09-397b-4371-9101-9d97ea5f94db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3a2c3b-0877-433f-9538-1bc484fe2964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a7d6f2-c247-4f33-a30e-33eb22301d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1e0b7d-1384-423b-a4ef-71ea05b39b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826dbb89-e125-4729-b2ee-290424524588",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49f8dd8-ade5-41ad-8914-83bf34df6d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab35520-5756-42fa-b09d-a1e76c360545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee38d15b-04ff-4ed8-8eb7-065c89b48e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b72a0d3-08b6-4c51-81b3-ad98004e9ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a355ae-e08e-4954-aea8-f7d7927b87e9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92fa35d-1b11-4dab-b021-8769557bb359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b9ba4a-b589-459c-976d-481d3efaa500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96284f31-6494-400e-9157-c15b1d19c73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5b5b4a-7840-45f0-bd4d-df55425b8f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d79311-6c4a-4968-a372-dbc99be1237a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95e1e33-99ef-48f2-8a29-228529206bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1ec766-a024-42ad-b93f-51e41589ec7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445973aa-9bfc-4381-80dd-7fdc60228570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c348a20-4964-427b-b1ab-b7406951b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1897678-4365-4108-b4cb-7dea7d3d4f3a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61b28f2-ae6a-465a-ad24-bf61b4ec0635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bf4e55-7e62-46d6-82f5-3df829f8381e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3492317c-c6ff-4c57-b226-4e98428a922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c3c173-963c-468a-9eb4-c61e5c2f87e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637ad7c-d154-469e-a3ff-3950c0c0b855",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e010e2c-047e-44a2-96cd-6671a7dcf937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ec04b3-8d70-4f24-8fa5-18e424b001af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b3d904-b3f4-4d95-84d4-9de6cffab5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5f018c-51e7-418e-914f-9f73d72e28d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d2068-2885-4c96-a554-dd3035bb0672",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d9813-dd2b-4a72-8bdb-f145fecc0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ac130e-735d-4229-932c-1aca0f519186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247df449-e64c-4f01-b401-e4c1974b3852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b2f55e-b94d-4d29-8a40-ad94954180ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdd1a6b-5bfa-48f0-9672-bd3b1e4158df",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148be760-c653-43ec-a7df-fc79aab9ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78cd59e-ab3a-4bdd-9ec5-b4ea053be873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845a4e07-acaf-4698-b7d1-4db62802a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe42bbc-ace1-4fa3-ab58-47cab2ec8201"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20e41730-4f8a-418e-a1d8-a5543e6485c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be1a0935-f270-4efd-85bb-0c6bab2133cf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869cf374-1e53-4a0b-92d7-413e0e4601c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3faa2107-ca91-4df8-8d12-b1eb1d631481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a03ade-5426-4755-be1c-c1b6d7b99ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f09a15e7-676e-45dc-9376-246545e6f826"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fb69d4c-62e2-4813-8322-8a09b34aa0d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43844601-0c1a-4d1e-9efc-42d29f50e12b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2d7f07e-570e-44aa-9667-206c041ba3bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef84d388-212f-4776-b164-290e7dc1b178"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beca358d-548c-48d5-a445-2bfa8972be9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ccda793-fcf0-4bf7-83da-6b12ef02afd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0163d5c0-93c9-460c-8aed-08279d8136ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ea9e601-95bc-4d57-aea9-90d545a0ec70"
            }
          }
        ]
      },
      {
        "id": "86dc2025-dc3e-4e06-9fe9-45b23fef8c85",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2cced40a-798c-47b0-a14d-bde69375fdc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7fcd157-b435-46da-b56a-dde1da6f2740",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eba2db44-9322-4cb0-93b0-3b5802e85d13",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f629b8c8-22dc-456e-b8fd-f88102640005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f863ff0-a1b9-4b98-9601-cc79599361bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537f5219-8b6f-49eb-aa25-c2af857e39fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311c0c9c-0bf4-4346-bc25-f509e289274b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43477126-fd0c-40d9-a9f7-dff109de10ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c28ce9-344d-49b7-a296-a050dc428c28",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16278ffb-c571-43cb-af63-c4f81400a895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0e531e-7e45-49d2-a5f0-13ff262de694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6290ef-c7b1-402e-b160-f3ca35415d3f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540cd8d-35c5-4d5d-be4a-96f6ee9065c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acde4bf0-9a08-466a-b6b2-fbd28bf88c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a0bd4-c43c-49c1-b75c-a468a65b5d10",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb2b4fc-c3e2-4014-acbc-c846f119faef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cdc037-c4ab-4894-a0fb-5ec61311e128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a80d60-99e5-482b-952f-a1d311b32160",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9cc78d-5ce9-4a3a-9f53-a9975df467b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747a1d76-c64a-425d-ad59-8ab47cc3a621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c435c03-f2e3-4d87-887e-8eee0b1c1af7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f3b79b-4b62-43e1-9214-e76ac1489b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4353ad26-0b0a-43ab-9ee0-237bc9268e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c072ce-aa9d-44fd-bd2b-191bf79ab4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1067f2ed-5c31-4b2e-9134-84bf65f59390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ad60b-e0b3-42fa-ae75-e35e288edd1a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3502c79-3f6b-447f-8c7d-44f4eebbc431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21eafbc-d1a4-4d9f-8d51-276283a135c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fbb38f-434e-4759-9c7c-46152fc757ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972bcbac-96e0-4ece-8337-cbd2bfa97131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca337a3-d03e-4962-bf2f-569365fde19a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d14531-57c9-41f9-b4fa-8c4a8b77e328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed255ed0-bde9-4106-bf8b-f7541c653ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed17ff9-8059-4e81-addd-ef1fe37dfc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ce670d-3ca4-4e57-85ab-09861d92d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8fee15-6e40-4c18-9ad7-1ff560d2c152",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de00eb7-da8a-4584-b0dd-8ee1d6b67718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3c7a15-7663-4c10-9ded-b218f6952f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb62758-c9fb-424c-803d-4e4df81f2c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed30789e-af4b-4c9d-8ce9-1a13389125bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5672c35a-b7e8-4cd7-828b-44c5e47db868",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e38de9-3cb3-459d-9ef7-392bb7d5592c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ddf424-cdc6-4a1f-995e-ca676dad1b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8b1ec6-a512-4417-9c1f-7aa7298e16b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c159080f-a56c-4df5-a20c-e4376f416f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fdf47a-42a3-4d42-aa52-dc21adb5d770",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15f2d4e-c683-4740-b452-3efb77a6fe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad073a2-6c57-4c44-bd1e-1f3348bf05a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8dfe93-da6b-4288-b3b9-6fdc4c488f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48005144-a537-4412-98a0-72e6093db126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4840ce7-63a4-469f-ab7c-13fafd77c6fb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb42735-0a0c-4a6f-b66c-0ebeabaf2013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb9b55c-0c55-48ef-a642-97d3b8ea64cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8346298e-0df3-4201-803c-b19d4cc612b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d88f29-0bf0-4261-a494-32f2551cbd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d70aea-d538-4815-a944-b1bc436ce3d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294bc21-0f40-4e68-8687-15682e3eb249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9092581e-7869-4d6c-ab83-ff1fd6344417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5190c603-9a31-4dee-91aa-942edab3973d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf1f6de-7975-4c34-bf2f-d3627dc5188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a7aad8-db5d-4b71-adfd-ac4304e02f98",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0edb2d-534e-4999-b7df-7808fb8631ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05abc32c-3121-4f9a-a55a-f05794a63966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f340a6-4c76-47a5-b93c-9287022e1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a9e2a7-c83a-4de5-9abe-fabd0bc1a30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806bb640-87e8-4966-ad11-778aa6f8d87e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0abcff-c9d1-41e8-ab54-ccdf4ec50d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60e111a-445a-44c8-bd14-89f6743f7cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31650b9-b62d-439b-9b6a-efc6c32dcba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db527933-338c-48ad-85a2-ea832a21f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580500a1-d164-411c-af86-cbe5cb22cbf7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e521be-863b-4c2f-bb19-3bff1826efff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3037f3e3-7f5b-4efb-9412-a6808cbae7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb5fe89-cb6a-4a2b-862a-3725f813ce3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5fbd1f-0858-4d91-a707-1bd488877b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a823280-4106-41c4-88bb-260164a88d98",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e86c28-53f4-4242-8421-fc111b4aee9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05999397-816d-4943-ade4-c903aee25a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3261b2a-31ce-4f1a-8291-238d8a3ec573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d813813-a909-4a8e-82e4-b6c639b6b74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd459a2-7482-4fa9-91f4-f7617d297d3f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e894e8d6-d1b3-4b9d-9cda-972e39075b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdacca96-7190-4372-ab46-fcc18470ca0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cd0cb4-c2fa-482d-8050-d2605f1eebf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4987687-5756-4fe5-a7f2-fd07b77e0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c7f24-dbdf-4c19-8ef2-fe9854faeb5b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64480051-f470-421a-99bd-36ef67adcf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42946c91-910d-4fed-8b30-724625276a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ccdfba-63bf-495a-a651-a16673b6d55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78182c4-4182-4401-a370-a206663bccff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865e324f-db7f-4bcc-a354-7cc0ff57358b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2025bc4-3dea-4200-b6ce-d1692f7c908d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a37d31-a093-43ad-8323-f10e6b2de27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6107081e-5f2b-46c3-b9e0-1768e46d70d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a37d8f-d786-4c18-bbb0-63bcffc06042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd700c1b-1474-4cd5-a235-9121825d8a90",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3799a17-5dda-429c-9037-3e4238abdfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d410f965-d6ca-45cb-8e5b-804c736ee315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65292f7-90f7-46fa-b496-084244a9b1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4aa98b-df9f-44e9-9130-7bd604ea072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef2c48e-1cbe-44f6-92de-65f84e0646c9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4fcc2e-a752-45e4-86ec-ef529fa09881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e28093-19a1-4246-bd02-915aaa675d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75baa006-e147-4ed3-a627-c5bcd5c6ab95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9bb17f-4923-46be-aa2c-08dedaaa26d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c0e530-758c-44da-8279-561643333f59",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b111146-adf9-4d55-ac07-66b1cbf6cf7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09bce9f4-9733-4ab5-ba82-9f937ddbefb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3060c9-b5c1-4353-be26-04711372d31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bee7ee2-0e8e-4481-b601-79fbf8668e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71bce47-39a9-4b10-bad8-6ab9b342d6b6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f539183-6a48-4915-8f6d-24652ffc6c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a728900-ba75-40be-aea4-60b7e9c88e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a2b61-0d04-44a8-9ac9-eb17bb43e9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a892381a-83db-4ded-aec5-61e9bbf4f49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4853b409-9cd0-4be7-9227-0b0ff17deccf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc57736b-f516-4e25-a6af-11f2d91d884d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88593b25-4cab-4ec3-bcfd-e848e429a477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65c721c-2022-43c1-8b1e-0e6691b4d89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c389ca1f-4a2a-497a-a995-3b4e3518efad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee653c7-863a-47a2-b781-de81cc79bc4f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40e5bd9-92f3-4b1c-acb4-855f0dcae8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071efcdf-2aac-413d-bc35-475915636cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb701335-579c-44de-b8b1-e9ba0d3767bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010a13d9-0c02-4791-929b-4bb098123fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ba4ec-5134-4449-ade5-78bd0e43ecd6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ad7707-f1d4-44e4-80c7-c49d82fba6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fadb0a4-cf01-4a46-bed1-8449a0cef311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3173430f-9b3b-42ae-9047-079c5ff313f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6002b6d-e49c-4944-b527-d86e3bdf59f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9868e1c7-1cc3-4dd4-b356-91378ab36cc0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f421651-acaa-400d-a854-fa4b94cb1f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf668ecf-8f42-44f4-9c77-0378cabb36c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8554df2-0ce9-482a-b04f-313cc2db32b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61efc1b4-53c6-4ec2-b74c-73123c6efb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0ee5a6-6337-4dee-8f5e-27aa64feb1a8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23caf80b-1c6a-4f37-ae87-15c7cea32ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc82d46-08f7-45de-bb27-a5a7bb7d2399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce48d3b9-e822-4f92-aca2-982222a00924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6141d49c-3547-44e6-9a76-f7c312b3071e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafbab28-3edd-4244-88df-c613da429abe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37014e1f-9b34-4544-befb-3d36f48d7f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8613afc8-58c0-459c-9121-6ec61b6b11df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5b8faf-33ea-4083-9b19-acf31fc24f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769c7f96-8fc9-4a14-8889-f2c9b195cd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2defb296-3480-4d0a-8265-73474257cc2a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb4407a-e983-4397-bf77-c8869f5d86ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ab734b-e636-4207-8021-aef6c5fd12c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cf2442-9023-4917-ae73-c849c3e63133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e920cb-459b-4bed-9b1b-b4ab66d9f378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dd8e7d-8b70-4459-96a2-ee6d6bbcbea6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f990c1-33b8-49b8-ab4b-c1048171708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca57c670-bf9f-4b62-aa1f-069e1fb20e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142cbfd4-9899-4c6f-a53a-1aac6672d1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3ebebb-63d7-463c-9127-e9aba38e2cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed54310-ebfe-4f32-b46d-387498210d64",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2823430-db34-47a6-acc5-db26d2a68ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fb06f8-be4e-4ef6-a91f-4c9e26ad62aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e7a36-c5cf-4198-b6b6-80671e93158f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6074e1ef-88be-489a-916a-4a2f0b26642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06ec6e7-9563-40b6-ab8c-fdac29a9e5c8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c423670-8662-459d-91f9-7f6924526e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e6abba-b78c-4957-9dd9-4bc2c0ac78e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fa4847-8192-4296-ba22-c3716ee0fa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f52f51-735f-4be2-9131-4414ccc30474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dd7c61-712a-47bc-b355-f489fefd0e8f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ae8787-2380-4512-a01e-59055abac6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dca47b-d61e-4971-ac65-494fca82c0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e093cd2-678c-4736-a320-38241367946e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdb87c0-407e-421a-9670-892d440df154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fcf1f1-be8b-4320-9255-234dbbded5b4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d458690e-99cc-444d-9ffc-5e5a1043475c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a850311-e9f9-4650-8860-756f59a18d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041730bf-6df2-44f7-b6a6-fd7280039550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a668a86b-aeee-42bd-870e-3aef88d5c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf0dd5d-b2cb-4b75-83b1-57b9e4b427a4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded749ab-a276-474d-bf9b-6f0de90958b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c427f37a-6a14-4cb0-bbb4-9ea7435bd39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfa1f5e-90c3-4ed3-bd76-4709efcb2682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dfc516-1a59-411f-8b8f-d26aadb78e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b7979a-55b5-4c53-89a8-ac00ab8a9812",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244a314-c6c1-413f-aa55-cb8dae693cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35101b89-73ca-4a7b-a3d7-7afba9ea3d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fbd90e-4227-4e98-9a60-6669bc9621b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecead4d9-9720-4009-974c-64b1f9523416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a3b109-7858-4f1b-ab28-38f32d9a9724",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82a1050-20ca-4965-bcb2-b086ad7ed4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f85dd59-cb70-46e7-a5ca-af65ca6bfb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e4619-bfe2-4c25-9924-618a6e313ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20045db7-2eff-4e86-8578-0da40ffb7872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74f5cae-f1a9-4877-8277-f4b1a0f0f47a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e48fd3-bd6f-4608-b095-153f59721409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698d325f-d14b-4554-92da-90cdd1c5e91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd55d3b2-288e-4176-892f-243c25d4d252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758daebf-4e39-44c9-80ea-fb0f5f1f8c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5e5c41-1dce-4442-be1e-3fe657475a8a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf5189f-356e-4b17-9c47-c56442ed0174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8279ecec-b64c-46c6-8dfe-63094fe9bc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc3f807-c710-46b3-8cb4-aec504425494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d6fd1c-a664-4db5-87e5-0abca7b47fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a03ff6-b83e-4578-895d-28ea23b0e5fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9bff9-4622-4174-a397-1ddfbe9722d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0568bb14-7bc0-4eef-8ef5-5ac70a520312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f80928-cab1-4309-be48-0d7bb65e75a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ab7ad6-69b1-46f4-b1a1-2adc7ee98ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308792bc-b69c-49b1-a3dc-a605f519beef",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe95f740-fae6-4722-9ee6-b8d1009fd249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8cb9e7-4e34-4258-809a-a1a6b904c590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c36519d-5bde-4b1e-8094-93cdd9124dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942d85a6-98a7-4529-9465-6be22df03e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a83df6-7a56-4afa-9e54-8e10bc62a930",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a3da6-e991-459e-88c1-0128c9df992f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4dae9c-04c3-4d1d-9c12-7cfa0db633f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede8cdfe-5e5a-4ccf-b9dd-fad7782eecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acfcca4-eb53-4da9-aacb-871d11ae8103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4eaa5b-0a1d-4da4-8098-4478e70c9eae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9496c2bc-cd74-4acb-9f93-0ff6195c7f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3dd7a4-0848-4c37-8a62-c0337ed522a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef910dc1-327c-4477-9475-62a6a3fa29a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f51efe-69d8-4493-b631-731bc5dd1407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497ad84f-9168-438a-a5b7-9bf8467b8a79",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb3a8ba-8fd1-45ad-90f9-49b4c35a2ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660acbbc-551c-4d4f-9f23-1309fb6401df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe3b306-58d4-4da1-91d2-21f5515177b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4898147c-a4e1-49ba-bd72-aa59f5305ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b1119-662a-4aaf-8b38-a36bbea47d7b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c1bb5-28a1-4cd2-807d-a057e96b5f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211ee060-cd02-4b94-b1d4-0eb974ef67cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8a2b3d-6042-4639-bc53-588204993522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1a848e-abad-432e-9813-ae811a960cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29795b66-cfae-4bf0-891e-54d7271ae347",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0ddc9f-312d-4c3b-a02b-dfe870f905e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97f92cb-fb06-401f-90a0-df4e4af3af55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48753324-8928-4e56-9742-67aafcf93c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396bf768-a57b-4009-ba6f-bce8c167b57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3ee976-46ab-487d-92ae-1b9e2251d58b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf412dd-c75a-4d7d-90bc-e4de0d05a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11244e02-8635-43cf-97df-5ce858f3508f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed80bfdd-ab4a-434f-bfd0-56c53ee7449b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10ff17e-fd1e-42a7-9dcb-29650b51f105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240fdc45-4f8a-40eb-bada-9a52c45eaae1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fdd018-e3c7-4598-aa4e-04347c0fe8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afb4f77-b211-4c30-a134-8bd383ef6279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0466fba2-6abd-420d-9746-ba9c31b86de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80350aee-1bd5-4184-b8fb-9aa682298137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4810fac-e4af-4e19-955b-fc0301c30c29",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd24ffc-ba66-42aa-95e7-fa182e4edec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5331ad3e-63c8-439a-b20a-7006c16b1506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f2e1b7-d1cb-4751-abc4-ad8e4fd57570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18932907-8ef6-4da7-a01b-daea16535f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faeae7a-469b-40e8-aa5a-10159b0cf97f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce07c9f9-f91c-4326-a99e-e97256e61a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac2e01f-9e05-46e3-9fe5-3fde09adb571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4eedc2-7538-4aeb-b01c-7d55e968a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c2fdb3-079b-41f4-a1c0-e556a860e526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b656093-50bf-4f45-b6e3-f40b1d37de1d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9ecbe4-c2ad-41ab-a6c0-a2c98a1423cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee3bf7f-e755-48c6-9332-f59e24623f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8849573-cca3-44c2-a722-8f502ebbbffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037c9991-b1fd-4922-9ca3-0a1ab546bb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73db5b1-51ea-416d-be0d-134e3de212e5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d401f5-3172-44f9-82da-dd35d4a18ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3415af-bd52-4964-aba2-8129de5098a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76852e67-506a-4ea2-8065-4d63738ea1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf579ac-0d59-43b3-a9a4-d12a5984001b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a62ba24-b323-4dce-9aa6-c951263e4d8d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227348a8-404f-4f33-bc3a-54657459a55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fff212-0fbf-414f-addf-90fb3c455e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f55c50e-25ff-4bdd-8e05-35f92ab18cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2435fa-6340-45c9-94d1-0ea8d7aa9696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4350f60-0177-4642-9cff-665993ff8978",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64f5e25-0c89-4ed6-8c3f-9945e0f9bd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c65f11f-cc3d-4612-afa1-04abf48e53fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40862a5-f1c7-4332-9b8f-9d668e4949ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc1d572-e26b-4b47-80f7-a0c8988f82d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842e27a9-6389-4bcc-9ade-b871403b03ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d2b1d-7a65-4542-8506-53c754ff7424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d421cbe-09a4-4e90-8705-29b325f54934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be83c09-57e8-4e40-a7e5-e6bcf0d456b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a7f791-6ebe-49b9-be21-a9b142030420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097c77a0-9c22-4fa7-a5ad-5d53f35d9347",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48354a4e-557a-4377-bcba-bfdeade6df1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fa2e5f-d649-469f-8670-d4fbf922bffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c42741b-4fb8-4c1c-8ca5-9097a2f885a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722f34b0-2d92-4b82-924d-0ff3c634bac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f038b52-2e34-40cf-81f1-60b3d0e89587",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51500f59-7544-4534-9862-fcff65ce566f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bf299e-ea65-4f5d-8642-3375d831e86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6e743-9a8c-4cda-ac38-bf25cac71d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ebcea6-3b7d-46df-ac1b-504466d26ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f356c5ba-74c4-4df0-ad63-6cf021bc58b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b17968a-d374-4803-bf2d-8438512efde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f165ba3-64ad-4e41-805a-1b35171be141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed02cd0-5d3a-4620-bd16-37f089226eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222873d8-96b5-444c-aa1f-426e26c7ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530b8945-a886-4e33-b3f1-1dc1c4cbdc4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2b3673-118b-4ccc-8049-450a27322235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779fd42b-1572-4283-8220-2cf59685233f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01050f3-3469-4b33-9acb-2aca7043096e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0d5ea5-c346-429a-80b7-bdff499007ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d4936b-a2eb-4e0f-988a-4952b39c3ffc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d328ec-cf08-4f09-a1b7-f2a7d472c498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c344dbac-6efa-47b4-b4d6-7179f3f94311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aec9932-8edd-43a7-8dc4-cb711313c0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca60626-e6ce-4bda-9c38-119cda83ab66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf51e7fc-fe4d-4545-8877-8679e77a1dbc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9558c9c-cdab-428c-a6e7-7221fd2a81c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380064a1-7b17-44cf-a68a-14553df8a2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf0fbc-531b-4004-8403-d51229631c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3bd4a2-2a77-4207-a8cb-307b6795c36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b214342-03cf-40fd-a113-329f030f0d0a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ccda0d-4258-47d3-a53a-7462c5433471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c50bbc7-244a-4527-821f-fec972f701b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375a670f-9a35-4f16-b5e1-7c96f1696687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e45b98-a0a9-49eb-9324-0ec18080141e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb701f0-2fd8-462a-a05a-bb503ed0471a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa7ec75-7d34-4f5b-be07-7f1f17cbe932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eff7d11-b901-4f23-bc88-d33e7afdbf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a39f8d5-1df3-429c-ab9c-c51ed0971068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ad61c9-8809-41c3-82af-3562c98ea66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c5d963-1921-4797-b1c5-867f4710d40e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d8ae72-f421-427c-8031-9c74d7ad8c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6c3b87-ae6a-4d02-8229-e7011d82468a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fa8cca-ba18-4e63-88aa-ddf3461d5a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3a32df-0a87-43ca-9982-69c0872081d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e2334e-2747-4263-accc-64ce58b6a754",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a4a09f-e212-4da4-9267-0410a19d40a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133e635a-789b-4321-a508-355b05498b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aa0809-05b3-4054-8c19-86a0dd2edad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6252a92-9282-448d-97e5-a5b68c7964b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402690b2-fcb6-484e-ade0-761e1d0eedbf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d22e72f-43d4-4d78-90a1-e9df79d75aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2459c078-3921-4221-97d7-34e9389aff83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafa4041-a83b-4a9b-a835-409acbefdd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad06ddb-690d-4cce-bec8-df7030700019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b08b72a-6254-49ce-b851-901d7678c022",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457662f0-2709-41db-a30b-782414e75293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d088fd5f-ac58-40ab-bcca-cdcf507f1cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05010256-9737-49eb-a562-c1ab136fe4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7d6a28-6b24-4191-925a-bfb37789aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca13633-2653-418c-a00d-6f80b049bd44",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e54fd0-7920-4228-aeb4-f02484c09a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd7f804-fef6-408c-8792-db447ed12110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71c3125-58b1-4a70-a9b0-4c7e2d77482e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179ca47a-e634-41be-a156-ab8ab447d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e073b5-3b04-4afc-9322-45a5863c654e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212039c1-21d1-4f2f-8843-6cd85799b4a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9d7e1b-e5d1-46a8-ba73-8d292722bf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dee1813-fbe4-4675-8063-1c66ccb655a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26e3d83-669a-4ee5-a66a-762b3d0316d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b48fb-b52d-4b78-92be-9e9808da2650",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbdd0e9-4ac1-4acf-9786-1703ac2b5948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbe91d3-4aeb-4d45-8a08-454dff58315c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb17cf-8855-48bb-992d-c8780d9edb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3907f510-d5d7-4b74-a5d6-0112911c6c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5dc464-eb76-4768-8653-ae05e6751f18",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4053e22-e252-40ed-a390-08bb6d865fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33585a9-7097-4abc-b424-33c90a89c8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3ec71-4b3a-4d5b-87b6-33815b75b0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d609566e-36e2-4b93-83f8-a36dcafc3b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0934a-efc5-424d-bf78-07b7bed5a5df",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2239864f-9495-46a5-be1b-8afde772cc89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e51b05-99c3-4713-98ea-7a606d2c1b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b3883-0942-47a3-9d54-f40254ff3a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99c4bf1-5a47-4216-8795-3c4cb3ad9ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45055fc-d71f-4968-9e8f-a5abb99b3f85",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bddcad-87a1-430c-b286-35b710859386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59553c3d-42fa-4498-99f4-d6c66ee7b7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b03f577-1815-4454-b136-25ac8a314a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b842b885-dc97-45a2-a189-4db2947027ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8b3b70-63f4-46d8-a403-f24feb3db27b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac0fc12-a6c8-42e0-87a9-131f3f716ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721ca5db-d39e-41df-9eb7-9a5a7c5c577d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c09597-ce28-4433-9f1c-85994c5e6859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32be1cd-214e-4606-8e9b-47fd89e888e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23cd7b-dd90-49ec-8bb2-fc3cc002ab70",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8569a9-4b8b-4552-9b9c-d78f44808ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352763c8-95d8-4c2b-b4c8-a1d52efe1053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6163e4-f8f7-4b7d-b41f-fabbdbf5d410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6921ac9d-f620-4bdc-96eb-92ff037588eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b1df8-a3ab-479f-b9ce-7f4853bef3c2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1447e3-2ee5-4a0c-bb8a-86deeffd991a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1761f277-c22f-46d9-82bf-23ae26b9de61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05191dd0-928f-4978-9f0f-d8534ed5f413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f0a2d0-5135-4d6e-9c19-722ca729c64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daed25f0-6554-415e-ba3c-5b139e70490f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d87b36-5152-40ec-8038-381fd054be45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d4ecf1-6d4f-46a2-89bf-5fba530de668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c00b4c-be29-4666-9fce-2004cc3dabe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa333370-9094-4b8b-b18d-89c2b6759b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22c9149-07bd-47e9-b587-5c3ebe0daa50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c697a-df52-4680-ad39-1d6007f8820b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad81d86-c306-4b35-9003-5dc80b5e2628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a909ed2-c800-46c5-8333-2958aa0ef50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ea243d-676e-4237-98ed-812a7bfbaa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5399b1-23ac-4511-8157-b93bc10ed722",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0473e2-a569-413e-a2b7-b3f84a2ac05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ac62b1-9d9d-4057-84ad-6c05e226a0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9564c72-25ad-421d-97c2-cd810e966824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2cb4d3-01a6-4442-acd8-bc483b4601ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f91ff96-2976-4196-b1a9-82dde36a316a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1e0915-8779-43a0-8800-1869d108524b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d419486-41b1-4429-b8c0-b24fdd706078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6264b94d-d68c-47c5-8461-82b46edb7efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3289ba64-a226-46f3-bf64-395c794cb9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5844e9ee-2720-455e-826d-545d79b1d372",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92ba926-a511-4338-aeaa-abc4888f6410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f21d098-a769-463c-b123-9471e42021f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c45470-3fbd-4f82-9c4c-77d9a5bf8d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6e42a6-497b-4202-ab13-bd38c2db68a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da825710-8b1a-4b61-b4b2-b2bbf5adcd58",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61d74cc-8b3e-43d1-b6bb-2ed750837803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42d347c-66e6-44c6-ab45-44c8f0501c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46fd4ff-3352-43b3-b18c-5b6648ad61e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafaee19-4336-4694-a817-9138b601c2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e053af7-1974-4669-84ef-3a9b87c41685",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e39bb9f-07b3-4852-b819-7fc32e7f8b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c5d4db-aa65-4fc7-9807-26e523f8f4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dd51ad-af1b-4a82-ace9-744c8dd7cf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fec973-ed88-4a3d-a26b-754af0dfcda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99e2471-5687-45c7-8206-8fe428cb51a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f98c77-dba8-4dcd-bc94-47bce3b04f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18572174-d682-4c0d-9345-d7ad5ff73406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d201c72-d01d-410f-a728-901a6419e69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb577d2a-63ea-4a26-b87d-c4590c74873e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b1eb8e-443e-4cb0-8738-480364749eca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ed21b-0b51-4f5d-bea6-f670004289f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63739a1-2dbd-4f7b-a655-3f390d7fd0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02356ddd-d432-4da6-bd0a-5e23cb1d4f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8ee2f2-b453-4a11-86cb-978ddd19ba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8086ed-fdd5-419b-a149-fe866c1a94a9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c754141-79d0-49f4-a93c-756ff6e7199c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e669d8-31b5-4518-bc47-5a096a76ee25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d0e4f-306d-4c6f-9442-cbe74a6fb4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd7fef3-07b6-453e-92a6-da34b608c7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6e9a4-721a-4ffb-8601-9b76ac155468",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0cec74-0191-4e11-b542-62bb38a5e36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7277667-b730-4793-99d1-c68f6cf1899a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20ab32-1ec9-4f48-89a8-0f47958bdc23",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a611d5af-f8db-489f-8916-d952dade02a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedcc3e1-c2f8-4a44-9451-0b01e42d211b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85e11ae-a658-4754-ac5b-f92c27d5a523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151bc852-9164-49c3-b9ca-d947ac607136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17d653e-a26d-4652-be29-560faa61479c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fcac27-b223-4792-9b69-fee7f92aed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a994fc7c-d10c-4d5e-be61-441f39323c2f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959de975-eff9-41b0-9e59-25408e9821ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aeeb5c9-ecf2-4a3e-8505-32139e1f64eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacce54c-9236-4b26-b8b2-6e7b1a8e84fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2523afd-941b-4e1f-a96a-0739b00b3a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc4788c-34e8-4911-a1d4-88cc74d3249b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b188c7eb-8e42-4433-b084-5c78689329aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afde7d2-c283-438e-81e9-4c253568f4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae00cca5-3ceb-4866-a0bb-62f2e856a68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ab898f-acb9-4367-958c-26aafed697b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34750743-bfed-4ce4-abff-68d486db3db4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d917eb2-37f6-46ee-b9bf-d72e32967f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6237b661-13fd-44ba-a5f4-684e75d2158f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5f1952-6b1e-4a79-93de-c9cdef6d8e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4943d0-50fe-4ebc-ae1b-a135cf355b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e2389a-d381-4484-b5e1-fcb3a7a653f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33f4d12-1066-43b2-b3be-06fbcc014fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e201a215-e0b9-46a2-9696-72b17604c0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13caed48-255c-405f-a403-afdb19efe651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da63e910-d017-408c-8d12-f6e139fd2b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd60141-73e6-41c2-9cc3-20f35d0b4009",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286a762e-5104-4f32-8d90-11d91194ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76176fe1-f077-401e-bc88-678250248a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babbae00-2a0a-4ad2-bbd8-8522c59b1f0f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac92e87-cc1e-4401-a1e7-76d34dce900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c87cba0-4adb-400f-a205-fd0f9c7269d8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19dbc7-5e99-46dc-a16f-eff52caa7568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66612b04-c607-4d69-b5d6-b11163d9b193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7204ba-d85e-4665-96b0-fd14debd6115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98de0d0-43e5-4a32-9299-f0958002cfdd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34bb6b74-9617-4bf7-89c9-f540ed05e44b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5742a8-0920-455a-aeec-74c04d8415e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5461c807-b676-41e3-8b40-9ccb0c120348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be07f138-746c-4426-a37d-2d458cee2be2"
                    }
                  }
                ]
              },
              {
                "id": "76fea063-f86d-4c49-984b-3e92624a59dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e863885-aef6-4255-ab26-235e25e22fb2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776d39b6-5074-4cdc-8cfc-7cd09a20506a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "858d0d48-f5f6-4722-9462-e46725c8639a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9f805b-1faa-45e2-8c72-1279d032d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b4e8aaf-c52a-47d9-b999-d0071f8ba9a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ebdf50f-f089-4aa7-9a2c-286786368344",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94b14288-f7f2-45c8-b17f-1426b0218286"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16c8caa8-0f95-4462-9e5a-64ad3ea0030a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f45871-54b4-49e2-894c-5781c77ba856"
                    }
                  }
                ]
              },
              {
                "id": "7a7e4963-20e6-4882-b489-7341eaff5716",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5450e187-ac13-4c48-b14c-a2f12027ba02",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4491be6f-a4f9-46f1-8c09-9ba60d53a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d6f6f44e-b6a2-492d-b3a3-ae66d48d86ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650998cd-f64d-4cfd-8c5f-5014bcbac083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842c08ab-03bf-4281-a6e0-097153490dd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b3818b3-aa3c-4594-92c3-130e213b7623",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c51b8e16-376b-4b72-b017-77f0b771b47d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c357043e-4220-4f7f-bbb5-64f29e0cca91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7663be34-b7f7-41e4-8b70-0da065cbee4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c09fa3-ce2e-4be7-9f61-18af5776a274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0651aada-b4de-46b1-87fd-3ed1b2b3e8c8"
                    }
                  }
                ]
              },
              {
                "id": "c05cbaf5-2d59-44e9-8d23-ae32d1ef87e6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95451b3e-af69-426d-b7c7-b0bf703c1e42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6480fc7-db5a-4992-8303-842055f5ea61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d18338a-3f92-46fa-9fb0-ddc2589c2a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58917615-783a-4a6d-b782-8080a9d0f2b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c7a23a5-ba5d-45e0-80ec-587ad0c01f8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bab4bcea-97bf-4cb9-98e1-636c592868fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84c6da92-67fd-4bd1-8de9-483cef0b2270",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dadcab7-4c86-413c-9065-057c8c81dbdc"
            }
          }
        ]
      },
      {
        "id": "d4da9cdf-6482-4cb7-a7a9-1d8b72e0061f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f4340973-90bc-4c2f-b72d-8204629a2d04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d96415e-170c-4e04-8ccf-dc0f976c232b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e275f22-5f0b-438e-81ea-c7944619afff",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bee518-eec2-4196-a977-3e8b0d92191c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d98948d-6822-4adc-8106-2666923512f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e4a408-45ca-4109-9c78-30e67a5aa2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0cd50fc-0508-43f5-9337-56ea1c145397"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc8dc72d-c13f-42c1-bcf2-a430bce75acd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3da54ff2-5f03-40ec-ad57-1ba9fe8dd4ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b1cf989-ca75-4146-8771-3068db197a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3b687c2-1377-43b3-8dbe-be1354e0dda2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3366454e-d044-4c23-907e-98db9375bfca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a81933c-bd54-479a-babc-5aea2239d435"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17a0e10e-7889-436a-a6be-82a698eab862",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fbf0a61-de77-4994-8fdf-334e9034fcb4"
            }
          }
        ]
      },
      {
        "id": "eb67fceb-31fd-4032-aa6b-b55f4fda3a10",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d5370f6e-eda7-45de-9dfb-27e0fea2c84c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75fdabc3-4726-427e-9ef0-30b85ea1f7c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dec1a1f6-d939-4a8f-9780-86b5652a4b65",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e748ab-e8d1-4db2-a30a-e6e85cbdae1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9837a20-ef95-43ba-a06a-8f45f854f98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54148a-c7ca-49ce-9fbe-e05ac0210d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "240aff66-515d-43fd-a232-f7cf11786791"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba16880c-12e5-484c-be17-19313045d799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b1a515-33a1-432d-803c-4d5ba8bf504b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66447659-888d-4c55-80ad-d10e75f9b0b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ba3d9f8-6926-454d-aca8-5d9ff6380a3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67ae9c0f-e102-4244-ac88-607ca3c2de62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba76b5a0-75cf-4e9f-ad69-4a9c1b56bf51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f6e5366-1826-4a98-9789-d64bc9226d5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6386800a-ba49-4286-8edc-80cc6d6da6c1"
            }
          }
        ]
      },
      {
        "id": "aede9239-6cb0-44e7-8f8c-cce31a90073e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "291d1d4d-5bd7-4e3e-9e52-e3bf63b8551d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a36b10dd-63d5-4528-b982-c74bc85631ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60b3965c-77b2-448a-a522-98e563daf1cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71648ef4-b04f-4330-8720-320a3b21b5b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a971541d-51a1-4553-a65f-8ed25bf41925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebd0d28-c309-4589-84d8-b94d2e3d9b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d51f848d-365a-4b0b-8cd7-a9674a1430cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7d02f71-01d6-4d6b-b7d6-2679a7a2b5ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fab8ca89-947b-400e-8b64-9e6bd8cbc43d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "774abe02-d781-41b3-93ad-9f9de169d9bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88af22b0-3983-4fb2-8cd9-6890e76a728b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1436d06-26bc-4abc-8869-2b388587f8da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98a46510-4c43-43b4-aa6d-c0345ed43f68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "747fced1-2547-4cb4-b93d-161d8ded4d55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da5f7280-7aa5-4d79-b4f0-acbc689a86d5"
            }
          }
        ]
      },
      {
        "id": "00d9af89-612b-4553-a411-009c6d03222f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9426c22-34c0-4cdf-81b7-b9ed322ecbdc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e456a2a-1d36-48d7-9132-5e8baca85405",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e13d0185-1e75-4b0a-bb16-090ae1021f63",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a77e21c-8e0f-49cd-802d-1bc8a7ecd86d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1749a765-5492-4160-a886-ed9a2bf2ccc1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 326.61619718309856,
      "responseMin": 15,
      "responseMax": 7209,
      "responseSd": 895.074953910528,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692318692782,
      "completed": 1692318800314
    },
    "executions": [
      {
        "id": "e35824c5-9ad2-4579-8755-ee99c0608e95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d7de01d-4300-4902-a1ef-c7e578fc5b0b",
          "httpRequestId": "b4fa49d0-06d7-409f-8dfd-1c8b5e268da9"
        },
        "item": {
          "id": "e35824c5-9ad2-4579-8755-ee99c0608e95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4e809584-c9fa-4db3-b36a-9a289edfee04",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "cbdbbc78-2686-4865-873d-a34bfbe086e9",
        "cursor": {
          "ref": "286468b0-0294-4167-9093-f57d81ce9c06",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b1c72de-3772-4672-96f1-cc5e4c8fe763"
        },
        "item": {
          "id": "cbdbbc78-2686-4865-873d-a34bfbe086e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e011e00-1609-466a-9835-a7f769928c10",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "96eb857c-44ef-4538-bd18-015b68b08a0f",
        "cursor": {
          "ref": "10c47b17-4635-4fdf-85b6-bd35951ecd72",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dac38c09-f401-48b9-948c-1231d7fd9731"
        },
        "item": {
          "id": "96eb857c-44ef-4538-bd18-015b68b08a0f",
          "name": "did_json"
        },
        "response": {
          "id": "1816fce9-5c53-40b2-ba70-2f3714d31903",
          "status": "OK",
          "code": 200,
          "responseTime": 1283,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7912454-1404-435d-97e6-41d04a0f9545",
        "cursor": {
          "ref": "1bc1c5fd-463b-447d-afc5-25c25846955d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a56d5304-699a-4a3b-bb40-5710d8ec05eb"
        },
        "item": {
          "id": "e7912454-1404-435d-97e6-41d04a0f9545",
          "name": "did:invalid"
        },
        "response": {
          "id": "9005b146-4e67-4b3f-ad92-2e05b74bc14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7912454-1404-435d-97e6-41d04a0f9545",
        "cursor": {
          "ref": "1bc1c5fd-463b-447d-afc5-25c25846955d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a56d5304-699a-4a3b-bb40-5710d8ec05eb"
        },
        "item": {
          "id": "e7912454-1404-435d-97e6-41d04a0f9545",
          "name": "did:invalid"
        },
        "response": {
          "id": "9005b146-4e67-4b3f-ad92-2e05b74bc14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b28e24-1cb8-4142-8459-685e2be35880",
        "cursor": {
          "ref": "b99817fc-b0a0-48f5-abcc-b3d3aee9aba6",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "74c50912-5056-4c91-b056-07094b0efa70"
        },
        "item": {
          "id": "80b28e24-1cb8-4142-8459-685e2be35880",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7348d48b-2055-4ce4-9b06-f1cdfb5d9b22",
          "status": "Not Found",
          "code": 404,
          "responseTime": 430,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44630cf5-1e0c-46aa-9edd-5129bfca556f",
        "cursor": {
          "ref": "7904dc0e-b69e-47d2-87b8-8a7c7ffa8a16",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4262af88-d48b-4b50-802b-c15f83cabf23"
        },
        "item": {
          "id": "44630cf5-1e0c-46aa-9edd-5129bfca556f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98f5abde-25e3-4e6b-a5ef-03ec2ca2b03c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 259,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b0fdd9-0b62-49aa-a31e-b58f8a940047",
        "cursor": {
          "ref": "39f4f28f-eb28-4c93-b598-3ca0655a7881",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7d9cd6e9-965f-4ad9-ae39-a7a86dfed62a"
        },
        "item": {
          "id": "82b0fdd9-0b62-49aa-a31e-b58f8a940047",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d8f92b71-501a-4d79-a767-f40d839bdcdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0092b-a631-46e6-9e4d-2e8565cfdf8a",
        "cursor": {
          "ref": "3519ae96-11fe-4fa4-ab0b-3dcffffef86a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f9061d1-913f-483f-b083-896ed19918e7"
        },
        "item": {
          "id": "faa0092b-a631-46e6-9e4d-2e8565cfdf8a",
          "name": "identifiers"
        },
        "response": {
          "id": "0be3f230-b729-4675-b412-58e45a61b4d4",
          "status": "OK",
          "code": 200,
          "responseTime": 1341,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b851c30-a52e-4217-a072-f4c0f6f09e82",
        "cursor": {
          "ref": "aeadd721-2334-4819-9ccc-7c8e8b4d6f90",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8e520bd-bafd-4932-992d-b091f36e6256"
        },
        "item": {
          "id": "5b851c30-a52e-4217-a072-f4c0f6f09e82",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e233664-18d6-4bd2-a37d-ee3706d634b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b844d7d-0a8c-43b1-9634-1e2c8a34a627",
        "cursor": {
          "ref": "dbb3e881-74b6-497e-9c56-d9d285622ac7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f3cbfd9-6b60-4a3d-a6ba-d162fd7682a4"
        },
        "item": {
          "id": "6b844d7d-0a8c-43b1-9634-1e2c8a34a627",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ede5bbdb-2575-463c-9ca3-47692ada3c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f54547-8365-49de-93b0-f4d635ac504f",
        "cursor": {
          "ref": "c1e835e1-b197-4654-9a94-d8ebffad1462",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "03c77b98-c497-4395-9632-0b64fa4dac3c"
        },
        "item": {
          "id": "e6f54547-8365-49de-93b0-f4d635ac504f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "01b53fb8-ccdd-4eea-a6ea-e9be05ab58f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83004138-a739-40e4-8350-479c0bfcc409",
        "cursor": {
          "ref": "c989cef7-d2be-4e77-a15c-d8ca6ace440c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed7ca897-f1f4-4a82-9969-a0a718db6f16"
        },
        "item": {
          "id": "83004138-a739-40e4-8350-479c0bfcc409",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "265b37a8-7f95-43ac-9787-93752e44c4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c61d6d-071e-47b6-9b7d-46489d449ee8",
        "cursor": {
          "ref": "0517735c-1209-4e1f-9d42-ac793379df73",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3e3d2821-81d9-4c87-9fe2-d4d6a1478c6e"
        },
        "item": {
          "id": "f2c61d6d-071e-47b6-9b7d-46489d449ee8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "af015f28-d24e-49e3-96f8-b3ec65e070fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9257d-0502-4246-9ab9-a1e0a0d62f95",
        "cursor": {
          "ref": "32e8cb87-5c38-4e9d-833a-d7c98fc27a09",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5674092e-962b-4ec6-aec8-6fca0089f8b9"
        },
        "item": {
          "id": "0ee9257d-0502-4246-9ab9-a1e0a0d62f95",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1c18570-f726-4262-adb8-8355fbe4b926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415db739-3f1c-4c13-9a8a-75d09a784e55",
        "cursor": {
          "ref": "96b2d5fd-0ceb-4e9d-a68e-61c180bb87a3",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9b1d9fa2-420e-42f8-984b-c123b3f39edf"
        },
        "item": {
          "id": "415db739-3f1c-4c13-9a8a-75d09a784e55",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e384dd6c-7159-4174-b4fd-3ae78809458d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4609469-0c64-4bcb-88cc-ce3fab68a977",
        "cursor": {
          "ref": "f1876ddd-3b7b-4aac-8aed-18eca58bbe8d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "62cd89ef-688f-4ea4-b747-05e8ac76c839"
        },
        "item": {
          "id": "c4609469-0c64-4bcb-88cc-ce3fab68a977",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "25a44fbd-e74f-4f6c-8e5a-5499079edb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a88b033-0e49-45c1-bc13-a865a0f29cd5",
        "cursor": {
          "ref": "57893c1a-a866-4934-9b93-ec1a31fb6147",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9ae02ea2-97c0-40e4-a46f-7f838d5a5bbb"
        },
        "item": {
          "id": "6a88b033-0e49-45c1-bc13-a865a0f29cd5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "102b8a78-f9e2-42e7-ae69-e409dcda5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bdac5a-9a08-4531-998e-52fcb798845d",
        "cursor": {
          "ref": "09fc8b09-02ac-4529-89b9-289e235bbfab",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bf04da0f-aa9a-4acc-a095-199929221488"
        },
        "item": {
          "id": "33bdac5a-9a08-4531-998e-52fcb798845d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bfdee57e-5835-44d5-8610-245cc099b44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e658bbc-cee1-4950-8d73-0904671d6e4c",
        "cursor": {
          "ref": "5fbb61dd-6470-4d94-ae43-19c1fc206813",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0791d90d-67f6-4da6-b768-59fa81c80081"
        },
        "item": {
          "id": "8e658bbc-cee1-4950-8d73-0904671d6e4c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed91279f-61ae-492e-89e2-7cca7056dc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72abd767-39eb-4c99-ae39-40cff6714d16",
        "cursor": {
          "ref": "14bd9106-7263-428f-b9a9-e84dbd44ef8c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "893edb56-53cf-4c50-8ad8-f52079c8e72d"
        },
        "item": {
          "id": "72abd767-39eb-4c99-ae39-40cff6714d16",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2a788cca-522f-496d-867c-278c1a9eae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5b3ba3-965d-4011-8833-8dc610e73efa",
        "cursor": {
          "ref": "f7142ec9-50f2-4740-923a-695749f23b4d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "95883e5a-6e21-4bd4-996e-4069309e9815"
        },
        "item": {
          "id": "6d5b3ba3-965d-4011-8833-8dc610e73efa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90207652-c154-4fc9-888f-b31d2650592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42cc3a7-84c0-4d50-906d-2524fe704cf9",
        "cursor": {
          "ref": "6dd3536d-5742-4179-bfa2-afbbf770797f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c42cea26-327c-4500-83cd-64b132670548"
        },
        "item": {
          "id": "a42cc3a7-84c0-4d50-906d-2524fe704cf9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "227c75a1-9ef9-4bcd-959b-d6892cff5526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26939e2a-d648-43c9-986a-e45eb1b10476",
        "cursor": {
          "ref": "2bf82eba-f957-4256-a33b-44ea9e14db4a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "724dd022-adc1-4695-bfda-61490bcf80ee"
        },
        "item": {
          "id": "26939e2a-d648-43c9-986a-e45eb1b10476",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "80b956a6-d396-487a-a711-27471c381cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fd1fb4-51fd-47e7-a897-80e757c200b6",
        "cursor": {
          "ref": "9f01c711-8395-4360-94b5-ed22a124fe23",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "90feb1a0-6da6-4fe0-a4cf-f4a201710517"
        },
        "item": {
          "id": "b3fd1fb4-51fd-47e7-a897-80e757c200b6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fac57c3b-7c53-422a-a7c0-74b446423a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50731b4-ccff-40da-a57d-1523c82be939",
        "cursor": {
          "ref": "eb948187-9adb-4f32-9882-97584a056bdb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0dd93e03-174f-461d-98c2-834ef4244c73"
        },
        "item": {
          "id": "e50731b4-ccff-40da-a57d-1523c82be939",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f9a5237d-b518-46d4-b140-21dc840d2eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51aa541-e765-4fc2-a6fd-e909b14423c5",
        "cursor": {
          "ref": "1e7235c5-36b9-42fc-9f5b-6cc59fdf0482",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e09de03-06fb-4db3-bd30-afedda8ea9f7"
        },
        "item": {
          "id": "d51aa541-e765-4fc2-a6fd-e909b14423c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "129aa4f6-4a36-4595-b686-e1fe7dd27a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3869871f-ccbe-4787-9932-bb8d58cc2dc9",
        "cursor": {
          "ref": "3bc44362-fe56-49c7-ad61-ff0a12fc9f76",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ac417677-4036-4b8e-b0fa-093cd4c60ea2"
        },
        "item": {
          "id": "3869871f-ccbe-4787-9932-bb8d58cc2dc9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6dd4531c-ef7d-421d-9300-5535d515a12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2bf922-6d0f-456e-817c-23893986086b",
        "cursor": {
          "ref": "165583b5-b5ac-409d-aca6-07afc3adb187",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "874fd677-06a8-454c-ae50-80230b22d438"
        },
        "item": {
          "id": "fe2bf922-6d0f-456e-817c-23893986086b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fbae911d-14b6-4c37-a91e-ed3d59141e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e631309f-f5d6-4b2c-bf40-1f54640b24f0",
        "cursor": {
          "ref": "da11f3ba-ef70-4e43-b707-519c8c292486",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a8ad3668-b75f-4850-a84f-6905f30df251"
        },
        "item": {
          "id": "e631309f-f5d6-4b2c-bf40-1f54640b24f0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "62ac15fa-c0dc-44ab-a6bc-883e6f2f52ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694599ff-464a-4176-8326-d704850a348e",
        "cursor": {
          "ref": "1e6a5a39-4c63-4e16-b410-0ee01a566df2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "380e3dcf-9cdc-420e-9af5-8ad61cdeafb3"
        },
        "item": {
          "id": "694599ff-464a-4176-8326-d704850a348e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85313b5e-4c96-4185-a0e6-4fdcf5a79073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a05e97-d784-461e-9704-2781579b149d",
        "cursor": {
          "ref": "e61b243a-8592-4439-ad7f-962f0cc0146f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2029eb9b-ce72-420d-b8dc-993c0860207e"
        },
        "item": {
          "id": "31a05e97-d784-461e-9704-2781579b149d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "82077482-4cdf-49cf-9646-93d896000772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41a025a-fa8a-4565-ad2d-658914924d0d",
        "cursor": {
          "ref": "db0ce071-2b0d-49fa-846f-779f310b9bf2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2db4a84-f4f9-46f5-b3d7-b5c8bbad81ed"
        },
        "item": {
          "id": "b41a025a-fa8a-4565-ad2d-658914924d0d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a0f77375-08cb-49e6-a1cf-0f7b83517d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a00ce9-83e6-4ad5-9899-a688abb0965b",
        "cursor": {
          "ref": "2f789749-37a2-48d9-84be-ffd8ec2666ea",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f4ed673a-3407-4508-aed6-e38fb862bbe4"
        },
        "item": {
          "id": "70a00ce9-83e6-4ad5-9899-a688abb0965b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "af34672c-dd6b-4849-9e6e-c7e9139e3ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05875291-c4de-44f3-be4b-08286758861b",
        "cursor": {
          "ref": "8db41f72-6835-44f2-bbfd-be6a0bc2e07b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c8f1e1d8-839c-415a-b6ed-778d964a455d"
        },
        "item": {
          "id": "05875291-c4de-44f3-be4b-08286758861b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "203d3694-b5ea-425f-9236-ba3b110abf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c73633-0f3d-4dcf-a926-25adc7a6b904",
        "cursor": {
          "ref": "88b376a4-b0b6-4f5e-910c-70d154dda671",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "60b3e2aa-6195-4731-b212-22836a1994de"
        },
        "item": {
          "id": "30c73633-0f3d-4dcf-a926-25adc7a6b904",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bf61d164-3198-4c97-ac58-606b603b94bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d0a831-6cb3-40b8-9d60-940909337ed8",
        "cursor": {
          "ref": "7c87c935-ccb7-42b6-b701-4724599998c7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2fc96f29-e98c-45ec-94e5-137d1b734b8b"
        },
        "item": {
          "id": "21d0a831-6cb3-40b8-9d60-940909337ed8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9f441f0b-1a4a-420c-b605-5ada9d41a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0409051d-6fbc-4ee2-8498-f42d73b643de",
        "cursor": {
          "ref": "72479309-faff-4405-aedb-c8c8a6a7ce81",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "05305c8f-1fe5-42e9-b9ae-881c701e339a"
        },
        "item": {
          "id": "0409051d-6fbc-4ee2-8498-f42d73b643de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fd669d86-a5eb-4ffb-a84f-bf57ae7aa670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82f15ad-9510-4b11-99dc-f621a2a4335c",
        "cursor": {
          "ref": "c7625377-0762-4286-a275-2c2b7f22b5c4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d2b4a5f1-9914-4124-8c6d-361b7f9dfd40"
        },
        "item": {
          "id": "a82f15ad-9510-4b11-99dc-f621a2a4335c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "634bd040-5d85-4b9a-91f5-1187ba45fb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a8bf3c-5aea-4ba7-9dd4-2d60f005ec33",
        "cursor": {
          "ref": "95039c38-bc62-4fb9-bec4-00ae22d8a4d2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fe09a628-3b49-435c-997b-9ef4c1bb1469"
        },
        "item": {
          "id": "66a8bf3c-5aea-4ba7-9dd4-2d60f005ec33",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6479ab6d-cea5-4b80-9e42-e460b7deed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df6e91c-3266-4eed-bc9f-8451190b1f82",
        "cursor": {
          "ref": "b79062e5-5b7d-49b2-9d88-938e748aecda",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04158853-54e3-462b-b96d-f1f6313fbbef"
        },
        "item": {
          "id": "5df6e91c-3266-4eed-bc9f-8451190b1f82",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24937f80-0893-49d2-844d-91c59d8f35fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b5e9c-e3d0-4db0-b317-5ce28cbbebd3",
        "cursor": {
          "ref": "7c3a61b4-cddb-4339-abb6-a67c232e4d20",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "19b19b6d-b7a9-45da-87ac-cbb077074bce"
        },
        "item": {
          "id": "700b5e9c-e3d0-4db0-b317-5ce28cbbebd3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27ca8d8c-f0d3-4fa0-b6cf-e152e20fbd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30776034-a0e8-4cd8-9b4b-9ba6c89564f4",
        "cursor": {
          "ref": "e7881aef-3693-4ce7-af84-45ee25786fe8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c78bd1bc-9f9a-468b-9cc3-53fee5e3a250"
        },
        "item": {
          "id": "30776034-a0e8-4cd8-9b4b-9ba6c89564f4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0271cd82-0533-42e1-980b-270e74f70b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bde338-bfd0-4b8e-a9f6-8d5e7981c8c1",
        "cursor": {
          "ref": "ffa534a9-73a6-4298-870b-0ef1a886a0cb",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4f66b9be-5954-4db4-a53a-99f3d42cad79"
        },
        "item": {
          "id": "f0bde338-bfd0-4b8e-a9f6-8d5e7981c8c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d5422a76-3dae-4998-9e4f-29ff29a2da86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992ca2de-f2fd-4c08-b38f-53b3900681e2",
        "cursor": {
          "ref": "b7932180-eefc-4623-a8c8-1b1bba4705ba",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4d5eee34-fad7-4f68-901d-7504d9c59a80"
        },
        "item": {
          "id": "992ca2de-f2fd-4c08-b38f-53b3900681e2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "58fbe429-d079-4774-b450-2978ba60cc57",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b77e1-4e32-46b2-b8eb-5ebb927eaa2a",
        "cursor": {
          "ref": "7f352364-26bc-4170-81b4-6750d4d8743b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2cbc6b7d-fb62-48d3-b774-cfe708c1f8e0"
        },
        "item": {
          "id": "434b77e1-4e32-46b2-b8eb-5ebb927eaa2a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b2bed764-9c1d-4ce9-a849-277a7b579481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9a190-beef-4171-a11a-a84ada4ba70c",
        "cursor": {
          "ref": "48facc85-9471-4679-b556-330a49899e3d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "37497ac4-04a0-4ed3-9b9f-c4297974ea9d"
        },
        "item": {
          "id": "18b9a190-beef-4171-a11a-a84ada4ba70c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aa0b4bf6-5f0b-40a4-bc59-6af09377e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ed925b-0172-4b50-8682-6ac87b91033b",
        "cursor": {
          "ref": "fdb86754-02e7-4214-bceb-4d538fd2d08a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18026f6e-f027-43ea-83e5-0a2ea2d40a19"
        },
        "item": {
          "id": "94ed925b-0172-4b50-8682-6ac87b91033b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3e978964-ad90-4444-81ae-8b62f98fbc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae75a5e3-bc1e-4a2e-bc5b-94704bed976e",
        "cursor": {
          "ref": "b7db0677-686c-4b43-b87c-538d9e6262d0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d603696-0869-4dd2-b4f9-35156f38f50b"
        },
        "item": {
          "id": "ae75a5e3-bc1e-4a2e-bc5b-94704bed976e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a92c0723-95a0-4617-9810-c380f6caedec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef718a2-e360-492c-a77a-8305aac40655",
        "cursor": {
          "ref": "180ef8ea-d823-4b56-89f1-7091add746df",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26253854-a5e7-4e53-858c-b50a66af65a3"
        },
        "item": {
          "id": "8ef718a2-e360-492c-a77a-8305aac40655",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8defcbf2-865d-4ce0-a1ae-579bf1416d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22535248-9138-4ebd-9e76-d2bfbd21f8a6",
        "cursor": {
          "ref": "d7bf0bdf-2922-44ce-b52e-bb7061b7968f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2413b6ae-f69c-47e5-a569-cd71ca8c6e98"
        },
        "item": {
          "id": "22535248-9138-4ebd-9e76-d2bfbd21f8a6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93cf8569-2544-44dd-8b0e-8692c009ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279ff916-5058-4f0e-b572-e70a3d8db61a",
        "cursor": {
          "ref": "9e194264-6ca5-42cf-9c13-b059529d41dd",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "939e9d27-c4a6-405a-8242-bd4f879fe5c1"
        },
        "item": {
          "id": "279ff916-5058-4f0e-b572-e70a3d8db61a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "938d8470-0460-498c-ae4e-6837fdf7717c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082c47c3-cd80-4a8e-ab79-ec3ec421d20d",
        "cursor": {
          "ref": "aaa25e31-afbf-4794-a4c1-b1c2c91e6491",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "992ecc0a-f708-4b10-ba0c-1fd10df1be2b"
        },
        "item": {
          "id": "082c47c3-cd80-4a8e-ab79-ec3ec421d20d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "46bd790d-7e5e-45db-ae79-bb678ba76ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f96024c-137b-4d4e-baff-fc72a1c31bca",
        "cursor": {
          "ref": "02e22466-d1a3-404c-9a0d-19d08ddced59",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9ec2a969-3e4d-44bc-bb69-d903b3338c96"
        },
        "item": {
          "id": "5f96024c-137b-4d4e-baff-fc72a1c31bca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "998a80b4-b847-4a35-8803-9b8d09c83b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf305bdd-e08d-4ea4-a2fa-d4cfb59ff3f7",
        "cursor": {
          "ref": "82d2e5ef-d3f0-44a7-b3ce-acd2aca311ad",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9369e88-7e45-4e53-a306-713e09cd4afe"
        },
        "item": {
          "id": "bf305bdd-e08d-4ea4-a2fa-d4cfb59ff3f7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "61b14aae-5081-41bc-93e8-6bbb6aa22571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf20fb-ad6b-483d-80e2-57ed03ccba6c",
        "cursor": {
          "ref": "1784a254-0b51-41e3-8824-8e9f100cea85",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ef94556-49ee-4e0e-a2b8-0368b4d4ef08"
        },
        "item": {
          "id": "fbbf20fb-ad6b-483d-80e2-57ed03ccba6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "43d5494a-4c46-4c8b-af55-1e4dd0810a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b634a5ca-e946-4ac7-b4c9-7e6d7d0e81d9",
        "cursor": {
          "ref": "042b47c9-d99f-47df-be82-982e9f71377a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f5f881b3-7f0b-4130-a252-2e9ef5dae611"
        },
        "item": {
          "id": "b634a5ca-e946-4ac7-b4c9-7e6d7d0e81d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c0b73273-ee31-4aff-a270-d4d97c5a19db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85863fee-4e32-403c-abdc-cd1b556e3786",
        "cursor": {
          "ref": "5fb44458-0950-4dcb-8c4e-31f35e71f782",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "125bc405-b4a2-4e56-9e3c-c83b07c68249"
        },
        "item": {
          "id": "85863fee-4e32-403c-abdc-cd1b556e3786",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eb9150de-3ce3-43c2-af16-ce254698e41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d019d2-41ab-4da1-be57-cc950077036b",
        "cursor": {
          "ref": "a9602e95-4902-45ae-957c-77aebc29b70a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "446a458f-a42e-43b9-92e9-44f23f172aec"
        },
        "item": {
          "id": "a2d019d2-41ab-4da1-be57-cc950077036b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ab670d62-4f26-4506-ac4f-0c7f9bfcb6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951263fd-5b5c-4da2-8cea-bf07c413bca0",
        "cursor": {
          "ref": "ef7170fb-a258-4594-85dd-447f0ad173ca",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "21fb39ae-2f99-4248-b254-e5dca22da81e"
        },
        "item": {
          "id": "951263fd-5b5c-4da2-8cea-bf07c413bca0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "26b28203-3ab7-4997-a4f4-4b30085f4ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392f6dc5-4c78-4dbc-9816-f497ca532128",
        "cursor": {
          "ref": "039ad27c-16cd-4353-9b6d-a8a482f8a8d6",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "698e661b-d4b0-488e-9a5e-b0f216644d5c"
        },
        "item": {
          "id": "392f6dc5-4c78-4dbc-9816-f497ca532128",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9176ffb9-24ed-4157-8c77-1cedf2b1d9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0558ad66-18dc-431e-9f6a-feaa9382ac84",
        "cursor": {
          "ref": "b696394b-1caa-4af3-b78e-05115ec071ea",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "96954b6c-3862-4c5b-9c89-508a3b00ecb6"
        },
        "item": {
          "id": "0558ad66-18dc-431e-9f6a-feaa9382ac84",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "486803f5-2a0d-4bb3-8309-b972fb00aa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d695f4-35ff-476d-99cc-62fc36e07164",
        "cursor": {
          "ref": "1778265a-310e-4a29-8784-d1a717efa091",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b564d5cd-6ead-4552-b8de-cbfe2f1426d6"
        },
        "item": {
          "id": "d3d695f4-35ff-476d-99cc-62fc36e07164",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1c2d5df0-7a11-43a2-86b0-ee6db4597065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942f1f77-df97-4c4f-ba56-20f7a81553c9",
        "cursor": {
          "ref": "3ffca7c6-523c-4052-ad4f-0295b5bc86dc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2d81c83e-7da6-48ab-ad61-2403e706a603"
        },
        "item": {
          "id": "942f1f77-df97-4c4f-ba56-20f7a81553c9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "47adda2e-bda1-451a-bfd0-ffbca1d767c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ab384-2c44-43e1-8807-dd51844c9fc3",
        "cursor": {
          "ref": "e538675d-43dc-4b1e-b5e2-6fecfb712e19",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e276135f-4085-4a42-9acc-06f0a84d29c4"
        },
        "item": {
          "id": "328ab384-2c44-43e1-8807-dd51844c9fc3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a549261a-364b-4f00-a9c8-74fc66bd837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a55e803-003c-4430-aa91-c79b1e81e566",
        "cursor": {
          "ref": "0222b7e5-604e-4fa1-ad9b-b3ec63f3944f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3da77f60-5a24-4fe0-988b-0719e83bf0e5"
        },
        "item": {
          "id": "4a55e803-003c-4430-aa91-c79b1e81e566",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "936115a0-c34f-4932-943a-edf3272a160a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a65125-72c7-4afe-a9ba-2344f6a7548c",
        "cursor": {
          "ref": "d58ff344-d7d6-42ef-9c1d-bd9bb837a7e5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "af2d713d-844f-4c84-8baa-6c352e4a2ee3"
        },
        "item": {
          "id": "44a65125-72c7-4afe-a9ba-2344f6a7548c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6aec7078-5a64-47f8-94d9-8e15380cc465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecf4f55-3eb2-4762-b2cf-dc7c7a434ce4",
        "cursor": {
          "ref": "cf33192d-d69d-46e4-b3ea-7cd305196af6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1bbd6af-2894-4853-b9dc-aabe8ca7d183"
        },
        "item": {
          "id": "9ecf4f55-3eb2-4762-b2cf-dc7c7a434ce4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7612237e-666c-4f3e-8302-6aae0d9746a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc19080b-2cca-4702-b3d1-b3127b796b0c",
        "cursor": {
          "ref": "0f8cae85-e8bb-453f-a489-880b8e9e2d8c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8e52733a-1e5b-4ee0-9e55-af9e2e5fd705"
        },
        "item": {
          "id": "bc19080b-2cca-4702-b3d1-b3127b796b0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d38f327a-d21d-4659-8726-88151ff88172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2e7639-6016-43a1-853a-d1fc270a554b",
        "cursor": {
          "ref": "801c7150-dd10-4342-b8a0-3be78c7942f2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d66ca27b-9d7e-486d-9087-6ddc0a7f2c73"
        },
        "item": {
          "id": "0a2e7639-6016-43a1-853a-d1fc270a554b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a4c3b654-6a67-4bc0-a184-61477d414f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b8835-b9eb-49fd-9d28-cd53681acd62",
        "cursor": {
          "ref": "7ff956df-f712-458e-8e43-e38306885bfd",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d3ec6fea-69be-4519-8d17-9270d0607e8b"
        },
        "item": {
          "id": "cd6b8835-b9eb-49fd-9d28-cd53681acd62",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e0a28f1-9c58-49c5-8c3a-b84d4b0ee3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1332831f-6d2a-4bc1-a00e-1aa6bd02ab7e",
        "cursor": {
          "ref": "ac25bc12-6872-4111-8d55-4c61251052eb",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8b6fa717-49ba-4692-b2c0-b3dd1bbe4be1"
        },
        "item": {
          "id": "1332831f-6d2a-4bc1-a00e-1aa6bd02ab7e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8c2e61a-a9ff-4a73-83ba-af8623a50b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d60efa-fa2d-49de-9f36-c39a3bd06466",
        "cursor": {
          "ref": "2793bfb5-e745-4cde-b5bd-9011cc54cded",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74ff706c-3b67-42cb-bf4f-20228eb03c28"
        },
        "item": {
          "id": "86d60efa-fa2d-49de-9f36-c39a3bd06466",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3630b475-96a9-4a81-85ed-23f8ecbe18b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60c867-daaa-43cf-a8e1-580c5a788502",
        "cursor": {
          "ref": "0e4d09f9-b22b-4b8f-ab89-634adae40f47",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ee0bd2b9-5698-452e-a2b9-b1216258bfd7"
        },
        "item": {
          "id": "ac60c867-daaa-43cf-a8e1-580c5a788502",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "82a93fc1-2f83-49d7-8949-879d23551ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868fb638-2970-4ecf-aa7b-1fc66e9df657",
        "cursor": {
          "ref": "f0281286-f48b-4fa1-886a-ebc84a0c1d18",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5c036435-73cc-47c5-9815-7f8f011199aa"
        },
        "item": {
          "id": "868fb638-2970-4ecf-aa7b-1fc66e9df657",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "780cd324-5167-491d-9ef4-881b7de89029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c49b07-8877-4b37-8cc6-2b88ba14231f",
        "cursor": {
          "ref": "ed4bdba1-dd65-49d6-b0a3-9a3cf80055c4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "22b4cfad-f757-4104-ac17-21a2b81741f4"
        },
        "item": {
          "id": "f5c49b07-8877-4b37-8cc6-2b88ba14231f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "83efd161-a748-405c-9a98-f03bcd1b4400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7be15d-3756-464d-a9da-177cfd0558e3",
        "cursor": {
          "ref": "6699cc81-ed98-4e96-adb2-3811c88ac95c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08f305f8-4b50-46b4-8a39-914c638a84b7"
        },
        "item": {
          "id": "ca7be15d-3756-464d-a9da-177cfd0558e3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b19298e0-3c56-4e64-917a-1ed1e055fdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24a746f-4e59-4fc5-84d7-6cd0e3fd0891",
        "cursor": {
          "ref": "bab4050a-0f69-409f-b1d1-2306f382dee0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0a4ebcc1-d9c6-4cba-9048-7db0ba2e70bf"
        },
        "item": {
          "id": "a24a746f-4e59-4fc5-84d7-6cd0e3fd0891",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8071a685-896e-4dae-9cf7-e0f4a855d874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b1a4fe-bfde-4533-ba54-d8cb6c28ee1c",
        "cursor": {
          "ref": "a7d690ad-50ee-422f-b3c7-ea7df3ab6971",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3c6053d8-3ce1-4593-b511-fcfa931c59a9"
        },
        "item": {
          "id": "f8b1a4fe-bfde-4533-ba54-d8cb6c28ee1c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5a1b0ec3-7944-48aa-a90f-0b8b3aa4fb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebca3c1-fbb1-4b4d-8d1c-ad047ed49cc2",
        "cursor": {
          "ref": "b14a3dba-2c2c-48bc-85ae-c6b164156432",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d398d99-9d81-4f05-8460-9e901a571a5f"
        },
        "item": {
          "id": "8ebca3c1-fbb1-4b4d-8d1c-ad047ed49cc2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0dcaaf9a-0ce9-4ea0-92e4-68b6e6bae078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8fe8db-d4c9-444f-b585-0a0a5250f145",
        "cursor": {
          "ref": "934e99b2-11fc-4660-845f-5ecc838af3bd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c22b112b-f0c7-472a-8205-f61a146dd128"
        },
        "item": {
          "id": "ef8fe8db-d4c9-444f-b585-0a0a5250f145",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cc07796e-b319-4c68-a451-3b84b493940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc937d-4fed-441f-a3dc-b0b87979b703",
        "cursor": {
          "ref": "9ed80ea4-57d0-4fc8-8f1b-14727aabf033",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "123a5e9d-de57-4b05-82db-d73d13323e2d"
        },
        "item": {
          "id": "bafc937d-4fed-441f-a3dc-b0b87979b703",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f1a52110-3198-4d9a-86af-79d1550189bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f3899-9aa5-41b2-8ec4-50707742e088",
        "cursor": {
          "ref": "67fef8ea-f0e5-431b-a37a-47647de6dffe",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "435255c7-d7e2-4a10-afcd-a4746b28cdf8"
        },
        "item": {
          "id": "1a4f3899-9aa5-41b2-8ec4-50707742e088",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b482efb7-5965-4520-9308-c72d2da46940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39500ec0-ffcf-45fd-85c4-af119e09b9ba",
        "cursor": {
          "ref": "856f139f-f5b8-4ace-aa67-07a4b155b646",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "45b44e76-f55c-4d4f-9382-213df3156bd6"
        },
        "item": {
          "id": "39500ec0-ffcf-45fd-85c4-af119e09b9ba",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "249029e5-0304-490f-9a02-6eaaec1f3852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b8a5c6-f066-4e20-b42e-d5e63d857511",
        "cursor": {
          "ref": "4d1e5817-3458-4e55-ad3d-97cf243803b6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8890592a-cc85-438c-a1c8-7583c2480e64"
        },
        "item": {
          "id": "c6b8a5c6-f066-4e20-b42e-d5e63d857511",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "97f5f659-36da-4adb-b86f-3b43585539eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac1a829-7986-4470-a589-6c57ce4c6394",
        "cursor": {
          "ref": "19415884-326e-46ba-adde-1ec27c7c9136",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56c49d33-5c51-4c2d-8ed2-91c21ce48cf7"
        },
        "item": {
          "id": "dac1a829-7986-4470-a589-6c57ce4c6394",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2d60c515-a788-40fb-a940-0409a424b130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5058266-845a-4e2f-a49c-2ed560d9c3f6",
        "cursor": {
          "ref": "c95732f1-683e-46bd-8ceb-ad3ffdabde37",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "94f149fe-70bb-492e-9676-ba92e87aa39f"
        },
        "item": {
          "id": "e5058266-845a-4e2f-a49c-2ed560d9c3f6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ce66a832-c4f7-4098-96d2-b165780aa01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6eb704-cb39-4daf-8ad0-583c762daef8",
        "cursor": {
          "ref": "da4e40bc-a887-48ac-ba74-2da2b2c0915d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7ccacf03-24fb-4c81-8197-2013584660e4"
        },
        "item": {
          "id": "be6eb704-cb39-4daf-8ad0-583c762daef8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8f8ca23e-72e2-4a99-b381-e3e3c5f594f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4c5987-0cba-4a5a-b0ed-2c93d398e36e",
        "cursor": {
          "ref": "fe95b2b1-49e0-4c44-bcb6-16f1bb048326",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "854d1dbb-9f46-4656-8a16-bc9a0a9fc5a1"
        },
        "item": {
          "id": "7f4c5987-0cba-4a5a-b0ed-2c93d398e36e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "526c0c87-88bc-47fd-964f-31795a3ad00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a27f84-fd57-46db-8c49-6ef1999ea102",
        "cursor": {
          "ref": "c051e631-7620-4417-bd63-21e0aa6a98c9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc8c3189-2f87-4463-bc1e-e6b87ea796c6"
        },
        "item": {
          "id": "83a27f84-fd57-46db-8c49-6ef1999ea102",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7d2d754-abc0-4347-9fc9-ab4697981dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5eab71-0a50-4bf9-acbe-e87893b23f31",
        "cursor": {
          "ref": "d79b9391-12ad-40ce-b704-254ad770e8ed",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2ffb4994-0577-4387-a78d-2e0646b79dd0"
        },
        "item": {
          "id": "1f5eab71-0a50-4bf9-acbe-e87893b23f31",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f29d0d6a-613f-472e-a15e-826b33651dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba55c7-7938-4af4-9915-5bc63283fd88",
        "cursor": {
          "ref": "86c3b51f-4e24-4cc5-87d3-31b636cfb076",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6bfe1473-f879-4640-b54e-476724418fc2"
        },
        "item": {
          "id": "79ba55c7-7938-4af4-9915-5bc63283fd88",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3c781f9b-1274-4909-b650-e4e57d004ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ee7fbc-f36f-41b8-b649-90cfa418b8e0",
        "cursor": {
          "ref": "8a30d43d-363f-466b-ad86-d62c9dd37867",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5fb970c4-e222-48e1-a1d8-3a717dabc14f"
        },
        "item": {
          "id": "b7ee7fbc-f36f-41b8-b649-90cfa418b8e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "465e1bd2-685f-42cb-928f-02e090e8afaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9962733d-cacb-4211-b661-df6f96c0b7d2",
        "cursor": {
          "ref": "9106a50d-0c95-4b6d-b3bc-d07b2f587bb8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f83fbfcd-424d-4c11-8c7e-07076b07f1a3"
        },
        "item": {
          "id": "9962733d-cacb-4211-b661-df6f96c0b7d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cc53d3eb-25ee-4829-ba20-b0da89ff179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e63aa7-2304-47a7-af17-796f70f9f098",
        "cursor": {
          "ref": "bcdcc214-b059-4f7e-98bf-b5ab03a85c0f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e0520972-70c6-48b2-a102-267ddbacd0a8"
        },
        "item": {
          "id": "31e63aa7-2304-47a7-af17-796f70f9f098",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00e39018-2bec-45d0-b34d-486a851daeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4be25a-ad5c-4fc9-915a-19888e31f30c",
        "cursor": {
          "ref": "96453b19-15df-41d5-a5b8-603527a2832a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fd7761e5-f974-483c-b68b-f5473967902d"
        },
        "item": {
          "id": "9a4be25a-ad5c-4fc9-915a-19888e31f30c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52969417-a150-4552-9a40-517e14cc6ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f244fc5b-31d2-4127-a796-5dbc4b448bb3",
        "cursor": {
          "ref": "e8b38f25-1020-47ad-8adf-581132697642",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6eed0d6b-7b6d-400b-9294-b09e2d9db65f"
        },
        "item": {
          "id": "f244fc5b-31d2-4127-a796-5dbc4b448bb3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd86479b-974e-48a4-8973-cbd8730d3ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c92fc68-dcbf-47e9-b525-da60ca326512",
        "cursor": {
          "ref": "78a3b125-1ebc-48fb-82bc-238174848a47",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e591c4e-bac0-4383-a5aa-64f44a41073c"
        },
        "item": {
          "id": "3c92fc68-dcbf-47e9-b525-da60ca326512",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "90da53b1-88ba-4b96-8d80-d3d3ee44342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181cda37-15a8-4c97-b68e-33cd3b23e07f",
        "cursor": {
          "ref": "ba2f31ff-41ba-46cc-abf7-30903eb08eed",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "62c2b216-f828-4dcd-a4f3-96ff051c570e"
        },
        "item": {
          "id": "181cda37-15a8-4c97-b68e-33cd3b23e07f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "734eb937-ef1f-4bd6-a3c0-7e84d105c0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c4d826-c4f0-4ad0-9b75-7f541384b2ae",
        "cursor": {
          "ref": "9d7ef5d8-065d-4a51-81f4-bd6c366e101e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f38de175-6261-4f2b-a4c2-6196d94e0881"
        },
        "item": {
          "id": "98c4d826-c4f0-4ad0-9b75-7f541384b2ae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e95c63de-e3b1-4d44-83fd-436b31d6d9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d8129e-b142-4ae7-b793-329be42d0850",
        "cursor": {
          "ref": "4ec5081b-0f3b-410c-a288-7f1deb0e921a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "26db7ce4-affa-4928-8a32-1d7feff41a1d"
        },
        "item": {
          "id": "25d8129e-b142-4ae7-b793-329be42d0850",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7960b7fd-ae13-45fe-9440-25640a61ad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb784ec-62f1-4a41-b2b2-ded2ae0040dc",
        "cursor": {
          "ref": "47621ac5-0228-4759-8fa6-e03fb314c796",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b959309-c5e5-49b5-9d25-23c2d4c70f0c"
        },
        "item": {
          "id": "8eb784ec-62f1-4a41-b2b2-ded2ae0040dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25be6624-60d8-4c31-85cf-98e1110f9196",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fbe639-0277-4086-a97b-2cf286165eb0",
        "cursor": {
          "ref": "55091813-7eb2-4cce-9b9e-2c00c7fbc002",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2d772a3b-707e-4264-8a6d-20da31cc7494"
        },
        "item": {
          "id": "c5fbe639-0277-4086-a97b-2cf286165eb0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4891e07f-af44-4348-9f0e-5049e3d3fb9c",
          "status": "Created",
          "code": 201,
          "responseTime": 7209,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3cc5d5-c319-4383-8f9d-8a92c01bb957",
        "cursor": {
          "ref": "6532164a-1ca1-4827-86d5-ba147232ac31",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3f0736e1-4460-4bef-b2df-23e1d2fd445d"
        },
        "item": {
          "id": "8b3cc5d5-c319-4383-8f9d-8a92c01bb957",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b5ae7b28-0020-4ed5-a794-84b5686ed32c",
          "status": "Created",
          "code": 201,
          "responseTime": 6341,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317f4b9-ae86-4ab2-9ecb-748d22819845",
        "cursor": {
          "ref": "12aa5da1-f358-456f-aef2-5c082221c4fa",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b553e210-9a85-4527-aa69-fc0325be5871"
        },
        "item": {
          "id": "7317f4b9-ae86-4ab2-9ecb-748d22819845",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "59824d26-d48f-4e8d-a6ca-c8a7c3ac4c4d",
          "status": "Created",
          "code": 201,
          "responseTime": 6734,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "937209ef-ae9d-4c99-8e0f-bcfd0ae0b8af",
        "cursor": {
          "ref": "5950b203-b6e9-49f1-bc0b-a0a611290918",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "88c89eda-a8ab-460f-afd7-276be9d976f9"
        },
        "item": {
          "id": "937209ef-ae9d-4c99-8e0f-bcfd0ae0b8af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db6865ff-8b82-4520-aa08-df1c91e4c285",
          "status": "Created",
          "code": 201,
          "responseTime": 6959,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c55c3c6-2c3a-4ed3-970c-1892089b3cf3",
        "cursor": {
          "ref": "bb73cb4e-d541-40a4-8e4e-ac36aa4b571a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e3ef0a1e-2cb0-427c-baa3-bc81475d2c53"
        },
        "item": {
          "id": "4c55c3c6-2c3a-4ed3-970c-1892089b3cf3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2ea32687-8985-4a24-b754-93575af01a0c",
          "status": "Created",
          "code": 201,
          "responseTime": 6978,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f34a9b-94eb-4b30-abb2-af9b42ec8dc0",
        "cursor": {
          "ref": "8a392217-f128-4a59-bbb8-319a93e1b9ed",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0191ed38-3c06-4cbd-be73-2fd681634903"
        },
        "item": {
          "id": "94f34a9b-94eb-4b30-abb2-af9b42ec8dc0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6e4ea48-7118-4eeb-bfb8-d1fc3ce7cf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a3fbe231-ffe8-4423-86d7-c67b7522c97f",
        "cursor": {
          "ref": "2017dd3b-7dab-49d4-8ec7-32fcbe73dca7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8d3890d3-38ed-4221-b45f-bdb1cbf93b3a"
        },
        "item": {
          "id": "a3fbe231-ffe8-4423-86d7-c67b7522c97f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b86491d7-fc44-495e-ac04-57aef550e0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf055a90-c7ee-4b82-850f-2255139241c8",
        "cursor": {
          "ref": "dcf54af8-8f28-40cf-9689-3dc5efbcf112",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e747f50b-bf97-46a5-80d8-045d6f638a5d"
        },
        "item": {
          "id": "cf055a90-c7ee-4b82-850f-2255139241c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "722e2617-084b-4387-b7a1-3d60407a27a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f56a39f-6c08-41f4-9c07-65440c74bd36",
        "cursor": {
          "ref": "e6282f2c-eddc-4f00-a9e9-f4c96e4e575c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d79932a-5399-45b3-91b2-c7f1f7e329ff"
        },
        "item": {
          "id": "2f56a39f-6c08-41f4-9c07-65440c74bd36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1400af29-6443-4d72-b8fe-6b1fa7f8c283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c7a61c-5053-4e9b-bee6-6388fedf294e",
        "cursor": {
          "ref": "425c7a00-95b8-49cf-8934-394af8b73d52",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5730b3ec-8471-440f-9ef6-c87f2ae0e086"
        },
        "item": {
          "id": "a6c7a61c-5053-4e9b-bee6-6388fedf294e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1491159e-174b-44d5-9cf7-c1da30a6fffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b821b-2da8-4a10-8181-61bf2452a755",
        "cursor": {
          "ref": "9efed80a-b960-47a9-baab-d5e58d8cdf99",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bab3aebc-b580-43ce-9d97-39fc15670b82"
        },
        "item": {
          "id": "d47b821b-2da8-4a10-8181-61bf2452a755",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3e9fb1e4-2fae-4a59-8e57-6b51d3f8fafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771b449c-3a8d-4176-a294-4fd251af2335",
        "cursor": {
          "ref": "3d4085c8-0932-45f1-bbd8-3b446a14524a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "74c4ff9b-5ac7-4ee2-9658-c634b9b11ec2"
        },
        "item": {
          "id": "771b449c-3a8d-4176-a294-4fd251af2335",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d29c71c-3847-4d88-aa6f-0be68e6afadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b05c317-31e2-4fbb-9620-1099ba60673a",
        "cursor": {
          "ref": "57d90ab1-1ad1-4f7d-932a-2592e7c27122",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a6d7a94-164a-4286-b402-6375d0fa400b"
        },
        "item": {
          "id": "8b05c317-31e2-4fbb-9620-1099ba60673a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71cf5636-03fb-46b5-ad0a-7b0b10b1736d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab3b72-0849-4e0a-b1a3-323f1ce8252b",
        "cursor": {
          "ref": "2192c70a-b2ee-42be-999f-8231edf4b4c4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "72cf4ba5-e1ef-4aba-b380-96347fae77f7"
        },
        "item": {
          "id": "54ab3b72-0849-4e0a-b1a3-323f1ce8252b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c679d80-6d98-48c3-ae95-b5a241f8bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5821f4b9-6b7b-4fa8-89ca-1c4d096f9cc0",
        "cursor": {
          "ref": "2a25064c-7d96-4fe9-b6b6-8a73e836a0d0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9ac2019f-fd4a-44b7-906b-722d3890bbc3"
        },
        "item": {
          "id": "5821f4b9-6b7b-4fa8-89ca-1c4d096f9cc0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3715306f-5065-4c65-b356-154f68c4e656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726fb08-ea74-4c25-a3cc-8bb13afcedca",
        "cursor": {
          "ref": "0cc5cd76-7499-4881-b0e0-4a6222480d61",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6031d9a1-b904-4eec-902c-7c72b097131b"
        },
        "item": {
          "id": "b726fb08-ea74-4c25-a3cc-8bb13afcedca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3edd6533-9ce2-44b8-a537-56dd684535b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ccafc5-03e1-4032-b2dd-638a930d8374",
        "cursor": {
          "ref": "d809ade6-b725-4cee-8b94-2b7f600cbf64",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a8be90af-507b-476e-b7a5-77758e7d741b"
        },
        "item": {
          "id": "98ccafc5-03e1-4032-b2dd-638a930d8374",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9e66d12-6f80-46f2-b403-a73583110775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2016a530-f1c1-4ef2-a904-36a84bce05aa",
        "cursor": {
          "ref": "bd5a94eb-09e5-4526-8db0-962f99479236",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "de6fab55-8936-4e57-85b7-bcca7132948e"
        },
        "item": {
          "id": "2016a530-f1c1-4ef2-a904-36a84bce05aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "36ead61b-096f-41ec-a300-67ad4c1b3796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ea0dd5-5c2e-4df2-83e9-431221971955",
        "cursor": {
          "ref": "081ee61c-be86-438f-a110-39121ff01633",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "366f6919-893f-4b65-8397-72cf7acdcb62"
        },
        "item": {
          "id": "69ea0dd5-5c2e-4df2-83e9-431221971955",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3eab81c1-6633-47e0-a19c-0163dcdfe626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882d27b8-b8ed-4094-af1c-1f63cabf2a6e",
        "cursor": {
          "ref": "817da26b-15a0-45dd-bcbc-5f587a19d832",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4673fe08-6bb1-4b2a-87fe-c9e4499682b4"
        },
        "item": {
          "id": "882d27b8-b8ed-4094-af1c-1f63cabf2a6e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e390351e-316d-4e3f-ba71-e5ff804ed683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c718c-195a-4697-8025-04c97b4f4239",
        "cursor": {
          "ref": "f8a99cb2-fdde-438f-88a1-3272e1da6769",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a7e5d919-d148-4204-ae25-d6c59d5782e3"
        },
        "item": {
          "id": "099c718c-195a-4697-8025-04c97b4f4239",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "db874670-a470-43f7-9007-8c47d6095e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709c4a57-841b-4246-90f9-c781bc7ebed1",
        "cursor": {
          "ref": "6f9871b8-2845-49fb-9ade-48f5f11dedcd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8beec01c-f8c7-4def-9d79-a9a91d2288fc"
        },
        "item": {
          "id": "709c4a57-841b-4246-90f9-c781bc7ebed1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c080bc5-951e-46aa-86f1-2d8e4a2765e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e0353b-4000-4131-a5d4-3198244787fa",
        "cursor": {
          "ref": "bded8d50-7ee7-4918-b928-ff128ebc83c2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "037377dd-8442-4db1-b909-c978db78a7bc"
        },
        "item": {
          "id": "79e0353b-4000-4131-a5d4-3198244787fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8e4ef588-6282-49ea-8a46-43267fc2d6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2af77b-2757-4d04-971a-e9b797da36c6",
        "cursor": {
          "ref": "049019c7-bfe9-4609-bd3a-b15888df6ad4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4b0b58be-f9f6-4c30-a7ce-cbccbf462d2f"
        },
        "item": {
          "id": "ce2af77b-2757-4d04-971a-e9b797da36c6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f72a8871-b02c-4209-a884-14f92234b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89261f7e-f264-4324-80ce-74dbe61ed2df",
        "cursor": {
          "ref": "fae2049a-9945-4c5e-9898-0c125aa661cc",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "965bfd44-1de9-4664-bb1f-ff14fd411810"
        },
        "item": {
          "id": "89261f7e-f264-4324-80ce-74dbe61ed2df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ba1de33e-daba-4e9b-9101-2490796dded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13503385-2f1b-49b7-8b55-19dff0f5387c",
        "cursor": {
          "ref": "cb41ff1e-91dd-4235-931d-103644ca9a15",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "53a096a3-3310-457d-8e85-b0c9d06a0797"
        },
        "item": {
          "id": "13503385-2f1b-49b7-8b55-19dff0f5387c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "08e00327-54ce-4826-9cce-b57d2e11d028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9288a45-296b-4c92-8c61-17315cab2793",
        "cursor": {
          "ref": "e0d7f53b-c6c0-490c-bf90-595e27b89ee6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c7122d1a-d4e4-424e-b8ee-58ef34ae5dca"
        },
        "item": {
          "id": "b9288a45-296b-4c92-8c61-17315cab2793",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdf33c0e-16a8-4b3e-b760-08e30c3b9ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152a45a7-1f21-47dc-8a96-fa10da2dfac2",
        "cursor": {
          "ref": "ab6d2810-76a8-4a05-8920-78525b62b857",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c2275de9-d684-41b6-893c-5b6b6c825f2a"
        },
        "item": {
          "id": "152a45a7-1f21-47dc-8a96-fa10da2dfac2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b0c5900-6d74-4d13-ba90-e7c0df194b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35424246-86cf-4f99-92a1-f098269ce5a7",
        "cursor": {
          "ref": "5875acfc-7edc-4d94-a13e-8600d412f245",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1ebb3374-02f0-4493-ae79-b1a597b50f8c"
        },
        "item": {
          "id": "35424246-86cf-4f99-92a1-f098269ce5a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d5f0445-55e6-40f8-94df-6b4fad8f3665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c47c2e-65f1-4e2f-b241-75efd269f83f",
        "cursor": {
          "ref": "e7c416c3-059f-4eaf-a89c-b63eba7a967f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "30af8b97-e42d-47d3-bc27-5cdf9b2598cd"
        },
        "item": {
          "id": "29c47c2e-65f1-4e2f-b241-75efd269f83f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ae8910b-283a-484e-af49-5380fe51efee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ee74cb-fa26-4d65-abca-7b86703d0687",
        "cursor": {
          "ref": "e18a78aa-49b2-4829-991b-6a9296a99a17",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82d2a119-4847-4f83-bc8d-29dc09294df4"
        },
        "item": {
          "id": "52ee74cb-fa26-4d65-abca-7b86703d0687",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "78246f03-04f4-4553-bc48-084ea124f24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97f0f97-18f9-4a46-b398-b4a10ad72be4",
        "cursor": {
          "ref": "87a2362d-00b0-429b-a56b-e8b4659011a5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ecdb86f2-5a57-4410-beee-34135becb5bb"
        },
        "item": {
          "id": "b97f0f97-18f9-4a46-b398-b4a10ad72be4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "176dc7e8-7ff8-4cfa-9e0b-1ff2a3753ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815dc366-40a8-44e6-bbd5-2cc30b2643f7",
        "cursor": {
          "ref": "7a977751-6a94-4e8a-8de9-b7462d1d76be",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "54ec397d-f4b0-4d53-bd27-a60ded9d12c3"
        },
        "item": {
          "id": "815dc366-40a8-44e6-bbd5-2cc30b2643f7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1474d446-9754-41c7-99e3-8df9f9ea6501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1f574-8ba2-4872-af68-f51d7ded52fc",
        "cursor": {
          "ref": "e85a84b1-2d0f-4dec-b2bd-fbc8fc5ccb2f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc0423e6-e358-41f7-b7a0-235a895d7164"
        },
        "item": {
          "id": "13a1f574-8ba2-4872-af68-f51d7ded52fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "625c08c9-37e7-4bb4-92ab-fec8af94c46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c726dbd6-be25-45ce-a9c2-495a9d483c78",
        "cursor": {
          "ref": "67ae27cb-ae9d-4cb2-a1d2-a7eae7a9af26",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0945b1a8-d824-4e68-978c-9adf212bc35a"
        },
        "item": {
          "id": "c726dbd6-be25-45ce-a9c2-495a9d483c78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "85f08bca-03ff-446b-b091-ba5b375efaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1654109c-acac-45ad-82ed-94dfc57ebc6a",
        "cursor": {
          "ref": "04b971be-d828-4eb8-affd-d568071b1cc3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c0413ea0-e683-42d7-8f3b-3ef81ed3d27c"
        },
        "item": {
          "id": "1654109c-acac-45ad-82ed-94dfc57ebc6a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ce04c78-9973-4774-808c-a730cf3770d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5275d6-8bea-40d4-9657-effdf175eb42",
        "cursor": {
          "ref": "271979d1-029d-4bd6-8ea5-90da85585458",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "605fe4a7-9e6b-4207-9eed-8706ad31e85a"
        },
        "item": {
          "id": "8e5275d6-8bea-40d4-9657-effdf175eb42",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8850d898-4f77-490d-b4f2-2fdafa826b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26fa24-9f36-4d31-a22f-0fb3e8c212af",
        "cursor": {
          "ref": "dfa0bdda-9d9b-4e0e-90cb-4d8b0776fc46",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b63b67bf-1cce-4378-9480-c3d901270593"
        },
        "item": {
          "id": "9c26fa24-9f36-4d31-a22f-0fb3e8c212af",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72ca5d7b-5b7a-4aa9-a1eb-b50089352f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edfae6b-ad70-4bc5-b54a-27dba875d52e",
        "cursor": {
          "ref": "960a593b-0f27-4629-a2f0-46df7f2fe7cf",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "70cc2523-2f18-45c3-9b67-088cb5db1eaf"
        },
        "item": {
          "id": "4edfae6b-ad70-4bc5-b54a-27dba875d52e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8d1e647-0ca5-48a4-819a-6b709ac7d2aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ab0e4-f4fb-4e98-bcc4-dc8d660f0bbd",
        "cursor": {
          "ref": "7b15a0f0-8df4-495e-966a-9426d46ac83e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e67996e5-d000-4bf9-be16-7c3b9aa34acb"
        },
        "item": {
          "id": "ee7ab0e4-f4fb-4e98-bcc4-dc8d660f0bbd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a5a14e2-2c2c-4c72-ba8d-66e7fb4bce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da893454-6a94-44e6-bcb0-b6460a144b7a",
        "cursor": {
          "ref": "67dc56d3-5051-4cd5-9cb1-ad7f5cc4e030",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0df563fc-28fb-4fd9-ab06-dfeeda0e41cc"
        },
        "item": {
          "id": "da893454-6a94-44e6-bcb0-b6460a144b7a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d770974-bace-4b23-aa45-cdfb9a978634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7fac99-c482-4826-9fe3-c42cdb0bdd96",
        "cursor": {
          "ref": "224c50c8-65fa-4dd9-8209-fadfbaf2fa73",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "eb5ac35f-63b4-46b3-a8c9-122b261d1921"
        },
        "item": {
          "id": "ab7fac99-c482-4826-9fe3-c42cdb0bdd96",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3aa98124-770f-4cfa-84af-ac191357ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b75cd2-4706-48ee-ace9-93f48934fdf4",
        "cursor": {
          "ref": "86167388-b518-41e2-89d8-9ae3ee5ec62d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "083e329a-ff48-46a6-81d0-5d2df7d1455f"
        },
        "item": {
          "id": "d3b75cd2-4706-48ee-ace9-93f48934fdf4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eceef4d2-3b03-4755-9b52-b3926ae3e8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b561c73-1f1f-46f5-a9e8-132d49037256",
        "cursor": {
          "ref": "d242e9f2-6291-4bb2-951e-70495c0931b3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3942cdce-3576-4bfe-9925-b4a68b747225"
        },
        "item": {
          "id": "7b561c73-1f1f-46f5-a9e8-132d49037256",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14af9965-f42f-47f8-83fe-7d77c9cf3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a962a8b2-b180-4f1d-a7f4-807215efe5e8",
        "cursor": {
          "ref": "6b349e82-336d-4cb3-9750-74aa92facba6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "10aad720-0800-464e-82ec-7df36d1c51f3"
        },
        "item": {
          "id": "a962a8b2-b180-4f1d-a7f4-807215efe5e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86e252fe-726d-420d-882f-9bf0d898101a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b942b93e-ca32-4c3f-b8c7-5821032f1016",
        "cursor": {
          "ref": "9bb0b290-bf93-4a7e-bce9-72a2644c5483",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "144975b8-7066-4401-a4ae-f8f546aff616"
        },
        "item": {
          "id": "b942b93e-ca32-4c3f-b8c7-5821032f1016",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "350a83ee-d517-4a3b-9bc2-91a8e4767c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e891f2-696f-4766-8604-c2bf77d87355",
        "cursor": {
          "ref": "b75b3d35-811d-4c7b-a1b5-43775167e8ae",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "614c1e0b-7d1e-44ec-9edc-a1e1d9e08dc3"
        },
        "item": {
          "id": "05e891f2-696f-4766-8604-c2bf77d87355",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "22655738-6754-4635-b6ea-4af29c5b51d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b699704-e804-42ab-98d2-ad90e8fb451a",
        "cursor": {
          "ref": "8cf43865-ca19-40e6-96a1-3c3de9c3659e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c5f1b46d-74be-44bd-a973-a0b1542e8063"
        },
        "item": {
          "id": "9b699704-e804-42ab-98d2-ad90e8fb451a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c52ba581-cc79-45a6-907e-94a06ebb5992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfdbe2-cbeb-4e3b-9a8e-7f07bfe2d9b7",
        "cursor": {
          "ref": "d5b976a0-7b03-4ae8-9989-66e57d15deb3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8662356b-d0d4-48d1-848e-f89f21367bc7"
        },
        "item": {
          "id": "73dfdbe2-cbeb-4e3b-9a8e-7f07bfe2d9b7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "146ca2ed-d2e1-4539-979c-94286fe7efa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3335d-5901-4f77-95c2-caf5407f2238",
        "cursor": {
          "ref": "420d1222-d020-4e25-b6f6-e24ff50b5d31",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1fa983f4-414f-4e32-8e1e-a4abe3c7fc3c"
        },
        "item": {
          "id": "dbf3335d-5901-4f77-95c2-caf5407f2238",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "224a7fa3-d091-4d85-b0a4-94b6f481266d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf47264b-8fa3-43f0-ace7-76092490e32b",
        "cursor": {
          "ref": "fb5405a2-ef09-49aa-9b90-256c72a41b7e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a633cdb1-4341-44b6-9255-a31e8a086655"
        },
        "item": {
          "id": "bf47264b-8fa3-43f0-ace7-76092490e32b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c2869a68-893b-455e-8af2-35ed82575639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3e6400-2062-44a7-801a-03168c6d002b",
        "cursor": {
          "ref": "90d5b259-fcb9-43ae-926f-5422b6c18749",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "207bca29-a500-483b-a6af-d47074529df5"
        },
        "item": {
          "id": "df3e6400-2062-44a7-801a-03168c6d002b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1b6a4add-ccc9-4e81-b8aa-a47d6896b876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a754521-38b6-4e06-8d38-81d4f1933898",
        "cursor": {
          "ref": "36df3c05-d8f3-4c54-8c1c-16b38ce07d2b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7c3dce43-06ca-4537-9f25-b582bd715943"
        },
        "item": {
          "id": "3a754521-38b6-4e06-8d38-81d4f1933898",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10cf39c3-76ab-4639-9ba1-735dbd989ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c4754-dd1d-435a-b5f7-364383f300e5",
        "cursor": {
          "ref": "3562d897-fd11-42d3-90e0-bb81c2211f3f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f004bae1-8e5a-4679-b7b0-ad0bc201d9f9"
        },
        "item": {
          "id": "b53c4754-dd1d-435a-b5f7-364383f300e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d2d059bc-8f7a-491c-b75e-db88f778c0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c9328e-6503-4407-aa5b-515a9d813ffd",
        "cursor": {
          "ref": "b384415c-9606-49b6-b7ba-fc5114c04dcb",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "34f92045-bfdd-40bf-9588-a032ea21b826"
        },
        "item": {
          "id": "67c9328e-6503-4407-aa5b-515a9d813ffd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "12e57251-319f-4370-ac7c-bfae1c7f6f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f50b0c-be14-4613-8644-092dd32650f3",
        "cursor": {
          "ref": "ce79cfcb-3545-4457-84f4-9c48e596b53a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44c0307c-7473-41b6-b518-a6efbf931072"
        },
        "item": {
          "id": "e9f50b0c-be14-4613-8644-092dd32650f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "62791087-5136-4661-ae57-88c818e392d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ecb510-84f5-41f0-82d4-bbc8f1f47d0a",
        "cursor": {
          "ref": "5d27b9fc-30dd-402c-830a-a5b2bdf50efe",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "81fda8fa-1ee2-4f5a-9913-fd832e866d09"
        },
        "item": {
          "id": "04ecb510-84f5-41f0-82d4-bbc8f1f47d0a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab35fcaf-599e-47d3-81de-6a87e8f72782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44039c44-9c0b-4220-bbfb-12be7734e283",
        "cursor": {
          "ref": "877e67c2-67b7-4c8c-8d39-15b67b47d9e5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b23ef8f3-da6d-4852-837d-16c17f2e09ec"
        },
        "item": {
          "id": "44039c44-9c0b-4220-bbfb-12be7734e283",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7bdbd279-ea82-489c-bb34-6e784335fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dcb1f2-2199-4ae7-88d5-7613022e8542",
        "cursor": {
          "ref": "0aa96454-c80a-4cef-8ddb-dd5f73598f83",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "58b03cc6-d6e8-4c50-97ad-feed3ed7ad94"
        },
        "item": {
          "id": "33dcb1f2-2199-4ae7-88d5-7613022e8542",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1c2fa9e-d474-4451-8d40-5af2b7c63f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f51a976-0ec1-49eb-b37e-39063c8919ab",
        "cursor": {
          "ref": "bce03431-3bb7-4122-9958-f8ac083d0155",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ea9d7ca5-ef49-46c5-a685-ab2d965edb06"
        },
        "item": {
          "id": "5f51a976-0ec1-49eb-b37e-39063c8919ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb62e3de-6d36-4b6f-a376-f4ab02542312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa672a17-bf8e-49b2-925a-f0e3136bc468",
        "cursor": {
          "ref": "dc87b75e-a38d-4ebe-b978-9b891e9370b9",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "17632ce3-686e-4894-b08e-39f12d0eb7aa"
        },
        "item": {
          "id": "aa672a17-bf8e-49b2-925a-f0e3136bc468",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0ba2026-8d88-4bda-9c7a-8ff64444ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dcb8a1-d462-4ca8-a90d-e1b1afa32835",
        "cursor": {
          "ref": "96e58f6a-3e31-4be4-b4ae-f28d1913d363",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dc114f01-02de-416f-b37e-142eced28bb2"
        },
        "item": {
          "id": "08dcb8a1-d462-4ca8-a90d-e1b1afa32835",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01eb3c73-93ba-4e86-95eb-9eca592c5bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf82769-a909-48a4-b126-5e60353aa505",
        "cursor": {
          "ref": "eb568c3f-5120-4c3e-986b-d0d2b57a62e8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "781d48d2-84b1-45c4-a1ec-bad320d3053b"
        },
        "item": {
          "id": "1cf82769-a909-48a4-b126-5e60353aa505",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "16f9be90-f31e-45c5-95fa-4df5143f850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b47a1b-6f73-4971-a15b-59a29d05062a",
        "cursor": {
          "ref": "91c8eada-66cd-4178-bf0b-eb2015ee9c57",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3202a878-b1fe-4e93-a0a5-a07c95b3bedc"
        },
        "item": {
          "id": "47b47a1b-6f73-4971-a15b-59a29d05062a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "95f24b86-7d80-45b2-985d-7bcaf058d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ff1a9-aca3-405b-9883-4c948904902a",
        "cursor": {
          "ref": "ae37bf2c-c206-475f-a9a1-8eedaa5db774",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ecb65b9-df00-4771-88ed-c9ff3266ec5b"
        },
        "item": {
          "id": "2d8ff1a9-aca3-405b-9883-4c948904902a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b4a7085-6d92-41f4-9a1b-514dd7f4c20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0b1a19-4990-4c06-b7b3-fdc4b89a1cf4",
        "cursor": {
          "ref": "e260290d-45af-4df4-a6c0-09546f5c5c4e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4086e3a4-1cd7-447d-b80e-3b77bb1abbe9"
        },
        "item": {
          "id": "ec0b1a19-4990-4c06-b7b3-fdc4b89a1cf4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "508198c2-1635-4381-b8f9-ea18f990ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305a819e-e8fc-4e9f-8c91-9c11448443bb",
        "cursor": {
          "ref": "7f0308ba-68b3-4aa8-a4cb-c77743158753",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "043607d6-f7fd-40d2-8e57-7c55f41ed78c"
        },
        "item": {
          "id": "305a819e-e8fc-4e9f-8c91-9c11448443bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d8ee981-4bbb-455b-b793-284606335f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9564283e-1acd-4d4d-934c-65b2951c23b7",
        "cursor": {
          "ref": "f24e3a75-b49e-41be-a2df-8a92c25a125a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5acd413a-aaab-4415-862f-ffe484408289"
        },
        "item": {
          "id": "9564283e-1acd-4d4d-934c-65b2951c23b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "805fa164-cce0-4e34-8f83-6d0a4581e389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182182bc-8c14-43fe-b2a8-4e0f6724cfcd",
        "cursor": {
          "ref": "1e59e9ea-351c-4b96-a24a-5a5ddf8b3c1c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c231a226-77e5-4625-8a13-8a8b075b776e"
        },
        "item": {
          "id": "182182bc-8c14-43fe-b2a8-4e0f6724cfcd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba0990f9-1e88-4aa0-811f-2e9c90e5cabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826dbb89-e125-4729-b2ee-290424524588",
        "cursor": {
          "ref": "350d969c-2f74-4b43-bdb3-608db77f03cd",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d713efc2-2ecd-4e33-b80c-930cb0730cf1"
        },
        "item": {
          "id": "826dbb89-e125-4729-b2ee-290424524588",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "45a14411-0227-4247-85c6-1af9434ee283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a355ae-e08e-4954-aea8-f7d7927b87e9",
        "cursor": {
          "ref": "126b6878-6c21-49b5-9b9d-df491194caab",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d6a5248-8b6c-4c0a-8b10-613d8ce414e8"
        },
        "item": {
          "id": "c5a355ae-e08e-4954-aea8-f7d7927b87e9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8246bac9-9a51-4b70-9b12-6d2f7b14aabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d79311-6c4a-4968-a372-dbc99be1237a",
        "cursor": {
          "ref": "a3d51e1c-74b5-4269-9547-0bd15fdd1fda",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a623f43e-e54f-4089-a067-6b607cd032df"
        },
        "item": {
          "id": "58d79311-6c4a-4968-a372-dbc99be1237a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4bf850b-75f4-4b48-87ea-dfc450798c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1897678-4365-4108-b4cb-7dea7d3d4f3a",
        "cursor": {
          "ref": "c9f0ca48-bece-4902-a584-5df11d60e954",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "894350ec-9afd-46ae-885b-836de4832231"
        },
        "item": {
          "id": "f1897678-4365-4108-b4cb-7dea7d3d4f3a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "47298978-9330-4be1-8b47-b74d78633181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637ad7c-d154-469e-a3ff-3950c0c0b855",
        "cursor": {
          "ref": "f97fff7e-f578-4f6f-a6a0-c33f27dd48bd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2bf2dcdc-7d7a-49fc-bea2-d05f29c05262"
        },
        "item": {
          "id": "e637ad7c-d154-469e-a3ff-3950c0c0b855",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "88bebd7c-b9f4-47a6-b5b7-d2cc75890ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d2068-2885-4c96-a554-dd3035bb0672",
        "cursor": {
          "ref": "dde86386-8f70-41ec-912f-f3b3bc447ed5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "325b654f-a5fd-4852-a635-fa75392d90ca"
        },
        "item": {
          "id": "ff7d2068-2885-4c96-a554-dd3035bb0672",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5364e884-7f53-41f2-9173-8a13a5b8ae0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdd1a6b-5bfa-48f0-9672-bd3b1e4158df",
        "cursor": {
          "ref": "f247cce9-7c53-46b8-a1b6-89d22a8168b6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32ed227f-1387-4128-b2f0-00963693d434"
        },
        "item": {
          "id": "6fdd1a6b-5bfa-48f0-9672-bd3b1e4158df",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "97eebeb9-9be7-4fd7-aadb-c688b6c21caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1a0935-f270-4efd-85bb-0c6bab2133cf",
        "cursor": {
          "ref": "5b19290f-cdc9-453a-9350-a704e584a547",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "394a0438-d58e-4bf4-8701-ffbb7beeec68"
        },
        "item": {
          "id": "be1a0935-f270-4efd-85bb-0c6bab2133cf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "51e65571-9e19-49d4-85d0-7d87d438cbe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba2db44-9322-4cb0-93b0-3b5802e85d13",
        "cursor": {
          "ref": "ea1e94bf-bd1f-4b5b-9eea-71a72dfe1949",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bb4d4202-31a0-485f-99b1-07ef67cee074"
        },
        "item": {
          "id": "eba2db44-9322-4cb0-93b0-3b5802e85d13",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "66d5f41f-a1b2-4901-adeb-a73ea7508dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537f5219-8b6f-49eb-aa25-c2af857e39fc",
        "cursor": {
          "ref": "a77da43f-8ce9-4e8e-a908-c7e61ef67cfc",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c078c463-d33f-4302-b248-8fed7391761d"
        },
        "item": {
          "id": "537f5219-8b6f-49eb-aa25-c2af857e39fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0479adb6-88f2-4a24-b031-d677c098b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c28ce9-344d-49b7-a296-a050dc428c28",
        "cursor": {
          "ref": "2499eea7-081a-4507-8bc4-b4d6af39c0c7",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8ed0918d-aaab-47db-b82f-c42a96498179"
        },
        "item": {
          "id": "a9c28ce9-344d-49b7-a296-a050dc428c28",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "040ef628-0ef4-4d8b-a586-ff9ef5d8d9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6290ef-c7b1-402e-b160-f3ca35415d3f",
        "cursor": {
          "ref": "7bf597ec-696a-42dc-bcb3-0b7a2d7c0121",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "83678d0f-da03-42c3-8b6b-cdaa85de5af2"
        },
        "item": {
          "id": "eb6290ef-c7b1-402e-b160-f3ca35415d3f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ac2d6d9-e029-4b70-8da4-9877eb08b9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a0bd4-c43c-49c1-b75c-a468a65b5d10",
        "cursor": {
          "ref": "eacf2138-17b0-41a4-afdc-0388938ae045",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aa8e20e4-be3a-412d-ad42-2bb929077e6c"
        },
        "item": {
          "id": "a04a0bd4-c43c-49c1-b75c-a468a65b5d10",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "483fb23a-9560-4f2d-973a-dc9a6eead6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a80d60-99e5-482b-952f-a1d311b32160",
        "cursor": {
          "ref": "d27db38e-6b09-4145-a5d0-d8401a9f27e7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "18c4ee9e-7319-4e06-88b8-2e373a73f23a"
        },
        "item": {
          "id": "36a80d60-99e5-482b-952f-a1d311b32160",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2069ee16-85e0-404f-bd02-3ac7e3187c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c435c03-f2e3-4d87-887e-8eee0b1c1af7",
        "cursor": {
          "ref": "c7ea89a7-c10a-412e-b8ef-92073a371ba1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1213b192-eb0a-4fa8-997b-1887985a5c4b"
        },
        "item": {
          "id": "1c435c03-f2e3-4d87-887e-8eee0b1c1af7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "03bb7f31-dfe9-4a3e-bf58-ce49514d6144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ad60b-e0b3-42fa-ae75-e35e288edd1a",
        "cursor": {
          "ref": "14440be9-c64d-4f70-9400-4e49e262ac8c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "081636d4-0419-4366-9c81-b9bc7ee6fbd6"
        },
        "item": {
          "id": "ff6ad60b-e0b3-42fa-ae75-e35e288edd1a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1fbe2644-c07b-4707-bf4b-dfc6b162bda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca337a3-d03e-4962-bf2f-569365fde19a",
        "cursor": {
          "ref": "0f205910-c569-4208-a659-8fbfa379c63d",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "684dad28-c8b0-4384-aca8-f3214bce4eee"
        },
        "item": {
          "id": "eca337a3-d03e-4962-bf2f-569365fde19a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4cef971f-308f-434d-bfb7-ba1d916ae646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8fee15-6e40-4c18-9ad7-1ff560d2c152",
        "cursor": {
          "ref": "d909eb30-6817-4824-8078-738ecce50995",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "de0cceba-671b-4ffa-8265-f5da96c71bd3"
        },
        "item": {
          "id": "6a8fee15-6e40-4c18-9ad7-1ff560d2c152",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c59ee483-0be6-4eb5-8039-314488fd2213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5672c35a-b7e8-4cd7-828b-44c5e47db868",
        "cursor": {
          "ref": "f3d434f7-8fd3-489a-b6a4-ab212563961d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fe3166f3-3507-449f-a8bf-349993c92afa"
        },
        "item": {
          "id": "5672c35a-b7e8-4cd7-828b-44c5e47db868",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cdbab8cc-da6a-418c-a78a-a03730857777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fdf47a-42a3-4d42-aa52-dc21adb5d770",
        "cursor": {
          "ref": "aad3a7f9-e690-42ec-a8ad-d20a0752c644",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cb6ad0d1-821a-43ee-b476-708c085ed294"
        },
        "item": {
          "id": "c2fdf47a-42a3-4d42-aa52-dc21adb5d770",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "96564852-5c2c-4c17-93a6-38ccb256a64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4840ce7-63a4-469f-ab7c-13fafd77c6fb",
        "cursor": {
          "ref": "ed7310e7-a320-4246-8a9c-8e350a4f355f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c4559a0e-5773-40fb-a2fb-466e8b927a76"
        },
        "item": {
          "id": "d4840ce7-63a4-469f-ab7c-13fafd77c6fb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2dbecea8-25da-4536-8535-561ce17e06cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d70aea-d538-4815-a944-b1bc436ce3d6",
        "cursor": {
          "ref": "20fd13f4-3288-4b78-91d3-166a39943947",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5bc97df1-3f09-4745-bcd6-c57860f006df"
        },
        "item": {
          "id": "08d70aea-d538-4815-a944-b1bc436ce3d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fd068374-3258-4754-b632-2e357a350036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a7aad8-db5d-4b71-adfd-ac4304e02f98",
        "cursor": {
          "ref": "97415677-9b37-4d0c-ac80-6520a16adace",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6ddcca10-5b21-4938-b318-0643cc4184a6"
        },
        "item": {
          "id": "55a7aad8-db5d-4b71-adfd-ac4304e02f98",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba7f5785-cd7b-42c5-a746-093c2f5b0f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806bb640-87e8-4966-ad11-778aa6f8d87e",
        "cursor": {
          "ref": "fd029261-536e-4803-bc18-872919d55c4b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dcb3e8b2-b3cc-432b-be60-5e28069753e9"
        },
        "item": {
          "id": "806bb640-87e8-4966-ad11-778aa6f8d87e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e9bf2afa-e5c2-4fac-97d5-f44e38e2a416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580500a1-d164-411c-af86-cbe5cb22cbf7",
        "cursor": {
          "ref": "9e282fb1-d756-4d99-adc3-53345b0127a0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "20d03b5d-6a30-4fcf-b532-3a5d681e0f86"
        },
        "item": {
          "id": "580500a1-d164-411c-af86-cbe5cb22cbf7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0540315a-1611-4d12-8a75-7760ee514728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a823280-4106-41c4-88bb-260164a88d98",
        "cursor": {
          "ref": "121d076b-8532-416a-9be3-00b24b68d775",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "341fddc7-5f9d-40c9-b5fb-86f3a3d4098e"
        },
        "item": {
          "id": "2a823280-4106-41c4-88bb-260164a88d98",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fc1c07ad-abd7-43ba-9747-16b70a57151a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd459a2-7482-4fa9-91f4-f7617d297d3f",
        "cursor": {
          "ref": "59f7358e-34f5-413e-ae04-51099eb06dc9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "76abbef5-2708-4b30-892e-388c05b659cc"
        },
        "item": {
          "id": "9cd459a2-7482-4fa9-91f4-f7617d297d3f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "28f0c6e4-5e75-4bfe-b7e7-b50308fde028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c7f24-dbdf-4c19-8ef2-fe9854faeb5b",
        "cursor": {
          "ref": "460f2194-3911-48f8-840b-597a83d6c263",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7f6c6b93-8aa3-4800-b753-a12632f83414"
        },
        "item": {
          "id": "e43c7f24-dbdf-4c19-8ef2-fe9854faeb5b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "79f5f156-65b0-47c4-8e3e-d16a405db3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865e324f-db7f-4bcc-a354-7cc0ff57358b",
        "cursor": {
          "ref": "435f36d8-9cee-400e-a3b0-f86a0b651ac1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84e88d19-c877-45e4-9712-c358322c3722"
        },
        "item": {
          "id": "865e324f-db7f-4bcc-a354-7cc0ff57358b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99b2b064-81a4-42aa-83a8-b9471ffeca0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd700c1b-1474-4cd5-a235-9121825d8a90",
        "cursor": {
          "ref": "67afa48a-54fa-4361-a634-ae108aae6e48",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "89c9c120-1720-4944-906c-8c644d19b2eb"
        },
        "item": {
          "id": "fd700c1b-1474-4cd5-a235-9121825d8a90",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a2b3d4e3-c0b4-410f-9a99-d0fc829cc091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef2c48e-1cbe-44f6-92de-65f84e0646c9",
        "cursor": {
          "ref": "e42be957-1028-4ee7-97af-d0fc6f4459e9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db614618-15a8-4a2c-ab92-085b5f29c3fa"
        },
        "item": {
          "id": "aef2c48e-1cbe-44f6-92de-65f84e0646c9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "18f22af6-036d-4ff9-be6c-f4b8a655e742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c0e530-758c-44da-8279-561643333f59",
        "cursor": {
          "ref": "4f0b6e74-8f21-4eae-afbe-0716141febe7",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c4ee63bd-7fa9-4a32-9d6b-06d1988fceda"
        },
        "item": {
          "id": "d3c0e530-758c-44da-8279-561643333f59",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fdfb30f0-75f2-4732-9f7b-85eece0ef195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71bce47-39a9-4b10-bad8-6ab9b342d6b6",
        "cursor": {
          "ref": "38054b47-fade-4fc7-a9b9-9e2f6875e39a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7cef9bd2-3d9f-4057-8a3d-c6152180e795"
        },
        "item": {
          "id": "a71bce47-39a9-4b10-bad8-6ab9b342d6b6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c058994f-ed61-4f79-993e-e798ea8ff00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4853b409-9cd0-4be7-9227-0b0ff17deccf",
        "cursor": {
          "ref": "a23d9e23-2655-4790-822e-80a7e353b3c4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1bb0bcf2-cdcc-4d86-876c-e80140ce8469"
        },
        "item": {
          "id": "4853b409-9cd0-4be7-9227-0b0ff17deccf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9ae9e496-becd-4da5-a7c7-08ff8f3b037d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee653c7-863a-47a2-b781-de81cc79bc4f",
        "cursor": {
          "ref": "e7196fab-897f-4775-be62-6afc1fc08eba",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c2c8a6cb-d679-4cb1-9159-e7a0e4ccbfc7"
        },
        "item": {
          "id": "0ee653c7-863a-47a2-b781-de81cc79bc4f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05d95d7f-7172-4550-b3c2-3139799c497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ba4ec-5134-4449-ade5-78bd0e43ecd6",
        "cursor": {
          "ref": "2dfb8427-c1cb-4a7b-8e33-a1eec0903d44",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ffdbe96f-acd7-405d-aba7-a5717f454883"
        },
        "item": {
          "id": "d50ba4ec-5134-4449-ade5-78bd0e43ecd6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "793f9c8b-974d-43ed-a3f5-07400c94c3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9868e1c7-1cc3-4dd4-b356-91378ab36cc0",
        "cursor": {
          "ref": "d727deaf-db84-4349-a3f5-fb3812e45615",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f1111c60-ce23-475c-976e-48facfef4cd1"
        },
        "item": {
          "id": "9868e1c7-1cc3-4dd4-b356-91378ab36cc0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7de1908d-441c-4f8a-9e08-9f2e757253a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0ee5a6-6337-4dee-8f5e-27aa64feb1a8",
        "cursor": {
          "ref": "8efc33eb-93ed-4c8b-8a36-7f1925b467ac",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4d15df9b-c87e-4777-9bb4-4224f06246bd"
        },
        "item": {
          "id": "6d0ee5a6-6337-4dee-8f5e-27aa64feb1a8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f68fe88f-8285-447d-82d8-f4259d8aad79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafbab28-3edd-4244-88df-c613da429abe",
        "cursor": {
          "ref": "1dbe0227-96bc-47db-b12f-9d1f32b2ef43",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9ced086-7a30-4919-b0a9-549eeefd3ec6"
        },
        "item": {
          "id": "cafbab28-3edd-4244-88df-c613da429abe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3aa11b7d-1c3f-426c-8dbb-68f05da01890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2defb296-3480-4d0a-8265-73474257cc2a",
        "cursor": {
          "ref": "df8aebb1-45bf-4195-818f-407cc37ecfee",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1566d798-546a-4335-a471-f10b6978da43"
        },
        "item": {
          "id": "2defb296-3480-4d0a-8265-73474257cc2a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3bc49d03-8377-4727-b7e9-3019e04b9d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dd8e7d-8b70-4459-96a2-ee6d6bbcbea6",
        "cursor": {
          "ref": "b0902387-b309-4449-bbb7-402ff67564b9",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "93867e4f-6d99-4c07-b6f1-2b524502fe3a"
        },
        "item": {
          "id": "f9dd8e7d-8b70-4459-96a2-ee6d6bbcbea6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0140c8d3-87ee-4085-8742-30acf0cf68de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed54310-ebfe-4f32-b46d-387498210d64",
        "cursor": {
          "ref": "4d540cd3-a24a-469f-a62c-4576f7a13c92",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c5653c4-4842-426b-a7fc-9841f736214c"
        },
        "item": {
          "id": "2ed54310-ebfe-4f32-b46d-387498210d64",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f47414c8-fad2-482f-b172-6e23b77ee16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06ec6e7-9563-40b6-ab8c-fdac29a9e5c8",
        "cursor": {
          "ref": "449c48d7-d425-4f89-9b70-5bf6d9de8669",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "adba2bfe-7d2b-4ece-a5f6-6c43a38b0f7f"
        },
        "item": {
          "id": "e06ec6e7-9563-40b6-ab8c-fdac29a9e5c8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b7bbb9bf-462b-4e68-b316-5c68a6af3d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dd7c61-712a-47bc-b355-f489fefd0e8f",
        "cursor": {
          "ref": "0824b351-9b2d-4f13-abc4-2397edbd54b5",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8aeaad83-ac37-4e45-8b47-cd74c8492c7b"
        },
        "item": {
          "id": "80dd7c61-712a-47bc-b355-f489fefd0e8f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d7d41c48-597f-4847-9f09-4d6505aa8aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fcf1f1-be8b-4320-9255-234dbbded5b4",
        "cursor": {
          "ref": "cc1f35e1-b5a0-4300-b3bd-4cfb964aa2e8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "26686cf7-2d67-4f24-977f-9fc843603793"
        },
        "item": {
          "id": "13fcf1f1-be8b-4320-9255-234dbbded5b4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "874c1e04-9bbe-4439-b061-6c55a8cfcc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf0dd5d-b2cb-4b75-83b1-57b9e4b427a4",
        "cursor": {
          "ref": "5f51db9a-5a89-497b-be0a-29dfb3abae76",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c22cc80b-fba6-45d4-be6e-b1ee20410dbe"
        },
        "item": {
          "id": "bcf0dd5d-b2cb-4b75-83b1-57b9e4b427a4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f0297d61-7cd6-4d50-ac9a-1b4fae9bc81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b7979a-55b5-4c53-89a8-ac00ab8a9812",
        "cursor": {
          "ref": "f1ebbdba-dc50-45df-8123-0b99b2fb0065",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b056295-c431-4e6e-aebc-9f03fe55d194"
        },
        "item": {
          "id": "b8b7979a-55b5-4c53-89a8-ac00ab8a9812",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "42d31d30-0ea2-44ee-9752-9bb3178b1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a3b109-7858-4f1b-ab28-38f32d9a9724",
        "cursor": {
          "ref": "dd192de2-4014-40d2-807b-1a23cea411e3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "20731f4b-3470-4313-8d3a-b2fbfe42dcde"
        },
        "item": {
          "id": "03a3b109-7858-4f1b-ab28-38f32d9a9724",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a809de1-210c-407a-9ed7-a0485abe6e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74f5cae-f1a9-4877-8277-f4b1a0f0f47a",
        "cursor": {
          "ref": "5612e0b9-f739-4225-be61-fe69084ef8f8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1fa2f566-044a-42d3-ad21-5944d1c7fd1d"
        },
        "item": {
          "id": "d74f5cae-f1a9-4877-8277-f4b1a0f0f47a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d766f5ed-846e-4dea-91c6-76c0aef2921e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5e5c41-1dce-4442-be1e-3fe657475a8a",
        "cursor": {
          "ref": "cb15f64f-507d-45da-8835-ebe334639604",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "921740d5-a2b1-4fac-92d9-a6388dc4f905"
        },
        "item": {
          "id": "7d5e5c41-1dce-4442-be1e-3fe657475a8a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "db76d83b-4c19-45d5-b14e-65956dd7a24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a03ff6-b83e-4578-895d-28ea23b0e5fd",
        "cursor": {
          "ref": "1fd11621-f1f1-49b1-87ab-6cf74b313bd6",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f93d6d31-d784-4049-ad10-6184df3efe82"
        },
        "item": {
          "id": "43a03ff6-b83e-4578-895d-28ea23b0e5fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd258d28-e900-450b-b8b6-a2cbfd97df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308792bc-b69c-49b1-a3dc-a605f519beef",
        "cursor": {
          "ref": "bc53354b-283f-4791-8040-2da064665454",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9a6d6e56-b012-4489-8293-511686d82583"
        },
        "item": {
          "id": "308792bc-b69c-49b1-a3dc-a605f519beef",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2f45e09-22e7-4b6c-bdb7-b770e5f2dab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a83df6-7a56-4afa-9e54-8e10bc62a930",
        "cursor": {
          "ref": "44224140-7a39-45e3-8c40-3ef6aa792264",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0d789516-67ab-4797-87b3-bf9380e1b4d1"
        },
        "item": {
          "id": "e0a83df6-7a56-4afa-9e54-8e10bc62a930",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f9749a69-bb28-41ec-969f-78e559d78d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4eaa5b-0a1d-4da4-8098-4478e70c9eae",
        "cursor": {
          "ref": "f68b6a60-308d-45c6-b362-123f297e1a24",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9385e536-4126-4843-9059-11b7145dd1ab"
        },
        "item": {
          "id": "ae4eaa5b-0a1d-4da4-8098-4478e70c9eae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e2a99ff6-acbd-452c-a610-823b828ce953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ad84f-9168-438a-a5b7-9bf8467b8a79",
        "cursor": {
          "ref": "10ba5d90-2ab6-46b3-9a00-1ea2c0a7756d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4de187e4-8dad-48f1-a1c9-d27630c720e7"
        },
        "item": {
          "id": "497ad84f-9168-438a-a5b7-9bf8467b8a79",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0b127821-b8c6-45bf-b00d-ead9a500d8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b1119-662a-4aaf-8b38-a36bbea47d7b",
        "cursor": {
          "ref": "877264d3-3b53-4959-bf34-e744d9397765",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6459c7cc-f08b-4f5b-aea9-905372df354d"
        },
        "item": {
          "id": "ab3b1119-662a-4aaf-8b38-a36bbea47d7b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "00bd1dca-8ace-4ff1-a28b-23b6c7289da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29795b66-cfae-4bf0-891e-54d7271ae347",
        "cursor": {
          "ref": "b8301e5e-4959-4bf5-b750-72e28a1be134",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "82356d93-3d03-4d43-905b-27e0e5a3f49c"
        },
        "item": {
          "id": "29795b66-cfae-4bf0-891e-54d7271ae347",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c964b5c5-b6ec-4ce0-a9f6-b1419a6c6f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3ee976-46ab-487d-92ae-1b9e2251d58b",
        "cursor": {
          "ref": "8bfbc7e2-885a-4e76-90cf-84bbfc72992c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b01642d8-8b80-4003-9150-730d9f2ff238"
        },
        "item": {
          "id": "4d3ee976-46ab-487d-92ae-1b9e2251d58b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0e301dfb-5e6c-4fc6-9864-22b303e210b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240fdc45-4f8a-40eb-bada-9a52c45eaae1",
        "cursor": {
          "ref": "0a44cc97-d650-4767-8b68-d323ada26498",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2107557e-ab64-43e6-804e-f8ba3a253a60"
        },
        "item": {
          "id": "240fdc45-4f8a-40eb-bada-9a52c45eaae1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cb39062a-62e2-410a-b050-3d6f916f28e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4810fac-e4af-4e19-955b-fc0301c30c29",
        "cursor": {
          "ref": "b8b4aa68-0c93-4085-bce1-ba3e31ceff60",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "19413aa7-a2cb-46c2-88a3-436044fac317"
        },
        "item": {
          "id": "e4810fac-e4af-4e19-955b-fc0301c30c29",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b7e9728f-335e-4292-b37e-c5149dd39e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faeae7a-469b-40e8-aa5a-10159b0cf97f",
        "cursor": {
          "ref": "9c2f85b5-dafc-4bd6-82cc-37128424fc2e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f2d50a78-37fb-4d2d-a666-90c64f486282"
        },
        "item": {
          "id": "3faeae7a-469b-40e8-aa5a-10159b0cf97f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "31b2b397-3605-43e5-ad19-f456bc0db35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b656093-50bf-4f45-b6e3-f40b1d37de1d",
        "cursor": {
          "ref": "f2ed2598-ac35-49e8-a5ee-8726b29166f5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d66a22d4-0fe7-457b-b8da-28905af7bd3e"
        },
        "item": {
          "id": "0b656093-50bf-4f45-b6e3-f40b1d37de1d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e04eee7-2747-4ea0-a4c5-8b9f488d24af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73db5b1-51ea-416d-be0d-134e3de212e5",
        "cursor": {
          "ref": "e440cf4f-0f14-4c8b-9e47-cdad56edc4b9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "df8918ef-5ecb-40e2-a531-2cf83cc7022b"
        },
        "item": {
          "id": "a73db5b1-51ea-416d-be0d-134e3de212e5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aa44521a-92c5-453b-b153-4685325c74f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a62ba24-b323-4dce-9aa6-c951263e4d8d",
        "cursor": {
          "ref": "107af693-0372-4874-9e7b-bbdd6eda60aa",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ff27f1a1-9d24-498f-b4c6-b93a364fa4f9"
        },
        "item": {
          "id": "8a62ba24-b323-4dce-9aa6-c951263e4d8d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8031fff-9546-4e4a-ae32-7691ef3eb25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4350f60-0177-4642-9cff-665993ff8978",
        "cursor": {
          "ref": "1984eba0-ed25-4b67-ae5a-ed7b31085092",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1d07dcc8-6444-4524-9e96-33ecbf8578f3"
        },
        "item": {
          "id": "e4350f60-0177-4642-9cff-665993ff8978",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4075943d-e21d-4ed2-873c-3d158fcdb217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842e27a9-6389-4bcc-9ade-b871403b03ec",
        "cursor": {
          "ref": "705c5c3d-8439-46fb-883f-541fd55f1c76",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb9d2639-b363-411c-a675-418a576ab703"
        },
        "item": {
          "id": "842e27a9-6389-4bcc-9ade-b871403b03ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2b4c44ac-0324-4231-9f8d-8751b9453b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097c77a0-9c22-4fa7-a5ad-5d53f35d9347",
        "cursor": {
          "ref": "3a529fd1-fb61-4299-81c3-264cd4fa9b48",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77d9f347-8dcd-4954-9722-281e3b48e8b2"
        },
        "item": {
          "id": "097c77a0-9c22-4fa7-a5ad-5d53f35d9347",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "67fc55dc-9356-4d59-bcd6-ba252bb47702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f038b52-2e34-40cf-81f1-60b3d0e89587",
        "cursor": {
          "ref": "246edb11-9250-4066-ba8d-a173aa096701",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2451965a-1073-423d-80e4-47fe3d4ac19e"
        },
        "item": {
          "id": "7f038b52-2e34-40cf-81f1-60b3d0e89587",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e414d2e-daeb-4e5a-8a89-94b0e436dbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f356c5ba-74c4-4df0-ad63-6cf021bc58b6",
        "cursor": {
          "ref": "5703b4e3-8c7e-48ac-aa90-065b0290e1b4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dd266f02-9fb3-4412-b1b0-0cf8d9bf9e76"
        },
        "item": {
          "id": "f356c5ba-74c4-4df0-ad63-6cf021bc58b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "34c1fe10-a8f3-479d-8248-7da6c0045d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b8945-a886-4e33-b3f1-1dc1c4cbdc4b",
        "cursor": {
          "ref": "0ab2dbbc-5865-4e59-9aff-936fbf0c1a7c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "27420785-802e-4db7-9092-a2221e6e87f0"
        },
        "item": {
          "id": "530b8945-a886-4e33-b3f1-1dc1c4cbdc4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "efc145c6-d778-447a-9f92-d8e74df30eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d4936b-a2eb-4e0f-988a-4952b39c3ffc",
        "cursor": {
          "ref": "de332e06-d42d-4538-9fca-574a7cd1ef55",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "14d026a0-bcb6-49b2-a025-6ebbd100d18a"
        },
        "item": {
          "id": "c0d4936b-a2eb-4e0f-988a-4952b39c3ffc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c65f8f12-0ba0-4fe7-87c2-b1d9ee3a348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf51e7fc-fe4d-4545-8877-8679e77a1dbc",
        "cursor": {
          "ref": "9bb1e34b-cfaf-4c74-b30c-59b1b13968a5",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "60ccf50c-ffba-421d-8fc3-9d4a7c267678"
        },
        "item": {
          "id": "bf51e7fc-fe4d-4545-8877-8679e77a1dbc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6585d1a1-bef7-44df-b8e2-8ee99de3497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b214342-03cf-40fd-a113-329f030f0d0a",
        "cursor": {
          "ref": "af53443d-710f-433a-ba71-e198e23283ef",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "557d47af-dbe1-49a6-a54d-c47e659ab202"
        },
        "item": {
          "id": "8b214342-03cf-40fd-a113-329f030f0d0a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "30b5b19e-d666-495a-96bb-6926e93a0548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb701f0-2fd8-462a-a05a-bb503ed0471a",
        "cursor": {
          "ref": "230685ec-4217-45b5-b6db-0897af472989",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "507e31ca-b238-4159-ba81-d44e551d838f"
        },
        "item": {
          "id": "1bb701f0-2fd8-462a-a05a-bb503ed0471a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c935d902-0e05-46b2-b0c2-3dd17a983915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c5d963-1921-4797-b1c5-867f4710d40e",
        "cursor": {
          "ref": "051f4af1-e042-479b-9fa8-72400382dd00",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46e5694e-564d-4c49-9bd1-ebe880bd32d9"
        },
        "item": {
          "id": "55c5d963-1921-4797-b1c5-867f4710d40e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "81e7d430-6b01-4ca2-b7b4-d8561472acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e2334e-2747-4263-accc-64ce58b6a754",
        "cursor": {
          "ref": "4327a797-7803-4f8d-9d85-bfe2bdaba706",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f623c190-22c2-4001-aa14-0f0af1708a55"
        },
        "item": {
          "id": "65e2334e-2747-4263-accc-64ce58b6a754",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d225ea0d-220e-474d-9086-9d06ccbdb039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402690b2-fcb6-484e-ade0-761e1d0eedbf",
        "cursor": {
          "ref": "ca51ef57-db56-400d-adf0-8b82fd297fa6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "26571ec2-c564-4dee-aa20-41bcca780f9b"
        },
        "item": {
          "id": "402690b2-fcb6-484e-ade0-761e1d0eedbf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7f9d28a-acbe-4eac-819d-9258490f548a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b08b72a-6254-49ce-b851-901d7678c022",
        "cursor": {
          "ref": "363d9aaf-1060-48d6-9ec8-a800feb6b010",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fbe3e85e-4947-4f70-8094-196c2586a571"
        },
        "item": {
          "id": "4b08b72a-6254-49ce-b851-901d7678c022",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "72d0235c-e581-45d2-98cc-0508842441f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca13633-2653-418c-a00d-6f80b049bd44",
        "cursor": {
          "ref": "ed02270a-868a-4643-b9cc-ad10395fd3cc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68e083ec-d7f7-45a2-87ba-8c4d1589d1a3"
        },
        "item": {
          "id": "bca13633-2653-418c-a00d-6f80b049bd44",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2fb59487-9134-420e-93b2-f0ceea3efd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e073b5-3b04-4afc-9322-45a5863c654e",
        "cursor": {
          "ref": "bf188489-1488-4198-8536-91cd83eae7fa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "42e5d947-57a1-45c7-ae6e-ea638347b548"
        },
        "item": {
          "id": "04e073b5-3b04-4afc-9322-45a5863c654e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bcbb65ab-0c65-4f53-b8ed-79dd5aa98204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b48fb-b52d-4b78-92be-9e9808da2650",
        "cursor": {
          "ref": "55924687-3ea7-4593-a8ed-53144eaeb6cb",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "47fcb0a2-7ce5-4982-a1b5-ad10c78ee422"
        },
        "item": {
          "id": "6b9b48fb-b52d-4b78-92be-9e9808da2650",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1e8c881c-af34-4d4e-a902-f0bd5f7a6568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5dc464-eb76-4768-8653-ae05e6751f18",
        "cursor": {
          "ref": "0f228d00-6b14-4780-b7bb-971073001c9c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8355b58c-daa6-4130-bbe1-6c4d128091f0"
        },
        "item": {
          "id": "9e5dc464-eb76-4768-8653-ae05e6751f18",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "139e1cdf-4e1e-4665-8957-891a55189e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0934a-efc5-424d-bf78-07b7bed5a5df",
        "cursor": {
          "ref": "0f1efae5-3080-4a18-8342-2b8e0ce7137a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ab9e3f2f-e3fe-423c-a6ea-58e1a18f2063"
        },
        "item": {
          "id": "b9a0934a-efc5-424d-bf78-07b7bed5a5df",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ed0acd3-83a4-4065-848f-8816037fbc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45055fc-d71f-4968-9e8f-a5abb99b3f85",
        "cursor": {
          "ref": "5abef586-a4f6-465f-bc59-b63f07e9cee3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4cdba040-8a21-41d3-aa83-4293e359f8de"
        },
        "item": {
          "id": "a45055fc-d71f-4968-9e8f-a5abb99b3f85",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "67e91908-286f-43a3-97a4-f5d5f3fde88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8b3b70-63f4-46d8-a403-f24feb3db27b",
        "cursor": {
          "ref": "bfbc5437-6803-404e-83a6-06bb37480250",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2eaa8f82-fd42-4f81-852f-d5552987b894"
        },
        "item": {
          "id": "bd8b3b70-63f4-46d8-a403-f24feb3db27b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e8ed3c3-3651-4b7e-9cba-a1460b52b629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23cd7b-dd90-49ec-8bb2-fc3cc002ab70",
        "cursor": {
          "ref": "c6123c07-681e-47e7-a152-a1d191f2b527",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0384ca0f-aa54-4c54-aee3-1a89d890576c"
        },
        "item": {
          "id": "4e23cd7b-dd90-49ec-8bb2-fc3cc002ab70",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a6b97871-8325-4b36-95b7-5c3ba622d818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b1df8-a3ab-479f-b9ce-7f4853bef3c2",
        "cursor": {
          "ref": "78b1216d-42b2-42bc-8bf9-4aa1190cd442",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4f746eb8-30c0-4079-85eb-93d99c111ce3"
        },
        "item": {
          "id": "235b1df8-a3ab-479f-b9ce-7f4853bef3c2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c792f866-2331-403b-a17d-088219eb5bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daed25f0-6554-415e-ba3c-5b139e70490f",
        "cursor": {
          "ref": "57090327-d448-4092-a9a4-18d1dfdd3445",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1ec123f8-83bd-48d8-af8e-1a8dedc11f24"
        },
        "item": {
          "id": "daed25f0-6554-415e-ba3c-5b139e70490f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "88941ed0-d616-48e1-bd5c-1727b587f087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22c9149-07bd-47e9-b587-5c3ebe0daa50",
        "cursor": {
          "ref": "9d2127a2-b1e3-432e-ba43-02067634757d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "21a61733-e3dd-45d1-918e-ed1d0975335d"
        },
        "item": {
          "id": "e22c9149-07bd-47e9-b587-5c3ebe0daa50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4a321bbb-8615-4110-aa44-9645e0026c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5399b1-23ac-4511-8157-b93bc10ed722",
        "cursor": {
          "ref": "569a1ccd-78f1-4969-9aca-f25f5bc0262b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ef356979-8500-42b4-ba14-fb3dfcb319a3"
        },
        "item": {
          "id": "6e5399b1-23ac-4511-8157-b93bc10ed722",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1972b9f1-c63c-443f-9215-0eb4749b4c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f91ff96-2976-4196-b1a9-82dde36a316a",
        "cursor": {
          "ref": "a88ee104-74e7-4f3f-bdbb-90a47bad0088",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fd290e68-4610-4a31-89f0-126748725d7b"
        },
        "item": {
          "id": "6f91ff96-2976-4196-b1a9-82dde36a316a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea6f807c-ff3d-473c-9e9d-4d7d1b80d728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844e9ee-2720-455e-826d-545d79b1d372",
        "cursor": {
          "ref": "bfb30294-88f0-4321-95ed-d2b22f5de433",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ad2982bd-ae7b-4b54-be1c-b2c2296279a1"
        },
        "item": {
          "id": "5844e9ee-2720-455e-826d-545d79b1d372",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "033fd941-3594-4377-925d-81b1f5ce45f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da825710-8b1a-4b61-b4b2-b2bbf5adcd58",
        "cursor": {
          "ref": "aa96f4d0-013e-4c17-870e-ad9a8407ff66",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fcc7c3ed-4c9b-4ce1-8fe5-77540fed1c5c"
        },
        "item": {
          "id": "da825710-8b1a-4b61-b4b2-b2bbf5adcd58",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "34387fd4-2c5a-4033-97fb-9d6bf4453bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e053af7-1974-4669-84ef-3a9b87c41685",
        "cursor": {
          "ref": "b5434d17-3de6-4b54-81af-7895caf5e1f1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0fe3a582-93fe-442c-8750-30d9e5a197db"
        },
        "item": {
          "id": "1e053af7-1974-4669-84ef-3a9b87c41685",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "53127bd4-3a1b-4f42-82a0-e90035a32722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99e2471-5687-45c7-8206-8fe428cb51a3",
        "cursor": {
          "ref": "7d276b0b-926c-47b4-8d46-bd722fb343e9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2488016a-808d-4f77-9153-956c22a6c50c"
        },
        "item": {
          "id": "d99e2471-5687-45c7-8206-8fe428cb51a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce0e515a-88a3-4e33-8c96-97d8b70d3b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b1eb8e-443e-4cb0-8738-480364749eca",
        "cursor": {
          "ref": "987c9e6a-a6c8-4c47-bc55-83275f60b31a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1daf79c6-75b4-45ca-a40d-78539d7c0ecb"
        },
        "item": {
          "id": "c6b1eb8e-443e-4cb0-8738-480364749eca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "19952b8b-5035-40e6-baf3-80e04b25def6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8086ed-fdd5-419b-a149-fe866c1a94a9",
        "cursor": {
          "ref": "41d4455f-0331-4219-b939-0ad2ed0062b9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cfaff337-8660-4be9-a287-bc4fbc3bb9be"
        },
        "item": {
          "id": "ce8086ed-fdd5-419b-a149-fe866c1a94a9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e2c2dd79-6eec-4d9b-a116-4c4847512760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6e9a4-721a-4ffb-8601-9b76ac155468",
        "cursor": {
          "ref": "e5bbe163-cc41-4dd5-ad9b-a8485ce259b1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "428d92c0-c673-4c46-85e3-154d5d38a7c0"
        },
        "item": {
          "id": "33b6e9a4-721a-4ffb-8601-9b76ac155468",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e189f0b9-897d-47ae-b8ac-7634d4a41c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedcc3e1-c2f8-4a44-9451-0b01e42d211b",
        "cursor": {
          "ref": "132f258f-693a-453a-b2d7-a699a825646e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "34553e88-8298-4260-a1ec-0ad3805bdff9"
        },
        "item": {
          "id": "dedcc3e1-c2f8-4a44-9451-0b01e42d211b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b7534c6a-3158-4e23-ba40-a3819b2929b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a994fc7c-d10c-4d5e-be61-441f39323c2f",
        "cursor": {
          "ref": "27f131de-24a9-442e-a3bd-e1d11e51041c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3adb261b-070d-4bb4-8021-bfebb1477b47"
        },
        "item": {
          "id": "a994fc7c-d10c-4d5e-be61-441f39323c2f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12493e41-da6d-4843-bcab-4b870cfec3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc4788c-34e8-4911-a1d4-88cc74d3249b",
        "cursor": {
          "ref": "c76318f7-d181-4dd2-b003-eee2b0df7ea2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0a564715-c2c8-4f77-bf96-c3ec94ee9087"
        },
        "item": {
          "id": "cbc4788c-34e8-4911-a1d4-88cc74d3249b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b60d7243-ef4c-4d1e-9611-94f548e0c9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34750743-bfed-4ce4-abff-68d486db3db4",
        "cursor": {
          "ref": "c432f246-189d-4d3f-a9a5-67110de8a0ba",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fa15fc87-0096-42af-bb9f-2425d4d63ce5"
        },
        "item": {
          "id": "34750743-bfed-4ce4-abff-68d486db3db4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0a01122a-c41a-4790-9d06-155ec7a478d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e2389a-d381-4484-b5e1-fcb3a7a653f9",
        "cursor": {
          "ref": "a916a4bd-4578-48a0-bf00-35431403bafc",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3f659936-7c24-4c4c-a8de-c9c5b5bc0c44"
        },
        "item": {
          "id": "15e2389a-d381-4484-b5e1-fcb3a7a653f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2a08307e-80b5-4be4-82f8-4ce5275f5414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd60141-73e6-41c2-9cc3-20f35d0b4009",
        "cursor": {
          "ref": "f771149c-4d99-4ed8-81da-b294566b6147",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bb963c4a-b4e7-4f9b-8abf-449a701dc303"
        },
        "item": {
          "id": "3bd60141-73e6-41c2-9cc3-20f35d0b4009",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d82abbc-9e9b-4278-b972-c16aa92cfa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c87cba0-4adb-400f-a205-fd0f9c7269d8",
        "cursor": {
          "ref": "c6b5a0b8-757a-4da5-9076-97ecd59e1292",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0168a668-71c3-4cdb-9144-8b5842f0ac13"
        },
        "item": {
          "id": "6c87cba0-4adb-400f-a205-fd0f9c7269d8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f64acbf8-3237-4357-8ade-301c4e51a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e863885-aef6-4255-ab26-235e25e22fb2",
        "cursor": {
          "ref": "e2c43844-dd49-4e61-8d6b-18638b4e19ee",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f9c77437-635e-40cb-8fb4-26e7af8bd96c"
        },
        "item": {
          "id": "7e863885-aef6-4255-ab26-235e25e22fb2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "04056296-53bc-4f7f-8f5c-d0aba0221f40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5450e187-ac13-4c48-b14c-a2f12027ba02",
        "cursor": {
          "ref": "628106ad-d996-4e0c-8d89-d432e3a4c1ef",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cc9bc05b-0fd6-4283-b8b1-1c80c84c4910"
        },
        "item": {
          "id": "5450e187-ac13-4c48-b14c-a2f12027ba02",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "563b84cf-699d-4178-9ab4-34ffd316da5b",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51b8e16-376b-4b72-b017-77f0b771b47d",
        "cursor": {
          "ref": "ea3a8b1f-f873-4afa-9d7f-9e1caf675fef",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7afca360-6b7c-4654-a05c-937ef4f37f9b"
        },
        "item": {
          "id": "c51b8e16-376b-4b72-b017-77f0b771b47d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1e340576-5b86-4664-aac7-f3fa1371ed8e",
          "status": "OK",
          "code": 200,
          "responseTime": 1701,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05cbaf5-2d59-44e9-8d23-ae32d1ef87e6",
        "cursor": {
          "ref": "a428c853-5a59-4d3d-8752-dc1888f2101e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b88e152c-9fca-481c-80cb-d9dfe4ef6c45"
        },
        "item": {
          "id": "c05cbaf5-2d59-44e9-8d23-ae32d1ef87e6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bb631ae9-acd7-4e36-ac4b-4dcacf63989c",
          "status": "OK",
          "code": 200,
          "responseTime": 1604,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e275f22-5f0b-438e-81ea-c7944619afff",
        "cursor": {
          "ref": "7047365b-8512-4e97-9237-781d81d27028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae619e39-7edc-4efc-a055-a4b07582bbde"
        },
        "item": {
          "id": "9e275f22-5f0b-438e-81ea-c7944619afff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ad993fe4-aeb0-46dd-bd45-0c0c733a6c0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e275f22-5f0b-438e-81ea-c7944619afff",
        "cursor": {
          "ref": "7047365b-8512-4e97-9237-781d81d27028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae619e39-7edc-4efc-a055-a4b07582bbde"
        },
        "item": {
          "id": "9e275f22-5f0b-438e-81ea-c7944619afff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ad993fe4-aeb0-46dd-bd45-0c0c733a6c0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec1a1f6-d939-4a8f-9780-86b5652a4b65",
        "cursor": {
          "ref": "c5a139f7-df11-47fa-a6cf-f9f3e6463d9d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a0bf4f6b-7394-49de-ad67-734139f46c5e"
        },
        "item": {
          "id": "dec1a1f6-d939-4a8f-9780-86b5652a4b65",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0bc76d10-d0d7-4ca8-a8aa-c52b932129fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b3965c-77b2-448a-a522-98e563daf1cd",
        "cursor": {
          "ref": "857f69c1-e188-41e5-b085-b6d0c3cc77f7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4aa3151f-b8f7-4107-80a3-c23a97daf5f5"
        },
        "item": {
          "id": "60b3965c-77b2-448a-a522-98e563daf1cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "90c9875d-fa2a-47fa-9e8d-f386ab3b671e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}