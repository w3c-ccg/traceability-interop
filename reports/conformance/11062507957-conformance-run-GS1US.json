{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c82c8e8-1a99-4249-8438-089f91dd1346",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b455c4ac-82f4-4cb8-a18d-03dcb91ea514",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11bf909a-2d47-4bd3-bcf5-3bbcd7c342fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a58e30c-7428-489b-97f1-3cc5497fe881"
                }
              }
            ]
          },
          {
            "id": "740a2443-5416-49a7-be2a-e2b135213027",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d12fd07f-02b6-480c-b4b7-dea9413143c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a73be077-ba77-4ff4-95af-a841cd053ac5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "38cd3f2a-9eb7-49d5-8511-04a4d2f24fc7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c75c734c-33a8-4cc8-adf4-2dad6734ee7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c17b28f5-f440-4768-a15f-152149bea42c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f30d93de-1604-4f35-9701-251dc96ed5e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4abc45c-7100-411f-bb65-f442952754ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a50f6f88-683b-4f26-bf92-7f3bca57af32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb7d94a3-a1bc-458d-b659-19da6ac5c4b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8804d645-41e5-4ad4-95db-8888f2eced0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf383668-5da2-45a2-9e0f-2f9d52a293c7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a3b4626-6a47-4965-8c8b-4c5b510c1d02",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "74e229f9-dbf1-41d7-85bf-a4e9cb8115b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "153a746a-0828-4978-a942-1c9cef9659e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ebeba99-916b-440f-b846-a01125170769"
            }
          }
        ]
      },
      {
        "id": "f97dc50f-1766-4296-854b-809465650bc5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "43164497-9027-44da-90d5-379326850f00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdfb0188-084e-4502-8159-6d8927016910",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ea734a7-c0dd-4057-8b14-5eae4788f4be",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732beb8-45be-4442-b69c-88b4d8ddb573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bbf1328-346f-40e8-ae70-8f4fa7473417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923ce6f7-b358-43c8-98cd-2f4c6129228f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22f6d3f-d339-49ba-8c14-be17de432e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e92758d-da50-446c-9679-bc54dc19bc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869fbe93-877f-4c58-b984-2612b45fb786",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b92e970-07aa-4d60-a3ec-982a9ba679a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b522f44-9d19-43e4-a8d1-f73000dfcca5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbed6b44-8789-411c-9a15-44ba023460ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f26728bf-c078-41bb-9fe6-b38c36b6978a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2239fb-167b-47d9-b3aa-6c58078490ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bee51fe-07ab-49e4-a2a6-1396eb1a4fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f0be1a-c04f-4da6-b7d4-fb44f7cc1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae176fef-a060-4b69-a015-0252fb48bee4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4ee60e2-3c82-4589-a4ab-ebcaab04a18d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "962d93bf-3e30-44c4-8f7d-77d0c1248a35",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b77aa52-f742-4b84-86fc-8c1eee8946f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6f8013b1-7c21-4028-82fb-27f1ade22651"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef6037d7-c164-4544-8bb7-9fef049de6fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "14d92d23-9362-40d5-8f48-e1f8a833885e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e571fd7-762c-4c3a-98d9-85dcdfd912d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d91cee4c-3071-4056-908f-d5ac68a31229"
            }
          }
        ]
      },
      {
        "id": "c0b920fb-2f46-40a8-a0dc-823f687e0ce4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4b969fd-fc91-4e6b-90a8-a0e1d4873eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efb8a8df-101b-47dd-83e1-678d302ecedb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7720b8ab-acfa-4251-898a-7e2775fd2c59",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da371ac1-afc8-41d5-93eb-34dcae25ea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342b3ec0-16cc-440f-804b-fc5c97483666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc4b7d9-0485-4c77-ba96-71e8f728a7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a9ff82-9567-4029-a329-87bd4b1aac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda25ebe-49cc-40b1-a667-99c55bd01588",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d2608-a2b6-409e-99f9-8a4266ddfb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e2684f-1efc-46c6-acf1-e07d8ae9f73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d58eb07-1179-4d3b-84b8-787f2c0e1ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195bb1fe-77ba-4ed5-8e3c-715cedee481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da478ef1-b917-4d0e-9ebe-eda58dab4c23",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005c71c8-fbfe-4b1b-8156-9e108a79ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f56f171-0e26-4f58-990e-6cc012cc6a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706194f4-280d-44bd-9db4-1620e0a1f147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baec79d4-0199-4a89-86a1-258dbe2ee626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f9c6a9-cda9-4b16-8991-c0b63e245ee6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea3d6b6-56d1-415c-8088-c96996c0c644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c85f54-3938-4ad3-889b-921cdd7425e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca45bbe-d5bb-434d-a16c-cf34f7e0e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d73cb16f-4884-44d9-b75b-9146f9c11397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6ef0ef-761a-4cfb-9417-7c7704bb0ea0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f9dc77-1d9d-40b1-89e6-553f4ec76b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94345ea8-cd0b-49f5-b1fd-ffa578ecd55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6033b0ee-f93f-4f26-a36f-7efa7afd9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6ae0b13-7dc8-4471-9042-8de6b5f1d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1de94f6-cb78-4e9f-bfbe-7fa7c760e49a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e1c8ea-cf55-4aad-8a53-ea75a2a225fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810e41db-9a6e-4e44-8680-edea95fef09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26351e1-daab-4a1f-8fb0-c0f9c3f97a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d8f2cb-0a74-41b3-befd-db1bdab629d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a6e900-5813-4b15-a290-790a5fe36295",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76e15db-51ac-463c-8733-27eaf17c37b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af8aa92-590e-4a8d-9b9f-6b68d615894e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784eb4f-7c68-43ab-a5ae-601b5ff7a158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8af8d7-8d9b-4538-a81c-b9a1fe28da50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9227f0d-4872-45cc-b3ee-9afcb6322278",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f83a4c1-ed7d-4ff1-b4f0-5956b2ac33a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01720c9f-f8ed-4706-85aa-b8d290779566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65368850-8623-4749-b80e-24a5cc0082b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e27c646-9ace-4437-b6a7-3d74d39bec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d971932-59c2-47ca-abf9-30dbb6ce15db",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af44faf2-ebf0-4424-a857-aaa8db953e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6ce4ff-6df1-4ba0-899f-f2459fe70368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c394b52e-37ae-4fb6-ac7b-0d47e0705412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af9e0dec-7c72-4982-a26d-823029a9e773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbcb887-5bb1-4360-9fd2-e6f34cd8320c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f329e9fa-cd7d-4289-a9f8-098ba55b7c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f76494-c3b9-4f39-b7d7-4a3af79dfb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45359858-5797-4a22-be30-936d19205ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec9ef7f0-9792-4af1-9eac-5155fa93a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0f11a7-ead5-43b4-bc63-2401cb1be6b2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eed2f3-78b4-4ff4-a82e-56891fc69bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a880b9a5-3408-4ef3-aece-82725e21dd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c921a54-96d3-471b-81a5-0f7652ae963d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9edb1d8-4b19-4f15-bd9e-433d1e199714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68f80d-37bb-444d-ae07-8a2a51e3b4fb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10599e8a-7349-4b8e-a91a-e66d5f663daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8795fc8b-6ae1-43bb-8427-12e8b2de335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b039afcb-9bb2-44d1-ae22-d315bf5de611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "019165c3-5614-403e-996b-2a64af4c23b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30426ece-6174-4965-a238-ffbb2962fbe0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a4c5b-83d2-474a-a41f-3e695cae9f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c615f6-36fd-43c3-9039-d5b3bdd19985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69325e9-202e-4007-89a1-aa01121540dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78d8c53b-fe70-434e-8c31-71c4a670b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28aef4a-18a8-450c-a3f8-99c9a10e8a82",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9775b253-9a06-4a55-87af-d5f3692eb6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677285ab-dac1-4a35-aef7-8fe967ad3b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b30bf07-8940-46de-abbd-0fdec497dd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f371d54e-5ce1-4bf7-9c49-60dbd8a7e05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811fc960-5ed6-4613-b706-ebfac341dfc8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c2dc64-f672-4941-afdc-b62d323bc5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c3066f-0114-4488-a529-05df1f5f0f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d5342-d6f9-4e29-b091-0fc49c16a216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61a3b4ea-d0b5-4b42-87de-b0af20792bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebb5b77-2cf5-4f55-9f48-a5e4ea7140e1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5917882a-c835-4c63-83b1-d82a392c2143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdef53aa-8de1-4d3d-b97d-791954d5331b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f837fe71-b670-441b-84f1-cff7324cf9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f135653-d537-40de-9a84-1baa3e5bb1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9175301e-c976-42e5-b9bb-bbd879ae19f7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb62999-a2ef-4f2e-a9df-0414a0540a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04602513-27ad-4e11-938b-56edb45fd9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a6f99c-7fb0-4207-a053-a55db683c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d55eed2a-f75a-4c9d-9247-63d5f249d41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d754682e-f48f-43a9-aaf9-64e2a7350e59",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e2428a-7dbd-4b11-b1d0-3df81f0a190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a348beaa-8306-4922-baf2-f49ce308c2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd5a97b-8439-4f39-a0f5-24cdbe20b34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "322b2b42-813c-44f3-8140-116c8dbdf153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63718952-2f76-4eb3-baef-be74a480fe29",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145fa7f1-c17a-4829-bff8-17864c6cc5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb507e7-01be-4aa1-8927-41ca647e04e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113ed367-d22a-4e69-9bdf-6977125aefb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4b0b6b-68a6-4a15-8652-620570815e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d73b35e-c605-4aeb-a424-ca7ed56f5dbe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af99ed51-99c9-4d64-8588-4e41c618f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd101e-8315-4b91-8db5-8ebddc43d17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b99e4f-6792-4f09-a209-80869102912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaafd95-df02-4e7d-bd97-24d5d0c53588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865f90dd-bb6e-4ae9-9c57-57c183a27209",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0f349f-f4d5-4aa9-a2a3-d7c33e5bb80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a8dddf-20d6-4257-85f6-029f68e5cf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61ce74-db12-49a2-a797-75d1580eb2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb758eb9-e724-45b6-9fae-6d7140b23ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c03e22-e557-476c-98a2-06d1f3791997",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b3773a-2741-4fd8-ab90-745080698da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3889139b-7fa5-467a-bc2d-482d26132327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eab0c7a-a844-4a84-9e03-49570383e535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55720c61-61e0-4a3c-8981-58d7770d3b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18416361-1e24-4cab-bdd2-b766b26bb3fe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa71a447-24a6-459a-b76b-6ad6e4dbc3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6fa740-8f31-4aad-b015-221b161020dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7144ffc9-9a60-4d41-a21a-9eb27bd6a491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eec4ee81-f1cb-4caf-be46-9ab037395828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2594c3-a5e0-4691-8a17-5bdca14096aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f4459-5efc-4644-b911-a9deac6fcc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e68c51-3fdc-4fb0-a029-4d1203293cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19056ade-1438-4393-b44e-463c421653da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fa7355-382e-440b-a4dd-cc12a99ce0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5364c0b-2d98-484c-80bc-2bd390c88162",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948c9138-5ddb-4e2e-adde-cb4cdcc5916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fd24cc-e150-4958-b9ce-1e2b049c8975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5840a41a-3b86-4fdc-bf2a-126df509be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc185b2d-47af-4f08-9e19-a9be7673c279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b0da7b-47ac-42f5-9942-43d2ee2be2c9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b4ac1b-f4b2-4dd4-a813-2d9d9ef86fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9873675a-3a87-4dfe-a41a-0d204194caa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c4ef08-2ee7-4894-b130-01345576d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efae2bec-f856-4b0e-bf4a-79c3118f6d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b570a5c-d143-4c7a-a910-4f065da711da",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573e4a49-d434-4457-8991-627234940fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565e806e-12e8-49e2-930e-c224c4c4e5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cf8573-0a0d-4250-bfc3-5bf1a563af0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3200c9-4966-431a-87d5-9a0d4cc39204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173dd505-e7e1-4789-9ef3-c99afe30932d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2906c9b2-1d32-4ad2-90b9-9243ccf5ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61e0d52-9359-4084-8c8e-40b27ea674fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec3a68-eec1-4456-9a76-63b7ced95de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "101cb194-5023-4794-a220-7ca12dc62515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083f5445-97c7-42c8-b06f-e7f3c7be86b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d8143d-dcbb-4ad6-8e90-77e8f51f395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b0d9d7-b7ce-47af-a4ef-e488fdd7b076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e7b556-fa56-4240-b78b-35cfb42af56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b17f3c-ec04-49b0-8394-22d42ae7be7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef01a1-5365-4202-9c30-efef6aa19542",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8165a00-8346-4fb0-ac47-c4c54febe5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd13235-1083-4013-8ee6-82f8e60837bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bfbe47-ad14-49fd-b039-edc5bc3f4dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3939de-322b-45a4-8ad2-d716a3949f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a19c5eb-5891-45dc-a60a-5641a730ce56",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b467518-5770-4cbf-b376-5c9984a5dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7d5241-6806-4335-ad40-b0eb67ca9217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b16b677-b843-41a8-b3ef-b4320fd5893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47681b52-1706-4a20-8d21-68c5321e16b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37d6579-bee9-42e6-b375-fb52cd5100f8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbffc65-0170-4f40-9c63-e4b06620b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbe1e27-80e0-4d97-8cc1-016534fa000a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7436c091-042b-4b13-b6e5-45df068a0dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed94f23-ba44-46e5-a029-b7f62f599f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81536777-8616-4a77-8624-f82a92982128",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6282be-37a8-4133-8a08-b808f4bac4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af714feb-c525-47ad-a3cd-e176bee1c655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d5695a-d53b-475b-b6fa-b5647503c56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8885b34-5bc0-49eb-86fb-fcaa0de844d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67795dc4-971c-4004-b6cd-9f75eb4a5419",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a28a961-c2b5-4e93-8822-1eb863c4d378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08535b03-a698-4565-b499-528d913ea6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aed2dc-24ea-40ed-b493-eb800a865148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7650efd8-8094-4732-a0af-7fdad0c917de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361712eb-2ea0-47c7-97cf-9e2a8494c77e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58a51ad-3222-4f25-8516-190f80b8ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c16bf98-3462-4db3-8511-d64c9231d195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9302cd65-8fba-4ba1-ad5a-66d0c21e302b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "73f98afb-a5ab-4240-a3a8-8520719d245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e273a-2485-45fe-b7fb-cfa797eb7227",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b664481-9a43-4a62-9803-61c73b3b36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1ee6693-da00-4a1b-806e-cf8a527eb725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2fb96-aedf-4dcd-bc12-cdd77a2eddc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bd3dd2-e909-4aa1-96d6-b46988af89a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd0a733-15a2-4d97-bda5-a0904435649a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5632550-0593-4d47-9ea9-a613e3b28110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc076a2-86aa-4554-9b67-78b583badcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f934eaa6-5e33-42e0-b9b6-ba30c9dc7d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e0d6ee-25e2-4c61-97be-94e78a73980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa9bc5e-ec46-454a-864a-d5546e06f8b7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5396e4a7-0611-46bb-b4da-041b2ac97378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65765525-4779-410e-be99-16957d3b2ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c3c4b7-578e-472e-bb00-c010110b7736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "446577ab-ae0e-4f06-9311-20847285daa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9384b122-fbd6-409a-9848-fd692d844ba3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac7adec-e10d-4a30-886b-a37391672b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d87878-26a5-458a-82a1-760d7c1b112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f37c06-c9c9-4353-9293-4dad76ebd27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e27e9f8-f869-4c7e-8dac-7c48ed2289be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eeb1c0-7892-463a-a77d-0389387d1228",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292e6d99-a67d-4182-b3d2-b44c6bd88f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f44a578-56bc-4c81-8918-e2330b8e3da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d23cb8-7427-4b3e-9454-1ed5ece5df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11fad3b-cbdd-4446-80d3-8b2fea416984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fde7a9-9bb4-4d7d-8e2f-c8c99eecf934",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494d33d6-a9ef-46c4-a372-2d611ebd9881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d48d30-54e0-4869-ad9f-8f00900a751d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4318c1-5da3-4432-9f69-5ad8126e52e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a311412-bafd-4f7a-8705-3f82376acd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230b0523-9f58-47e9-96f9-008598dd747c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597bbc77-2e2d-4d75-b1be-25ee249ae36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14aff05a-7454-453a-8232-f5db48abaed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6bc768-abfe-49fd-941c-596f90a1b504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6501f5-e2ed-47c9-bc22-00ad9ab25ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7741314a-a8d7-44e8-b993-b7120d6da083",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdbd6df-db9d-464b-be22-63aa74267b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f310dfe-131e-4544-9551-7e4a65f8fc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fb54d4-e584-4feb-a651-342c9032d56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd60dd3f-bd89-4800-a88a-52ea66ec8760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dc8cf6-058b-4680-8767-04424ac0b658",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40e2f2d-5abe-43a7-8805-94a4c28e80bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb33ff85-583c-4c11-90dd-a740937ab244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea8cde1-acd2-408b-8bb6-ede42ec91eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19a89c6-abae-4402-88ea-79a65011a985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c893ec-67fd-4bf6-9639-b41293ba8d7b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5497aa-73a2-48c3-a3cc-bc07e32c2409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f59a0b6-722c-4493-b22c-5ea3d73de8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30257b3b-4cdb-4265-902b-f2d700e49c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "324e3a1d-df84-4224-adb4-5fe8338b2e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839b1527-b65b-4ec2-bcd9-470bbe78196b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15330af1-5a9f-4fb3-817b-56937238ae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952b435e-c1b8-47db-9765-bd850aae514e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3a2f84-dde4-4599-b51c-b0c80fb6003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f64b80-46b1-4ad3-ab3d-6dbee8a046b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce120384-7628-4538-8e95-a5dfca003202",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2306b7-a7a1-4efb-8fd4-38f67259ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b20924d-8bf3-46aa-bd7e-00b20d10d19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a670627b-1149-4b6e-9d2b-cf8bebc33472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb31187-91c0-4887-9235-929217d32350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f8d262-eaf7-4d66-8ac3-57de02470e0c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc94c3-0002-47a5-8dc2-8467fcf4b9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6fb5c8-9268-42ad-92e2-d0b0cb777b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da54eee-c960-4322-a04b-398ddc5c36e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b669cbc-f8ad-4f01-b2f3-1e901881729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbaeab2-b900-4417-ada9-7209be968006",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd657b8-cd75-4ae5-a64c-7b986c519dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e96a6eb-0f98-49f5-af89-da56bde2bd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1254a32-5b21-4c6f-8769-90832497b907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd31f93a-f3a9-473f-b07b-fdc213fad5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab0969d-48f9-4ce6-8078-d3de9017f1cf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553329b4-2d2b-4342-88ed-3418b6881fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac7cf8c-88d2-48ff-8de0-7831b7cf2057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4b3db8-b6f3-4c08-92b9-c02d210b6d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2bdbb3-6b04-4543-b3f4-f026b755c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3762563e-d3de-491a-a173-ef6eb4c13483",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b3fc19-c617-4986-94d3-1f0d1934ac75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207aa2f7-0a32-4b58-8960-91207c972e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39895c4e-9f73-4252-aed4-4ffa9495c4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "485581fc-4fa6-4dce-b38e-c102d1a88b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c42c00-5b8a-4476-8691-8acbe283099e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a449c42d-a660-4a8b-8e5d-a03c8d561a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffa2c2d-4811-4e5f-996b-c67789c55193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c25e201-5145-4a4c-a52c-c79a18d2cc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b0bb5c-9763-4ff4-96d0-dd0b7223e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd427abe-a155-4650-b056-ca8355d93632",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0ed456-9b7a-450d-a108-043863780789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf58d713-022d-4523-9002-e05646a6ad83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87863695-b1a5-4a11-a3dd-a1ed4997583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f051c15d-1752-4e19-9ab5-d8e7f887487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf8f8e-6208-42b8-bdab-bbc0d7c84cea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a9983-3d8c-490a-adf1-e51adb7c59d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c649f9e7-060a-4a48-b5ba-cc2524b6e8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ceca5d-c109-4fc3-85db-7787e66bc6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "314aac69-7c0e-4ccb-9893-0cfa4b75f9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447eb2eb-1585-4b48-a83a-c722db9387aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6190fc-d2d5-4d65-b582-6ea973b37210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efb5edb-1164-4f0e-a29c-13c135a5aea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1c207d-a247-4f57-b813-019381d27899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a405210-aad6-4a6e-b9b0-48146ba22c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad6edc7-de88-44ae-869c-d2e518d36160",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ad9fa-4f99-4b9d-bbe8-59a20a18bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b710297f-f778-4572-9231-fc13c0197587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e7e13f-e495-480a-8397-5daa5c46bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "379000aa-e6e5-4ef4-bc75-74c3b73d6b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff9b665-3546-45cc-b63b-00697b081ff6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec712e9-9522-4ae5-ba69-dd22126ec664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b9c87a-1996-46a6-888c-5a455a6e1de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e424c710-a566-4ec4-9908-b04abb76c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da02b637-f30e-41e8-9a0b-ab74debbf682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00828a5-0d08-4fda-a8a1-1918a85cc9fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8def595e-c856-4de7-9a7b-ef3911f74d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a7d747-e8a8-4401-a76d-035cfdf8c961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1321dced-5ee2-4dd9-a314-6e0d05c0c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f3994c-eedb-4628-aadf-1733bda84ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ae51b0-b90d-4a3e-b41e-f94187c83310",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc41c0bf-e49d-460c-853d-43c5880282e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b90edeb-9890-4b17-ba13-c48a68d222ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c1fea6-f885-4481-9c39-17c483efc569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5988fc23-7be3-40ab-8bf0-1fe18b4b1860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14bf979-93c8-479b-90f0-24a16773efe5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb302ab6-67d8-408b-9a67-9e560a82c99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a26281f-b1ea-44d1-a860-c7fd374f0326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f58d3-05c5-4ed8-a113-b6adf64763a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "808be71b-6bb4-478b-bcf9-3b9984d46c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bedf1f-c204-4120-b7b9-034ab79cd51d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d98504-22ea-4b40-9c6f-c6acc39604ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5da221-6027-42b0-9c9a-53b76258d4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e382e-5771-4069-8326-6aa02048159e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f9f51b-c8b6-4c2b-83e1-71e28d80404e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb8161b-6cec-45a5-810c-21df6d0df765",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500dd410-246a-476a-b1eb-5dc4c8f06f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7951024a-8fae-44c3-ab29-67fa7c12aac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e78346-8f20-4785-bc3d-93668920b31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaf7d4c-4a2c-43d9-b3d3-616d0b74824d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24d0b87-1f22-4d15-a729-cdbf4d865938",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dae6b8-4e91-4700-bb23-45da45f138c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66e0a9f-1889-4cbf-a809-eca0e4cb6404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ffd4d3-d04f-4dc0-8431-6201cff034f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af3af5f-3323-463c-8459-90efc1ec8c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e101fa-b4be-4ae3-944d-c68a1bdd4b4e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c9129e-6035-46f1-93b7-cce9b5269e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98e7f10-c402-4e24-97bd-8e4a7288f7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534870ac-688d-494b-b327-a65bd90b33ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "439fafab-49d4-4c88-bf26-ea55936ff5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8231cf-591c-4ff1-afb2-3b4ffe664e93",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c29606-50cc-4ff9-9146-635473d9679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099fc099-5d62-476a-a40a-cad90b8a70b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6a467-826e-4279-bf76-44ba09cd4ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "474fa527-fcec-4549-b47e-d0364036a74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d219315a-0c34-4052-b1f3-95a5e6c9f37f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba66a0e-3e42-4b7f-8781-eeab7543ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe61b264-0681-4de4-b42b-1d003c30d896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa633241-8c72-42d4-8581-dd1a4d6c8b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5933252-eb57-415e-aa10-59d3cd3cb49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5be0ca-4403-4109-8879-38ce9808030f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea11af86-e80e-4dab-8791-8a5df6859b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daaf4d7-b297-47e4-a783-a5e4f7657205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0b1a3f-1f58-482d-9ac6-2b522a76f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0da8639d-afc2-4035-8f5a-aaa8d8ea8174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0a83ea-1879-47a8-89ee-432bbc787d84",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326b0d6f-4512-4eb9-8a10-f118393bdd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7825bd-5eec-4e57-9e3a-c16300ff214f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e295eb27-b503-4907-aedd-ff08e241294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "234e280b-5373-4461-95be-240dfa710a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f2c21c-6c88-4f41-9d17-377d72e97cac",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5548010-be9b-4481-8e97-8e6a7914afd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16ab653-4403-4673-a6ff-dbf8070c48df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a951eee-dbff-4434-a21d-3814a3f7cd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea151933-c165-4cff-99a5-aed808e94de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca7d830-84bb-44be-b44a-0fb0a5c591d9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d94392-b741-4375-84c7-cff590e1a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bd6480-4f00-4671-882f-10af7c68b58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad73e5f-bfcf-4de0-98b6-e667c2d0e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1131d7e-622c-4a7d-a123-1554150613a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1832ffc-4411-473a-8ec8-b668e802a457",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73772aba-a314-4117-925b-98278fc30965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756061c0-13e0-4ab9-8000-23d2a8d89b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d2289-a26c-4896-90fe-0377676fef8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21dd24b9-49e1-446d-b952-d49528401d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012bb1df-a147-4ba2-b2dc-b2b8ad64f84f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc371919-ca10-4b6b-a0f4-ac571f4dc52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cd2c81-65ba-4efe-9bb3-101107fe6aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b745d7a-415b-4634-aad8-cf34e6904746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "648035ba-07a1-4a28-b2c2-ab68d5d12044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a0a6b5-99e8-48f1-9bc0-0fd5d115b9c1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c982d81-f46d-42f1-a350-7b67db944adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef38534-3f37-4cf2-89e7-69b8e4c2f679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43872c5-31cb-4232-8ec9-2c630d65e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa62691-62b6-4315-b987-791ff3daff71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e3e1c9-266d-471d-b773-3e7e475fad31",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cdbbf8-69b0-4bf6-b97b-8f60d5880b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92de751d-5288-44bb-ac8b-27ddbe4bae66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8af72e-357b-4b54-824b-3d3e7b08f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49d06aac-b45c-475c-ba66-0f14a808ca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece05272-2f39-4399-a92d-f4337e6d2679",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948094c-671b-47b7-809f-f7d51846ae0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76d91f9-f2eb-4a78-920e-abcfc17740e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa89532-ca80-4f41-8b31-6275a767fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "869eb270-bbf4-44ed-af6e-72a3888eda0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203e262c-f432-43fc-a0ae-d4a95c800bfb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a2dbc3-fa17-469d-a0b0-ab3bfcc54aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e374a02d-9402-42a1-87f8-8b17e1300c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542c0814-9118-4e7d-a007-7c2bb0e01bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55bb50ce-b8fd-4564-b0af-5a70a398c9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f71f1f-3357-4217-a09c-6084940fd799",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fcf56b-a566-417d-9517-8612585345b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d074af-7694-4dfd-8441-8ab16a9eaf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bf3423-e758-4460-8d15-981973c7d007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be3664b-cb39-4cf4-a174-e4a27940cb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aceb74-227f-41f4-ae62-474c430bd096",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e8bea-2181-444e-836a-ae8bd3c2114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006dc3ba-29e7-4db2-9128-92682a3ae5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e467ca-476d-4cf7-94b8-213419e32218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b203325e-5555-4c7b-be26-a71049838d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a8272-c8f7-4a50-a0ee-efad694d87dd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edd3247-27fc-45c6-aa0b-d11e99cee0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5f8c73-5a69-4e13-a8d5-b4be6bd26ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09249af-9940-4bac-8503-2b6841abe64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85263d62-3a24-4c3b-bb5b-5ae78f9a8cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd88335c-7713-4749-93d1-4e99e8595232",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0e2678-6edc-4616-ae7a-b01f6de076e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053f0106-4c89-449d-a036-d4834bde3795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ea5dc-5bfb-4798-a408-e51f77e330e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2abb938c-b051-4d80-b157-9fe8ecda9e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c7ce38-9128-4df2-bd90-dc2c42b361cf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9dd4ba-8e84-4e8c-b746-a97482333769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df1b0e8-815f-4e4d-b1b0-719c555e9de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03066a25-6111-490f-8c86-228f7b2c01e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c8e49a-c76d-4823-b351-e8f503286448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceff669-bf94-473c-9980-c2d5ef77b021",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51458c47-ad4e-4271-b225-dfd3a50941b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483b0c3b-950d-4bbd-81f5-2dc96ee59018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f0c21e-a85c-4193-abdc-e7dbccfb5256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92f88fe-aed5-4eba-ad64-eb0439b573fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff8fd36-76c4-4fce-81b3-6044f8974f03",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b11e2e-0518-4208-91e5-cb497976c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642ddf4e-e698-42b6-a695-ac4eed85a836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c4c3bc-d665-4377-9a52-557fb721cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a06e6541-b2f1-4cf2-94f3-1803466bcb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4e91d4-2289-47a2-b6e5-982d663b5652",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f4e2fc-253b-42d5-bf6b-e541085f1fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843128a7-25a2-4bdb-99e1-227b22b34c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c25e8c-955f-4077-8028-1854b15afb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c804f1d8-56e6-4cee-8e11-43bb1bf660b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4094cb54-ac1f-49bb-9816-de38f35f1177",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a739c0ad-cf1f-4bf9-909b-c16a632b3d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188afc58-246e-4a0d-a2c4-cd47be76fc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030e7d8e-d43c-4de9-9730-df19a6998953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4614bf-8460-4ad0-814c-ff4ec2c623b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78038139-38cb-4ce6-8e67-49abc439ab44",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f712e8c-2550-4916-9da7-03ae771e5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a6644c-7f83-4658-83e2-39cd0f397b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96828796-a6db-4995-9442-85bec98bf3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce605d2d-6914-4daf-ae71-79673bf26640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c665d3-d864-4678-8d63-920d950a12f5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997e61f7-a007-4b33-9f9e-6ade64e3ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eaf5fd-fa93-4fcd-803f-acf7be409ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4796e30-8e30-4f07-a09f-3d5ec51a985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ee7115-09a5-4c8c-9c7c-72981c0d9a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab04532-4aa6-4f0f-8208-ff7b83bc2214",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3969f-90a5-46d3-a12c-3f6b6fdce8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5191cb6-75e9-4618-b363-70dc128718c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6214e404-0c3f-419d-b113-494605776e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f57dd065-2d78-4407-87a2-bc01289ab43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9051b3f-bd2d-401d-8a40-bb78df251796",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6923021d-bf0e-4c55-aea2-b8c7a54d95dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b11fe8-251a-42b3-b295-21fad30a98ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ac5f5b-1af9-4317-828a-8ebb9c3b2bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c3324a-91db-4f2c-9c10-84e9be2898be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48978aab-95e2-400e-8ad8-d5caaeb0806c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6dc749-a6b1-4f51-8854-5d99004699e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aa620e-4a47-4249-b4a4-4ef885afbe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f1aece-cc50-4ec6-9911-134799f6eb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6611bfb6-3b9b-43b1-a31e-da85c414328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f568f587-1e08-400f-83a9-4e22eb5b8a68",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79462e5-8864-4575-b14c-6f74a2c6cce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855996cd-ef18-4f69-8bc2-6c413cf23306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5684dd-cf2b-41ad-b8ab-bf12d070d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45154e2b-abeb-4e4c-8369-4073f851ec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc333ff-22bd-4670-8698-a0bc3a9c0014",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ea1731-fc90-46e4-a7d2-9d7442f3c0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4d7cb09f-4ee4-4dbf-b876-1d52f91dd2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94044a47-96fa-484c-a06f-dd7a4536cca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9e53dd-6d3f-4005-9743-8720702cfdf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba62eb27-1e39-4118-a3f8-4794944f2d1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ca00728-863b-4bee-a5da-5f4f9e8b7a37",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6656ce0b-3613-4662-b4b5-153f97716709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6fa9067-042d-4bdf-ba27-a9dba33cc16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b782f5eb-4e00-48cc-b3fb-d79edc48f4af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "536b095d-d8b4-4a66-82b7-e871875d5524"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4153b277-d3cc-4938-87c2-55f200ef9fbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d0484e-b9da-4206-91ce-e2d8df7ba5ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29aa7bf2-f30d-4410-a337-cf2f033f924b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0177406-c675-4c12-946c-8c52fb2da38e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e863b61-392b-4724-bc98-29ce0e3e8834",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2858a9d1-e725-4db6-a3db-2c5d3b287f70"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "267e3b7d-d6bf-4eba-bd47-d6cc6126c849",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab054a65-a76e-4c79-9a6c-726bc2c7730e"
                }
              }
            ]
          },
          {
            "id": "c2015b65-a41d-48a9-aed3-7cd30e513168",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9b36bc1-302a-4b8a-b470-032ad6cd4f2c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fba67936-387d-4e14-b6b0-5b0e8c7ba874",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec48f8ef-aa49-4f60-9cfa-2b11c8d8b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b1f053c-1cb7-4036-9ebb-8738e85482dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd2d473-11db-4927-bf9e-05914b13a6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dd2196-44c1-454a-ba6d-98fe1ab8c0ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c1fde96-d7c2-478a-acc2-2b31410800fe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88cf9384-9909-436a-8201-212e177a7fff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e9a2c73-39cf-47fd-8e17-c3047fd563f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cede5dfd-84bc-40dd-9a12-9db25da21713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54de9b49-a607-4611-80c7-c196e8285c29"
                    }
                  }
                ]
              },
              {
                "id": "5d5a1ff3-b5ed-4a52-b3dd-cbd6d1963248",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8969e441-0d1c-484c-bffe-83bc6eea5dc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2834a613-85b5-4579-bd21-d13a01d3c5c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "955adbdf-f616-4756-8d72-c553c220355c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67e0dedf-605c-4a69-898a-c433d1e3f035"
                    }
                  }
                ]
              },
              {
                "id": "7cc478ba-077d-48bd-8e4a-47fec6a6e73e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eef007f5-40a2-4e37-be5e-7a3846bf46df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "780617e6-2c5e-437f-a414-9be7c4215d5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7157070d-7820-49a0-8de6-38bc31e82a0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7bfb427f-cd22-432f-913d-60df443f6176"
                    }
                  }
                ]
              },
              {
                "id": "f0fdc66a-4ae7-418e-9438-a1abe533f531",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78f8ca11-65a6-48e7-ad37-a5d4ca4143ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac125ea0-9bad-42ef-adee-afb7d7f4e196"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da6b8092-f183-4e17-b001-e8bfd39a3543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e4b3a80b-954a-42a8-86bc-2d42a0d16091"
                    }
                  }
                ]
              },
              {
                "id": "b170a98c-ac13-4763-bd0d-4fc1ffce8c2a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a146db10-e47f-496b-8705-453d368f616b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "715ec71a-32d4-4eeb-8c5a-cdeae95404cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a2447b1-6360-482d-bd4e-897581d5b6b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d1930372-8a63-43b9-aebf-e1623d6db3eb"
                    }
                  }
                ]
              },
              {
                "id": "64880b11-558e-4fdb-84ba-ccd5186dbc2e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70dca33d-0d16-4496-a56c-b70817b9acaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39f15172-f77c-4398-b242-a2ac350e6f73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c221d16-825f-406f-9208-e3a5864d391c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9a88abc-32f0-406a-b7e4-c1d83947d9fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e57562d0-e2bb-46cd-aff4-e6e9e6850777",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01cc22cc-f88e-4902-bc65-44992e24607c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7aa3bcd0-1966-4160-9940-f847a8d86169",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "adf4ae7d-211b-4c4e-baff-ca359dec19d5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb94e9ed-13c1-4f60-9529-6a3b76b5cb0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ee3c661b-c3cb-4d65-a94c-9a63d7a837d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f311014a-886c-4271-a01e-3d4cc38bf618",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1b1bfaf-38ac-4e9f-a023-460ca32a79d7"
            }
          }
        ]
      },
      {
        "id": "a7efb233-9f47-4414-bfa5-5300d36f05d2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "15ec0636-e3ef-4ac2-b883-7ad40bef5822",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38f8a17e-9618-48ee-bd42-2d950ba6d3c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5ca2ab4-670d-4bf9-a087-fa386ef36243",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfae699-a1dd-4afa-bb54-6f2c9c506382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dc477a-cc6a-45cf-8ba2-328b59168a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acd5d0d-6f4f-48da-8747-61fb15976b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b69816c-11eb-4cf8-9f4f-2f9220951b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff3200c-1f2e-4fae-8025-fa4a4e7c7023",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfaae5e-b43d-472e-963c-f061ed80855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd65f19-3262-4aae-8477-fe94e228c578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c5903-2e5a-48af-8beb-b98c4977fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64ac18b-aff3-4ff0-bf14-625de410e7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f284b142-edc8-4f90-9785-4b7821217483",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dbf89b-2dad-4a32-9015-7e244cbd0f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4416d4a-bfb8-4820-b645-af5c6f0710df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013ab99-ac67-4eeb-884c-000aabbcb324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0034821f-4894-47f5-bbf0-b583072bdede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403c8162-8f46-4c47-ac6f-8c48c735f50c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f64c255-93cc-42f2-889a-595defbebe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655293e5-6320-4f87-b14a-ff5ba544656d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852a8e5d-6043-451b-bba6-a581559efb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d44519d5-6467-44b8-8cdf-9e0eea4835ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ef4181-2b9c-4a75-9b40-1ab40259206a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc4b52f-da1c-473b-9a69-0fe8301ca424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f803cf-39e1-42ba-8234-f0699812a0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e46839-d5b1-47a3-aac5-bbacfc906f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba19e3b-e202-4702-99bf-5c6237dc29b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7d586-a53f-4838-8286-a21315ff26a1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b27bcf7-87cb-4346-91f0-a8d463ee092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20efc9f1-332f-4efa-8e8b-0a210ab40094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52582dc2-f184-408e-8b56-7f60b1eea012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b8932b-6a18-4546-9efa-83b058eadd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69adcc3c-8bca-4c67-a50d-73cff2508a14",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e20c1b-629c-4873-a701-ed36a2e3c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33eb360-86e6-4bcc-81d1-9742a41ed610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2fb01c-b736-4ed1-9747-855a9a480820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9873bb5c-19de-4f4b-8227-8bdb9bfc1c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba304a-9c85-41a9-b849-00c9456e1b9e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f82a91c-20ff-4de8-870f-284179f25cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3cd729-b15f-46bd-9c70-9fa94adee3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f68b71-ee4e-43c1-b430-adfd4b2186be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6364e939-f2b9-4c05-b10c-f8a28995e78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac7ba88-55bc-479e-8b1a-5b1a79034512",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5007bb-b82a-4900-ab2d-98333e81068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6303932-da83-43b0-b373-ad123ac9fccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1bbcd4-d16e-497d-8223-7c5b316e7f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4273df3a-1b80-4882-92d3-2a1a975a7585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73483f17-6a9b-406d-9228-b0952da05760",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1142fbb-5253-48e4-922b-bd09ecad5ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159c250c-9e2a-4928-a501-b117e7e0df1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d562b4df-7e09-4ba1-aca6-124fe14b12d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6e687e-5b80-4831-abf6-c1fac2bb165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200eed9f-bd18-48c0-96f5-3effdbeab70e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5200cf0e-56ba-499c-b5c6-74b73cbabbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85fe675-6a54-4307-9bec-140e5930b254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397cb9cf-4e07-44e2-985a-482cc3e6fb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4e5f41-c600-4a39-8926-495cc6be2676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc8a709-5cb4-41ae-9d2c-1a0f7c7e9bda",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c005473-e247-47c5-9134-bf35acec2f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537410f8-7b36-4776-b392-e6e51ba74bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbf12e7-574b-4538-b3f5-990d16f702ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91d539d1-a76f-40c0-97ff-518e48feb2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd9ca5b-f6b8-44ae-b477-1591d632097b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01e851d-e7d7-4797-86e1-db160a3a0570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3e227f-c0f3-4bcf-8248-d47027b66ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c84a7-8516-4e32-bce8-e4ff186c1f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba716622-2888-4328-8b34-ad6c3acd69bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46462c8-6bcb-4698-8cb4-6ca95f410092",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbde6782-0884-43c9-b0a4-465b5e1c7536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90080dc-2842-44fd-a42b-3a66d9af35ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353db663-0f3e-4b09-8706-500efc8c837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef25b556-55a5-40b8-a1a4-9883782a14fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800bc4a1-204e-4bc2-b1eb-7de398d9186a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f0395c-dbb8-440b-b84d-04bfad039b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034b0e42-8ebc-42b0-98cf-09b276a6b9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983a97e4-edee-4c64-a323-ec8f73c94f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec11975-aa2c-4768-9b94-b14f128ae9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89d1cdd-a8c6-4ebb-80c5-b588605133b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49319b82-347c-4d53-8115-9d052a012e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b30303-49ed-41a6-94a7-df893bf1a722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e99761-7433-47d4-becb-9ed1f7b0c9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8278a6f-d3c3-4181-8846-62d26fa4e93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123a9030-5768-4fbf-8dd3-73fb5ac32049",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be03f5d-0e62-4383-b965-be642bc7b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacfb98e-648f-43cf-99f2-6536fcfdc04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b60f0-7ef7-4b74-a31d-b39996ac1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6887faa3-5b86-4eaa-95c5-ff10d52608bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c9d105-9f4c-41a5-9e93-055b654ccdd9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a26e32-99f6-47cf-9f05-624b88024abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c982126-f975-462e-9f20-51e3842981a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d417c8ce-0101-4f85-82d8-1151a09b5ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c84d57-1566-45bc-bc6e-107dbcaa95b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ae84c-3db9-4517-a519-a399c24a1066",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c895df8-8311-4c7a-bb05-02c692e2e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a972a5f0-590b-4279-85c3-9fbc31d0caa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94a8bca-85fc-42f2-b77e-a512dc2cb188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb6175c-4e79-4269-a15f-67653f62963e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e208d4-91e8-4662-ba5f-a802b44178a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2d5723-fd85-4aa7-862d-0cf50657de58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383d7e9c-e965-4c56-b8d9-0173dde81755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1fa150-df53-42e4-a139-41b2d2307534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec89afc-3e34-49ff-9dcd-697890126825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9d74b-fc78-4d9b-aedf-50d4016ff188",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706c2c2b-573f-4377-ba69-a014c800ce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e95f2e4-14c5-4bc2-bd74-c305b82123a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14245055-0237-4955-bd92-f704f1a16b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1b6788-8f32-4cb0-904c-ea889bc5139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43a0c3-6655-49cc-9f8f-60badfe97d23",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbd0f56-49e3-4176-859f-46150c0e2b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f6b140-d3cc-46cf-9d0f-e43aada89831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331eeb39-f6a1-4e9e-bdb8-83df2d14ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d32ed7-c0a0-438f-b22e-a1f2848272de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1678f47d-7b43-4678-9d5a-4b444b316e26",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ba25a-0ef9-4837-9002-4f4846950b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a44a80-8806-482e-9242-dbd3d8405b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2b3908-9057-4cd5-bc21-366ae5591385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0274ed20-289e-409c-8b71-c1a8e86850b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c9c392-32a4-4518-8d27-1a082726a805",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1aa28e-9ea9-48d5-a967-046c117cb30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffed014-dadf-45cd-b3b0-e094b9a3939c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e1103-f584-4f65-965e-b6d7f60742b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685faa81-66f2-487d-834d-96a3f1f34b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bee4bde-df5d-4311-b30b-b3749fa538bd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ad6a4-f6a2-4632-b132-aa477fd32a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202ecd46-acfd-4607-ab79-e6bddefbad30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5951725b-ed5b-4f03-a045-e164d97d3ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a29ddd7-eaaa-4190-8f7a-053410b73386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1717858c-d530-4537-b7e4-8c99f6d694b9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00db6ca-fd30-45bf-98e7-8828b37d0b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68949053-7229-4636-894a-48d62d2a303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924aea5a-32fe-4b6a-b67d-673b863e094a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e836e401-8d01-41d9-a677-5b4a8fa8f724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48df6a53-a78b-4f9d-ac81-ffd0030d8ed8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d41509-55cf-4e76-ac70-6d2492f8eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef25120-f55a-4af4-8b38-39ca4584b0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d63ea5-fc02-4251-a8cc-190a0fd8bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2694df-5a71-4dc3-a1dd-e6de9e0e9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33837029-401a-435d-9ad8-8ea6ae685903",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf9397f-6940-4257-9e96-f5ff3b2e508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c461d2-a4e4-4c99-8f49-cd3d108d6e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7eece5-bc62-46f3-8798-f2cf4ab84264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f28ce4-7f55-49c0-af59-587380e306bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f8a9d8-f5a8-495b-b800-0a99fd2d2359",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f1e1ee-7ab0-45ce-9152-037a8eac3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0b487c-aea6-4d33-bf55-97ed5a935029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd386dc-6d20-4a4f-89ae-ab8e783dbe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6bec38-cac0-4e8a-9791-83d0a3c7fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfa1eef-5c4c-4362-a1fd-c1dfc4890476",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac23d871-97ee-4dec-98ba-e157c34f15b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399895dd-d72d-4ba8-95f2-51ef4171e113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb35b10d-93a0-48b1-81bc-1201bd3a1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3157c6ae-fccf-4187-8d46-f7a20aecf9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd6f68-0fec-4e27-8403-02c2d3440770",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c0a00d-0355-4615-8c33-138bafdaae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33be2362-3588-46ec-923e-8764c66e7200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb93ab-5b20-4099-95b2-1eebc18ec894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1009285-08c4-4070-86b7-3983b7944833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857e64f5-bc18-4c77-84a2-79d837580ce1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e1d73d-09df-496d-ac76-8248d0d9740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be39e9e-7fc1-4638-bfb1-62491d59b783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2723f0-5744-4b05-ab07-52162b9bb456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50146ba-2fac-4e5e-bbdf-8cdfc8baad3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf445633-cd95-4605-bd92-fd2969ca34ea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f93e01d-b450-468d-8c15-db86f88dc742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88ac538-40d3-46db-aba0-230d1c01720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c37c7a-0d8d-4db9-b62b-a70c69de20bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2cd08b-5a4a-4b69-934f-aa4ca043ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33250c80-d6ca-41d6-ab96-aca08aff4a44",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fa92de-f061-4050-8342-6373158fd539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893caec2-dfc3-47e0-8231-89d025673c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a81c7-7fc2-48ee-8b88-ee4fd759966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53746cb-edb3-4ae0-aebb-3ed0c61af483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7687d2d6-3e88-4025-a9c7-caa4992c7fba",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a4a682-016b-4487-bd94-48da1e42abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d1d244-1fb9-44e4-8ee2-47282e750b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5857a-36b5-4533-a063-885e35c6d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cef6169-ee78-49dd-9484-bc0d5e1b3c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90bbd1-1317-481e-95c3-15de5122afdd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498cf614-36ae-4376-8af4-25e812d38a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30950018-baed-4978-b522-4c72db23a88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5329f0ba-e4c2-427b-bb06-cf278449fa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "875328da-90d4-4926-a430-eafbad5825f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b46875f-7ad7-46db-ab13-0339a95c0d33",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1207c1-52f5-40e2-8d9d-cabad9cca175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caadf2eb-90eb-4395-995d-2f71d83d4627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81abb783-2fb8-4633-9484-d47ee08ebf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6b5907-6246-43a9-aa43-f8c3ef56b5ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5ddf2a0-9cc0-464a-b726-737cb387a1c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2946db32-34fd-40e0-8437-a4fda236a0cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7531f53-1cb1-490b-8247-3f153813cdff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ca1c11-0067-4775-bf84-c3421a8b3d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf26b755-72d0-49d3-8964-dd6dbe879821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f73ac66-a341-4eed-96bb-feee7a56a4e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db85c306-4aa2-4ac6-97bd-ba45189e8adb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cbe0c1b-b78d-4113-a8b9-83cd8cdf1e3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dd87836-cebc-4004-8109-9aae5d3c0150",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607fdce6-765a-4345-aa18-43d5130b4548"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec31f8f1-c277-42f5-b13d-3e546f3b82b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b55a1693-224c-4a29-8c21-dec5b57c02f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8834c27-a05b-4f95-8df5-971c415e0adb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96e29441-8212-407f-81a6-98015c6aa395"
            }
          }
        ]
      },
      {
        "id": "0ed15da0-1373-4581-8cea-8fbd41829d3e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "553c6232-4e35-4e11-8658-60fc43860249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12d579ae-c30b-43f3-bd56-2d63ec2b8911",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66f336f7-9a56-401a-8e4e-af6b8daea9b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eafc3-0af1-4675-8de4-edb7536396ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b40842-db3d-4a0f-80ad-881f305eec3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1fe853-4160-4ea2-bacd-27a212879dd0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9da80d-dffa-4ac8-9dec-7d21df1af4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7768c7e-ed36-4e7e-b69b-c8c118f911c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01af927e-b796-41b4-b25c-eb25bc7ad7cc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e652a50b-1077-4f20-991b-b54f8ae27856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b4b2ca-c1a0-42e2-9859-e46d97858411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a358fe2d-bc03-46a8-b7fc-4028715219f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23819ece-a9dd-46fe-b4e7-4b9dedee8346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c855992-01ab-4873-affa-90d7f2328943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405cef4e-4dbc-414d-813a-36e14d772b00",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d7fb18-8c34-4423-b19c-ddde4354308f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9bcbe7-a4ea-45e5-93d8-19583a52d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef090182-153c-42bb-91da-4d827437bd83",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b411c8d4-a56d-4558-893f-e3e6ccc8617d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e45b70e-9675-455e-9395-822ac0430538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b094ca9-7eaf-423b-883c-7b7e66397d74",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9dad41-af01-42e3-a720-367aa6c30810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dba1fc9-7eb5-4785-ad5b-f6ed392c1fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaba883-5e39-4f87-80f3-b8a380b34d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20161246-7acb-46f6-be54-33da5094ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffd2613-2a38-46b7-bfc6-4a3a42d7ff30",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cdb081-5780-47c1-abf7-79a14b6a58df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecde40b0-645d-4d6d-b728-6dacefc9456e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900afec1-aba9-4f7a-83d8-e64ec1a66bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5962b356-77f9-45bb-b175-83c61512c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba420bc-ede2-456a-8619-5377ed682725",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9beb1b-f6a9-4c96-bd96-8bfd0a112073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a3c7a0-9a13-45fc-8f1d-c744a9120e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36e124d-1a20-4584-a11c-56d9addcb08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d60a6c4-8a59-4a06-851c-53f60dd47614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9ccf1-0972-461b-bd17-09be2de598d6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ad94f-0067-4733-8365-49b75838cf41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da27ec9-0de0-419d-8ab7-59b6c2faf52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ac6c3b-61f3-4a35-b8ed-649710ec6ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9852a36e-61b7-4c1a-8736-269d6422f067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149888c4-3dd2-4ff4-adbc-0031f6153c49",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44c5881-3498-4210-a3b8-8d69fab764e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3389a188-408b-42b0-9f72-82033e219cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ddc799-650c-4c87-a45f-99bfab810621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f163a3ec-281e-4a5d-9de7-dec1a0b59cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5f739e-a7fb-4b94-b974-715c38227b0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc765661-a737-4e49-b9cb-d4748a02f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a756a4-fa22-4160-b356-330919e0d878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5cd266-ce23-47d6-ae07-dd29108d03f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddec7cd5-6dcb-441b-8883-de00e6df95f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a3eda-c1a3-485c-b580-54948b771eb9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7be8a16-a704-4016-bb0c-1b3d93d6bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13684d45-274c-43d0-b28b-24ba9f25a57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30394916-1b4c-4852-9dc3-7ec18edd6aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc04d85-8a94-4b4c-bed0-dd484cb9cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c0684a-5e0c-44af-8139-7100fdeab16d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfd70f5-2029-4eea-8e2d-6484fda6fc65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76afb11a-1aef-4116-8846-fea9b719ca38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158ef5aa-1c0a-44e8-85c0-bb7aa7660b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61975cae-ad3e-429b-ae2f-c1061008396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b99f478-e581-4d7f-9f29-08096267ecfe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f7224-67ac-449b-b5c4-7aba3b14a8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d2caf6-4cc8-488f-a373-9ccc62f1135a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae575a88-70b1-4607-9289-5e28299f3a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5118b24f-eda4-4d0b-8fa7-744c6a3877cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f9c59-1b2c-40f5-ab84-8d660b9aff3b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ad5743-8dee-4e9f-9aba-186177926324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ff970d-4dc3-47e0-bb92-6b39a7ca41f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade991b1-c5a7-49c0-8a79-76f1880e33c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c660b3d-4cea-4b18-8b36-54566fcae3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c1323e-2503-4794-9e0e-1d64e12663a3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c66af2-47b5-44bb-86d4-ac126d935057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c20480b-11aa-4985-b60c-1130ff386cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f426b171-bdd4-4800-b5ad-d371e356746d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0398f2e-6cbf-4800-8443-3d07ceeb332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf678e6-9c13-484c-8088-240c42d3c151",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12cab4e-64ab-4cff-8e89-9b9005dcb0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52cedd7-c2da-4d3b-b4f3-7832b5783493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe51219-8e43-459b-8088-8e2e850f3be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d70cf2c-cd74-4a28-bc8e-a6d089d01b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec15bcc-f0ed-48b6-88fd-28292ce341f3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962f7d33-847e-4dd0-a5e5-b05f50c29184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6018d0e3-455c-42f6-ab87-f6e04157052f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658409d6-8c54-49bc-8bd2-d0c51929a52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c8b497-7357-4a52-861c-84ed4f39f9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6f647f-6f19-48e8-9a31-b96f041c7664",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75346b9d-d975-47cb-9816-df3ee7ce84ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddcb5e6-6d95-4c17-9a48-c2e88e21cbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10589293-ea39-4ed3-b5d4-fc10d1cadfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd14dea2-e869-47e2-9d44-b5752d12fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475798af-fdb5-419a-ad55-5324465588a1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac1854-5184-4a08-8c31-8bfff831c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28704a5d-83da-4af8-b3ea-97b12a8d20b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f45444-dbc0-4142-bf18-bd8562ccf90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8251f44d-6a8a-4228-afc2-5ad10fd0498a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8a4bed-fa2e-43f5-9c26-47962cf5a137",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32366452-6ecf-4e0e-bbe7-6a5af9f9ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e56fe8d-a79d-4c71-890c-65cfbc420b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a24140-1e61-4eb3-83de-edda674b282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6ded3a-e73c-42b6-b772-745883d5fd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eda22b-e284-453a-9079-1cba1594cfa3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b02144e-8803-418d-9cbf-eddb2d5e72c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f536035-ffc6-4170-a1e2-7c528ed67103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e4418d-2e50-4221-bdec-647bcf48cbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a2dba4-7102-49cf-8386-36217083dc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b94b46-2edb-4b9e-8c9a-62d98c4c6c4c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb9429e-d557-4383-bc29-202a64051dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42672f4f-c9ab-4245-9caa-72d71c33592e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724aa297-f0eb-464f-983f-2b62570417be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd19bf5e-b472-45c3-acb3-0842a9f24a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b572f31-8d47-4b8c-8686-02a8728f01d1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a6c375-f982-4778-8a02-826c4f076e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8428fc-5f5e-42f1-8941-88a270b303fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd31b2b-0668-417c-a671-23b2bfe36a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa239312-2269-424e-a65c-76b7b9e5fc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac827bc-c93d-4563-95f9-2e53b6178be7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9d229b-4dcc-411c-b686-2a48e542deea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca23844f-2459-4765-a293-ab2cb3576519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3281cd90-6889-451a-8e67-a579a4c71a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7326d387-3b49-4c4c-9e7e-e9842ab01e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ab0f8-65db-4f40-b4c1-19cd53d9c1b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebafc6f-6140-4ff7-9811-a736125bb38a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb46f4dc-38c4-4464-a18c-bf7ee54cf8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698d4df-cba8-45f8-8938-f7091213c625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2c2f56-ff40-4a29-aa2d-3097abf75d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac25c871-07a0-4c69-94ff-1f97283cb932",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d03e89d-c2dc-46f2-99d6-25ae664fcd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c80e6bc-dc83-44e6-965a-e86909d4d173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72143901-cb84-4394-b4bb-0e7fe4fb8494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27077d3f-1561-44a8-9145-413eff077c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a22f06-5a66-475f-9de3-2c128b274c1d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340515c4-853c-478c-8863-efa4c5acfac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bfe9c7-916f-40fe-b624-3c78979e25ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a15d08e-2173-4047-a3ea-c8bde2458a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c2d20b-4d5c-44cb-bffc-0228eb87ffdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c10632-bef3-4d85-9bb3-4930aef3bcfa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7678c1b0-3fe3-469a-8fd3-6e66c395e903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e4a291-a419-4b41-9786-a4d8e558d945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01aa33d3-a395-47c3-a367-828d28a226b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7eef8b1-d4c5-4eaa-a43e-c12875813fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029d3d0f-ce6d-467c-a586-77bb35ec276c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c962658b-74c7-4324-87e8-cad60d8d3717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba20f65-a040-4f00-9e0b-d99385d862bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0772e3e9-2c21-4896-8d4b-245e7fae0d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e941e224-7fcb-4885-84f0-eb7c964c1d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbbbacd-681b-483d-a546-ec8050bb19a6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3befe0a3-1d97-4afb-babc-d1ab4bfdad6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6578d3-95d1-4002-b8b3-7836d3879973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56d5bb-a148-4960-b0df-409126c05d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229c16b-4735-4181-86cd-044d319c6589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557ce4f6-fc63-4d8c-931b-3f36c34c3dc6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce004a-42a6-4490-8bde-65a29daa9dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162b75e3-23dd-4ee6-a2e2-dd2d5fcef67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c12de-fd9e-4aab-a7b3-9222f6885ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f976fe7-1afa-4e2d-b0f7-6b35c1655499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dade26d-64c6-41f9-9a35-ab635a0cd751",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44d585e-9784-4d7b-9c70-96a2527d245e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cda6d53-55fd-43a3-bb3a-1263a9f0c4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c814866-9a6d-4ce8-96fa-6810f4d1d9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdda028-7687-499a-9dc9-c1e866cc01ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e196d1c6-3633-412b-ae09-4cccd83f4977",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a213e-1617-46b6-b733-8df1e2de7381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49819613-4642-490f-b3a4-97c2d2b99e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73633846-1b99-4e65-afee-96f81fc4f78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677aeb11-f143-4d18-ad00-849866d05bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbccd0c1-4536-4a30-951b-89577fb143bd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50401fe-d1fd-454f-abee-fdb743a0c737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499107c8-5ccc-43e4-bf42-48624db9678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce20a16-6860-4455-a8f6-9549a2a9a700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3155add8-d957-461b-8312-100b17a76c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc04a38-0062-4361-baf7-d2011c2f1053",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f7cca-5c99-406f-9c15-936147ea6e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd1fa52-ac01-45f0-9dae-3abf8ca66c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3d9db9-7a21-47d2-b673-d442f4071780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bc9856-09f6-43ce-a589-7059af07070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd646932-f8d9-4ae1-bd25-6bbddac6ad6c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa7b3cd-f52a-4af4-a166-ae08bedacdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da07d91-64f1-4231-a077-e6b82057d70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2197bff3-0ea6-4e0c-b371-febed562bef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8ed91b-5221-4f2c-868b-05f50c2fe248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aec609-7198-4699-b95a-c6ea95d219df",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8a5035-493c-4483-a3fc-368f88ac562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219d0ef1-b7c0-4865-8a2e-c7cf9127ea08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a8f7f-ff4e-4902-b575-ba18962fce4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea451df1-c224-41be-9834-aa4b670721f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252821d2-0db3-44a2-ba7a-b97f804337f1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf73e736-ab8b-46bb-88c4-f49fd41e1022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d036518-42ea-4892-a268-5f3422fb35e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a47a4e2-f29d-4db8-a544-3f5b88f1f4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a915a9cc-3ce2-48b5-9082-eef6038d8b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3c9ee9-5855-459a-9d0e-0d1375cc14a5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9152078-68b8-45de-bf54-95432abe5a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddee59a-888b-4992-99aa-806292499f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cfcb1f-2210-4ac9-9ca0-815523419717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2b7b80-9133-42c7-93c0-496d94f5f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ebca84-63bc-4842-8a4f-1e75322c381f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e5fa92-543e-4605-9dfa-4370055c4c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c03804b-f766-4b0c-bd16-ce7653dc84a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857d9696-7fde-48dd-bb32-eef27042d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa18508-48d1-43a2-85da-89d207321310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b89755a-db7f-4840-98af-798906ed88e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7a9803-1f28-49a6-b33c-cdfc278dadba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bd5aa0-9cf7-459e-b83f-8c3a420cf730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea9bfea-2ef5-404d-a604-30bca7bb12c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae957ec-63a8-49bc-b2f0-f7d7f0c8d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180403bc-f4d5-4721-baaf-f39abc2c6b84",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842dee5d-905a-457b-a9c9-7f4004022bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ac9b60-8545-4b0f-952b-88b148a91ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b49ae82-1cd3-48f1-9ec1-5888f94f7ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218d8e55-c914-4dd3-975d-bc5f18adccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471c6c8-2e02-49be-877a-53aa2756e33b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf8064-2979-40dd-bec4-58619c3225d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f049aeab-5d36-45b1-8880-a0d2935b5cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1a9d3-335f-4b40-be2a-afcf588fc453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80705d6b-21bb-4dd7-aaf2-f547d337d966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ee7024-5735-429c-b7cd-094e96d9a71e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c61dd60-f466-4a76-b89a-f576a8ae9cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd118eb-1cd6-4714-88cd-2c2be0b58f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32252e2-ca46-4804-b4d0-0eaa63568222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a292233-3f6a-40ed-b797-bb2a14f268ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df1173-dbcd-4e74-90f9-38639564490d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c316eb-4e2c-44de-9be8-42b2e452df81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8d4fe-c281-4287-9399-85f85ef4d0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1540194b-9169-4170-a037-62ea08ee5097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4934906d-ae23-4ac7-a032-623315b9dab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff1af54-eff1-4ec9-80fa-42cbd5efcfe1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7cdf5a-b84c-4454-85bc-9d23d8805a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f62e5c-c56f-44b7-a9af-e8be64bc83f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bc328b-0472-4d15-b11f-9195dbb410fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9271f5-fbff-4ce6-b2c7-2f2ff2a121ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecfc4b-ba64-49ff-9fec-d3a74b107fbc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8177fa-71ba-4bd8-93f0-218c31fea48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6dba19-97df-451a-a1c5-0f6896c25b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afa603d-e5fc-44a0-ab32-68444c279e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641be980-9991-4e1c-9589-7f53b625e5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8ba559-5c39-498d-907b-42eda22e5e7b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2dfe0d-23de-44f5-ad1e-476a8a7429a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611b4ed9-40ab-43b3-8238-356df9cb7b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d073a303-5f28-4083-b9f2-c4d840dfe54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b21496-ad05-46ba-9bb5-4c91493e4dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853c9bc7-7476-4b75-8d04-6016a941a237",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c5778-d8e0-4089-baa9-4c6e009fed97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ad59e6-d320-455e-9f85-1470f3be4626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11530c9b-0478-4a9a-9c49-22cf68f86b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a597950b-14c0-4804-88ca-6b291b7cab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7760645-7372-4101-86bb-92f806357ddb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95172743-0fed-4cc7-bcac-baf55813698f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803e8dc1-8eda-4b70-bab1-0e4d5826ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ffed9-f389-4be0-919b-bc77b667081e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b8ce8b-7ea7-45f4-ab36-d3fb25f92517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76813ff-505b-4f5b-9478-b31b385b4040",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821957bb-f944-41a5-8d22-553e889231d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec951dc9-44ab-46de-a2f3-856263479eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce82075-f350-4ab4-bcba-8aa91e5ac308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4faf8f2-4f86-4d88-b7c1-c513ef2c5624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627285d1-767b-4eaa-935e-b37235d2f2c6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fd1925-a6c3-4148-b17f-595ccd4532af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1ccd2e-7883-4d1c-8b4c-802188b541af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fab7e1-27ce-4952-ba0b-a744d2cab0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc01d77-51bc-477b-8719-34f5fcf09cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd4f802-3b5b-40d2-9b6d-1b4f10776291",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ddbd58-725d-40c7-a1c1-cd59a58b0f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7a8da4-ff46-4ca8-ab96-af1b08071990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c918b85-0fbb-49cd-98c2-9e1c42a3793c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3d0d3a-5611-4306-8415-45fd3a701da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f5010-2deb-42f9-930f-fed0c9c426db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84655e04-b8eb-4649-b180-e24dcff566df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cbe86f-6428-4e3f-a4ee-76efc259c60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bac9d20-1c41-4845-aa96-fc21b0ed068b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e19084-0800-475e-b68c-b809bc69879d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070c390c-7318-4fbf-9ba1-eeaf756fd548",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd140841-7844-4433-891f-855ceffeb0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1274a14-a9f5-42ac-ac03-c7fdf6ae5e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecadd8af-aa7b-4c6a-8b72-14b652d29468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b69d69-1c54-4ca1-b5ff-1a406668e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9526c893-96e6-4726-a5da-e3f51777c0f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314ccf8f-216e-40e0-8394-42375f716207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e546fd78-31fa-4d95-b572-b48180e07bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d00e2-3cca-4869-ad48-8996a5dc1cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeb0999-87de-442d-a559-01f56e39d067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfa0a65-4485-430f-b516-177cc4687148",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbaf7e4-ec2e-4333-9021-4a27caacfc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cc8cdd-f70c-429c-b8af-31eed4873aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac8795a-5c66-41d6-a149-a9906ea102d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4398c36e-79e6-4f8e-8e3d-17f89cc12b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef86bd56-1822-4c83-aaa6-89392d00195d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480816a9-88c9-498c-a7ed-d449a8960941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6895389d-6aee-437e-a9f3-e1a55be2b1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5befd34d-dcb3-4973-a7bc-663913e476b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d86a5b-8020-46bb-a9f3-165e1c84e8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d51742-c47b-46ad-b61d-eee51c3519b4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48707834-91b4-42af-acfa-140286e02a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41ae3c7-a823-4fa3-89c2-122c14c07395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88805a-7877-4aa1-baba-0d99243b69c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e481046-66ef-4730-9235-86983f334649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c07bdb-a7d0-41e1-a477-32569b42477c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bd6132-4a45-4c5d-9479-c275331be2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bf4a39-6971-468b-ad4b-8204cf5890d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e848753c-d379-478a-ac3c-b235fb4a2e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4602012d-1d79-4694-b087-7ed48b7d4544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870bd878-ab7d-4465-aa48-f577bc06e85b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43413852-b309-4cd2-9990-4580b64c6d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3adb83-d408-43c1-8446-0d8ad2107b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ace753-441c-4c6c-944d-b9432f6901ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca61b9e-e359-44e0-a1b4-e4eb056a8142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2b0fb7-10f4-4b36-bcbf-9fa522bdbfea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f36d27-e9b3-4e4e-b4c7-52ec0ef811f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac2eb66-df6a-42d6-8bdc-3b9daa2a6342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6351ab76-3c56-4799-af83-d173dd8079b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fb3bea-16b8-4644-9d86-3540a87a9e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386fe7b0-548e-4821-a2c7-5aa86dd2cc85",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f6b574-939a-44bd-8169-3f06f84f2576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec8c3fa-f8b6-4eb5-9714-0874844c910d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7720c38c-1566-470d-9f4a-8ceed22fe434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f502ece3-eee5-480c-a5c3-2ecad6f93791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba955b2f-7754-4497-ba35-4e0b5ec46b0a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5884e276-3c15-4354-83c4-11cc62d4cc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69966f57-e914-4e16-930c-61d7924aa178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eabe930-d921-4411-ba58-1f46f80c6429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57150861-393b-4b67-87fb-d5a4458af745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693e58a1-1d7f-4c88-8fce-d1dc436ff644",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ad8289-4783-4afb-bde8-be741826caa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e10d06-bc09-47e6-ac39-51cc7288d0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3aceef-7191-46ef-89e3-46997a7d39b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6919cc50-8896-4405-852b-b65c9bcb56f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccc038d-2dcf-4f84-bf5c-2cc0ced36a01",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48df6ce-7e9e-4bda-9e8e-e51c81f7a44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859df228-2679-4d88-8d13-7ed5af76c2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799823dc-61f7-4bc0-ac24-803d1ecb0bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7136323b-f9d6-4825-a91f-89c6f3837b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a78199-42a8-4fb8-afbf-3cff69b8f99d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d4d384-257f-41d9-ae2b-8f6de99579a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42455dc-3f2c-43fa-b402-535551296f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f583271-bfef-4dc5-abe4-05b801603d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920320db-e726-49b3-b042-ae88ee10ad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d69c25-c5e0-4e87-bc46-3adf4b162f9f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd0654d-dc73-426e-925a-4e30cadd4f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae072af-54b2-4c6c-bb1d-c90f4586b88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ea407-d2ee-484d-9a15-300787bda79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c13808-8a88-4d7d-807d-baf38df64cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb205c5-6613-4c14-9b1d-8fb2a74417fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fddb36e-b643-495f-af50-8005039e627d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e3f556-b511-42a9-b912-c4358bec8ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5022eb-741b-4f24-b656-9c2eec34f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a49c1b-71aa-4bb4-8836-4c558ed97e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27358d0-1430-47f3-9440-02234b94949c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1969aaef-c3bd-45d2-83cb-8e518ea3df99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf00b83-1a72-4785-bf8f-c684987adbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f79c36-897e-42a5-823d-fa854a2bd20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e2324-9213-4230-9ef2-f754ae712550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b935c9a-9f0b-4c94-bf83-c390dda86cab",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabad340-b569-4340-ab43-9a6618270349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5fe2b87-c2af-4796-bf74-3e601cf06df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c589946d-e62b-4fcb-bd8a-3b601bc453f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae565f4e-39cb-4a87-b454-311fd3fc68c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d392a28-4893-44c7-be78-2139c5549cbe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a9965-85b3-4289-8a25-18c480691a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0e2537-a7a6-439f-95d6-2d786cac27da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9103b57-5adb-452b-b5b1-747905151298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130ad86b-ca42-4e29-9c54-dc2b90ffb632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece5466-2242-4094-b3fd-2790ddd809a4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c169a-ba5d-490a-912e-4980db3d146d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e92e03-177d-40ba-ae6e-803263d891ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c61c7a-633c-4460-8998-279223282603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b127c9-6bc8-4ee6-bc49-b6fbbb0e489e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade0dd3f-2a72-4628-9f7a-5c7a560b955b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c75684-457e-4b8b-995d-d6ff5202cddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc21a808-51da-4645-8748-dfcd6c8d2bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d4b06-800d-434e-8005-5d885324bf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f09701d-e7dc-4e9c-903f-0b45cd468f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4789fe4-a93d-4914-8566-e5ab273e21dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df92b36-5fc0-439a-a4ce-45de27ba6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcfbfef1-a482-4898-b4f6-3a2ab1c14ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0622a617-99e5-4d9f-acb0-8ac2364ba0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf622e0c-9c5c-4594-9ad1-4cdfee90f623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd77602c-6aa0-498d-915c-4861ddd7d91d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a3901-6bd9-482f-8cf3-860e29130521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34220385-588a-46a4-929d-e263e618bcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f04702f-ea2a-4b2a-8ad5-65b0f144560d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8492e61d-b09a-4a91-a42a-a4c044cbd8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cf9cb7-0eee-4e0e-b5a0-cad0fce1c3cf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce0bdc1-b8b4-4bad-9e9b-2fcde1100635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f64cdd-f3a6-4d5c-9b0e-3c6df4624cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7066191f-225c-4671-b67c-92dc133aec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ee9f86-db8a-456b-a8bd-92533665ca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ba0bff-252d-4e02-893f-6bffc8e35f01",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b932816a-87d0-49f2-b127-39bdbf7468d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d5c432-863a-4e77-ad3b-0eb5b358d695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5bd21-0783-44bf-b2cb-f9de3fa8a825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89dd8fb-2c67-4f21-86cc-460230992f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4336a8-946e-49d1-b011-c3c2607ea720",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f0e469-09fe-4ba6-a3e6-fd70f35f24aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2dc692-fa12-47ed-a1fd-e890dd392609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba52ece4-648b-4e5f-8ed6-83a33ade21a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7276af50-8fa6-459d-b88f-a4ab69c014a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc3df38-56ca-4691-b5f0-80c34fb7881f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fd1c0-5638-4929-9f8b-0119568dd54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e050e080-2a30-4b81-b0c3-41b9d4eb9f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7ebc01-f95f-4760-8a92-07badf529bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2ccb8c-1b8c-47e2-997d-4d6467dcd2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33efa8d6-23c0-400a-a4ca-aa766136f614",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f082644-ad2b-42c9-9f42-596a33907c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ff49df-2e2d-41f3-9369-38129cb39299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b1364-f8be-4582-95c4-6dc04626590e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b8816c-5bf8-4549-8692-db2eed8199cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1584e79-5f27-49ef-982d-b447a5aff24d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b355150-1b1c-4b54-9aca-4ed1d049d930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333ba252-9634-4b04-8069-c468c450d451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45647b6-2ddb-4872-b78b-2b20c1d686c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83e64ec-3d70-424c-b765-67ea79f5c6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb80a1-c658-4b12-a6d0-baedcc21262e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da00b8b7-02ee-4ae6-b72d-f9d808f06985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f7869b-8554-4f69-9ac8-3453e6565dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25e0d5-2838-4a10-87eb-52d278c649b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14096b5-35c6-4eb3-9bf4-3fc43dafe33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a4d397-e40b-4001-a574-0419573b0170",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51b7e79-a079-4444-93ec-72c32f09186f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2faaad4-5f0b-4f62-9cf7-c167db505805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026234b-e62d-465c-8904-671321082427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7bd548-d38c-47d2-a640-d9325e9d123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23085649-8e56-4f99-8d56-fe3f4b5ce673",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38726b68-728c-416a-bd6b-93806a322e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de179541-6c24-4d6c-b7ad-e8f44c2f5955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e696660-9cee-4295-bfcd-f4030a7a1cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c097cfff-545b-488c-9204-f75a9e45a268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25130f69-65d6-48a6-adcf-a0663020408b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aff628-29e7-4d2b-bf19-a002115e03ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12fc9d4-5a6c-4823-9e64-948d8a196a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86db1fa6-7103-42f3-9bea-65d03298a193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d6e098-0316-4485-b051-07f742e2223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44959c63-aca9-4485-a116-848702214eab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d21ea5-ca98-4237-b931-107b80ef48fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1a34c9-11aa-49fc-9aaf-dca473d27f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ac853-4664-4a7c-bd89-39507eb6de15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc4c073-b67c-4c44-91f4-3aa2a3f6e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc308fd7-077a-4a13-8045-e35f0e60780c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9a9540-8f1e-4f69-89b4-7223cd24d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f10f1e-e6cd-4a2d-a912-16b93f5d7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a32f1-9b60-42de-a527-d855665262ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df76ad26-5cfb-4637-a3b0-450c493a26d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfb0127-2840-4371-aa51-cfa17d02594a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2323525c-6892-4a99-88be-64972f6a28d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a1d886-2330-486d-8138-4af1949b5d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199edf4-34e7-4947-b0f7-fce0b28f635a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5cf555-3557-4f90-9cbb-ad7a1bbc4586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e9a4bb-e7a0-4cb9-896f-a88f530501dd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20afa462-7dce-41ab-b880-d9c1b3d4acfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0efa64f-2c0b-4953-ac3c-1b4db5280669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ecc4f4-517c-41bf-96d1-1db4468079b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6271305-32e3-4500-af99-63dabf108c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e8971-24d3-47ef-9f13-c02aacfe7e72",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baf1217-f9fb-43dd-b617-6dccc5e0bb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d1de48-6d5d-4e09-ad65-c298e21ba077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d37658-f2f9-4327-8676-e102c7144fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62eb46c6-859e-4991-b8df-54dd9a4d3da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90be5d0-4408-4beb-82b6-a294dd9d539e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810701bc-4c21-43a2-a21a-2cf979fdc779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f68a205-3e6b-40fd-b0e2-60f3205c290e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc97e8-5d09-4d50-92e8-48dc3d09983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918eb92d-63fe-4402-9eb9-fe888bb1d46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b1e721-3345-4e9d-a9c3-e4d6319dbb88",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9e8933-9409-42ae-9886-2aac470f37cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "003e37f0-373e-4043-ac46-2849f1d34f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8671f18-d35b-4ad5-a34f-d91e8e2d5dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a13619-0784-473c-9fa1-5500c573fd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac828b85-d8ee-41d6-9e5d-1992b2b87ffe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531825b9-9dcc-424f-8204-c7b258b16b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bed862-5a94-4aa7-9d07-dbfc7460aa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff77bb6b-dfed-4c93-a32b-9e4896035e1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0a0c88-540b-477b-aa5f-2c7a4539c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc333e-f96c-4d0a-8a94-04580fdf59d1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5196d0ac-8184-40fa-bbb4-c3a9557f82a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671a085e-eb27-48a1-a196-490a67f08d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895d781-89d9-4d5c-8fc7-1947b4384f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72833a85-b64b-42dc-aee5-3386c3266e76"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d0a27d9-406d-4f2d-adc6-e5e84face801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e4f99b-26be-42b1-87ff-7b36933c83ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e41ff544-a3a1-46eb-91f7-41addf3e186a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4250cd6-c949-4f62-8e6a-cf7cc53896f3"
                    }
                  }
                ]
              },
              {
                "id": "31c10ecb-296d-47f9-9462-49587f01207c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d3b44d2-4879-4e71-981d-ded8c22ecfba",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd8d2e0-d841-4a1d-9a9b-164e7974a924",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f16807b6-3023-42aa-b9eb-63d75043d82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd42984-dcbf-43b0-944b-c6995f62110e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c134fde8-39b0-42bd-a879-e55c96b70c21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9b823c-1a92-4266-8cb5-fa6211b3ab2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04c55229-4134-483c-a10e-f1a91bd4bbf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2774350a-2ad8-4e8d-b5f7-29bf9dffb33d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dcb1586-9b45-4e4b-86ce-f2c940d36f06"
                    }
                  }
                ]
              },
              {
                "id": "022fa870-496b-458b-831a-c761e4be33ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "43a27459-9703-420c-99cc-56481a974f2a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8723cd-57b0-441f-8fd6-42bc977c0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9239b2c9-962f-4a6f-b5c9-d8948e28c4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4739e17-0aa3-40bb-b52e-d493efe12bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabf63b4-acb8-4ec3-9b62-fad068ed8925"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b75ee77-2a9d-42cf-beda-3e90fed870af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "291b200a-280d-4245-bdb3-89b4020ae766",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdf42299-412a-495c-8890-5d190ac084a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58810ca0-3136-471e-9fa4-f6dc43c74ad5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15a9b27-e4c9-40a2-87c5-fd3cdbb5fc88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a46ee088-2bdc-4b61-9627-7a033f3a2a2f"
                    }
                  }
                ]
              },
              {
                "id": "aaf39cd2-88a7-48ec-bc9c-a597d59efd2c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8293dc62-d0ad-4dd5-85a8-72c55eb947ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17009bc5-0cdd-4d6b-ae29-1741d75157bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92a2ea8d-550d-4cc1-9174-e3da2f14da0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee5a0722-6d71-44dc-b13d-2035089e57e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc68fd5e-b734-4459-a589-35877657f0ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12bb153a-c444-4f4f-a332-b9a495302aca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04f23081-bebe-47d7-89b0-7a7e2f14b66c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecc9246b-0c0e-44f2-a293-7e46c23c2db5"
            }
          }
        ]
      },
      {
        "id": "73b57f18-1695-44fa-aee0-0473f7166faf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e16c98e8-066a-49f5-9c33-8e8b2e24ce95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46eb1271-6e52-4116-840e-093117b31159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43504d99-0007-4686-a057-cd45d7d1fa90",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5069edb2-25a1-4393-99a0-9cec201dcaaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9b63d6c1-25d7-40c2-beab-5e9a0dbf9e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b25fbab-a98a-4172-bb1c-68fb8586b825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42be1367-0832-4864-a8e5-977108d71a26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d2242c0-a21f-4b6d-90e7-aaa2153089ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98caaf17-c8f3-4b28-ac84-e58889ac301b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ad7625-09e6-4bfe-8f99-dd65573f3126",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2873887-3356-48dc-a485-240c8be76ed2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e179b2f-063e-4f55-99ec-221fae7ee0b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c17eebe-429b-4d01-abe4-6c93f9418bd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f986d055-47b6-4a00-b87d-beff8e4f3805",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b87b6caa-29f3-42ac-9a06-8de8848c13a3"
            }
          }
        ]
      },
      {
        "id": "fdc0feca-4cd7-4221-b0dd-e23572f16226",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7bdc414a-6796-45ce-9ba0-897bcafbe8c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8b80454-38f7-489c-92b6-5735b720cfaa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc1afafc-6dbd-43da-b145-e5de5a551550",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41b1ca7-7035-472a-8732-1f917b8d09e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf3cc4a-967c-4b92-9b09-587fc72bc3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabbdebe-fe3c-4b32-b135-b4753c34d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ada0518-9e56-45e3-b852-7ef4e950ed1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bae79df-d683-419d-af78-05a255e7a2ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ed10b87-c018-408f-ba87-c11a661050e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a69e85d3-b960-446f-bd7d-8f4c0b6da244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f14ccf2-7bed-4c65-9e96-64a28049a78c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94d62f80-38d5-4cfe-bf75-8eb0c570297f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0af07709-0982-4b22-afdf-9fcc3fad1ac6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14ea7d1c-3103-4bea-a639-e37ca59b32d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7df79a5-89ae-4edb-8770-b11feca1f92c"
            }
          }
        ]
      },
      {
        "id": "64e1aa33-ae39-498e-9449-e957aa0c1699",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21ab8b8b-4de5-4b4e-9459-57a8e83135cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d253538-677d-4fe5-8e34-419530aeeeb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41e9139f-bd2f-4060-ac10-f0cab8deca09",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f1e95-8c93-42f8-9d9c-bbdab8e97672",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a9a649-510a-4ed8-9d0d-7b1a1f7c62fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a0857c-14ec-4a6e-be32-233375accc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61c788ab-e216-42eb-9160-b37742afbe87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1266b5ff-8b75-4439-8f36-c548987ed964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43add76c-63a4-4bf0-bd60-0244e68763e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4c6442f-75cc-47a7-b58d-3cd27bea1b56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b48ae91-df46-419a-bf97-49342986660e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7900ea66-4466-4449-96b8-6208b8cd05b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42ace017-a4d7-4e21-b216-57fdaf0729c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1331cde9-bdfc-4743-b0e8-5ea60713f9fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f349cc48-1a41-41b9-8257-0d1be65970de"
            }
          }
        ]
      },
      {
        "id": "aefb9384-7050-4ca3-9416-3d33a180b07d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddfa6287-8e6b-4178-8f59-5a80ed7130e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21936494-3ad5-4bff-8763-bc3809463005",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5c5cea99-58b9-435d-b957-2fbf2cab7875",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a0d59fe-b910-4e55-9bae-e1e75d069a95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f76d31b-06f6-4054-b750-6e057f7a0508",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 150.17063492063468,
      "responseMin": 8,
      "responseMax": 8597,
      "responseSd": 769.4024729152924,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727397926196,
      "completed": 1727397972532
    },
    "executions": [
      {
        "id": "b455c4ac-82f4-4cb8-a18d-03dcb91ea514",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8bef009c-6737-448e-a4cd-966c012ad6b8",
          "httpRequestId": "dcfa5672-b480-471f-a35a-1b93759a786c"
        },
        "item": {
          "id": "b455c4ac-82f4-4cb8-a18d-03dcb91ea514",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "18ec35aa-7df7-4a89-88bd-6913ae34688c",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "740a2443-5416-49a7-be2a-e2b135213027",
        "cursor": {
          "ref": "22d8d46e-754c-437d-8991-2e518b41b88b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5568e506-8e3b-487a-9392-d34ee7235240"
        },
        "item": {
          "id": "740a2443-5416-49a7-be2a-e2b135213027",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e228e47f-b8c7-4f94-a650-ada585f7def1",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c17b28f5-f440-4768-a15f-152149bea42c",
        "cursor": {
          "ref": "30613b88-a2f1-4095-8465-4099e2842e85",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7d30f34-3dff-4542-b51a-a9ca8206f6e9"
        },
        "item": {
          "id": "c17b28f5-f440-4768-a15f-152149bea42c",
          "name": "did_json"
        },
        "response": {
          "id": "ee699ea1-d178-4213-9375-bf5e07d25517",
          "status": "OK",
          "code": 200,
          "responseTime": 266,
          "responseSize": 3411
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea734a7-c0dd-4057-8b14-5eae4788f4be",
        "cursor": {
          "ref": "28fd6407-58a1-4cd6-aa1d-05cdb8287314",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1aa7ed51-e53e-4984-b49f-1426e2d95629"
        },
        "item": {
          "id": "8ea734a7-c0dd-4057-8b14-5eae4788f4be",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b03822f-68c5-440a-9b27-4484a4935322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea734a7-c0dd-4057-8b14-5eae4788f4be",
        "cursor": {
          "ref": "28fd6407-58a1-4cd6-aa1d-05cdb8287314",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1aa7ed51-e53e-4984-b49f-1426e2d95629"
        },
        "item": {
          "id": "8ea734a7-c0dd-4057-8b14-5eae4788f4be",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b03822f-68c5-440a-9b27-4484a4935322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923ce6f7-b358-43c8-98cd-2f4c6129228f",
        "cursor": {
          "ref": "02ddd277-3b30-4f2f-b285-cf1d5b6f653a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "335703e9-81f2-4fa7-8c1e-6fd2edd9a1a7"
        },
        "item": {
          "id": "923ce6f7-b358-43c8-98cd-2f4c6129228f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "998acf99-2645-440e-9d22-21cf931c7f82",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869fbe93-877f-4c58-b984-2612b45fb786",
        "cursor": {
          "ref": "e292ea4c-72d5-442e-8ce8-0d61b4dbedee",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b476543-16fb-4745-86f4-37682952439d"
        },
        "item": {
          "id": "869fbe93-877f-4c58-b984-2612b45fb786",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6c8eea33-1283-4469-8f63-ddd48de2ec6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26728bf-c078-41bb-9fe6-b38c36b6978a",
        "cursor": {
          "ref": "21b0b8ed-ed6f-4701-b24b-88abdc4b50e9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "84290622-1b80-4022-b144-0a16bbbc6569"
        },
        "item": {
          "id": "f26728bf-c078-41bb-9fe6-b38c36b6978a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e1fba190-4c96-4b8d-920c-7a4e036fa9b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d93bf-3e30-44c4-8f7d-77d0c1248a35",
        "cursor": {
          "ref": "fd6db70e-9e33-4304-9291-4a1f0d681fbf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "08242747-4202-4e59-b899-d2ee381fd02a"
        },
        "item": {
          "id": "962d93bf-3e30-44c4-8f7d-77d0c1248a35",
          "name": "identifiers"
        },
        "response": {
          "id": "91bf0924-f8a6-4b52-80a6-98f1bd3dd421",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7720b8ab-acfa-4251-898a-7e2775fd2c59",
        "cursor": {
          "ref": "941c3f1d-a1e7-4ac7-85e8-f92632a0d413",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fbcb2ed3-935b-44a8-9680-09a195db201b"
        },
        "item": {
          "id": "7720b8ab-acfa-4251-898a-7e2775fd2c59",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dbf662ab-7cda-4c06-93e9-770460ab921c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda25ebe-49cc-40b1-a667-99c55bd01588",
        "cursor": {
          "ref": "bf4d068a-8efe-4bb5-9fc9-5f0c18f2c7d3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db065899-6ad7-46bb-8fbc-f776eecdbc18"
        },
        "item": {
          "id": "eda25ebe-49cc-40b1-a667-99c55bd01588",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d72734b1-f6a3-4ba1-82e9-211cdd4e2555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da478ef1-b917-4d0e-9ebe-eda58dab4c23",
        "cursor": {
          "ref": "86012320-c459-456c-9516-7448fb9bb223",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b8bec60-748f-45c9-8c8c-d3bd38246b7c"
        },
        "item": {
          "id": "da478ef1-b917-4d0e-9ebe-eda58dab4c23",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef01c178-a034-4789-950f-02f9c8f7405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f9c6a9-cda9-4b16-8991-c0b63e245ee6",
        "cursor": {
          "ref": "3cf466cc-05a4-4179-afce-073b4993c15b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8cd519f-8d0a-4619-b8a3-38e5ca351f1c"
        },
        "item": {
          "id": "d9f9c6a9-cda9-4b16-8991-c0b63e245ee6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6dd6f208-2267-4685-81fc-3d5e173624a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6ef0ef-761a-4cfb-9417-7c7704bb0ea0",
        "cursor": {
          "ref": "a5b4c516-ff10-4894-af17-95027413f217",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d039ef43-052f-4768-86bf-f3440e8e9bfa"
        },
        "item": {
          "id": "de6ef0ef-761a-4cfb-9417-7c7704bb0ea0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a162da51-fa63-4033-be6e-7328e8baaaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1de94f6-cb78-4e9f-bfbe-7fa7c760e49a",
        "cursor": {
          "ref": "16b84541-f049-4eae-9b7c-96be0508ebfc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6c95685-77c4-40ac-90a9-181f7bbfc866"
        },
        "item": {
          "id": "e1de94f6-cb78-4e9f-bfbe-7fa7c760e49a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "30d7f814-38c9-4648-a9d0-21f27ae36aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a6e900-5813-4b15-a290-790a5fe36295",
        "cursor": {
          "ref": "f18a0033-a72d-42cf-842e-12c1fc4d8882",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "50dc0b23-3186-4cd5-8697-327f23c48682"
        },
        "item": {
          "id": "d6a6e900-5813-4b15-a290-790a5fe36295",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cbfef394-3b6e-41e5-aff9-28de36aa520a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9227f0d-4872-45cc-b3ee-9afcb6322278",
        "cursor": {
          "ref": "ac50bb4d-fadd-49be-a2ed-f89acf970990",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4e44b622-6f5c-42b4-a5cf-33bbadfddf9c"
        },
        "item": {
          "id": "a9227f0d-4872-45cc-b3ee-9afcb6322278",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "063af7b4-94c9-4a6c-86cc-1a702dfb0722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d971932-59c2-47ca-abf9-30dbb6ce15db",
        "cursor": {
          "ref": "818eb628-7f22-4155-b2cb-fb96587306d3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f34f5310-33d2-4d94-b591-441691c489bf"
        },
        "item": {
          "id": "5d971932-59c2-47ca-abf9-30dbb6ce15db",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5ccb4a72-c06f-4578-a1cc-ba07c02507b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbcb887-5bb1-4360-9fd2-e6f34cd8320c",
        "cursor": {
          "ref": "97f0d67b-db9a-40ff-91e6-fba4be5e6566",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "209f777d-b1ec-4097-8309-dd19b82a5b2c"
        },
        "item": {
          "id": "6fbcb887-5bb1-4360-9fd2-e6f34cd8320c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ca72095c-168f-4074-8cb9-fec21381e8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0f11a7-ead5-43b4-bc63-2401cb1be6b2",
        "cursor": {
          "ref": "4c71b2a6-6cbe-41cb-98dc-86238058f3d3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d1e86209-2ae4-46e2-8262-5acb0b2d7ccd"
        },
        "item": {
          "id": "2c0f11a7-ead5-43b4-bc63-2401cb1be6b2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4ac657ad-966d-479d-8e39-d4f48b27fabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68f80d-37bb-444d-ae07-8a2a51e3b4fb",
        "cursor": {
          "ref": "5b69c71b-0727-4291-a10e-906cfa3bf297",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "449cc8c4-6908-4c10-9cc0-72843c8ec73b"
        },
        "item": {
          "id": "dc68f80d-37bb-444d-ae07-8a2a51e3b4fb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ec3c2734-8aea-4359-ab62-6b46cf24fc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30426ece-6174-4965-a238-ffbb2962fbe0",
        "cursor": {
          "ref": "aa8bef45-3d90-4c67-a3ee-6e67842b374f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8a505791-f711-49ca-8c1f-44d249b7ae22"
        },
        "item": {
          "id": "30426ece-6174-4965-a238-ffbb2962fbe0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b859e925-f6f1-46fd-b4af-012955968179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28aef4a-18a8-450c-a3f8-99c9a10e8a82",
        "cursor": {
          "ref": "90ca732d-e630-4132-976e-e56f277338c0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c593d68b-03c2-4579-ac41-5cb7a79f3707"
        },
        "item": {
          "id": "a28aef4a-18a8-450c-a3f8-99c9a10e8a82",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0bc546f0-2a9e-4a37-a5d5-b32acda21a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811fc960-5ed6-4613-b706-ebfac341dfc8",
        "cursor": {
          "ref": "574e2830-2307-4634-93c7-b19270dc3a1f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dbdcd84b-a75f-43f0-b748-551fb277a993"
        },
        "item": {
          "id": "811fc960-5ed6-4613-b706-ebfac341dfc8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e9f7fb0d-449f-476c-a823-9b0a69a25e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebb5b77-2cf5-4f55-9f48-a5e4ea7140e1",
        "cursor": {
          "ref": "20a6f117-8d21-460e-97eb-60e8750908cd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b63cd794-1a35-4bfa-a731-534bf5d2e401"
        },
        "item": {
          "id": "9ebb5b77-2cf5-4f55-9f48-a5e4ea7140e1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e4b15945-b36c-4a8a-9585-6956932cf8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9175301e-c976-42e5-b9bb-bbd879ae19f7",
        "cursor": {
          "ref": "cee28bce-f996-49bd-bb41-eedfdfcda845",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f896fd7c-1fce-41bd-b22d-b1f176216cc7"
        },
        "item": {
          "id": "9175301e-c976-42e5-b9bb-bbd879ae19f7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db3404f4-3183-4035-945f-def83ac2e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d754682e-f48f-43a9-aaf9-64e2a7350e59",
        "cursor": {
          "ref": "218fee02-4ca1-4530-a166-8b331fb6013e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f35915b8-87d9-497f-b737-3a9109abd53c"
        },
        "item": {
          "id": "d754682e-f48f-43a9-aaf9-64e2a7350e59",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d151f2b7-8ca6-4309-ac1c-9b20eb9e4d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63718952-2f76-4eb3-baef-be74a480fe29",
        "cursor": {
          "ref": "6a32fb01-7a2f-491a-940b-47bc5664562a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7c3c8abd-f0ee-4162-ab25-3bb1acdffc69"
        },
        "item": {
          "id": "63718952-2f76-4eb3-baef-be74a480fe29",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6f7f3b02-ff93-4519-91f4-3cb8137414f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d73b35e-c605-4aeb-a424-ca7ed56f5dbe",
        "cursor": {
          "ref": "32effe71-aaa8-41f3-9b85-117aa3bf7fef",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "471cdd73-c947-4a9b-8851-1b1a88486a37"
        },
        "item": {
          "id": "7d73b35e-c605-4aeb-a424-ca7ed56f5dbe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "22a8f3e9-66d4-4cc7-8e20-fcd46923a459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865f90dd-bb6e-4ae9-9c57-57c183a27209",
        "cursor": {
          "ref": "2041334e-8f2b-4b07-b0ae-5e291c2f70a0",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "06c2dd4b-c360-4722-aa1c-98d1fbf21910"
        },
        "item": {
          "id": "865f90dd-bb6e-4ae9-9c57-57c183a27209",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d58589f0-e824-46c8-94da-65ca2d7c6c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c03e22-e557-476c-98a2-06d1f3791997",
        "cursor": {
          "ref": "5a1a5afc-6366-490d-8190-02f95a04d713",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "338d54b2-0dce-4db7-b591-5dbda4f39f49"
        },
        "item": {
          "id": "d8c03e22-e557-476c-98a2-06d1f3791997",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "04c681cd-e52d-4a5e-a3e5-249b4deeb410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18416361-1e24-4cab-bdd2-b766b26bb3fe",
        "cursor": {
          "ref": "2a6d8db1-e7da-4894-8159-57eb0a276dbd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8f980d9-5d4d-4b7f-bd8a-3fe3f162ee26"
        },
        "item": {
          "id": "18416361-1e24-4cab-bdd2-b766b26bb3fe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d71b4333-0589-424b-a2cc-f99cdfc30f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2594c3-a5e0-4691-8a17-5bdca14096aa",
        "cursor": {
          "ref": "71e5b98d-80eb-4deb-8b4f-84b4764c1caa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9f6dd9d0-e409-4e35-90b9-b44bf2eb30cf"
        },
        "item": {
          "id": "0c2594c3-a5e0-4691-8a17-5bdca14096aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9e2a7f69-c215-40a3-99d2-ab7f90fc073e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5364c0b-2d98-484c-80bc-2bd390c88162",
        "cursor": {
          "ref": "fc2b45db-2cd0-4540-a10e-6ed0ac94b9d8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d236f62a-7c2e-4e42-b364-7bfd4560511f"
        },
        "item": {
          "id": "d5364c0b-2d98-484c-80bc-2bd390c88162",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "03844a70-edad-4fe9-a83d-2267e9b7c375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b0da7b-47ac-42f5-9942-43d2ee2be2c9",
        "cursor": {
          "ref": "5363aa42-b1df-4419-a886-e288499a2a73",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a307b90-7e3b-47dd-b5a6-69489dbf7dd3"
        },
        "item": {
          "id": "95b0da7b-47ac-42f5-9942-43d2ee2be2c9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3a2310e8-d9b7-4086-aa29-f123b75c9a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b570a5c-d143-4c7a-a910-4f065da711da",
        "cursor": {
          "ref": "d133a1d2-5b1c-4674-a497-f6e21a11c31a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "56a55faf-62de-472d-86f5-8a0d57702164"
        },
        "item": {
          "id": "4b570a5c-d143-4c7a-a910-4f065da711da",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5370486c-eeba-45e8-a0f9-64d3ab38c2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173dd505-e7e1-4789-9ef3-c99afe30932d",
        "cursor": {
          "ref": "eb7af441-88da-4189-9903-0403a5ec0304",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "73307071-c98c-45e4-8804-afd8024c55cb"
        },
        "item": {
          "id": "173dd505-e7e1-4789-9ef3-c99afe30932d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1291ccc9-1799-45c5-9d10-59fde871ec28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083f5445-97c7-42c8-b06f-e7f3c7be86b5",
        "cursor": {
          "ref": "80e8df40-1c51-48fe-a4b1-0f87d630fd72",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59583c8f-9579-4031-87ef-86b8d4a0496d"
        },
        "item": {
          "id": "083f5445-97c7-42c8-b06f-e7f3c7be86b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "263d6003-92cf-4a61-9f7c-0e14b186d3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef01a1-5365-4202-9c30-efef6aa19542",
        "cursor": {
          "ref": "92f3f9bd-b4af-4e50-82cd-d9fdef3ae656",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "af0d1b62-270e-4bff-8aae-c1e2448029c4"
        },
        "item": {
          "id": "20ef01a1-5365-4202-9c30-efef6aa19542",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69359d52-4f45-4c66-b39d-424fa6646653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a19c5eb-5891-45dc-a60a-5641a730ce56",
        "cursor": {
          "ref": "ee447fe8-2b67-496a-9c1a-0daa57369dbd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "361c9ffe-3b41-4a74-b184-25e2cac51ebe"
        },
        "item": {
          "id": "4a19c5eb-5891-45dc-a60a-5641a730ce56",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "efe2c00b-853e-4411-8e86-6c24479ee8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37d6579-bee9-42e6-b375-fb52cd5100f8",
        "cursor": {
          "ref": "8e14c2a1-476a-462c-a997-3caf5c8e9047",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fa108406-feb3-45d4-bed0-c4de771b677a"
        },
        "item": {
          "id": "e37d6579-bee9-42e6-b375-fb52cd5100f8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "79786fc9-3cef-4d61-a2ef-ce738604de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81536777-8616-4a77-8624-f82a92982128",
        "cursor": {
          "ref": "cdae571e-3ca1-4e61-8bf6-e3872633033d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c0a9fdaf-e4d5-41a1-82d5-2591a1197c8c"
        },
        "item": {
          "id": "81536777-8616-4a77-8624-f82a92982128",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b6e21ac4-7254-42ba-810b-bbacb5fa98ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67795dc4-971c-4004-b6cd-9f75eb4a5419",
        "cursor": {
          "ref": "eb3c1bb1-c908-4dc2-bb85-7f36aa52ac12",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fc6bd16b-5cfe-49dd-aa05-6b44c806926e"
        },
        "item": {
          "id": "67795dc4-971c-4004-b6cd-9f75eb4a5419",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f9baefc-c084-4887-9b28-d956390af22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361712eb-2ea0-47c7-97cf-9e2a8494c77e",
        "cursor": {
          "ref": "451ef0a4-d18f-4fa0-8a3f-b971dcb3d34c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1952dc62-e0ff-41cb-a822-d880060165d3"
        },
        "item": {
          "id": "361712eb-2ea0-47c7-97cf-9e2a8494c77e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d7359c27-de70-467e-896c-523c9ce025cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e273a-2485-45fe-b7fb-cfa797eb7227",
        "cursor": {
          "ref": "66eda234-f7f6-4990-9237-63642b83b160",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e358277b-ff2d-4ad3-a3bb-de9eea1001f2"
        },
        "item": {
          "id": "704e273a-2485-45fe-b7fb-cfa797eb7227",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e5b1355-d31f-4031-8bfc-1f9658f4898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd0a733-15a2-4d97-bda5-a0904435649a",
        "cursor": {
          "ref": "469fbf76-715c-405b-87ba-995073d7ed38",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6afa6274-3738-4fd4-89dc-dbbf4f5e6fda"
        },
        "item": {
          "id": "3cd0a733-15a2-4d97-bda5-a0904435649a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c0059549-7d94-416f-9290-6a3caf085784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa9bc5e-ec46-454a-864a-d5546e06f8b7",
        "cursor": {
          "ref": "cb7f8137-16ba-40b5-9063-082d59731866",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fd6ee626-8ad9-4145-8e28-7eb0d952735d"
        },
        "item": {
          "id": "9fa9bc5e-ec46-454a-864a-d5546e06f8b7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f2aacd1e-94ec-46b3-87ec-ecd2ac4960bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9384b122-fbd6-409a-9848-fd692d844ba3",
        "cursor": {
          "ref": "2ca5eecc-4bd9-4f60-9c7a-5c7cde15426f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43f9856d-b33f-437e-a396-41989c21fe5d"
        },
        "item": {
          "id": "9384b122-fbd6-409a-9848-fd692d844ba3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c08dae6-e691-40ac-a412-ce79ebf12601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eeb1c0-7892-463a-a77d-0389387d1228",
        "cursor": {
          "ref": "5cec6f42-d6db-43c3-8492-818b465896f7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ac934ca0-eb20-4294-b5d0-ba821e88c505"
        },
        "item": {
          "id": "21eeb1c0-7892-463a-a77d-0389387d1228",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c72c66f4-5139-4364-b730-db4130942313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fde7a9-9bb4-4d7d-8e2f-c8c99eecf934",
        "cursor": {
          "ref": "72963999-016a-414e-9184-eca8a2eaae5c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3df3ba39-3f82-455b-9846-26a08b10ca25"
        },
        "item": {
          "id": "83fde7a9-9bb4-4d7d-8e2f-c8c99eecf934",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9dc36fda-b335-4256-8b5a-be5231609c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230b0523-9f58-47e9-96f9-008598dd747c",
        "cursor": {
          "ref": "89f3052b-5e6e-44ae-bf0d-56ee3846bf58",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11143659-f1ff-4593-af39-941c2401affe"
        },
        "item": {
          "id": "230b0523-9f58-47e9-96f9-008598dd747c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "664c80eb-c4ce-4c9b-a9f3-61647d547c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7741314a-a8d7-44e8-b993-b7120d6da083",
        "cursor": {
          "ref": "013420b0-0943-4943-86d3-0a62a51410ac",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "009dd46c-eb0e-44f8-88e0-24dcfced1200"
        },
        "item": {
          "id": "7741314a-a8d7-44e8-b993-b7120d6da083",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a7415ab7-cf04-49a9-ae61-f71ab6eefa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dc8cf6-058b-4680-8767-04424ac0b658",
        "cursor": {
          "ref": "145317c6-fc51-442b-9b1d-47c0fecbbd74",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "faa86050-1adb-4df4-91e3-1981d04682ec"
        },
        "item": {
          "id": "37dc8cf6-058b-4680-8767-04424ac0b658",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c50599ed-fcd9-4aaa-841e-02c3b5981f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c893ec-67fd-4bf6-9639-b41293ba8d7b",
        "cursor": {
          "ref": "d141ce35-588b-4b15-b4ae-b528a3fd28d5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e575a5df-9d37-43ec-9fa1-ab25ca28a94b"
        },
        "item": {
          "id": "d7c893ec-67fd-4bf6-9639-b41293ba8d7b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0003661e-474c-4aad-8cc2-b147d018f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839b1527-b65b-4ec2-bcd9-470bbe78196b",
        "cursor": {
          "ref": "4ea30e22-5e40-446a-afd6-0ea2f0aea39b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f99aa77-15d4-4c39-8597-3fe473e2dbf8"
        },
        "item": {
          "id": "839b1527-b65b-4ec2-bcd9-470bbe78196b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ed3d2977-1bdd-4d82-aa19-c8cb6fa121b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce120384-7628-4538-8e95-a5dfca003202",
        "cursor": {
          "ref": "1a60e261-d220-42d7-b55b-cb063e678dc8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ebb3fee6-f135-46e7-bb6b-0ca2454b40e7"
        },
        "item": {
          "id": "ce120384-7628-4538-8e95-a5dfca003202",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c09770df-6d8d-4812-8820-c0a9221f568d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f8d262-eaf7-4d66-8ac3-57de02470e0c",
        "cursor": {
          "ref": "b5fed1a7-01e9-4d58-b0a6-807d3ba44673",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f397ac6b-6967-4c70-a27f-bcaaa7171ad5"
        },
        "item": {
          "id": "19f8d262-eaf7-4d66-8ac3-57de02470e0c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "067822c2-81f3-48e4-bb09-e0e9bed7efbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbaeab2-b900-4417-ada9-7209be968006",
        "cursor": {
          "ref": "e60574a9-0c8c-4227-bb2b-315dd3c821d9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3f8d620a-adf1-459d-b9a8-f59265a3f3e2"
        },
        "item": {
          "id": "6bbaeab2-b900-4417-ada9-7209be968006",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c57218f5-a0a9-498f-a399-8449eab3d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab0969d-48f9-4ce6-8078-d3de9017f1cf",
        "cursor": {
          "ref": "28576203-f03a-42b3-b352-8fdae880966c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9f74397b-65f2-4164-aabb-0f9baf3dcd8c"
        },
        "item": {
          "id": "eab0969d-48f9-4ce6-8078-d3de9017f1cf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "eafba819-265c-455d-ad2a-4dbf5356db16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3762563e-d3de-491a-a173-ef6eb4c13483",
        "cursor": {
          "ref": "f5794d05-0197-4ac9-9a24-e3eb2295be34",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2511ab9c-4095-4894-bb64-ca8ea20af28a"
        },
        "item": {
          "id": "3762563e-d3de-491a-a173-ef6eb4c13483",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5bb52af2-ae59-445c-a252-a147735b13e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c42c00-5b8a-4476-8691-8acbe283099e",
        "cursor": {
          "ref": "f7ce0dca-63f0-4797-902e-fe11c452a999",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "62b493fd-a20f-432d-8782-536d468cfcef"
        },
        "item": {
          "id": "69c42c00-5b8a-4476-8691-8acbe283099e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "048b37eb-adef-4666-bf12-04398e2f643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd427abe-a155-4650-b056-ca8355d93632",
        "cursor": {
          "ref": "fd86c9cd-38bd-477e-a8de-fc86cb89866f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2f5beee8-1ea7-47a9-a351-0d37be83d530"
        },
        "item": {
          "id": "dd427abe-a155-4650-b056-ca8355d93632",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "722443d2-0580-4a19-8e9d-3cd9394c021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf8f8e-6208-42b8-bdab-bbc0d7c84cea",
        "cursor": {
          "ref": "81132b20-244f-43bd-be57-2ce9c1deee14",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ab7a47a0-b012-4d94-b4c3-6db689a35144"
        },
        "item": {
          "id": "4fbf8f8e-6208-42b8-bdab-bbc0d7c84cea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d75fc2df-9b89-437e-84d3-11f152784792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447eb2eb-1585-4b48-a83a-c722db9387aa",
        "cursor": {
          "ref": "69e73fa3-6bef-4d0c-9573-4692d9dee472",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3e72f577-d552-465e-965d-4e626537fb00"
        },
        "item": {
          "id": "447eb2eb-1585-4b48-a83a-c722db9387aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ceef6a1e-fe19-4e05-a941-8381010ece0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad6edc7-de88-44ae-869c-d2e518d36160",
        "cursor": {
          "ref": "097cc89e-5dec-476a-8c0f-bc0c930f72d4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e8a0cf8-3f5a-4bf1-ae74-9e916459c9b5"
        },
        "item": {
          "id": "0ad6edc7-de88-44ae-869c-d2e518d36160",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "241265a1-b679-4f8a-84fa-b044fa161728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff9b665-3546-45cc-b63b-00697b081ff6",
        "cursor": {
          "ref": "72aa071e-d0f5-4913-bb49-d04bd07b93e4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b730516-c1e4-469b-92c0-74731f1eb413"
        },
        "item": {
          "id": "8ff9b665-3546-45cc-b63b-00697b081ff6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58e7f15e-879c-4d1c-abea-079bf081ddb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00828a5-0d08-4fda-a8a1-1918a85cc9fd",
        "cursor": {
          "ref": "ee0ff91c-ea77-4904-ba91-612e9ba3917d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2aa73442-b8fa-4662-a5dd-f769bf872448"
        },
        "item": {
          "id": "f00828a5-0d08-4fda-a8a1-1918a85cc9fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6fbab988-4449-4bf9-80f2-edbda8b198f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ae51b0-b90d-4a3e-b41e-f94187c83310",
        "cursor": {
          "ref": "0029e386-aee4-40ac-989a-2a0b2cc41246",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1879db4-515a-4986-8763-f86a51c60e60"
        },
        "item": {
          "id": "88ae51b0-b90d-4a3e-b41e-f94187c83310",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fa9836cc-9b42-44fa-bacc-1e2e0308b79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14bf979-93c8-479b-90f0-24a16773efe5",
        "cursor": {
          "ref": "52dd5044-1b6b-4d1e-a716-867fe92232c8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3f1910f3-5830-40fa-99d8-673a2806046b"
        },
        "item": {
          "id": "f14bf979-93c8-479b-90f0-24a16773efe5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "426db644-38f9-4e5d-aea3-3b37f6eaece6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bedf1f-c204-4120-b7b9-034ab79cd51d",
        "cursor": {
          "ref": "5d3ef982-6fc4-423c-bf8a-86b919d47844",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c594d61a-4aa0-4d08-bdec-5038e5c16b9c"
        },
        "item": {
          "id": "03bedf1f-c204-4120-b7b9-034ab79cd51d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a5ac09f1-a0c8-46ed-a408-99a539ac1cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb8161b-6cec-45a5-810c-21df6d0df765",
        "cursor": {
          "ref": "a616fb8e-5b2a-489d-9670-e45b516abe47",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bbf0d14b-1ad6-462f-b81b-b25b3799f8d9"
        },
        "item": {
          "id": "6bb8161b-6cec-45a5-810c-21df6d0df765",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5abad693-1d3b-447b-abf2-822d774c0a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24d0b87-1f22-4d15-a729-cdbf4d865938",
        "cursor": {
          "ref": "b6c8e585-e4af-404c-9ba8-8b1fb0fd4d70",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "72bea867-c639-4283-825c-7ce501fe2f8c"
        },
        "item": {
          "id": "e24d0b87-1f22-4d15-a729-cdbf4d865938",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f8f27dc3-7e50-4768-8f65-91fe287edf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e101fa-b4be-4ae3-944d-c68a1bdd4b4e",
        "cursor": {
          "ref": "b0b791f7-dfd9-4d49-97c7-3432e872e6c6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fcdfe5ce-62bc-4d47-81e2-94d6cc03ceaf"
        },
        "item": {
          "id": "a4e101fa-b4be-4ae3-944d-c68a1bdd4b4e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e52e74ae-b537-4533-9573-3dcd523f7658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8231cf-591c-4ff1-afb2-3b4ffe664e93",
        "cursor": {
          "ref": "c47bd3df-5c71-4eff-afa0-b69a8eff15c9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b9434f92-677f-401f-aead-66602f7ee06c"
        },
        "item": {
          "id": "ec8231cf-591c-4ff1-afb2-3b4ffe664e93",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b94593c3-099a-4b86-a9a4-af823079ee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d219315a-0c34-4052-b1f3-95a5e6c9f37f",
        "cursor": {
          "ref": "aba2fb62-b01b-49a6-a3e4-3ac492e0d1f4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "252c783e-b2eb-412f-b8bb-c475182e40f9"
        },
        "item": {
          "id": "d219315a-0c34-4052-b1f3-95a5e6c9f37f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c4754021-8928-42b0-990d-df8a9840f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5be0ca-4403-4109-8879-38ce9808030f",
        "cursor": {
          "ref": "448f5557-111e-4ded-8501-a53d07f53eaa",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "20993ad6-cd03-44b2-a6b9-ff29062e4985"
        },
        "item": {
          "id": "bf5be0ca-4403-4109-8879-38ce9808030f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73bd9f63-a08c-410f-b6ce-719cf162a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0a83ea-1879-47a8-89ee-432bbc787d84",
        "cursor": {
          "ref": "4185bf33-8640-44c9-a0d4-43112cedca04",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40f63898-0538-4b22-8cd1-f5c433c1b50d"
        },
        "item": {
          "id": "1e0a83ea-1879-47a8-89ee-432bbc787d84",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "714d161a-f1b9-474d-b3ed-aacde198be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f2c21c-6c88-4f41-9d17-377d72e97cac",
        "cursor": {
          "ref": "1cf1e5f1-53c5-495a-8eba-763bb651c995",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9744985-7243-4dda-b195-e29d1f04e288"
        },
        "item": {
          "id": "64f2c21c-6c88-4f41-9d17-377d72e97cac",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b970f57-c597-49c1-8312-75f2e058a10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca7d830-84bb-44be-b44a-0fb0a5c591d9",
        "cursor": {
          "ref": "60fe61ab-7899-4e8e-aad9-2158d573cd9f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "10674cfe-4448-483a-a185-54652393af02"
        },
        "item": {
          "id": "cca7d830-84bb-44be-b44a-0fb0a5c591d9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2a4594f0-f323-4deb-971e-aeba1f281912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1832ffc-4411-473a-8ec8-b668e802a457",
        "cursor": {
          "ref": "04c7323c-7f0d-4081-bdfb-dc2fb0e2b48e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9222a9b9-20f2-4584-8eb2-a4e57fb99eb6"
        },
        "item": {
          "id": "d1832ffc-4411-473a-8ec8-b668e802a457",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "75f8c6ab-6b7c-462c-b32e-ec87e128fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012bb1df-a147-4ba2-b2dc-b2b8ad64f84f",
        "cursor": {
          "ref": "f6ab4907-a289-4bf1-a437-5235ec477f6f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "73ff8fb9-8194-4f87-9ede-a71bbc782e91"
        },
        "item": {
          "id": "012bb1df-a147-4ba2-b2dc-b2b8ad64f84f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1c94535b-25a3-44cf-9da1-d8fb697d79cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a0a6b5-99e8-48f1-9bc0-0fd5d115b9c1",
        "cursor": {
          "ref": "a8daca16-c783-45d0-99f9-81bda52c2c31",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "24c88ac3-feed-4880-86bd-b7f582a38bcc"
        },
        "item": {
          "id": "e3a0a6b5-99e8-48f1-9bc0-0fd5d115b9c1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "16c61faf-7e38-4fa3-9eff-95c8c01863a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e3e1c9-266d-471d-b773-3e7e475fad31",
        "cursor": {
          "ref": "b97796a7-8b5d-4044-b233-416d929b9514",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa7d6673-3024-4cf6-933d-36d2a90aa4a0"
        },
        "item": {
          "id": "00e3e1c9-266d-471d-b773-3e7e475fad31",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7ea8f490-b5e4-4a14-b81e-bdd0cb948340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece05272-2f39-4399-a92d-f4337e6d2679",
        "cursor": {
          "ref": "d9155c8c-aa53-4753-b6cd-9698336987a2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "12d186a4-be65-415e-b5d2-83a1de418248"
        },
        "item": {
          "id": "ece05272-2f39-4399-a92d-f4337e6d2679",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bfdcd45d-ac23-4072-8fc1-828a3257b352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e262c-f432-43fc-a0ae-d4a95c800bfb",
        "cursor": {
          "ref": "6741b4b9-57b4-4339-aa28-f29700a51043",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "868a79bb-b041-4c0f-9ca4-ad48ab4a7a62"
        },
        "item": {
          "id": "203e262c-f432-43fc-a0ae-d4a95c800bfb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2e75e763-710e-414a-b46b-6a013222f553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f71f1f-3357-4217-a09c-6084940fd799",
        "cursor": {
          "ref": "501c5b2c-0d43-485b-8036-7c2d3343e3f0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "88b832bb-1b3c-4c56-91c8-b12776dd4bd2"
        },
        "item": {
          "id": "d0f71f1f-3357-4217-a09c-6084940fd799",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e4f3609d-5c27-4823-b8e8-8ec3deefb643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aceb74-227f-41f4-ae62-474c430bd096",
        "cursor": {
          "ref": "4a102f3a-32a3-456d-a7b5-cc7fabb6dfa7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "21df1ba0-d70d-4d18-91f1-673e3e1fac99"
        },
        "item": {
          "id": "a2aceb74-227f-41f4-ae62-474c430bd096",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f6a64905-1ade-4939-ae30-51e54ba9cae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a8272-c8f7-4a50-a0ee-efad694d87dd",
        "cursor": {
          "ref": "6c0cee8d-76b7-4ebf-932e-273438f90252",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6b68b867-8314-4376-ae18-849a6de30f7a"
        },
        "item": {
          "id": "945a8272-c8f7-4a50-a0ee-efad694d87dd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c98de93f-7c09-4432-83ba-ddbd0f0f5ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd88335c-7713-4749-93d1-4e99e8595232",
        "cursor": {
          "ref": "b24421b9-c24c-4386-80c6-97e195fd6fbf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a69fea41-058a-4b01-90a6-b11843582765"
        },
        "item": {
          "id": "bd88335c-7713-4749-93d1-4e99e8595232",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f34367a1-1e85-430d-a31d-6db56c59455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c7ce38-9128-4df2-bd90-dc2c42b361cf",
        "cursor": {
          "ref": "eb0f1595-5797-4419-97b4-619987f1e32d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "862551a7-6b33-4f55-a690-2041a7556c4b"
        },
        "item": {
          "id": "79c7ce38-9128-4df2-bd90-dc2c42b361cf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bc6e91a6-c54f-49a7-80dc-d539197535cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceff669-bf94-473c-9980-c2d5ef77b021",
        "cursor": {
          "ref": "ee5f4937-74a1-43f4-a649-9e4a3d3862c8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8aff28b5-71f2-464e-ac6c-bd439cbaca4a"
        },
        "item": {
          "id": "3ceff669-bf94-473c-9980-c2d5ef77b021",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c4a50f54-1ded-43f8-9bdd-1f8bb0997091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff8fd36-76c4-4fce-81b3-6044f8974f03",
        "cursor": {
          "ref": "d946ea9f-fe4a-4fc9-af70-db9052d5c9b2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a9450e83-d146-4304-8a2f-aa80ab00032b"
        },
        "item": {
          "id": "eff8fd36-76c4-4fce-81b3-6044f8974f03",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05039be0-a6df-4602-88b4-b248cede1224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4e91d4-2289-47a2-b6e5-982d663b5652",
        "cursor": {
          "ref": "13b1568d-a770-41d9-91f9-d2cebd4106df",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eda012a0-9189-44a2-81ec-b1d23f897c3a"
        },
        "item": {
          "id": "4c4e91d4-2289-47a2-b6e5-982d663b5652",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bdb12f5e-cb41-4004-9a1a-956ac850e81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4094cb54-ac1f-49bb-9816-de38f35f1177",
        "cursor": {
          "ref": "9c2c6ade-681c-40fe-aa57-493feab0c136",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2573eff8-a814-4cd1-afe3-21b381356b7b"
        },
        "item": {
          "id": "4094cb54-ac1f-49bb-9816-de38f35f1177",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f4424a83-bbed-49fe-a53f-479c237dd26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78038139-38cb-4ce6-8e67-49abc439ab44",
        "cursor": {
          "ref": "504a9113-95dd-4c69-8c53-7e9ad6f7ebdb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30c6941c-9fa5-4113-a237-058c7580eef2"
        },
        "item": {
          "id": "78038139-38cb-4ce6-8e67-49abc439ab44",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b2b93525-ad0b-438a-bf2e-f2c752b1ebea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c665d3-d864-4678-8d63-920d950a12f5",
        "cursor": {
          "ref": "bb51d728-fcd1-4943-bbf2-43b56c4665ad",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0f23d73f-82c8-47c0-979a-6fc4a1f82ce6"
        },
        "item": {
          "id": "95c665d3-d864-4678-8d63-920d950a12f5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fabe1085-06a4-4c32-a9cb-94a0428ee4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab04532-4aa6-4f0f-8208-ff7b83bc2214",
        "cursor": {
          "ref": "09c03b03-f748-4a2a-856e-dc3758c9216a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4df7c2be-aa1b-4414-8ee9-2a5a6dabd560"
        },
        "item": {
          "id": "fab04532-4aa6-4f0f-8208-ff7b83bc2214",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "40530528-d053-4b28-8bfd-0c3b3ceea9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9051b3f-bd2d-401d-8a40-bb78df251796",
        "cursor": {
          "ref": "9014715f-1641-4dbe-8ad9-54be8e392235",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "66f6ea05-51c1-4a53-b496-dec912e869e6"
        },
        "item": {
          "id": "e9051b3f-bd2d-401d-8a40-bb78df251796",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "58f9013e-38fb-437d-ace0-216e2c90aa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48978aab-95e2-400e-8ad8-d5caaeb0806c",
        "cursor": {
          "ref": "2505fca2-a956-49ae-b588-29872a2c3320",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a86d4e44-dc1a-4e71-881a-44dc515adbd2"
        },
        "item": {
          "id": "48978aab-95e2-400e-8ad8-d5caaeb0806c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dcda56b9-cd92-44d2-82bb-c0880c96c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f568f587-1e08-400f-83a9-4e22eb5b8a68",
        "cursor": {
          "ref": "c339eae2-0775-466e-b693-00badb0c0cea",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1392fe35-6b21-4d91-a896-6da4b804cff0"
        },
        "item": {
          "id": "f568f587-1e08-400f-83a9-4e22eb5b8a68",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3d952ba1-8b6e-4bd8-832d-21eee956a2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc333ff-22bd-4670-8698-a0bc3a9c0014",
        "cursor": {
          "ref": "4bac1010-394e-4ea1-825f-01211c7e9183",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0e50bd1a-c17f-4b91-898a-f42c385260ea"
        },
        "item": {
          "id": "6bc333ff-22bd-4670-8698-a0bc3a9c0014",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "39893a03-d9b9-48b3-be73-5b1db852aa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca00728-863b-4bee-a5da-5f4f9e8b7a37",
        "cursor": {
          "ref": "3a5853d1-c2e0-4080-83c5-94e38caf57ef",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5f30c3c0-43fa-439b-a350-7917dbc897f9"
        },
        "item": {
          "id": "5ca00728-863b-4bee-a5da-5f4f9e8b7a37",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "db8de7b5-b86d-4d5f-8a09-2a7674015267",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba67936-387d-4e14-b6b0-5b0e8c7ba874",
        "cursor": {
          "ref": "8b75049e-3fb5-4fd1-a5f4-f65b8ea3330a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ead29379-07f6-42f9-9b3a-6603c044517b"
        },
        "item": {
          "id": "fba67936-387d-4e14-b6b0-5b0e8c7ba874",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "790f5c7f-aeea-4bfe-b8fc-9c4314414ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6c1fde96-d7c2-478a-acc2-2b31410800fe",
        "cursor": {
          "ref": "1132b868-ae8d-4f9a-990c-8a9f8af1ef25",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bd0f98c0-a91e-4ec7-84b7-7b1df44937d0"
        },
        "item": {
          "id": "6c1fde96-d7c2-478a-acc2-2b31410800fe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "546dde53-3b77-48d4-862f-c193aaaf4662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5d5a1ff3-b5ed-4a52-b3dd-cbd6d1963248",
        "cursor": {
          "ref": "14f3dcd8-c6ba-4cb0-bc19-78faaeb91449",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "882193b0-30c9-4c96-9807-22b18a77d455"
        },
        "item": {
          "id": "5d5a1ff3-b5ed-4a52-b3dd-cbd6d1963248",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d8d95bcf-4cf8-44c3-803d-f8e321d8e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7cc478ba-077d-48bd-8e4a-47fec6a6e73e",
        "cursor": {
          "ref": "2f02c9c7-86e6-41a4-96e6-c373fdefd42b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76b6098c-b166-4dab-9a2f-a463b3924e2f"
        },
        "item": {
          "id": "7cc478ba-077d-48bd-8e4a-47fec6a6e73e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cce2317f-a77e-455f-8077-705a5a2cea56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f0fdc66a-4ae7-418e-9438-a1abe533f531",
        "cursor": {
          "ref": "67094234-740b-4925-8a84-faaf7f50573a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc71554f-1fc4-48b4-bb32-f4e443d1a075"
        },
        "item": {
          "id": "f0fdc66a-4ae7-418e-9438-a1abe533f531",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f0493a73-cf63-4dae-9a73-80e5f2e5d275",
          "status": "Created",
          "code": 201,
          "responseTime": 8597,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170a98c-ac13-4763-bd0d-4fc1ffce8c2a",
        "cursor": {
          "ref": "901953dd-e50e-4738-b934-f6585e05cdac",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c4675197-7fca-4f04-aa03-a0c21630ea9d"
        },
        "item": {
          "id": "b170a98c-ac13-4763-bd0d-4fc1ffce8c2a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fe1ecf69-e461-4f97-a805-24a783509092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "64880b11-558e-4fdb-84ba-ccd5186dbc2e",
        "cursor": {
          "ref": "805e728e-389b-499d-9264-767b0e3d4931",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0f0083f2-5c1c-478e-962d-9178563e5187"
        },
        "item": {
          "id": "64880b11-558e-4fdb-84ba-ccd5186dbc2e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f30bb71-7f13-41fb-b500-f856c9beaf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b5ca2ab4-670d-4bf9-a087-fa386ef36243",
        "cursor": {
          "ref": "57d0b828-7bba-49b5-a9dd-d1d3fea5b9e1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dc3f6869-410b-47e9-93b0-30a6052be409"
        },
        "item": {
          "id": "b5ca2ab4-670d-4bf9-a087-fa386ef36243",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97c1eb11-24bb-488f-8109-791de707019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff3200c-1f2e-4fae-8025-fa4a4e7c7023",
        "cursor": {
          "ref": "650576a4-54be-4ffd-b5a4-984b662cadf3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66ae9ffe-1853-4d1e-a806-6626a391f073"
        },
        "item": {
          "id": "4ff3200c-1f2e-4fae-8025-fa4a4e7c7023",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2f460372-66d8-4c19-86b7-b0d6490a940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f284b142-edc8-4f90-9785-4b7821217483",
        "cursor": {
          "ref": "a17a6f7d-71fe-4621-9261-a59f540cc70a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4e0d3685-41e5-4861-a84e-71f62ed9b963"
        },
        "item": {
          "id": "f284b142-edc8-4f90-9785-4b7821217483",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41df6dac-0b67-4bae-b828-5f7b2ffc4ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403c8162-8f46-4c47-ac6f-8c48c735f50c",
        "cursor": {
          "ref": "26e9077d-d582-48ec-94af-4b132aad6f00",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "55b3095d-d9f6-4713-bc75-88c6c66e9856"
        },
        "item": {
          "id": "403c8162-8f46-4c47-ac6f-8c48c735f50c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a36da10a-2b6d-4dc2-bc4a-759d903b2978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ef4181-2b9c-4a75-9b40-1ab40259206a",
        "cursor": {
          "ref": "e55e633e-a85c-43b4-8d57-97212604eb0a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91a3d084-40f8-4ba6-8351-c131978a99a1"
        },
        "item": {
          "id": "79ef4181-2b9c-4a75-9b40-1ab40259206a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57d9547d-b631-4624-8411-fb48e11dd20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7d586-a53f-4838-8286-a21315ff26a1",
        "cursor": {
          "ref": "32ab5149-c722-4c40-988c-41ff528b4835",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff68b69a-e311-4def-bc7f-14f82897d021"
        },
        "item": {
          "id": "62f7d586-a53f-4838-8286-a21315ff26a1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "01afdc57-2937-4fc6-a5c4-38e4b16b9d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69adcc3c-8bca-4c67-a50d-73cff2508a14",
        "cursor": {
          "ref": "b1cf4c29-3c38-4a7d-b62d-b7b0b60e5767",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "669f803c-6469-49f9-a342-d05bcd3b656b"
        },
        "item": {
          "id": "69adcc3c-8bca-4c67-a50d-73cff2508a14",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4655ce5-269c-401a-8d80-bcd757f1f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba304a-9c85-41a9-b849-00c9456e1b9e",
        "cursor": {
          "ref": "5a3c0f89-3e58-4ab4-ac8a-6052c8c2a2de",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5de62a90-c5fd-4199-bbe0-3977fcf4629e"
        },
        "item": {
          "id": "9cba304a-9c85-41a9-b849-00c9456e1b9e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a3ce119d-4a71-4e6e-9198-7a10a220b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac7ba88-55bc-479e-8b1a-5b1a79034512",
        "cursor": {
          "ref": "6d635ca9-a01b-4e68-95c9-f1a61aff22a0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b8a2e3d4-975d-42af-a6f5-8f7cda1f209b"
        },
        "item": {
          "id": "eac7ba88-55bc-479e-8b1a-5b1a79034512",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "07374201-0ac0-43cf-a802-bf16285bad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73483f17-6a9b-406d-9228-b0952da05760",
        "cursor": {
          "ref": "fcc196ff-54fd-4794-8afe-d7b71916fe2e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "69e07a3b-d9d6-4594-b02c-4a9306673ccb"
        },
        "item": {
          "id": "73483f17-6a9b-406d-9228-b0952da05760",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c46cef12-e616-408e-9e79-47cd361ca5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200eed9f-bd18-48c0-96f5-3effdbeab70e",
        "cursor": {
          "ref": "02ecdef6-ca47-4db5-b3cb-aac8f4b7975b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "14bd0f95-f7dd-4201-8972-5ceb9ae69aa6"
        },
        "item": {
          "id": "200eed9f-bd18-48c0-96f5-3effdbeab70e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4962220-e373-4b70-aeeb-f194e4e00322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc8a709-5cb4-41ae-9d2c-1a0f7c7e9bda",
        "cursor": {
          "ref": "cd1d1211-7f2d-489f-ac6c-74d65722eb07",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dd4f84b5-2424-4e5f-a668-04d10da9ed4c"
        },
        "item": {
          "id": "0dc8a709-5cb4-41ae-9d2c-1a0f7c7e9bda",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f19aafc-e32e-4329-ba0b-85c28deadd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd9ca5b-f6b8-44ae-b477-1591d632097b",
        "cursor": {
          "ref": "70d41dd0-c631-487c-9baf-a540528ea935",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dd07cee3-8c9f-4259-a5de-437fb1527f54"
        },
        "item": {
          "id": "6cd9ca5b-f6b8-44ae-b477-1591d632097b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a5e157b-2754-4de5-8e29-ca29fc869a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46462c8-6bcb-4698-8cb4-6ca95f410092",
        "cursor": {
          "ref": "873695c8-9631-4d3c-9cf7-db4e6041641d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9eb12cf0-1cb0-454b-9e85-57f56d8614a4"
        },
        "item": {
          "id": "a46462c8-6bcb-4698-8cb4-6ca95f410092",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0afbf732-779e-4f08-b8ea-53d722c123df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800bc4a1-204e-4bc2-b1eb-7de398d9186a",
        "cursor": {
          "ref": "5aacf840-e018-4e85-83d3-0a7b65ef018d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7317c10d-a875-4e60-8cb3-afcfd5d11741"
        },
        "item": {
          "id": "800bc4a1-204e-4bc2-b1eb-7de398d9186a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fe07af87-64b9-4bb8-9694-0416c2429427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89d1cdd-a8c6-4ebb-80c5-b588605133b0",
        "cursor": {
          "ref": "d9cbbe9a-135a-429a-b0b1-4ac3500dd9a5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c455b0d0-a70e-4326-836b-87aa7e3293a8"
        },
        "item": {
          "id": "e89d1cdd-a8c6-4ebb-80c5-b588605133b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9219d937-dcae-4a8a-9f29-513234941c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123a9030-5768-4fbf-8dd3-73fb5ac32049",
        "cursor": {
          "ref": "81df8188-b25a-4da7-becf-9f2e9be63bac",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9fdf78c1-3789-46b5-abf1-544881bdd6be"
        },
        "item": {
          "id": "123a9030-5768-4fbf-8dd3-73fb5ac32049",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40d9f196-0275-4378-aea6-6f7bb4f98b44",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "45c9d105-9f4c-41a5-9e93-055b654ccdd9",
        "cursor": {
          "ref": "e3911817-079e-4258-8077-802e8b9bfb9d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "155c8421-ac50-494b-8a5e-b0180b830586"
        },
        "item": {
          "id": "45c9d105-9f4c-41a5-9e93-055b654ccdd9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "66894ebb-b5ff-4990-8847-0c74332292c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ae84c-3db9-4517-a519-a399c24a1066",
        "cursor": {
          "ref": "9230dd68-0e7e-47c3-b453-c8589ac8cbfe",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "643eb417-f08c-4ab8-93aa-5e7bedce0471"
        },
        "item": {
          "id": "7c4ae84c-3db9-4517-a519-a399c24a1066",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2eb7d2cc-82e9-43f6-b182-78d1a59df252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e208d4-91e8-4662-ba5f-a802b44178a4",
        "cursor": {
          "ref": "bf09f3f3-02fb-4106-84c7-2d296ec612d4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0dd6ae8a-1c7f-4540-99cc-0e38df357030"
        },
        "item": {
          "id": "73e208d4-91e8-4662-ba5f-a802b44178a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b9c6b2ee-3d8c-4e8e-8315-ff5fd4aa6d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9d74b-fc78-4d9b-aedf-50d4016ff188",
        "cursor": {
          "ref": "ee77de73-9851-4020-a069-ed2a5bccd62e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77636383-91f0-4306-a0d2-272a929f1a40"
        },
        "item": {
          "id": "ecb9d74b-fc78-4d9b-aedf-50d4016ff188",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d2c91e77-e3f1-4b60-b49d-f9d5bfda4caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43a0c3-6655-49cc-9f8f-60badfe97d23",
        "cursor": {
          "ref": "801c35b3-1c38-4f75-b056-b4a3eba39074",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1b495c48-8893-40b6-a65e-65c108ed3cb9"
        },
        "item": {
          "id": "bd43a0c3-6655-49cc-9f8f-60badfe97d23",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3698d9fc-290c-480f-84d2-9ed3a316fd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1678f47d-7b43-4678-9d5a-4b444b316e26",
        "cursor": {
          "ref": "b675017b-84be-4ec4-ad39-f822f1368279",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b66ca95-cf9c-48ae-a320-f674b45987dd"
        },
        "item": {
          "id": "1678f47d-7b43-4678-9d5a-4b444b316e26",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65ab2fa4-3f8a-4d83-984f-2000599f611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c9c392-32a4-4518-8d27-1a082726a805",
        "cursor": {
          "ref": "22f274ca-5c03-423f-8dc5-781ef06dcc4f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e8fd3ffd-a7a5-4737-9269-48263d0e786e"
        },
        "item": {
          "id": "77c9c392-32a4-4518-8d27-1a082726a805",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "95e808a0-9da0-42ef-b4de-5fca425489c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bee4bde-df5d-4311-b30b-b3749fa538bd",
        "cursor": {
          "ref": "5ff86271-5a73-4aa5-befb-a5be9638aa01",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "395d77bc-98b6-45c2-97ad-272190de2365"
        },
        "item": {
          "id": "5bee4bde-df5d-4311-b30b-b3749fa538bd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37591c06-70bd-4c15-a896-d6bae4e50cf6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1717858c-d530-4537-b7e4-8c99f6d694b9",
        "cursor": {
          "ref": "70e746dd-834e-43e7-88b4-9477e953c83f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8bce0cf5-89cf-4102-bdc8-ff3bf7529411"
        },
        "item": {
          "id": "1717858c-d530-4537-b7e4-8c99f6d694b9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b5b9d57-8679-464b-ada2-700efc583ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48df6a53-a78b-4f9d-ac81-ffd0030d8ed8",
        "cursor": {
          "ref": "3fb90f03-cda9-456b-afbc-5527d382983c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6561feb0-01f1-419b-8d23-d8d920c72a03"
        },
        "item": {
          "id": "48df6a53-a78b-4f9d-ac81-ffd0030d8ed8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "942e1644-0b3d-4b9f-8515-e11a76958473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33837029-401a-435d-9ad8-8ea6ae685903",
        "cursor": {
          "ref": "ec92671f-fe18-46b2-9bc6-239c00f6128e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8b94a564-0e77-4ba7-a6f9-53b1a7b2be7f"
        },
        "item": {
          "id": "33837029-401a-435d-9ad8-8ea6ae685903",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17093ae8-2886-4bdb-adfb-7e37f4c8afc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f8a9d8-f5a8-495b-b800-0a99fd2d2359",
        "cursor": {
          "ref": "99e69e01-abfa-4e35-b6b4-c3da6c0fad56",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2342912a-f91c-4b37-a87a-945def5c94a7"
        },
        "item": {
          "id": "90f8a9d8-f5a8-495b-b800-0a99fd2d2359",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "557bfb2c-13ae-4a9e-93d9-1251daa630f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfa1eef-5c4c-4362-a1fd-c1dfc4890476",
        "cursor": {
          "ref": "0b49e24c-e439-4a67-94da-05313a4f4aaa",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8f559a5e-f274-44fb-a838-d81f4ea1fb2b"
        },
        "item": {
          "id": "8bfa1eef-5c4c-4362-a1fd-c1dfc4890476",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "286b6240-1937-43c1-a3c8-bfda10a9f668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd6f68-0fec-4e27-8403-02c2d3440770",
        "cursor": {
          "ref": "a81de3e3-51fa-43f6-a210-42642fe3afd6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bac2f40c-0bc4-42d5-8b55-4d38ad818677"
        },
        "item": {
          "id": "cacd6f68-0fec-4e27-8403-02c2d3440770",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d78b85d4-86b1-4bdb-b4e4-924c5e85dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857e64f5-bc18-4c77-84a2-79d837580ce1",
        "cursor": {
          "ref": "870728fd-e526-42d2-9cf5-5e4607e4653d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "96ed9d3b-2003-4697-a4fb-e9e981eb4cce"
        },
        "item": {
          "id": "857e64f5-bc18-4c77-84a2-79d837580ce1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d28ffe9b-4522-42fd-b6fd-a392411c4070",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "cf445633-cd95-4605-bd92-fd2969ca34ea",
        "cursor": {
          "ref": "1891c4e5-495c-4f48-abe7-9c7b47a35050",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b1fd75bf-c6c5-4634-b25b-589963836161"
        },
        "item": {
          "id": "cf445633-cd95-4605-bd92-fd2969ca34ea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf234218-9b7a-4e41-8517-24f5f11643bc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "33250c80-d6ca-41d6-ab96-aca08aff4a44",
        "cursor": {
          "ref": "455c9503-23a6-41f7-8fb6-351077456f65",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "af6a9d74-e7f7-452e-99ad-40a86fb7260e"
        },
        "item": {
          "id": "33250c80-d6ca-41d6-ab96-aca08aff4a44",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "484650ef-ab2e-449d-b443-f47e7b611f86",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7687d2d6-3e88-4025-a9c7-caa4992c7fba",
        "cursor": {
          "ref": "133c69cf-0301-4e53-9cf5-892fdac93ca0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "62cfb5f9-5113-45af-9dc1-6bc808ecef79"
        },
        "item": {
          "id": "7687d2d6-3e88-4025-a9c7-caa4992c7fba",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ca7f04d2-1582-4f00-a7c0-628e51fa6862",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8f90bbd1-1317-481e-95c3-15de5122afdd",
        "cursor": {
          "ref": "8e314e8e-d09e-43c6-8747-22aca3bcf606",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cb8e9580-e716-441a-a8c1-2cdc0d3f4625"
        },
        "item": {
          "id": "8f90bbd1-1317-481e-95c3-15de5122afdd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "538fbc7f-720b-44ca-9ca3-b4824cd10811",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3b46875f-7ad7-46db-ab13-0339a95c0d33",
        "cursor": {
          "ref": "c6d5724f-29ca-47d1-a603-144ce5807cd3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b2276bfc-62ee-4f93-8c3c-6d83531f0d87"
        },
        "item": {
          "id": "3b46875f-7ad7-46db-ab13-0339a95c0d33",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9cc20426-0c57-4987-bab7-d6b257bcd8f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2946db32-34fd-40e0-8437-a4fda236a0cc",
        "cursor": {
          "ref": "cf0c619e-3cb8-44ce-99b8-12bd5eeeaf48",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5724b609-ef66-4389-a51f-0fc92a642f94"
        },
        "item": {
          "id": "2946db32-34fd-40e0-8437-a4fda236a0cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "434495a1-7fb2-4b12-bcd7-9935e6c180b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f336f7-9a56-401a-8e4e-af6b8daea9b1",
        "cursor": {
          "ref": "5bdf4458-6083-41ee-9283-a5c556badbd8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8176e8f0-b427-4eff-8feb-c5f6c1483579"
        },
        "item": {
          "id": "66f336f7-9a56-401a-8e4e-af6b8daea9b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f0066c92-6c18-4f1e-b703-58eabf533f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1fe853-4160-4ea2-bacd-27a212879dd0",
        "cursor": {
          "ref": "45df6468-11d0-4d23-b414-91fb90525891",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "acc700d5-5e10-4dfc-be49-e976d1b179fe"
        },
        "item": {
          "id": "6b1fe853-4160-4ea2-bacd-27a212879dd0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6266b840-6721-4ba4-91fa-96b946763942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01af927e-b796-41b4-b25c-eb25bc7ad7cc",
        "cursor": {
          "ref": "ee5b485a-250a-488f-9570-c15352ba5871",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "754d2ec7-8088-4712-a3b4-36b47daaef68"
        },
        "item": {
          "id": "01af927e-b796-41b4-b25c-eb25bc7ad7cc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7480b38c-ff03-43af-907f-b3a974149eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a358fe2d-bc03-46a8-b7fc-4028715219f3",
        "cursor": {
          "ref": "542beeb8-0b3d-4daa-9067-0e3bc369ba67",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0de25cf8-17cc-48c9-82c7-fb94f7fa9ff4"
        },
        "item": {
          "id": "a358fe2d-bc03-46a8-b7fc-4028715219f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "df66efb7-b16a-4468-9cba-57e11d51c03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405cef4e-4dbc-414d-813a-36e14d772b00",
        "cursor": {
          "ref": "c6a23d07-3837-4eb2-89f5-6b206f62c589",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "00fadb51-ee66-4fa6-a889-a86932ea1ba9"
        },
        "item": {
          "id": "405cef4e-4dbc-414d-813a-36e14d772b00",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19126b24-861e-4f59-962a-b237e6eea8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef090182-153c-42bb-91da-4d827437bd83",
        "cursor": {
          "ref": "eb2d93f1-20d8-4c24-9040-2c42f92be0b4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3275e374-1941-471b-9fd6-8149648703f9"
        },
        "item": {
          "id": "ef090182-153c-42bb-91da-4d827437bd83",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c63e428-da68-4e8c-84c5-d1d05fe088b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b094ca9-7eaf-423b-883c-7b7e66397d74",
        "cursor": {
          "ref": "1f63e7d9-0697-4e05-b164-0b1a1b2ffe8f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "14e381fd-840c-4fe3-afff-8c0f4c573306"
        },
        "item": {
          "id": "2b094ca9-7eaf-423b-883c-7b7e66397d74",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7de97316-5aef-433a-917f-a6405142e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffd2613-2a38-46b7-bfc6-4a3a42d7ff30",
        "cursor": {
          "ref": "60b12616-4ae1-4400-bc0b-d392b53e58c9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9bbe1708-b132-4ab3-845e-42abb1df1d19"
        },
        "item": {
          "id": "3ffd2613-2a38-46b7-bfc6-4a3a42d7ff30",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4fe5fd08-3750-4489-9f74-3e6a6f811bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba420bc-ede2-456a-8619-5377ed682725",
        "cursor": {
          "ref": "c1eb9870-0996-4949-92f8-6aecfe7d1eda",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "546f7bea-c65a-4a3b-a01c-5627232fbaf7"
        },
        "item": {
          "id": "8ba420bc-ede2-456a-8619-5377ed682725",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f5b7973-1a2c-4ea5-b9c3-25b90a7addca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9ccf1-0972-461b-bd17-09be2de598d6",
        "cursor": {
          "ref": "9869640e-61ed-4b88-8e80-33c169418d4b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a9c0fc47-a63f-4f0c-bc32-1aeb41cbcd37"
        },
        "item": {
          "id": "00c9ccf1-0972-461b-bd17-09be2de598d6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c773cc4a-39ac-4c75-8428-ad3186a93461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149888c4-3dd2-4ff4-adbc-0031f6153c49",
        "cursor": {
          "ref": "3a3ab6e9-514c-4890-a549-49dd6461e1df",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8759d2d8-2b4f-4366-a117-930d86740ed1"
        },
        "item": {
          "id": "149888c4-3dd2-4ff4-adbc-0031f6153c49",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d1827a50-60e1-4dab-a1a7-e2d1ac7e7992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5f739e-a7fb-4b94-b974-715c38227b0f",
        "cursor": {
          "ref": "30f1626f-bd90-4c7f-9a79-d398ba8caea9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b827c41e-7382-4ada-8a20-c9d0e75d2b8f"
        },
        "item": {
          "id": "4e5f739e-a7fb-4b94-b974-715c38227b0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "abe12dfb-7662-4eb4-bd95-6c3ab2f2f7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a3eda-c1a3-485c-b580-54948b771eb9",
        "cursor": {
          "ref": "7079bde2-58b5-49d2-847c-19358c87f1d0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1f805054-3b62-4836-95f9-5343808a1252"
        },
        "item": {
          "id": "4a7a3eda-c1a3-485c-b580-54948b771eb9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "07445560-50a4-4879-af6a-d9ed615cb953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c0684a-5e0c-44af-8139-7100fdeab16d",
        "cursor": {
          "ref": "49e4f12c-2787-462e-931d-5833799e6ca5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0bb112ed-6a90-4d3a-8660-aa42a9e9d6a2"
        },
        "item": {
          "id": "26c0684a-5e0c-44af-8139-7100fdeab16d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cdb73c37-2d9a-483b-939e-54b9a54b0d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b99f478-e581-4d7f-9f29-08096267ecfe",
        "cursor": {
          "ref": "01c1ce8c-fea3-4bcd-9f8e-cc1d25d49d7c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73ec711d-5b0d-4cec-840c-f87bff005162"
        },
        "item": {
          "id": "4b99f478-e581-4d7f-9f29-08096267ecfe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "21157a1f-05fe-4856-a3cd-85701c8d7622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f9c59-1b2c-40f5-ab84-8d660b9aff3b",
        "cursor": {
          "ref": "1f4589f3-83d2-4237-8257-033170b99a6c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b0d27718-f782-4c93-9289-66db98dc5c71"
        },
        "item": {
          "id": "cb6f9c59-1b2c-40f5-ab84-8d660b9aff3b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e2531fd-9429-49c3-a87c-7427a79140de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1323e-2503-4794-9e0e-1d64e12663a3",
        "cursor": {
          "ref": "48865d33-4ccb-40d4-ab27-2e76ff82326a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "92a5a9a3-1bdc-4441-b681-6e57988ce356"
        },
        "item": {
          "id": "79c1323e-2503-4794-9e0e-1d64e12663a3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2403e6e6-a165-4475-bdea-e0b4e9466b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf678e6-9c13-484c-8088-240c42d3c151",
        "cursor": {
          "ref": "809f8a65-8edf-48b5-b846-49537d70fbbc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1c251cbd-ea9b-4c6b-ab6c-d417c54b0ba3"
        },
        "item": {
          "id": "0bf678e6-9c13-484c-8088-240c42d3c151",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f98ba17c-bdd8-42ac-8477-152b7e607515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec15bcc-f0ed-48b6-88fd-28292ce341f3",
        "cursor": {
          "ref": "27e3c31b-d848-419b-bff7-9165a96548be",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05027d0f-509f-4484-b3a1-4c696775af65"
        },
        "item": {
          "id": "fec15bcc-f0ed-48b6-88fd-28292ce341f3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bdfb3667-347b-4a14-b792-968440bcc360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6f647f-6f19-48e8-9a31-b96f041c7664",
        "cursor": {
          "ref": "0b16b41b-a4ec-439e-8960-40a841e07de7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "82418135-36b0-433b-99f6-0dbb9ab5c1ea"
        },
        "item": {
          "id": "9b6f647f-6f19-48e8-9a31-b96f041c7664",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "36b610fb-b23d-44a4-8625-4470896a9a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475798af-fdb5-419a-ad55-5324465588a1",
        "cursor": {
          "ref": "f8c05b4f-beb9-459c-bdd0-b8b2bcee4b96",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "26421efd-730d-416f-a717-8ada7cd82346"
        },
        "item": {
          "id": "475798af-fdb5-419a-ad55-5324465588a1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "308126cb-086b-41ef-9083-7449ba8163e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8a4bed-fa2e-43f5-9c26-47962cf5a137",
        "cursor": {
          "ref": "6b062c84-2ac0-49a9-a226-adddefda2d06",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "35665954-9928-4461-b489-311dd285c59b"
        },
        "item": {
          "id": "9e8a4bed-fa2e-43f5-9c26-47962cf5a137",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8ce68cb1-3369-4589-8251-a8ee17f110ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94eda22b-e284-453a-9079-1cba1594cfa3",
        "cursor": {
          "ref": "8d713df9-1bea-4922-8ac1-69f3fcd9c19a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3637be83-3acb-4843-9436-6cb19a0c8fac"
        },
        "item": {
          "id": "94eda22b-e284-453a-9079-1cba1594cfa3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "039e9186-014a-4e11-b068-5534eea2ec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b94b46-2edb-4b9e-8c9a-62d98c4c6c4c",
        "cursor": {
          "ref": "70584d48-889a-4e1b-a2dd-3d8e0537554b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c4862ce-e4cd-4244-869e-ac0b49c219c7"
        },
        "item": {
          "id": "87b94b46-2edb-4b9e-8c9a-62d98c4c6c4c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2a0f1cf9-70ec-401e-adbf-151e5bde3b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b572f31-8d47-4b8c-8686-02a8728f01d1",
        "cursor": {
          "ref": "10108b16-3d14-4e12-892e-32689f96f609",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d91bf2c8-8ce8-4e36-8382-0182f603a321"
        },
        "item": {
          "id": "8b572f31-8d47-4b8c-8686-02a8728f01d1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c6a2185-2259-4f48-9d50-22fbf2665adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac827bc-c93d-4563-95f9-2e53b6178be7",
        "cursor": {
          "ref": "72c0141e-daf8-4bc5-ad14-2aec3e3985dd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ef3e5170-d13a-48e1-8679-63d78008d793"
        },
        "item": {
          "id": "5ac827bc-c93d-4563-95f9-2e53b6178be7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "59f55689-d4da-4755-8814-db7efcb267ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ab0f8-65db-4f40-b4c1-19cd53d9c1b2",
        "cursor": {
          "ref": "a976bc2c-74ba-4d92-afed-812bf370e22e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "740cfa50-2565-4581-ac68-df910ba75e41"
        },
        "item": {
          "id": "294ab0f8-65db-4f40-b4c1-19cd53d9c1b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1943baa2-4c6e-4f7e-acb1-32e494c1346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac25c871-07a0-4c69-94ff-1f97283cb932",
        "cursor": {
          "ref": "e86025af-8403-4ef2-ba33-a69cc3e12ce0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e6628dc-30ce-47cd-8731-c67b24a9bce2"
        },
        "item": {
          "id": "ac25c871-07a0-4c69-94ff-1f97283cb932",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2b4343b6-3b41-4d3c-b8e7-20b4029be0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a22f06-5a66-475f-9de3-2c128b274c1d",
        "cursor": {
          "ref": "bf999b9b-a9f9-4294-a09d-1a5efff55b34",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "70fe7d36-6b8f-4d61-aaef-af25309bd2b4"
        },
        "item": {
          "id": "d4a22f06-5a66-475f-9de3-2c128b274c1d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a9d67a2-5a1b-4609-ae3a-e715aaaaee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c10632-bef3-4d85-9bb3-4930aef3bcfa",
        "cursor": {
          "ref": "8933aab3-f532-4e03-9624-39a044cbb1c7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6f79990c-7c42-44f0-9c33-4c1c35122ade"
        },
        "item": {
          "id": "04c10632-bef3-4d85-9bb3-4930aef3bcfa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82b5af47-12a3-479e-9a46-76a504539a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029d3d0f-ce6d-467c-a586-77bb35ec276c",
        "cursor": {
          "ref": "83bbdc86-71e0-4f72-a1ba-da0662ddf6f7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7ed41ea7-24d9-4dde-8762-df7dbd5b3612"
        },
        "item": {
          "id": "029d3d0f-ce6d-467c-a586-77bb35ec276c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bcb1946a-5dc3-4bee-9efb-bfd7b19c4198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbbbacd-681b-483d-a546-ec8050bb19a6",
        "cursor": {
          "ref": "bccc1aaf-b616-4e63-af99-c6518a827a38",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "74cae262-7377-4163-9733-79b7faafbbdd"
        },
        "item": {
          "id": "4dbbbacd-681b-483d-a546-ec8050bb19a6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7c5924dc-627f-422d-b72c-027774bd97cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557ce4f6-fc63-4d8c-931b-3f36c34c3dc6",
        "cursor": {
          "ref": "b33366f9-e8ce-4bd6-9094-383931b2b13d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ec835a62-fcbf-4f05-bc6a-33461446e1cf"
        },
        "item": {
          "id": "557ce4f6-fc63-4d8c-931b-3f36c34c3dc6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "97a41f61-1d6e-4d84-b495-f25b701f2791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dade26d-64c6-41f9-9a35-ab635a0cd751",
        "cursor": {
          "ref": "123701fa-31ff-4665-a4a9-194c730c2e47",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d9e23548-05c6-4c24-bd07-1e2a710f007e"
        },
        "item": {
          "id": "6dade26d-64c6-41f9-9a35-ab635a0cd751",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e22b86a1-61ed-4db2-a71a-847011e50c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e196d1c6-3633-412b-ae09-4cccd83f4977",
        "cursor": {
          "ref": "8238fb00-486c-4d89-af8f-998a8ea5f1c8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a64ae2fd-c9c3-40f2-825a-a957ff190333"
        },
        "item": {
          "id": "e196d1c6-3633-412b-ae09-4cccd83f4977",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "58efdb18-5560-4b01-8123-50dcd9d307cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbccd0c1-4536-4a30-951b-89577fb143bd",
        "cursor": {
          "ref": "2e0822bb-fb3e-48f8-a130-321dabdc7d24",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d9970ebe-eba9-4388-9532-14d9f5528e7b"
        },
        "item": {
          "id": "fbccd0c1-4536-4a30-951b-89577fb143bd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a2900eb4-0bb9-42e9-8807-06eb7d3580f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc04a38-0062-4361-baf7-d2011c2f1053",
        "cursor": {
          "ref": "c4b29699-2bb9-4eab-886a-d42538a15257",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "41d13880-9a8c-431f-ba84-4e623aee03cf"
        },
        "item": {
          "id": "0cc04a38-0062-4361-baf7-d2011c2f1053",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0a3a46d3-9f42-4b5b-9f0b-30994a90fda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd646932-f8d9-4ae1-bd25-6bbddac6ad6c",
        "cursor": {
          "ref": "e11c7797-9ab9-48ad-82ab-30ad2ad49888",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e7313adb-5006-4917-b15b-6b06feac64c7"
        },
        "item": {
          "id": "dd646932-f8d9-4ae1-bd25-6bbddac6ad6c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "49275797-0c8c-4e87-8c3e-ed47219dc1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aec609-7198-4699-b95a-c6ea95d219df",
        "cursor": {
          "ref": "bcb4ecfc-04e7-4603-817e-a863e66f3f5e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a7f5b1e1-c6b6-44a5-b749-34de411122b4"
        },
        "item": {
          "id": "d0aec609-7198-4699-b95a-c6ea95d219df",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5c9d1139-e997-4b6b-86f5-b8f1467b74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252821d2-0db3-44a2-ba7a-b97f804337f1",
        "cursor": {
          "ref": "946b7684-4ac7-4aa5-9f96-73eadc5bda42",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "84e11249-dbc8-48e6-bf76-75906cc683df"
        },
        "item": {
          "id": "252821d2-0db3-44a2-ba7a-b97f804337f1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "277ce3b5-52f5-4c6c-a150-992e393a6caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3c9ee9-5855-459a-9d0e-0d1375cc14a5",
        "cursor": {
          "ref": "70a5067c-b3d9-421c-a077-be9a4027f325",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "57c196ab-e976-4fda-adf1-ea3e416f7f59"
        },
        "item": {
          "id": "4f3c9ee9-5855-459a-9d0e-0d1375cc14a5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2513f3e9-23eb-4400-8a3d-ccb905bb642b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ebca84-63bc-4842-8a4f-1e75322c381f",
        "cursor": {
          "ref": "73dd81f3-3a29-48d6-ac90-307fb4d09f95",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fbbcbc31-3317-4924-b761-b92ba8f5d9be"
        },
        "item": {
          "id": "23ebca84-63bc-4842-8a4f-1e75322c381f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dc14cd00-81a5-4e77-888b-b800cdfb2c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b89755a-db7f-4840-98af-798906ed88e9",
        "cursor": {
          "ref": "b1054d0e-85a5-4236-920d-f7be4b1dad6a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a54a8f24-0e05-44ef-8293-b117299d2cdd"
        },
        "item": {
          "id": "7b89755a-db7f-4840-98af-798906ed88e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3262ede9-ada3-45eb-a075-860994c1fb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180403bc-f4d5-4721-baaf-f39abc2c6b84",
        "cursor": {
          "ref": "64b1a443-b0e2-481c-90e4-1012071d4d62",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2c3dbd56-3463-429c-82a4-62f54431930e"
        },
        "item": {
          "id": "180403bc-f4d5-4721-baaf-f39abc2c6b84",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4e43a59c-5ce6-40fd-901a-67487d9a71fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471c6c8-2e02-49be-877a-53aa2756e33b",
        "cursor": {
          "ref": "ba9ef562-c621-4246-8fbc-8a3969fd68d0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "354e6c8d-3596-4c67-8a6d-be8b0d6f38f4"
        },
        "item": {
          "id": "d471c6c8-2e02-49be-877a-53aa2756e33b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a5cd1904-fc30-4370-8be5-f10982fecb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ee7024-5735-429c-b7cd-094e96d9a71e",
        "cursor": {
          "ref": "32d12869-c53b-427d-a899-45284e1116ac",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ef6fd50e-27ef-4493-b871-d4f826290a7a"
        },
        "item": {
          "id": "61ee7024-5735-429c-b7cd-094e96d9a71e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1faa37ea-5b13-4eb0-b0fe-647e796956ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df1173-dbcd-4e74-90f9-38639564490d",
        "cursor": {
          "ref": "c9ba8cc8-1fcd-4bdb-ba75-1f2f4ec23292",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "421034cf-0d9c-4af8-bd42-4df1d0bdf2f5"
        },
        "item": {
          "id": "c0df1173-dbcd-4e74-90f9-38639564490d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b9ac0930-563d-4ff4-99a7-ee3c6082ab63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff1af54-eff1-4ec9-80fa-42cbd5efcfe1",
        "cursor": {
          "ref": "81edf272-8ebc-4d81-b1d6-2f8e90cfbc72",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9418eda4-874d-49f4-9b24-9236b18f4f3d"
        },
        "item": {
          "id": "cff1af54-eff1-4ec9-80fa-42cbd5efcfe1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad0edfdd-30f3-4aae-a7dd-0bc438d81649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecfc4b-ba64-49ff-9fec-d3a74b107fbc",
        "cursor": {
          "ref": "61add407-43a5-4fab-a50d-63196094fe41",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f52c19b2-0f6d-421f-90d4-1f36603b5ef3"
        },
        "item": {
          "id": "cfecfc4b-ba64-49ff-9fec-d3a74b107fbc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f0bea06c-25e2-4977-a03c-fdacc922cea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8ba559-5c39-498d-907b-42eda22e5e7b",
        "cursor": {
          "ref": "cba82c28-4a04-4a41-a7ce-d69446c75623",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "55c7ee1e-b0ec-47b1-b605-4b10cba56da4"
        },
        "item": {
          "id": "dc8ba559-5c39-498d-907b-42eda22e5e7b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1e89f4a0-2999-427b-bbeb-7950e20acaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853c9bc7-7476-4b75-8d04-6016a941a237",
        "cursor": {
          "ref": "678195cc-44d8-4ff1-94d8-ba47feb34d4c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e0134af7-db5c-4932-ac9b-0f09a8f7268f"
        },
        "item": {
          "id": "853c9bc7-7476-4b75-8d04-6016a941a237",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5124bbe4-159d-4fe0-acaa-a8875176501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7760645-7372-4101-86bb-92f806357ddb",
        "cursor": {
          "ref": "c6e7a633-1f82-420d-84b4-bd99c7acb82a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6373ec03-4021-4543-870b-66e45f23eac0"
        },
        "item": {
          "id": "d7760645-7372-4101-86bb-92f806357ddb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "47ebbe9b-5bb9-46fb-9105-8bb66c3212b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76813ff-505b-4f5b-9478-b31b385b4040",
        "cursor": {
          "ref": "8127e53c-7103-46b3-8a77-9741ecb024e5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bb096f48-6b6d-4c3b-a80a-14e5b2cfae9d"
        },
        "item": {
          "id": "e76813ff-505b-4f5b-9478-b31b385b4040",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a5653609-ae1c-4bda-a030-a245b396ac89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627285d1-767b-4eaa-935e-b37235d2f2c6",
        "cursor": {
          "ref": "26f09e81-6b08-480f-ade0-ef7b5d70db55",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b663c9da-ef92-4cd3-875f-4371c674fb90"
        },
        "item": {
          "id": "627285d1-767b-4eaa-935e-b37235d2f2c6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ad0402a2-b1dd-454b-954b-f482ba08db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd4f802-3b5b-40d2-9b6d-1b4f10776291",
        "cursor": {
          "ref": "bf704b02-a713-4a25-863e-2683a222497a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48568a53-1dba-4a6a-a0da-90a8688c0db3"
        },
        "item": {
          "id": "2cd4f802-3b5b-40d2-9b6d-1b4f10776291",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "913354df-5a9b-45c5-be46-982c6db01fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f5010-2deb-42f9-930f-fed0c9c426db",
        "cursor": {
          "ref": "f50edd05-590c-4ac0-84f0-22dfb1168013",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1b3b3ed3-6e88-4052-ad1a-4d7b02f7b908"
        },
        "item": {
          "id": "c32f5010-2deb-42f9-930f-fed0c9c426db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "480c81b6-e2c2-42cf-b5b4-d2df33a79af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070c390c-7318-4fbf-9ba1-eeaf756fd548",
        "cursor": {
          "ref": "540b9a75-4619-4031-ba5e-530c3532ee75",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "afc7d462-66b6-4350-bd0c-9fbb6dfaa274"
        },
        "item": {
          "id": "070c390c-7318-4fbf-9ba1-eeaf756fd548",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "363de836-b25b-4a21-b7e2-a7dda6b1e594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9526c893-96e6-4726-a5da-e3f51777c0f8",
        "cursor": {
          "ref": "fb0b527d-420d-46cf-8a7f-62e301260287",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2291326c-5525-4b50-908b-d5d44d2bf341"
        },
        "item": {
          "id": "9526c893-96e6-4726-a5da-e3f51777c0f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7a3f1f4-76da-4255-abd5-b18cc45db5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfa0a65-4485-430f-b516-177cc4687148",
        "cursor": {
          "ref": "6e6559a6-026b-44ce-9b7c-0f8e535760ef",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "872ea4c4-22f1-4c86-8051-3ce41da421cd"
        },
        "item": {
          "id": "cdfa0a65-4485-430f-b516-177cc4687148",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e64f3153-a608-46e9-b9b2-07ca53b41e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef86bd56-1822-4c83-aaa6-89392d00195d",
        "cursor": {
          "ref": "17661b30-7794-4245-958b-7533e288d937",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "54eb2f83-5053-462b-aee4-cb7684d5e0d5"
        },
        "item": {
          "id": "ef86bd56-1822-4c83-aaa6-89392d00195d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "040930d3-6cd4-461a-a4dd-ecb50275666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d51742-c47b-46ad-b61d-eee51c3519b4",
        "cursor": {
          "ref": "4fa011a3-b368-4d77-9eaf-b157bccea78c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ae4f8935-ffb8-4ce4-b2cf-00e1b0fd1baf"
        },
        "item": {
          "id": "26d51742-c47b-46ad-b61d-eee51c3519b4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9faf06bf-2596-4df1-ab37-f6717d78ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c07bdb-a7d0-41e1-a477-32569b42477c",
        "cursor": {
          "ref": "6b3ccfbe-f618-4409-a609-ee8d93d54085",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9badcb92-5ee4-4ca8-98f1-5e1352a6d774"
        },
        "item": {
          "id": "78c07bdb-a7d0-41e1-a477-32569b42477c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b667872-b70e-499e-93cd-07564d22a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870bd878-ab7d-4465-aa48-f577bc06e85b",
        "cursor": {
          "ref": "ae892c94-7d7e-4058-b610-57c1424f5070",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f487c592-2772-481d-bf2e-20476ca6d9d6"
        },
        "item": {
          "id": "870bd878-ab7d-4465-aa48-f577bc06e85b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37d4b561-d221-4cbd-9d0f-5b686db7bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2b0fb7-10f4-4b36-bcbf-9fa522bdbfea",
        "cursor": {
          "ref": "d135fb69-ae84-4200-ad97-e176edacc7e9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2f95fee4-c2f7-4596-ba4b-1505ee44d634"
        },
        "item": {
          "id": "de2b0fb7-10f4-4b36-bcbf-9fa522bdbfea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b72e1398-9078-4182-bd82-e97606334ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386fe7b0-548e-4821-a2c7-5aa86dd2cc85",
        "cursor": {
          "ref": "c311b949-876a-4a05-ba2e-3171bc6d4026",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "83b22a9f-dcff-4b46-b129-877e048e5b42"
        },
        "item": {
          "id": "386fe7b0-548e-4821-a2c7-5aa86dd2cc85",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4e51c1cc-0935-402c-831f-8203a00991e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba955b2f-7754-4497-ba35-4e0b5ec46b0a",
        "cursor": {
          "ref": "7f77d360-fe62-4514-ae66-4b7fb016442e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca21dc0e-6775-4f38-99e5-c6d712c05331"
        },
        "item": {
          "id": "ba955b2f-7754-4497-ba35-4e0b5ec46b0a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e81fb4e2-d96d-47e7-b9b2-12b6e29e0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693e58a1-1d7f-4c88-8fce-d1dc436ff644",
        "cursor": {
          "ref": "54ae937c-0e03-46f8-b5d8-992a06079f2e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f176f190-87f1-40d5-a152-23d7c0f2ee9c"
        },
        "item": {
          "id": "693e58a1-1d7f-4c88-8fce-d1dc436ff644",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ff825e34-6a0e-4402-aece-2fd9a00785e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccc038d-2dcf-4f84-bf5c-2cc0ced36a01",
        "cursor": {
          "ref": "d92ba0cc-c319-495c-ad9c-e054b9e8e411",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "106c7ff9-fc02-418b-a428-5492a4a25198"
        },
        "item": {
          "id": "2ccc038d-2dcf-4f84-bf5c-2cc0ced36a01",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e472768a-ce5f-4225-a739-94d418766496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a78199-42a8-4fb8-afbf-3cff69b8f99d",
        "cursor": {
          "ref": "49a7ac4c-dc21-4ed2-b9f6-de78da62b53c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "368b444c-92ad-4f57-94dc-7125a5d1aa74"
        },
        "item": {
          "id": "d0a78199-42a8-4fb8-afbf-3cff69b8f99d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c796247b-e8a8-4b98-b4a7-484c560d4f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d69c25-c5e0-4e87-bc46-3adf4b162f9f",
        "cursor": {
          "ref": "2c594493-aca2-4872-8ec2-42dffa412594",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8ead36e1-3ba5-40a5-b563-8d857772f6de"
        },
        "item": {
          "id": "c2d69c25-c5e0-4e87-bc46-3adf4b162f9f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dbb00e32-d00f-49d1-b828-e874b7b0eb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb205c5-6613-4c14-9b1d-8fb2a74417fa",
        "cursor": {
          "ref": "877c9643-b1f4-45eb-923c-b9016a6f6f7d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "473893ad-c8e7-479e-8f5c-48ea9d54d5fa"
        },
        "item": {
          "id": "8eb205c5-6613-4c14-9b1d-8fb2a74417fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9bdbace0-58c4-4eff-b00e-bcc11963bf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27358d0-1430-47f3-9440-02234b94949c",
        "cursor": {
          "ref": "3580b8b3-9a43-47b2-9fc7-c4915f7cda92",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "363918c1-6fad-464c-8a81-f763bdbfe89d"
        },
        "item": {
          "id": "b27358d0-1430-47f3-9440-02234b94949c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "592c7964-361f-4eb6-a41a-27bfdc99f538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b935c9a-9f0b-4c94-bf83-c390dda86cab",
        "cursor": {
          "ref": "1077be7e-34c3-473e-b094-02d3c2ff01f0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "58169103-e19c-4516-9c97-b71e17b04a07"
        },
        "item": {
          "id": "6b935c9a-9f0b-4c94-bf83-c390dda86cab",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "39d5c100-b225-4802-a848-35fb0e49c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d392a28-4893-44c7-be78-2139c5549cbe",
        "cursor": {
          "ref": "6717ddce-e246-42f1-88b8-41707b04dbc6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5fc04452-09ee-43fd-9e4a-82c957e705db"
        },
        "item": {
          "id": "1d392a28-4893-44c7-be78-2139c5549cbe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "94c66369-eecd-46c3-a780-8b528f3db34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece5466-2242-4094-b3fd-2790ddd809a4",
        "cursor": {
          "ref": "1f3cf235-a9ac-4bea-872d-1bd5e3de817b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bc8bd80d-599c-43b4-9427-751cc86ef777"
        },
        "item": {
          "id": "eece5466-2242-4094-b3fd-2790ddd809a4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cec40d11-c072-45a6-9dc4-5188f0de4983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade0dd3f-2a72-4628-9f7a-5c7a560b955b",
        "cursor": {
          "ref": "56a33de1-fe67-4c46-bcde-03e1a5518197",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "532b16fe-2a25-4a1e-ba20-9b9160b42ad6"
        },
        "item": {
          "id": "ade0dd3f-2a72-4628-9f7a-5c7a560b955b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "41020b7e-15c5-4fbd-94a6-647e977df9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4789fe4-a93d-4914-8566-e5ab273e21dd",
        "cursor": {
          "ref": "2eab9886-5ab6-4518-bfc2-ffc5677cfcb1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe873ac2-447b-49c7-b265-1b103c4f6835"
        },
        "item": {
          "id": "f4789fe4-a93d-4914-8566-e5ab273e21dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "843f9437-81ba-4697-92b2-61ab717000bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd77602c-6aa0-498d-915c-4861ddd7d91d",
        "cursor": {
          "ref": "d19894e1-6257-454c-9aca-bea6ee4ebe79",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "862bb766-cd8b-4eff-a987-03553b93338a"
        },
        "item": {
          "id": "cd77602c-6aa0-498d-915c-4861ddd7d91d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9ab2ba74-5c7d-40fd-b730-cdf4f0daa9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cf9cb7-0eee-4e0e-b5a0-cad0fce1c3cf",
        "cursor": {
          "ref": "dba108e0-659d-45e2-9adf-167977c1f20f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "01585810-4374-486e-9739-b8f0f149f439"
        },
        "item": {
          "id": "d9cf9cb7-0eee-4e0e-b5a0-cad0fce1c3cf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9d07f970-b0d2-4bc7-b633-ba995c712197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ba0bff-252d-4e02-893f-6bffc8e35f01",
        "cursor": {
          "ref": "d01dc379-592d-4469-ab22-e5ebbe75b9c6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fc75d464-df6b-4753-a888-b49528cc3de2"
        },
        "item": {
          "id": "14ba0bff-252d-4e02-893f-6bffc8e35f01",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d2522905-7c61-4c48-adee-d33ce0f28b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4336a8-946e-49d1-b011-c3c2607ea720",
        "cursor": {
          "ref": "3a18a212-fef3-4756-9a62-f35ed43b05b7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2f4ab6ae-820b-45d2-b2a5-34b6bd9847b0"
        },
        "item": {
          "id": "da4336a8-946e-49d1-b011-c3c2607ea720",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "17ed5d51-69c5-43fa-a9d7-22cd386ca05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc3df38-56ca-4691-b5f0-80c34fb7881f",
        "cursor": {
          "ref": "f12c80e9-d7c4-458c-b85e-018202f4f95e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6982b2da-b5ca-4eb2-8966-01e34d67aac4"
        },
        "item": {
          "id": "8fc3df38-56ca-4691-b5f0-80c34fb7881f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d6ca5fa1-84af-417e-ad0e-45fc952caaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33efa8d6-23c0-400a-a4ca-aa766136f614",
        "cursor": {
          "ref": "9a38726e-3d8e-4bda-b1ba-3e64f0bf557d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9bd462c-d40f-4c30-b180-3ec04405757d"
        },
        "item": {
          "id": "33efa8d6-23c0-400a-a4ca-aa766136f614",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "47b4d42b-b6ae-4c48-a9ee-1ce8b629390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1584e79-5f27-49ef-982d-b447a5aff24d",
        "cursor": {
          "ref": "a17db906-b2a1-4f17-b4d3-b415c0d85a06",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6f559c31-30c4-4e9d-9f50-e710eb57b49f"
        },
        "item": {
          "id": "c1584e79-5f27-49ef-982d-b447a5aff24d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be55d11b-3c21-4794-9e87-2d82aafb87b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb80a1-c658-4b12-a6d0-baedcc21262e",
        "cursor": {
          "ref": "a134b3bf-b80e-4b5e-8c3b-4271f4ed5a23",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e29194c1-ec64-4f3b-aa04-ddff94551630"
        },
        "item": {
          "id": "22cb80a1-c658-4b12-a6d0-baedcc21262e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "74407a4d-6c08-4fc9-8f38-360673fb59f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a4d397-e40b-4001-a574-0419573b0170",
        "cursor": {
          "ref": "7f99ed84-f44b-4148-b818-0d7e8d92501e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bc1a8507-3d7b-4022-8423-209688b60108"
        },
        "item": {
          "id": "85a4d397-e40b-4001-a574-0419573b0170",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e02f3f9-4bd0-4558-bddd-6b92fcaf7649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23085649-8e56-4f99-8d56-fe3f4b5ce673",
        "cursor": {
          "ref": "8407442d-36d6-4902-9483-0c68e2db2f78",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f5da2441-09f4-4942-a862-028690abb72d"
        },
        "item": {
          "id": "23085649-8e56-4f99-8d56-fe3f4b5ce673",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3278c902-bead-4927-815d-9761da1aa30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25130f69-65d6-48a6-adcf-a0663020408b",
        "cursor": {
          "ref": "11d0548e-3d68-494c-91e7-af95bbeabea5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9a120e20-32cc-459e-9e70-1322c79a6842"
        },
        "item": {
          "id": "25130f69-65d6-48a6-adcf-a0663020408b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "712b70a8-cdcb-4a98-a18a-2576b09cf841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44959c63-aca9-4485-a116-848702214eab",
        "cursor": {
          "ref": "a6f8c252-9a26-4812-893e-cb2ab1930f78",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ff36a6f5-af33-4edc-825b-f5925e258501"
        },
        "item": {
          "id": "44959c63-aca9-4485-a116-848702214eab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c5d888fa-dd3d-4817-b788-827974dcbd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc308fd7-077a-4a13-8045-e35f0e60780c",
        "cursor": {
          "ref": "59449c94-b467-4338-add4-ac6c5188c445",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9708d47c-ad3a-4d40-bd23-ac696fb9e95f"
        },
        "item": {
          "id": "dc308fd7-077a-4a13-8045-e35f0e60780c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6a1b1e56-0081-40a6-b3af-adab2c1ae524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfb0127-2840-4371-aa51-cfa17d02594a",
        "cursor": {
          "ref": "1a73ba95-08c7-4c88-a688-62520714e17f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5c975597-7717-43b7-aa8c-5924f5aa6d24"
        },
        "item": {
          "id": "3dfb0127-2840-4371-aa51-cfa17d02594a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f5277dbc-7302-4131-92f3-dd606b11e349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e9a4bb-e7a0-4cb9-896f-a88f530501dd",
        "cursor": {
          "ref": "a8f2b85b-ec23-48ec-84a3-4dd5743fec7f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "435bfe2e-eb6c-4345-8039-d221e5855e3a"
        },
        "item": {
          "id": "a6e9a4bb-e7a0-4cb9-896f-a88f530501dd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8a6f1c0f-5e7c-4ca2-b62a-a3408da95604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e8971-24d3-47ef-9f13-c02aacfe7e72",
        "cursor": {
          "ref": "e0803a5a-6936-4af2-a8c5-7c2a52f6a4e0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2690232c-d2b2-4072-99eb-3ef3f7024175"
        },
        "item": {
          "id": "246e8971-24d3-47ef-9f13-c02aacfe7e72",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d5957afb-2fbb-435a-8724-25105d86e3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90be5d0-4408-4beb-82b6-a294dd9d539e",
        "cursor": {
          "ref": "8a7c3df6-e8e9-4f35-9803-3b3d010229f8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2cdf1cc3-7ede-467e-8089-ea107802094f"
        },
        "item": {
          "id": "a90be5d0-4408-4beb-82b6-a294dd9d539e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7b9ad120-8756-4e86-9baf-f80e8c87ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b1e721-3345-4e9d-a9c3-e4d6319dbb88",
        "cursor": {
          "ref": "c23d62aa-37a2-4a05-a026-03b69ad98798",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2461ba9c-520d-4e9b-9fac-510996094894"
        },
        "item": {
          "id": "88b1e721-3345-4e9d-a9c3-e4d6319dbb88",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "965fc31a-9200-4668-8800-a4f7b1aeb6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac828b85-d8ee-41d6-9e5d-1992b2b87ffe",
        "cursor": {
          "ref": "61ed2c96-799a-4a83-bbab-d48fa7697b92",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cd027d39-4762-42f9-98b1-0b6f6589123f"
        },
        "item": {
          "id": "ac828b85-d8ee-41d6-9e5d-1992b2b87ffe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dba01a10-16df-4644-a6b2-08ef83b6671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc333e-f96c-4d0a-8a94-04580fdf59d1",
        "cursor": {
          "ref": "d3b7aa7c-8a86-495a-94ac-144682e2a14a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e2996ebd-701e-4b2b-9808-efc5b7f15792"
        },
        "item": {
          "id": "6dcc333e-f96c-4d0a-8a94-04580fdf59d1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5c333c0-597f-46ea-90a1-5af00773af9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b44d2-4879-4e71-981d-ded8c22ecfba",
        "cursor": {
          "ref": "8ac5cb99-a67d-4000-bcb3-1648038e4e27",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02ffc2db-5409-473b-be01-670d42c0437b"
        },
        "item": {
          "id": "2d3b44d2-4879-4e71-981d-ded8c22ecfba",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "73190f04-135b-47ad-b334-fa2e5b327e30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a27459-9703-420c-99cc-56481a974f2a",
        "cursor": {
          "ref": "c60f88b7-9330-4793-8091-7ff70f7ad5a1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4b59836c-fb66-4ace-b80b-663e30a134ad"
        },
        "item": {
          "id": "43a27459-9703-420c-99cc-56481a974f2a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b5b3ed8f-25c4-4902-ba0a-7c25ab755299",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b200a-280d-4245-bdb3-89b4020ae766",
        "cursor": {
          "ref": "b5a0d54d-f407-48f1-a2da-2df9f421bb51",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "137f94db-7008-4cdd-a67b-1d7d13d2a8dc"
        },
        "item": {
          "id": "291b200a-280d-4245-bdb3-89b4020ae766",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cbc28acc-1b8c-4248-9697-aa4d58a958da",
          "status": "OK",
          "code": 200,
          "responseTime": 4332,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf39cd2-88a7-48ec-bc9c-a597d59efd2c",
        "cursor": {
          "ref": "80bb2242-1eef-42bd-a654-de9b8accd20e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "08345356-9d81-4495-88fa-bc22ac2d518a"
        },
        "item": {
          "id": "aaf39cd2-88a7-48ec-bc9c-a597d59efd2c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7fdda9fa-a2fb-42ea-89dd-5c694377cd2d",
          "status": "OK",
          "code": 200,
          "responseTime": 3632,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43504d99-0007-4686-a057-cd45d7d1fa90",
        "cursor": {
          "ref": "e8e5a508-2114-450d-9c43-4f8110d28757",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61f93d28-c5e8-47d8-af6e-ff324970c0ad"
        },
        "item": {
          "id": "43504d99-0007-4686-a057-cd45d7d1fa90",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f26796b-415a-44a4-9be3-94b614be262f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43504d99-0007-4686-a057-cd45d7d1fa90",
        "cursor": {
          "ref": "e8e5a508-2114-450d-9c43-4f8110d28757",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61f93d28-c5e8-47d8-af6e-ff324970c0ad"
        },
        "item": {
          "id": "43504d99-0007-4686-a057-cd45d7d1fa90",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f26796b-415a-44a4-9be3-94b614be262f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1afafc-6dbd-43da-b145-e5de5a551550",
        "cursor": {
          "ref": "2a9b1f33-908b-4200-be4c-813eb905df61",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c258df17-0053-4b62-a02a-7ad596fa793a"
        },
        "item": {
          "id": "fc1afafc-6dbd-43da-b145-e5de5a551550",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a922934e-6934-4421-baf2-36cfd2f031b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e9139f-bd2f-4060-ac10-f0cab8deca09",
        "cursor": {
          "ref": "e47a50c0-3312-430d-855c-f7ebb313bd6a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "df5b4c8a-ad43-4660-aaca-73e47aecbe2c"
        },
        "item": {
          "id": "41e9139f-bd2f-4060-ac10-f0cab8deca09",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b6de4534-ae53-4186-abbb-47a898ae5751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}