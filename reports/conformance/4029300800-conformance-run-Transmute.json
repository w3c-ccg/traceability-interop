{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e220c8f2-ff6b-44cc-9859-5fb19711bc51",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0293ed78-b225-4665-899d-533bdc95ae5a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a91382b-2fdc-4502-b03f-cc715c4eed72",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42a89e7c-c8d3-4378-b0ee-9dd628e1b0c0"
                }
              }
            ]
          },
          {
            "id": "9bc752f5-2769-4a06-9bed-1f588032b51a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c337b66-9ade-4ff7-b9d3-167fee3738e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e277f3d5-8176-45dd-8c8d-cbbf49e09ed7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5af9abef-90bc-4ef8-acc2-df823c91e056",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80f9572b-13b9-4352-ba0c-a3f54b3da1f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aed3d1a3-90e7-4b8e-b246-64491022c234",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b3dc623-afbd-4f7b-9101-783e6253a680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df77674c-f7eb-4cd1-8a9b-81c15e7a795b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caf724a6-6e54-4505-9bbb-7023ebdbd05b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e00e9920-8bc1-4cd6-b70f-93a94865a9dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f06bc66-5afe-4d35-947c-355ef75f1a0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7200b19-4c33-4aa6-915a-9f3b49caebc9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97d7b776-57a6-4560-82fa-88e0506d185e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c67a33bd-bd03-4a79-bf68-34068627252e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c695a895-416e-4a8c-9a5e-8c932588e6b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d3f8c39-810a-494d-9ef5-baeb8bd1b313"
            }
          }
        ]
      },
      {
        "id": "56b59029-7cde-4536-a0c8-f3afd31a2afe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4639f385-7e99-4f1a-92d2-1cc89ec5e8a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "793370a7-ad74-498f-a4c3-3d0fac4737bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93b4a977-7b84-4ad7-bd05-995315b6cba1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e5a7ee-2213-4b0b-9eb2-c99a8702ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efe817f-757a-48aa-bbd9-048d85b691ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa03b6b2-b3da-4151-8e5c-7844b717bb49",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e046da-eca7-4228-86c8-1c63da7466b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0db5d8eb-62b1-4a56-8cc9-1825f491a9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21885c78-2f73-48b2-afb3-8fe878666707",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34712f0-64a3-4204-887b-29c76a51ae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "883768f7-86bb-4812-b13b-8d47c5fb4e40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b049ddb-8ab9-4acb-b356-5283a1a8f34c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3a0f88d-aedf-43d4-83af-ae6184f9fd07",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af1dc40-ed0d-4054-b9d7-3756378ae76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "490a3caf-3795-446d-bcd3-8419b25a337e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6162286-85aa-4d68-8b79-dcc1d4a33462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f83be52-3943-421c-8bf3-1963f2983e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0566698-9151-4aca-bcc6-0973a88f3158",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a65ff00-76e2-4336-a8fa-41622c0fec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b61338-861e-451f-a799-a36c5c3576ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c895840-ad9b-46b3-9425-29012f580cbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "76f1bab6-daae-4c06-b1f8-b1885bd48e74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2cc1dbc-0ded-47bc-84a1-355f2af09fee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b1f69e1-b600-45eb-ae17-84ae286896d7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7a25816-b3ae-420b-9178-e60c25b25084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d62281e0-412a-49ab-8598-915f544d7397"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "347a1122-5cc0-43c7-aa20-ea76f17bbf12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7d8df6d3-1056-4f60-9573-2d375baf6f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8168ba0-6980-4fe4-b968-560bcbce3c69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d963581d-4e97-4783-a116-560d64f4020b"
            }
          }
        ]
      },
      {
        "id": "d5986c77-d2f1-420c-9333-b4dda8e23fc0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74df05a2-7b0e-4c72-b4c1-58fc2e7fbfb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "018f9cba-a4e9-4c71-9ac6-06a7d1157af3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1b5792d0-bea8-4e9a-a72a-be793dbb4178",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b524ac20-677b-436a-9ea9-c8f524dc4161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8b2d58-6e6c-42e6-8046-d1682496cdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10ade5f-3054-4b82-b7e6-cd092e84e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf074ac-65d8-4780-acb5-daf73e5b8ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a677ca2-8c99-4f14-b7a1-124d62e62ce5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120d4d47-6656-4fc4-8868-19f217e2d11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92f1066-7c6a-4a0e-b963-72c8f4edb58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ac3dfb-c61f-4841-9569-83702d1c0c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6fa83f6-fa03-4bd6-bf8e-72b7f251e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5019d35b-d297-4813-828d-27cbed7ed93f",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8e8e03-c530-455d-9025-5f93cb6e6182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1b972b-0306-4b9b-aec5-e4dd1bee6476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a671fdfe-4499-48fa-b893-a03ba7bc27c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8115657c-8bf0-46ee-b83a-4d8ddd9704f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73de47a8-7b01-4607-84e6-283a0cbf8071",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd25e31-731d-4528-98dd-82c3f1340ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610a2fed-d1e0-46ee-ad7b-38736916c69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621af0a0-f730-41d0-a2ba-a83c81e7670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51799886-d466-42b3-ac2b-cc90cbef6a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736eb0e0-936a-4357-90d1-a08f5d65b2fa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd95ba-9ee5-41f6-ae2a-e86ffb5ada0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0872250-03f5-4be0-ba12-cc025600401c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b38f1f-0bc4-47ca-bddc-46d472c622f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5bc1513-098c-46ac-8091-916443060d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79479d9b-d4dc-4370-9264-8ad3541ca3dd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ef75e-9cba-407b-82d4-4543de84e5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634eb606-f4df-47e1-b519-363867da25f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d639b4a4-f327-486d-b1db-1b9d9c8d0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64efda82-0dd1-4e79-925c-9b6b31533e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ea7bdf-f24c-420b-9820-de7d26b701fd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f830d0a4-7077-492b-996e-723bbd465885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782f58a1-33db-4ff8-a759-fbb4b7754e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8585be38-cd47-44e9-bd1d-9ede5456e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d31e3106-f0a2-4435-8f2b-6078ceaf577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4f6d9e-7795-4a1a-9bdc-ac96f8b0a4ef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff1d5c1-2f6c-43bb-8a2c-aca6d3a419ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f008abf-9a85-491d-bd64-46c689c32c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9ddd6b-d5c0-4ed5-b1a4-cae08855b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef06b76-b455-4fbc-ad9b-af9ee97e9d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68538ce0-c4ce-4802-80bb-a77b51da5d8d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd408e7-d63c-4254-afec-08403530671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6049933-2022-46a9-85ec-a89130c5f284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34344c3e-8800-4e99-a118-35d504ddf885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1287b68d-df43-4d27-99b3-3b9e892bb0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1648fb-6a32-497c-958a-9b8f8c4d18c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5afb59-4f8d-46ee-a53e-a946441ff00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4005a9f6-f8f9-40a5-b408-d92728ec93df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943a2309-3fa6-4cdc-88d8-c2d45a884221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26273bdf-0771-45bc-9809-6a3be3646001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2e8dcf-683d-49bd-b73a-b40c236726e9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b79d810-5f35-48b0-bd52-d328018bfa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48463b1-677d-4d1a-9b5b-3fad7bc5ac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1facd2e7-33ea-436a-86b8-278e1e53709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23cbb54f-6268-4731-bc1a-da36abd1764e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4669f0-b8fe-4578-8397-6a8ed9a9b8c0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff540976-b36b-4ca5-9742-1421ef0fb838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bf120d-d655-4cb6-ad69-b89e25d84b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83008bf0-ee77-4f3f-9471-0c32f3d6103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21793d88-2548-404b-96c5-76d0cbeb3a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152b9c02-7943-473f-a5f1-c8491f652e84",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245592f7-ee82-4b7c-a437-c1ed7b145edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d771dda4-992c-4ad8-9496-a93be4496811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ba235-523f-4bf7-89e2-8b8656492705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314a4931-7cf9-4387-af3d-923aad1c750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a97c3-f768-4b1d-9df4-dea0782f20f9",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8000baae-3b70-40e1-9a4b-b4472f9d8e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215a53de-722e-4efd-8f2d-8f86a0c57c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795f45e9-e0be-4204-a8fc-1c77ccb4fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "97b9782d-421f-42cd-8a9e-9ebd6ae30bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea094f6-8b02-4374-973e-91fe6383e418",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0586403-58d4-42f3-adcf-5b4e54a443ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7a30ce-0abe-4b17-8e97-7611de154f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62782c8-7870-4d68-97f2-1ca13c03017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e51b6c-2657-4c69-8bb9-ec8e02dd77fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d63ba3-c9e9-4e98-ae65-5128b9409465",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7638ec-6879-491e-9895-ecf7440a649b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96244518-939b-4947-994c-8b4faf0fecee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b469b70-415d-4fd7-acc4-8d97214f793e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06fc1b65-07be-4e30-86d1-3579363e789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8418ad13-dc83-478f-9990-bfca55534b7a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f05eb-2e5e-447b-94c5-d14a2f57d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2729e27d-8b5b-46d4-84d1-dcb701bac2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ff195-b2b3-41a3-8a33-0bbffd7fd61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "753cd93e-0b44-4234-be95-d432a2362a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6171754a-e680-4c3c-90f3-57156097f74c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57fe4c3-77cb-4c7f-87dc-1a1a490b6662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf636520-548f-47ef-ba75-a98dffc96afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2d375-791d-4e72-b884-7b48017e1c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ec73030-4b62-49d8-bf0a-caf3e5e758dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042ac979-86d6-49a2-8a71-a56d40255f1d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d444649-8110-4f0e-8109-49b6149bbcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7212e1e6-b552-4e64-8592-530709d40fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db033d20-1b28-4f33-af21-ba3b5830f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bae36bf-b346-46c5-afd3-d5e21ae3dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22ea3c3-509d-4b78-80c6-8a3957c6887a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e07d2-180a-4d13-8e89-c5966dd2b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106ffb3f-f14d-4def-982d-c1cfd791d060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc33e3a8-0afa-41de-a521-83da68d7d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "837c1365-ec5b-4bd5-b238-16a0820b3997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d9ca88-b52d-4629-b483-45ebe526e9d5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf8e70-9893-4746-ad3c-4ce5d402e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973e1119-b31f-4c7f-9af3-8da694133845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809464fc-bdb4-4d46-8837-fe3e9684711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01eb62ae-5762-4d7a-bc54-401f6c1a43e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a2a1d-8bb4-469a-b582-fe0fd7c13ee5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6adbc0-4168-4d95-b3a3-fc63acd3eb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca868467-bff5-4556-a546-f89622c6a525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b542e1-739c-4c7e-bc61-cbde48674bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e18ad6-70c9-430e-aac6-e9ec002c3dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a662ecc-3d2b-4a22-87d5-61498d79ba9a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3012174-a1c3-4ea7-a17a-dc607959cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e276b7e2-1632-467f-8150-68af7127b0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f920fd-6625-433f-8bfc-627646da0a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe29dcf-47aa-4860-9108-1658977cc14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e5ba28-93c1-4939-9a20-b0afe8f2b94d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e3975-c757-4412-b55b-dbdad50ab95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb9ad92-6440-4c88-a50d-c3ce517e7390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62254b0e-ee61-4f40-b705-78d826804faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcae4ecd-e13e-4774-809f-4aadc60e4583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c6b88e-eb62-4c8e-832b-d90caef8a431",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879ac2ba-7501-48a9-90c0-9876d979a702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d225b3d3-383d-4ede-836f-34a7339add37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccec06ea-8d30-4a0d-b9a4-a557f0354252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13aafe2a-1cdd-4e15-8f6c-920489ac275d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c00193-dfd4-44a7-8d1d-9a4c3b1b09cd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9dde76-adf6-4afa-8714-24f062af4265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42e6752-4c07-43f2-9d5c-171502d91a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365dd97c-c241-4f0b-9eb7-0dc999b59e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4ef7d5-8239-4730-b0b4-3f4593ac1686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a64eb2a-5b78-43c4-8e83-87c2f09ec9fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b947272c-c849-4acf-a10c-4d93c644faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd962b76-8b8b-49d7-8299-c7a4418b1037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdce57f-f919-4979-bd0c-6187e3cdf6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2077a7b-a292-42bc-b4bb-2674e0c657c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd5735f-046f-43f4-8c21-800a843ca80b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7fafde-067f-4bab-a585-fa8c0d2d9683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e61be6-8ef7-47b7-872e-97b32b570130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2d5c8e-5ff1-4f06-bbec-49bfe728f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "235d9017-438c-4c3d-b182-3cd8bb8d7cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44271197-83ba-4b67-8123-4b343a92643a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47dfd30-10c7-42a9-96eb-f7fedfeca516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7407f6ec-f337-4d0e-9962-46f8ec88136f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e3cc87-896a-426a-a8fb-d452aab53c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "579f722c-ee3b-4a14-92a2-6f25f1b843c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d94b6d-d172-4281-8631-7fa0bf67adee",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57953c26-feae-421c-9137-db9383038a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408c6de2-3a3c-4cc6-be69-16fb54e0f617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb0c527-43a8-40cc-916a-fe9d2931747f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7058456-4d8d-4567-8e06-b41ed323409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329dff56-de2a-4622-9daa-746d8fa5273f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a70877-03af-4f32-9df4-06779ab9c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e7cddf-0aca-4bdf-a489-ba34ae843a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a86447-9eca-47c4-a385-f1aa12d97569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcae3fb-f014-4046-9f77-d422290a7f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2819d61-723a-4fc1-8bd7-5698c291c35e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ba94a-c64f-47cb-8b88-852c23fc6f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758b4aae-45d8-4222-8e1e-1a67b11e7585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2795b2-1568-441d-baf9-61037f399693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d820c9e7-aa5f-42d5-8650-69d738671d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84243cb-91fd-4619-bac9-57e4454115a0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de9c8fd-c58b-444a-818d-c2d013c0f0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66db2a9-81aa-4150-bf0f-67ed39794d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d725bcc2-4c68-4997-b4b2-82f04557a387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "943c9ad7-1514-4d7e-90fa-60729ace1e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa0018d-e5b8-42f3-a766-70fbdd910b1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a511dd4d-aa43-4a2b-ade3-6a0273088761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e6d104-5a3a-4573-b251-749f5854d816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba2606e-a48b-40dd-a7a0-28dd4b25cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26c9017-41c9-493b-9b72-68b03cde3456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18067336-730f-4fb2-9131-3609c0535c04",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203fc385-4591-4547-960e-be631ef1f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4ca442-d28c-4961-ae62-94e1852bc07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add5b094-7cd3-4425-ba07-fa02cee1f521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20a9b02-4ed2-4fd8-aea3-4a85b45ed835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa360236-04ae-43c4-96ee-3f59e98c1658",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ffb03b-1303-46e4-ad9d-28cdc0cc8c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e6c0c0-2d6a-4a83-bc2a-b71da2067cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81a6036-186b-47b8-b41c-5bb76209031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1512048-9414-4e9a-a179-e8d84f7db844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf66d5-28af-4442-8223-1bb647ae1319",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a1751e-bf88-4628-862d-5dc48e12444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36364f65-c393-467d-9598-82e191ad314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cae4f1-3993-4a3a-a689-f3026d387c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ad816c3e-5ab2-4741-90da-2036e555a0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b22f2f4-861f-483c-8195-fcec83d91402",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9032947-be43-4a86-b3c2-0792d9aae678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aece9ed-1357-4570-8a06-477566946459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4263abe0-7e26-4674-82d1-27e9f2a5fda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "998a752c-6337-4f34-b58f-3248770be8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761b9228-9c63-40fa-90e1-d7480de19bb5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f6e66f-ed3b-4225-892c-0c5fc87dea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ece6284-29e8-4808-915b-73f7f07aa773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00fa4bb-b3a6-4104-bcb5-d3dba76a8c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca9b5fc-f98f-4d80-997e-18fb1cd4d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb52b54e-7d58-419d-ab8c-a6882d264f9d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10a6ff8-5dd5-41b8-b0bc-e6120812e4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b447196-5072-4079-9a56-9af7fe5004d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625002dc-4082-4b94-9071-931159230615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6a78f9-e2cb-4f5b-a50a-9cc6b0f1ffa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab76657-5c36-4770-a191-b8ef287525cb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f48455-513e-4815-9da8-6b9013b91a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81228ea5-2d4d-4d43-9329-0c73eafe3c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffccd423-7523-40e5-b01f-a95cb0309877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7ff09c-b5bb-47d4-a47f-14f9379f44dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce061fa-8406-407f-875c-843737374247",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e25ecea-c4f9-4ba8-81c8-f9d83692867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9426a30c-110c-4d63-ab29-80bb33e49a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee00b9bd-9f57-4317-8f69-81aa7e1869ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd180fcc-5127-4436-bddb-cc5e97c33442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee80d2b-47cf-410f-b8a9-1a7d7028fda1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557ec44f-6281-47f2-a898-5c5f193316d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2351c7f4-f805-44b1-911f-fe221c447655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a50c5-eab9-4d0c-922c-2e482efe72fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df54d86-2fb2-4e7b-a3e8-e9fa3353530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002bf957-e5eb-404e-8f6f-f14d54f8cfd5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76dc3b3-6fa9-47f4-9963-08ae1b206b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ac9549-4b31-4bd1-b131-3fe6dd3dd1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c925c262-15d8-49be-81a6-c37792ef8ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8b35cd-b513-4410-b0f9-6215af56e108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4329dc9e-694e-4a1a-9c38-bb39bdca0c1a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133e6ecb-0226-48bb-a040-be4f574b28aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d6d5f8-772b-4ae7-a84e-a1e853a69db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0814127-6fc6-4cda-8cb5-4cf55562d883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9196cd-6d91-4f06-b177-c77b3e7be109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8391ec-923c-4f55-8da2-55c664d7a768",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6afbf7-b9b6-4156-a49d-877655a9ece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daae820e-348d-4445-bd7d-d43bd45162d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31667d14-bdbd-4c3d-a300-c669099975bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4993d9a6-73d3-4aed-bf4f-1b159cb35683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11dc93e-d391-46cc-a574-e41adacc1a5a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc13c78-f066-40b4-a40c-d3b3ef84efa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2eebbae-883b-4622-8969-b4c4520436e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4965af4e-fc60-42e7-aeba-2e2ddfac9144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f60e845-fef7-4877-9dea-c56219d902b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0b8ae5-e146-488c-a0da-5079d330ff8a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b9c9ca-597e-484d-a0d1-9b3fbe41b7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc886c8-df28-4799-adbb-ab8b0d98bb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d69d2d-3165-4f9c-b337-719f1e7b00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d8a229-bcd4-43d4-92eb-555962abbc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304427bc-2e06-4e5e-8d11-a71605d286da",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd27cb7-3260-4ff0-9cff-7372e0888cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db46468a-f254-4a01-b336-c40166857cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f45f6ad-7bd6-4025-a9ba-d7c64aa94848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6e2210-b4be-464b-9b41-ef423d214fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d27d68-ab1a-4653-aa1c-40ece024dc1b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa1b15-55a8-426b-9257-520a0bd86b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b70261e-34e2-445e-8825-446c27aa2e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8436da-7623-450a-b28f-2a82762271b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1119478-b008-4d11-a86f-ec9b06689116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759e64e3-7cd8-4ba5-8e66-ca0d61b89a18",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce3e18-c3b0-4f8b-aff6-a6e31071f0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f332894-2b6d-40a2-800f-a0491a6a06ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118bfbcd-a5a3-4454-9bfc-bb242aa7dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9a208f-1449-4b35-b091-4cfc46209780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc45cbb-b944-4f77-a55d-7db4d67c1d7c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac6790-7ad3-495d-8b39-bb87ffd9800a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff58de78-c453-45ee-876d-db001f4eb3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bfd6a-058c-405f-90a2-6eac47b921f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9951610d-ea6a-4577-af72-8a97db813d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77a8a4d-3d90-44f9-96a6-c1b8282da582",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19c207a-ad1f-4970-a02d-551f1e6bb99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d9c3de-565e-4d1f-8421-a7d72b44517b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6295c7a0-0d47-4ef7-a0c9-6cee548fe1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5597fe0e-d684-42f2-a74b-dca7924c208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07555f19-6632-433d-b038-9aa46ac62985",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfdcfa7-e299-4d1e-a835-ce99ab0159d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e7ba61-2533-4924-8b8a-0e0fdbc454dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3086387a-d42b-4c88-aad3-940570267c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44ab291-2c6a-4d4d-895f-90d6c9fb1019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b552a8-5d16-4cc4-af74-4bfd6ad8dad0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecd05e7-b8d0-4ba7-81d1-607c4d284ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42786b97-89c2-4770-9fc8-53f9338f4e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f8d87c-f0d9-4930-b5fe-476d36c95ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b8c637-5191-426f-b781-943badb843bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c7e1b7-541e-4c63-95f0-3a3ca1fe76ab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd45ff-dc9b-4532-bb0c-bb62b7733530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f477a981-933c-4334-a8a4-38f7a8b27eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa4777c-6eb6-401f-b5ef-e1107f3c0569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a581ba-1e80-4561-a3df-301e6f30c17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe9b26-623c-41dd-a5fa-08cce7afdef9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6551c-2013-48e4-ac4a-6e6e750be917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c4f233-b27d-4eb4-a510-ff36b44c4631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e5b136-9adb-4653-bc30-964139c80e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f06cf9-5d79-4279-84c0-c72387b41224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6b64e8-9313-46f0-b59f-00133588fd00",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77e0b72-e231-41e5-b129-d53eed55ef5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5143a7af-0a36-44fd-98f8-876eeed6b1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb75ddfc-3964-4f53-96b2-75549bb9d82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "387a7b88-fe88-45b0-862b-cea2151be60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183bf87-b0a7-4a8d-9d40-b64828e32944",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65984137-99fb-4e0c-859e-fef4cc488110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3bdf25-bb81-45b2-afa9-945e5113dfcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5009305-a8a7-460b-b60d-b1ad6e841f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d87d6721-e612-4917-a004-ddbf27990f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82580b9b-d8da-4f24-9ae2-563b45abf1a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d183d3-3066-4570-80af-d6805a3ad591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04237940-9942-4b37-a96a-eed6b47dfd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6230ce2-9f7a-405f-b141-a1c40d7a21c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1041d481-a712-458a-b742-f0931098feb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceaa3fd-9c52-480e-9ae1-4c46d5d49406",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0ee3c0-48f8-4980-869c-45eb2c800c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e4127a-6a49-4c8a-9892-34f56233e141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce87b20-f368-420b-bcc2-9ea8032728ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4916ac50-d429-40a8-917f-8b53eb4fc2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89502f15-3c60-4f42-adef-11d11728e161",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec6f93-0140-44a8-a726-07ae925a2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3469fe5d-4a39-4e5a-9b17-87fec6cea950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b78ad-3989-4efa-85b8-386ad8f15994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b551ba-10d6-4a23-af7c-a3f64ccfb839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69bfde3-966b-4e57-a942-19b61e857d83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018cb3e1-e438-4080-8e7e-f1835f6a0670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a2c232-3c16-49a4-bab5-0e9d94765854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50afdef1-f53d-4245-8b67-62f5d83a3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4e626-def2-4d5f-8974-3bafc78a7ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df324991-3507-4db0-bcbe-6ceb2842100f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a942e1a-c93b-4e84-82ef-b4b7b1a196b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20849e7c-9a09-4ed9-b74c-b9693efdb720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff40cc3-ea99-4fb0-a4e6-255a8256ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf95585-6ac3-4c37-abb8-3c8cad003343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5464c56-466d-42cd-9864-54a8aad60f7a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e86992-02e0-4377-8cfc-c65347c45047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a77acaa-8228-428a-b93e-b917924959da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237dce32-f062-48ff-b881-adbcda838a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00eba38-2b43-40bc-bb5a-685a6da6f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1176cd-bf6d-4966-b9d6-bf15deee3c9a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55045d38-cfdd-471f-98ff-9ae95c9ced9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126e1d6d-94d5-459f-b28a-140acbdf8ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ab621f-e4ee-484d-865d-ab250f949bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cfdd11-962b-40c1-b4b8-0cb3d939f1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8097603-a805-4f46-bd4e-11406ffa0aa5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeb0a76-6438-454d-a7ff-82bffeda9fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077489bc-50c8-4b01-93f6-647b8080b8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf2ea13-f7fa-4823-aa0b-7eee3ebe7972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42fb7d8-24bb-4fc3-8687-3f3ded6734ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6218dac-faa8-4388-8550-e1c123a08caf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb29894-e06b-45f6-a166-7a8d9983d629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1351e669-1956-436d-adf0-18f5a3edcd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e398040a-3d05-423e-9109-b2ef70bc5073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b16de80-d18e-4e45-89c2-e9d9605ecaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6973d9-efe7-4617-8bbe-482d97a31919",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd97dd7-33d6-4940-a861-fafe00fd1149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14a3835-4d02-49e7-a4b3-027701bcf13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072abd88-e533-4c95-80ea-3ae0912686e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83505372-be24-4ada-bc66-b4a199eaedad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60dd99-d1c8-45dc-93ec-1685b46e6ab3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cbb86e-dba9-47d5-ab38-782d6ffaf923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483cd323-9249-4b86-abd2-1a824c7f46b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90eb5ad9-e07e-46b3-a3e0-ab89288a8e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3f9ba3-dee4-47d5-9b99-a926740229e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5d63fc-7be5-448f-be21-c88be455f307",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41606ac9-a0d0-4e85-a1dc-b8aef34ab420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c235a45d-cd8f-4463-9659-67fdc2ecc27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf650c2-e1d3-4c48-b8c5-7f4d0be01f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "470e6bc6-58e1-477a-96fe-afe28f456316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac57dc6-5d9a-4918-9163-d2cab5a834fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79d9247-d1ba-42f0-97dc-7f87bfd4ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0915df5f-c7aa-4bc6-8f6e-8f7318e78b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66410f87-bf93-4a04-aaa4-52c0ce24a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ac90f4-32b9-4bb7-9db8-4d7b44a9f3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce0015-1265-46e3-9e81-0b0913af96d7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1c7980-7419-43cc-b1b7-24503fb58733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2b3edf-3578-4e73-82b7-a82381a83ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17264f6-1e90-4b44-8acb-a619f5681a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e8c3b6-0e3d-4972-bf50-bb2f612d69ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753f471-e6cf-4d2d-a8bf-a289254f52d7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce38c06e-fbcd-4802-9f13-7b6540cd00d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3106f64a-1171-45d5-95ee-8d2248c3da6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a143b321-c0d4-414d-9ef7-75ee4d566714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4bd214-5e7d-4526-98e7-f64e5645a239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1545ba-405a-4397-ba50-a3aaa55dab16",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ced550-73c1-41d6-afc5-1ea802c8fda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b151a1be-dc3c-44c9-a512-b07e3103b9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc50449-3158-47c1-b18e-3b41f1001fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4be7884-3354-48cd-a671-737dc1ff5920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5316550-f30e-45de-b942-4fba5f14921b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dd5967-8bb8-4017-a9b8-68f10ab4bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1364921c-bb23-4649-ae63-1af809ef760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f788f9b-aad7-4562-a36a-53445b68a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b9561e-5c0a-483a-8257-c0d4aae1a78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef8040-de22-4a2a-90f5-3beb186cb7f7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f78bf09-ea45-4de4-9a90-4d891a718ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8101067-3e0c-4eb7-847a-4d6fb9003639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b362435-a66e-4644-8a07-834f1f9c0974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adcccdc-e4c7-4262-a7e4-ad80343ee66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369ee1fd-3071-489f-9785-0bad0d8146d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a6b117-c4df-4630-8f97-5109bf1ded60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6b9d0d-e62e-41cd-aaa7-d32f03730245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0054cb-a0d1-443e-a0a6-ccb33af53d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc983fd-fd73-42c7-a79d-d9d3354a6290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3aacf20-60e5-4771-9146-a0f3fc414672",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bcd00b-2423-4182-9f62-c819f0cdbd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aaf39e1-f4e4-4b80-89cb-661c40f7481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5dc796-6172-43c1-8dee-6ab4823e56cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d81b4d-a1bc-4648-b19b-103d2351ed2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4ca106-bc7f-42db-a21a-d0566a8779b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ad204-a343-44d6-9499-d32d3b53f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5561a73f-180e-4092-8a26-b8f3ff422c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d6c171-917d-41e0-829b-40ade39789ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96cc468-1971-4fc6-a172-efa9d291f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9041bb-a0f0-4806-89cd-a3381989c1cc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ab63ae-b85c-4fe2-ad02-2508d761d70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfea6d80-551a-4a1f-878f-94258fb1d983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0b6441-36b7-40a9-a458-257ea7232b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4683f1-2265-4272-8c78-4b21fff1d3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc02ad1-5778-4676-afea-d69e1505ef17",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cada4cf6-132f-43a9-a4ef-c9c8e3928b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab61cc8-e95f-4460-bdf5-793f3f4fc3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5507d29e-5e53-4788-b345-1373a0efa823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c8ab8-266e-4485-aa0d-a007efe04a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65efb14-221c-4172-8b28-601e23088961",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e002c9-d5f7-4605-a567-0a980212d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f2ebe3-dd6d-4c80-bb4d-95c6eb9a8899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e264ad58-710b-4a11-91d4-94f1bf7f8c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4712c564-7e6a-4228-b4b0-47e8cfd8e642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9546f95e-3ced-42fa-8e36-404684caa175",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bbd40a-a1f9-41ab-9bbb-8428f05f6ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9cc0d7-90df-4e01-9b90-66594e2deef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba99b10-f389-46df-9dd1-6422702cf5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f418d399-1093-4488-a1f9-2c0a4f062aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0405e90d-6812-48c9-b6b8-8760867bde93",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46ea1b4-a086-4fab-b1eb-c49f5fc163dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d426752-5eb6-40ff-bfb1-6fe5543a19e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d79be85-48f6-4da5-b478-56096c8fe2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13d9360-2280-4d73-b59a-169e463b5eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2797e791-6df7-4a51-a7cf-b8c0c3c95d16",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ba3dd4-0332-43a7-be8f-eee887e40e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94107ad8-c5a1-4e0e-bf65-4c1ff144b3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b8fc5-4ba5-4042-a535-684230f09f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5814ed3c-8896-4277-b890-b810c282a08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8bcba5-a64f-434f-9f10-94b7a5ac7e82",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a423ed-bcec-4ab5-80cb-15989ffba9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b612590-a683-4345-aed9-2b421c4d1257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97673292-507e-47dd-ba51-14daf6cc5205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b12e55d-576a-4b58-971b-e88af73cab5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d980886-9693-41d9-a23e-458db69417ec",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6896f419-acfc-4cc0-94dd-90dd55cd09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa81795-b2be-4474-a7ff-98dd9b688771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b714ab-7abb-4196-8de9-a49864681008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef03af4-cef2-4986-8838-5722c0f82942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69792508-a1fd-40df-9734-f6a5df519dd2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72033165-a923-49d1-97fc-fee02082a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dbd990-3692-4a50-a0da-cccd5e5ccfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46a25bd-3e68-496f-9e9e-df79f7dbd49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d114847f-826f-4960-b06f-39b3dee74c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cc46ec-8282-47ea-8e9e-c32b1dff2321",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9312f-6409-49f0-8c49-5aa70cf96e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153eb7aa-dbee-4e0d-99ad-b8088c40e5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6275fd93-453f-4fb2-969b-f9611bfdf825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1471637-4592-42bd-9cc0-e463800ff23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123656ed-025f-4897-844f-88ff4246bcca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9f238f-59a2-4542-a148-59ec1a023f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e169775-ec85-4cac-b88c-12ade4985636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a8c2b3-6fce-4206-a631-64adf1fd3981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fee6e4c-ef66-4636-bd05-ce463d4e8c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807919c8-1d00-4e74-ab61-9c4078fbdf5b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790502cc-64a2-413a-bc7e-c484c01ff694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5202660b-8a86-40e1-8927-9d20b792cf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30b8deb-e2d9-4d38-bd7a-dcbc7b443c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7bb6e8-6866-4d1e-bc7e-d2d2c8d31edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb8792b-1656-4120-8343-c1608a496240",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565a242b-5ea9-4519-a05a-a69a9e105508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ea73f1-6b81-4b33-84f0-69454d3611c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b24aa8c-2123-4214-87d4-d213e7ed910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dd64d9-3cb6-46fe-be4f-197a251a5e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7275332-c264-4a60-b5ca-f0a7e0a521b5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e474f-6044-4530-978e-d1ff75cdec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a544e363-9bc6-4d0d-8dc5-abf279d41a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4eb794-dd6a-4d26-a21e-5d6624c256fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "341cb4c9-bc23-4070-9121-69fbbcbf2d34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13861b4a-6f35-4efb-9ad9-1f63f1dec411",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a305a872-7b5b-418d-a334-3107ad9e6dff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a39b64-e90e-4dda-b8c3-75ef8028246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "046d741c-04e6-4500-a8f0-f8be4f0425c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b991f558-9497-48e8-8438-2281c7c9d73a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9b7e975f-9cd2-45bd-b3b4-669857117b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258f72a9-15bf-4131-828c-e7d9ef7acb97",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2829744-7bae-4c25-b1d8-bd32351ea102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "217b8e7c-5577-492c-8afb-4841ad553af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae14abc-81c3-44ef-9ba9-58eac6e6cde3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "611f2dc0-4e56-4d5b-98e1-0ab842adcd2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6e98f18-1076-46e5-b9a1-ea7be4e0b43d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce8ae6f8-3ed6-4d52-b3a1-8d473897c726"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a4d3ee-3de7-424e-80b9-4d505289ffb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85a77670-6cb5-43b3-8246-3ac450c1fb15"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3a12c5d-aafe-4214-88df-6c1748508886",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce9c1272-407a-4e2e-9684-16d901b5bef0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c945147-cdef-413e-a7d4-6a269a426433",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edcad373-51e4-4182-af79-eeafed6d7f6c"
                }
              }
            ]
          },
          {
            "id": "25199d75-d142-4546-a586-fa4347eec65c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5207e01d-0c88-444e-b316-a74cdb503222",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b15b2e42-ff9b-4184-a8e6-143665ada145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "054f4e8e-55cb-4748-aed0-da028fa1ad58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80093ba0-e9cd-4ac4-956a-3e2250f7e548",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd9a187c-4e6b-4ae9-b35a-394ffc880426"
                    }
                  }
                ]
              },
              {
                "id": "f4e4ce48-dc0f-42d0-adba-3beedb87d9e2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "744a4bcb-6d28-472a-bbd8-d365f902d88d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e78ac56e-d446-4518-9aa7-9ea48e623bdc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cde3f8ba-aacf-4440-b9c4-9e361d4f46f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "899a6057-af1c-4dd8-8550-4e2aebdac1e0"
                    }
                  }
                ]
              },
              {
                "id": "52de512e-e7ec-4134-a0e1-8a1bfc4447af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "197af5df-153e-4eac-9335-70cb6069ccc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe1f9837-33e8-4f60-8743-ac6c5442b1dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99c74ddd-6b9f-4fec-b2c0-2873db57628d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f7a1f2c-3449-4ea2-be1d-f3351c4f25fe"
                    }
                  }
                ]
              },
              {
                "id": "ab3d40e7-2ea0-4df6-a75d-e4fb5566aba1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d528834-a1d1-439f-a345-002b7a4fb1af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc7c72ee-c409-4282-a764-60a6ca629d2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27119d17-888a-4864-8245-206a364af9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b8d7f457-a849-4b60-b229-5cb35df35366"
                    }
                  }
                ]
              },
              {
                "id": "e7f7c959-f0d1-44f7-b99a-246fa064da5e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1097a1a3-4f36-4835-9c9a-1c64e1678547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8c2d423-7a8f-4815-8d48-16645cddeef0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11279b6d-0c17-42d9-8813-60371d8fd37f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e06906ab-babc-40f0-bbbb-2a31d2615257"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87215c50-3f14-4d8f-9c50-f797e72e328f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd3d155b-318f-495c-b930-3a2dad4ea538"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a8ce8fa-9932-4a6f-9834-d873143c0139",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8ec364a-7889-4cd1-a452-a7fd435a2824"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f8f247a-a194-4ff4-a1a7-1f09733e369f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a95a24e8-4dff-4e99-84b2-bede749c9a26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "857d696d-f96f-4354-af60-c909e593ce3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "480cce9b-92b8-47b3-86dc-ac6f39bb71cd"
            }
          }
        ]
      },
      {
        "id": "0ab5a94f-f9bb-400b-8a24-31551938857e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "98a89fb1-365d-4e16-ad54-3a72a2df4560",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b151c40-cf1a-4a20-aa7a-6aa7acc77cc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "647bde91-73ca-43ee-abf0-9f2f08747197",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571c9af7-bb02-4133-981b-b7cd1273d0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3865e7bd-f742-42c3-8ae8-017d0a47d76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741562c4-aed0-404a-8f8a-95c07bb812a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38ef7f2-af69-4166-ab09-d18a08abd333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035d7d5c-9cbc-477b-a470-20fcbcc7b818",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcb3d38-faa8-44f7-8b4b-34328626d10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5768ea-0370-4cc0-a824-2c21335e6ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9f8c6c-9202-4600-872c-084960fdbd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c476a6bd-719f-4cac-b953-6b8a34f66586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977a3263-70b0-4e8d-88f3-f58ed2dea636",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c44af91-d043-4f94-99e2-2dfbcd6070f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a41b7f0-5f6d-4f3b-9717-afdf1c201ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9252a497-501f-4773-8436-e9ff8f6a368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaca420a-ec84-4b12-9f8b-8ca2f8f0bc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac458c2-b916-4158-a601-6f6a1ed487bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d70fd9-665d-4c32-bade-1b5211070e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bc11df-16fc-4e6a-a4e1-38285f86fe09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601efc3c-c84f-4ef2-bb1a-3cbc28b8d191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59eb33a3-9810-4f0d-9819-bc3068923d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0364c438-5c40-4d09-ad54-62cf08ab0efa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a56173a-d337-4c80-abee-33c988a77dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb446c9-e330-4f52-a393-c7b87a96fe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03cb71c-cfcd-43bb-a07b-98eae6f947f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38186d7e-3a9d-443c-b304-d88e78f84cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3553396a-1188-47a2-a19f-866ac449cb50",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb847bdc-c6a3-406e-ab02-2532da18c82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6747bca6-74bd-4d45-a935-9ab1938ac4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914891c3-398e-4874-b1f5-0a0524847444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e09c52-a973-4e23-a63f-cdd5715b0ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe858c26-8843-4686-b50c-13627dc64a5e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e85e86c-d5d9-4ad7-a9f0-b6a8a2a02ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75044101-ee35-4c14-87e5-be63c6dca393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac9afae-027e-4cb1-beab-54c201d24319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "08af3997-64a5-4917-8734-d0322a1a5583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e55af0-b34d-4dcd-8815-cb6523798c52",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0a1c2d-a312-4719-b3bb-3b5c2a45b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66939fa-4ca4-47bd-bb19-cc28e69f272d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e267a8-8d2e-46b6-a001-ff95924a4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "104fd1a0-6cb7-45ec-94c3-6695fa057c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fc9676-9855-4fe5-a4a4-1f7d6960b55e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e61e3ab-59a1-4b98-a35f-89c0fee20379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a74f54-bf64-4962-8e0c-442aba38525c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af90c80-c600-41b2-b442-09faea0d5991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e31aa02-024b-4465-ac1d-a1726d603848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c40524-af1f-4bee-8acc-8ed881b12265",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9310d-d7d7-4901-9416-1b56001e82b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f735355f-53e6-419c-ad98-5e56b19bead9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e1349a-b5d0-4b40-9723-273bcddfbb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e453e68f-3961-4974-aedf-f5759df9333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1930814c-502f-44d2-9170-75116a7e4bbb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e0616d-ae1b-442d-baa7-e862251fb52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64506aa7-540f-4340-bfc6-57138a175384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e623b6c-ab82-4eab-b16e-529c35be877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f44900a-350d-488e-8c28-ab0207d9e78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688761a6-28c9-4cec-a40f-c6b9e2356e12",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33a35e-422c-417a-9273-765917ab7091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7e4e25-2c47-4757-8430-57fe72e16456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa3ee8d-abae-4631-88bd-8bca6c790caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f8e3b8-6539-4c76-87e4-46dc097efca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b73e13-57d0-42aa-8c28-5a56b72b3e38",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1312a72-2805-4f93-9853-8b6a9b88e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bacd137-1337-4983-953b-802bee0971f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8b37fe-978f-46b1-ba16-b1f2d134457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "550f71ef-fdd2-461a-bce2-6518d354006f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ee373-ad2a-47cd-b5c9-b17ac8d9dbc2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7986d3fc-21cd-4986-8c72-cb4ddfbcaf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7265fdbc-53d6-481e-9cb6-143a786979ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7849f107-3631-4098-8041-1bad6f5ab1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "298953bc-2679-4cb2-b70e-a339966001c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119849fd-55b4-482b-a612-22e66cf29de6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7457b-7d60-449e-ada2-bfbeb3d0d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd92c59-1001-4ddf-86e5-b91a5c459370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029382c0-993d-4505-8148-220454956519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c19f660-ab8f-4dd4-8cca-6f8404da451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ab6576-b86a-4fbd-ab29-af41a6e69db0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e02ce2f-9985-4313-a578-0875771c602b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8c2308-4378-4657-bbda-742ee0e63556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62bdd16-17c5-46db-84c9-707209e6b145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67dc3e3e-e2ea-4018-bb04-2245bbec895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61bac2c-4ee7-49e5-9657-0ce79fc71edb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e4e4d4-e944-4774-b968-567e5c10c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575e79d6-315d-4198-97f5-a0f254060929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5570a45c-3d54-441b-b234-b903416ba672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46cb5c5-9e33-45ae-bed5-946ad9da7fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ba43fa-681c-4e8e-8ad1-70f62e9e462b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67d71eb-4e8d-4f0d-b25c-c1ad1e0f7da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3209a8d2-61fa-456d-ad1e-901371187c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687df87e-344c-43ab-9cc3-4f4e20a3cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "637c1c86-cba9-4619-8eac-ef15dac31ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c805cf92-b80a-4193-9f6f-31ae473439a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7847fffc-0725-4e58-930b-bf8fd60d5540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf34b5-0a29-4a32-b4fc-98265960b8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b089b1a-0654-42c0-8083-54dd459424da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aaa326-75c7-47eb-9e21-df77fd64ff71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ce1217-a56c-462c-95e8-09da1137019b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5721d12d-b49c-4c7c-858c-f213c54ab1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b71cd8-0af7-4572-9a81-2f62674b50d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64abbe9-8622-4908-b867-3c06e30191a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca87cad-f1d0-4d8b-bbdf-2b6743f3713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa5e991-5999-4189-be85-f83c77587ea2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87c9ca1-b709-477b-94d6-8b51d0a36bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251a5b4b-a25e-4a58-a824-65f56c779bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687f8074-ed77-46b3-bb6d-1356a4b70d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd2888f-5ddb-44a5-a22a-58662dd256e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4a0170-9ea1-4cfd-8664-dee9ec204213",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569725ca-7b06-4be9-80f6-b731d9697b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a5f5e3-0892-4b2f-81e6-8d165deb943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f534b42-0c46-4c89-afb2-9ca81593035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "793b6ae9-ca54-4513-922d-e2d637fc3bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971846c3-1ee4-4e2a-9d93-5114c3c053be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22624eb7-47bf-47a9-8c0a-d5c576ff9ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd99c5da-fa7d-4753-9c9e-4ff58cb72cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf0ec31-542b-4ac5-8b77-c945d89e4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49261d21-7c40-42ba-bcfb-935ed29f8701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da7b337-9c77-4d31-9b83-462105931554",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b27996-05f1-461f-a456-7df61d80b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b5d5db-6006-4c11-a69d-1513259b2417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248f76c8-0e0b-47a8-9fbb-02280a93988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3deda619-d570-4559-baa7-37287c004b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918b04db-3d10-441a-945b-755192fc3e8d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035a4a51-1ecc-425a-a136-fe3042fdb737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb79c8d-fee4-41b4-b480-fc6ce10ab26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aa629e-5bfb-4e35-9071-288ca2e9f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae37f7e3-11c1-45ef-8047-1eb3727e7cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d98e89-42ef-4b79-a7bc-fa58ba6809d0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7755d5-fc6c-4e8f-829f-a59fe425d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e33bf7-acaf-4c0b-a2c7-f2aa99d345d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17179c98-e393-4e9d-9ebf-bd6877201061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c9c61d-9233-42bc-ac1e-6aa55233dbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4e50e8-c3da-4eec-b89e-ba1c6bd68525",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55c8484-4541-4cbc-9ee8-56d1708ae193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f849a8c7-92bf-4413-86a7-cd3ce943a920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de6fc0-6912-4b9c-8a1d-2ffa1637a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f66a7dc-682b-4e53-b986-f1f6209e38b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f070ca-f047-463a-8b88-bc496f483a35",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da40277d-d68a-4a9b-aacd-97909efcc499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79af1a46-1f9e-41ec-b475-b84b94b11e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87c4765-b554-4118-8b81-0372d5f60bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5c1de4-a60d-439a-8b36-c119137b73b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f032bc-87d8-46d2-a4a0-669bab9d5b68",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c04df5-73ce-4f69-993f-73c1aef93438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ac1aaf-f0f4-44ff-8735-f24657fb3f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a80a15b-a135-47c4-9c00-3c300ed3add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c7e88f-f776-4764-a86b-473fb785d934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93350c60-5abc-46bf-99ed-21cc20ec280b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b95bc65-f1e4-4cb3-ba3d-fd6e9f5b1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b583c2d1-5898-47e9-b216-18b8babf0a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7853b2-47a1-454b-ab54-dc25e6ddea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f4c51-57ec-444f-a6b0-0d0ddae09aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff71c2e2-c9a0-43f0-b86d-99427bd9bd69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cecbd5-88f2-4cb6-8516-1c487bd99ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fa78c2-3166-4995-9b41-6901af8b1bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbb538a-2154-487f-9b46-4e59c9ad2c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ca88c5-ee8b-4670-90c7-85549591bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf452a23-37ba-420f-84c6-dcafe27dea19",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc69b4b-767a-4e59-ae81-5ed1901d9c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3b593f-9613-4e4f-852f-caa9309764d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa6f59b-be65-42ca-8503-ee6c056252ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6450f61-0272-42ca-8954-7afd1e34d7c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22c7d4f7-9f7b-4b2e-a60f-9feb120c1904",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cc0d7fd-3f05-4cf2-9d42-62b669cb14d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c5e0b1-9af5-49a2-8212-df023056c48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481a6ccd-3cef-4e88-8a60-63bd7c34c07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e26d6-2a17-4420-9bb8-f0ce48fb3540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eff6fc40-0c52-4c2f-8365-821228ad631e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3d5012-23ed-4bf1-9701-0a66d65498fa",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a9ae4d-97b8-4d6c-a4d7-fce035d58071",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "39e151f9-45da-4859-b817-ada7dd4a83c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c4b8a4-eed7-45c5-8312-d1aaaadd06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a51be39-18cf-49e6-8c7e-33388f2bcec4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8390595b-f4eb-4691-aa0e-c1e093fd7374",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6cc0745-72a2-4105-9cb4-a32e958a68f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82bbf75d-b16f-4a2b-9b41-c44786cabb26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4593895-a746-426e-b3f2-f84890e086b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dbc4d4a-b721-4354-9ff1-ccff7ee19cea",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ed339c9-eb57-4146-aafd-ac5a4f0466dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd87f0e1-b90b-47c8-9577-7872180a9fb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4294fc2-6b34-419a-8390-485045293a03"
            }
          }
        ]
      },
      {
        "id": "ae22a267-6e71-4206-a4f4-5da6a819197b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a8c9b941-df2a-4cab-81f2-43c263515c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20e32942-0435-4bda-b104-0da4290386d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d31ec2b0-dfa0-46e3-af66-66ed2253eb68",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5736061-ecb6-4f66-8629-d4f4c19bc86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32112aeb-b8cb-4125-a795-4c7ac7a455cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3163a17e-0992-417c-9a9d-b461773bc77c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de41a37-c65c-469c-aa92-50979579915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1bd0d0-2243-4afd-aa03-23c664a89f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89f407-aae1-426c-bb93-4920cc493db7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80420946-cae7-4c13-8f60-83e9bf9980ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db8ecdf-2848-47b2-b0cf-5d1c21226ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb0d16b-6ff8-4f4a-8540-c63319e23002",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56fba85-887b-4a32-b973-36894e8bd588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4c0520-c13e-4921-bbed-f9fde76787e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199b079-2e6f-4873-9c71-e7359fe99302",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4a1870-f241-4327-b576-7eea71a4b40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c8d6a9-ecc2-40c7-8360-6c6cf70b91d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fded3ba-b086-4807-a6e8-1f2bc0090b54",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca0b7f6-bd63-4f4c-8cee-6beaf9b5d107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa31e425-d265-4342-9a62-2feec8a437a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b27cd67-3832-43b9-9cbd-d54ed8fad543",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcb3d08-e712-4229-9ccc-215ee7aba4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd63a133-1205-4cb2-95ad-c78ee3f69ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a152b4-1a81-4387-9e20-95a35e381d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e18cd1-05b7-4abb-8632-dc326a71f883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629c76fa-f0ad-4c54-9fad-3638438ea255",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c0998e-0bfa-4600-9c8f-2a63593f0ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80bcc081-c1b2-4eb8-84c0-6683fc8317df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21551ae-091d-4bf6-9e7b-412ae6b256d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce6969c-7be4-40b2-a1bb-27887262d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d08eb3-0439-4318-acac-83a859a61a69",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf0ae1e-6922-4575-9434-30c20e48c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96022ac-6c85-48f5-979b-7156c261419e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235c04df-a3c3-4fe5-9c39-34943868c309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cca939e-ebff-48ca-b8d0-4b0250027652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824a2367-41df-49ce-9cfd-b28333d3d6e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecb8bea-41d9-4d25-ad1c-9434cbd91b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d52edfd-e28f-4754-8d92-e5af421ad62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c8c916-a317-4257-ac94-e639a254a32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f760d30-1b26-4571-b2f1-522419b1c104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cfa711-8afd-4744-a6e4-797f51ad2e1c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7790d2bd-a398-4357-baea-f8337ec96552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff00a0a-ee17-4ce7-920f-40b74f976613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67ace2-7d45-45ee-aff1-d22d842efce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be555e5-b577-4f30-aad7-b6fb4b07c272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a6e27f-5ba6-47a3-bce8-397637a954c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e513b008-9c1c-405e-b2e8-ebd8b387c9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdaa83bc-4109-416a-825c-ade608592565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c331c2-c380-403e-8adf-14199d6bd81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b54b19-29d1-43a7-8f56-0605ab418faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161d9ca-5ab8-4cca-82b6-e2c85b36fbfb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eecdbe-a315-4f39-a265-2158fdf14bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea610b3-933d-4918-82bd-ca4abb5536b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f0c29e-c3ea-47fd-8b6a-110c24e46a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d54781d-3876-45e0-bd55-f354e956292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f34c52-b20a-41eb-9d72-ac9e766d9b55",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4584de28-4647-42e4-94bc-5d49ccb4176b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93982c94-79c2-4cf6-9770-8be875a26fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fb9896-7168-441f-ad39-d5e1752fa7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870fae79-f40f-463d-90f3-0a9f0c635546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a800d-8a92-487a-ba1d-3798ca8bfd05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5674614-092f-40ce-bc0c-e23a59c49a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d994ca-e8a4-41e2-9bf6-7c6a43028e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc208ac-1b68-48cd-869e-b256b384201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e30113-1edd-482a-85f9-e37a6f009d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03df87e4-d157-47f5-98d7-170ce1583a6e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3637e24e-7426-4215-a0dd-d27e062c4aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f973a6e-fd0c-4428-8fbd-bfc0d8040b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff36896-b24f-4d5d-bf01-114408e14077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff60a74-8503-4c67-a120-473eba8fe1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85772e43-ff97-4e55-89e2-1473ac45ff74",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cbb51c-7d45-43f0-87c1-e7978efccd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a5a03c-5dd7-4a6a-8947-1825e8884527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21efa4c7-8966-4e90-8b20-fe082352b465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53841f21-123f-4d78-b915-bb9a55ec8414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e012cecd-7fa0-4402-888d-00e87fbf822d",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b1a8c2-67c3-4bfc-aa01-e3d30fb095ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e61e58-02dd-4529-b4aa-ba76ec80c3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb59a49c-4145-47c6-8775-4cb2ab5b9523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a378426a-0ad0-4eef-99e7-10ec2dcd0e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d36c273-cb4c-4fd6-adc1-e483fd6cdcba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c7ec29-cc86-4da1-809f-66afc4d4022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60247007-9017-4903-acb4-7b726ddbc63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89771ac4-8892-4575-be09-0de1b327a448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf2ff3b-5333-43da-aa46-fc85600ac25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7f3cd-c731-475c-8feb-ed79c9215ee9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998fcaa-f468-4b80-b600-d98027770611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0c2f54-9e5a-487a-8d7c-260beda60e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade23ea-f2ff-4935-bf08-cf28d86241c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a059d9a-f1d9-4408-a603-6cdd0f248406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e550c05e-9525-4e0c-928d-e58520b6ef5a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9814ea0a-e8a5-489d-b054-70f8cf5b8cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad4b6f6-ce1a-4398-aa29-45efe89e0f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e5136-a14a-4495-bf1f-3d6e1e8f00cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b643dd-726a-4d79-b542-629cbc9efd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02d51b2-c65d-4427-a1b1-660020a7c4b2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c99b37-ea62-4ca7-956f-ce1d12d40fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3fe81-226e-4224-83ca-788e5c9268dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8921df7-1ad0-4799-960b-67aeed522b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a1901e-7472-4a60-8f51-74d8cd551970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a7aeb-691f-4c9c-914a-f3dabc241094",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70364f1-cd00-49a9-87c5-c23b1ee379ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddae744-6655-460f-b34d-9b1a207b4897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfca146b-51bd-453e-b6ca-4fa6438eeb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23f4987-1b97-4ef4-beb3-44e6d5cbf573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81092c5e-9b43-42db-8fd5-a6b21a496940",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b30f70-624d-4439-8323-b2448a6d0d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfecc5e-7fcb-4df7-9403-0ccb82fb88b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92746c-49b3-47ed-b58a-f37eaa64bf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f7745e-8eb6-4867-839d-9d8bcf7f4550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8666bfe8-dd81-450e-ad2b-d238409d9022",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd59c79e-9a53-46d0-a687-e544bd167c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c846db5-f968-488a-9a37-f88052fedc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb93745-3de4-47cb-a25a-83714ae04afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be816845-9dac-4713-81a9-1eea8de2c4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5069f106-4f28-426b-8ee4-b2a54ae8f0ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98957435-fcc6-40bb-b992-5b3b7e10027f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce8b043-f2d3-4d6d-93f1-3e5c6dffec91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c879b-44db-4fe9-a1d9-7a354b85fabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae049c6e-a3a3-43cd-8e03-a1260df83fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6971425f-0720-4b4a-8d46-a4f2055cb51e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086b65eb-498f-4404-8d2d-6e1d0a36f44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18335cbb-c50b-4d24-a59c-795dbe362c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c60f3c5-bacb-4d24-a0a0-7bbef5e25dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fc564e-d892-4509-b6d1-29f316eb62dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268cf321-c5e9-4f6a-969b-c20f5632f492",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde53f2c-2046-4782-8aff-2c9f2ec860f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0c504e-55ad-4c22-9b75-eafb77962f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1618b2d3-aa47-40ff-9e62-561c861dffd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41910e1d-3346-4c14-8383-8f7cd733346f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cdfd14-ab1f-4e68-b0b2-4973e6f522a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a19950-537e-42b5-9cee-84c6ee2115f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aceda3-70a1-4857-854d-739d1b89a6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ba331-43c1-402e-965a-b813ef381ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0b72d2-f0be-41c1-8f7a-e46a30c13110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cb6968-a18c-484b-babf-18c458c45bc8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69197e7d-9921-4c58-b5d1-edd6b0de6122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31fe599-4bd4-4889-b982-6bf87e861bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c14eab1-60e3-4142-92a2-0a0f9debd282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5f3669-5636-4647-af67-bb06fcc8d7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b665f83-65cf-49f9-bfc4-8ca667285e5f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c4b39d-3550-49d5-8c73-a51f2d3a3779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99eff729-f530-44e2-9d41-63b41a7577cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25068254-38c7-41a0-bf0f-9c236a0bc439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a305c621-a596-4cbc-a00a-8a4df82ba0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2aa8e9-415d-4545-ac16-ff754aa28914",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb5e878-92ea-4466-a87b-86ae9055018f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7522fc-04c2-4781-9263-66070732fc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7d83fd-f397-4be3-aa16-4a630233c8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7e7fe7-375e-40d5-8264-08845de946bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b75636-c42d-4fd2-8c1f-472475ab9ab3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eebe16-ae7c-4a3a-a703-db7cd0913051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69948c5a-8190-4543-9b9c-8c55d55bc16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6fa956-53ab-4dca-aa14-1ac553dfa81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1f04a6-9089-4543-9888-fc9bd8bb0990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03c8e0f-6650-46cf-a0db-04a0bfc221eb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ee5e1-1d21-49de-9ff5-cc56c7c58864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb54f260-f5c3-4049-8b64-5bfd1cc4dc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151ccf85-44ac-4d26-a079-1df776708eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1526c671-3621-4c69-9502-af9d3997f90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cabdcb5-d35b-4a13-a3fd-0a45b33c4d8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdbdcf8-b26d-433a-be3c-88fdf04be922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8832de-0601-4cfa-828c-b4911bf08389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ca19fd-279c-4f7e-b797-33dfa5948c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb3008e-bd07-4b62-961a-c8febb2059bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ba147-23cf-4ccd-a816-79604a3e8bcc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4864d992-67fa-4ed1-a36e-308fe039101f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eee5c0e-1390-476e-abb7-48bb4ff9003c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b023ccbc-c394-4e11-b27f-9d202ca1e9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46439ca3-8fd1-4b35-9e81-87c985287433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ba0f6-7ab5-4edf-b1d0-b72ee6c75aea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1790a8e-1a79-4430-ae13-476b8792b503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd24b66-b9dc-481d-89f9-4007b3b212d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed939d-71c5-482c-b57b-311b2fe18fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e8cd77-3568-4768-90f0-0ddcee6f9dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2cf709-f373-4be7-828d-c01cdf4e45c6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ea607c-dbcb-4a82-9d36-2ad897f102c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2a0d75-71a0-4500-b7c6-53cad2fe8721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19676c78-806e-44a8-9b8b-cf85364c18e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3017b2fe-1947-4ba2-86dd-637d4a4e36be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7869716c-ac93-4fe7-936a-97ce89de8144",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd72a3a2-34cd-4008-b502-cc45377f5c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc62a9c3-c1b1-41cd-9dd9-3700fc97ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7840128-4f92-464d-a78a-54fd0585ca9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f5ad96-4254-4a5e-be55-1777ff19a992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d8b43a-b0d0-48de-b7ea-c42bce51de9c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19996535-9b65-423a-8b83-05aed97b6eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454f621a-63ec-40a1-a2af-77f64758f34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc78ece-4fc3-40d4-ad13-f110f4f70c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81115319-dc7e-490e-832d-12bcbe963c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d0ded-13c2-4124-903e-74e350f51ed6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f45cc0-611d-4990-99af-d3de9a2bbb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40211ce4-5754-43df-94d1-4d02333eb68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7696f4-68e8-4b26-9624-4182c35bde63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949e7831-6f7b-4413-be33-d0d6dbc07f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18192447-0e94-49a3-afb7-7fdbfd3d10ef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7984ce-fd21-4c53-872e-8cca63c73b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb2a7d3-4649-435c-b50d-a9e4a8508026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a939562-f304-4d08-93d1-cf41bab40462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc87aae7-929d-419b-946e-23d429eb65fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b51670b-225c-4b2c-a78e-b14d02f45683",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffe4f13-5b5a-4c12-a2a7-ab594c9c81f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa89926-d00c-4f70-ac89-04548c449ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca35cea5-a9b1-42d5-ba21-d22733288ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec3f068-dad3-40ea-adab-9afd3f6de841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d7d567-a57f-4355-8941-6f29eaea8dce",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ae21c7-1dc1-417d-8acd-990bef88e304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5488f7-1988-498e-8816-8bf03a5370cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052dcc64-4460-400a-ba92-5da5f2a52155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b2cad0-3bb1-4f58-b485-33817129d2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7d9f97-264c-4238-b440-47bcb75cad0e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98221900-302e-4eab-a52c-28b592a4b4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4109d1e9-7a9b-418b-a8dc-a07b5862c595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d03d61-d640-4298-b158-80bf93080f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e1bf49-745a-4f34-9950-c7574ab4e6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b644d507-d29c-4528-9ff1-474149c4e495",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1697ecfe-1d0c-4000-ac56-cbca948bcc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e60e734-e541-4faa-891a-51916e3fbcde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a71347-ff79-4003-9d67-0125875a8119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7e29ad-a1c5-4660-9a51-896a60944538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123ac65b-9956-4f6d-9826-65801387230f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a26f2e-0647-4085-961c-c9e765aa2e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe8a427-564b-4732-9b51-789c4023d4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e2f4ec-6f1f-4dc5-86fa-7085875f28f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e05a4e-b7e4-4efc-bbb5-930ab111a4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb67963-4d96-4ee4-b53e-723a97b85cbe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd591d1a-a465-48f6-9aa4-9e2fc170c30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48671cdb-8e32-46c9-8494-f6c384640304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b98986-d866-4f83-b471-671a75fb70db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c33c46e-011f-4e05-a951-434759894fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab6cf1-b72e-4e2c-a1f8-344a14ca7299",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18964ef-c944-4396-b604-3753343df94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e055ee-2c98-4393-995e-81d5b53a8249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0b5f7c-1416-4a67-831a-e8bf40bc5e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee15913-322d-4ea9-b999-976c3031a2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7affab-5bec-4d67-855b-932f5e666665",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32aef8c-527b-41cb-912d-f184e7cf78b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59c5d08-a35e-4b6f-ac87-9b9e851dfcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c974a591-9343-450b-837b-6980bf7f9275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2ffd6e-b722-43cf-99e4-7eede0c1b191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f72e83-8814-4e53-b3c2-09d08afd5c34",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08dcbdb-1d15-4f48-ac13-716c5c19f32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f1fb18-d188-4b00-9b87-848e2d8fc194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e03678-1109-47eb-8244-0a41a6e52acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb735a4c-59e3-43ee-9214-d6f0fffaa06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e7577f-6a3b-4dd4-b084-6ec156dcd341",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dbb851-454d-460c-8ee2-c1093f3c1fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467bb5ff-5912-4f7f-8263-8e143b65b8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04e68a9-b517-451e-b753-823f467301ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf76f14-6fe9-43d5-8e9f-09066d36b1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a971d-4608-437f-a176-d6e7cfea7e1c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e24dd1-bdee-4e6f-ad51-a2a5e1a3bd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f86f5c-5224-49e8-bbdc-a15bd7a31887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3baa16-6db7-48ad-993e-2c99644ebe05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5512c6-b371-473a-8ca4-5eef869d686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413a88a-eef3-4bb0-ba76-674f309eee2c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ade57-07e8-46a6-b96c-fa3f0eb49d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a000e2-758a-4769-8f31-833a5acf4298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1a0511-8ecc-4edd-a807-686b1610bf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f497783-e551-4c31-9004-3c4e162714cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7becee-bef1-49ee-9263-232d33d41acf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09b225d-9780-4147-aee9-b899a4ab36b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290bed85-1263-42bf-ae94-1838a1699a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417a8b54-233d-4aca-8b56-3d126094393a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353329fa-c58f-468d-b9bf-4a7bd3649d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b564aa9-62aa-47d2-b364-027af1e41b02",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc7741a-9bc8-43b3-b510-88d479c1d995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd76d0-a97c-4086-8108-cc61a8646d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f376955-807e-4314-9b53-d4cf4d888e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483843e7-7ea9-4fed-8c49-2a8e9e9b34af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77d06ad-0568-45bb-a15e-9e797994c5dd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ef94e-360d-44db-b990-1aa8fddf16e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b43d1f-74ce-41b2-89ea-38adaf5f0b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64944689-8c6b-4170-af20-db2eececea19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc0e53a-9748-4722-88c0-0820a7818167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f258455c-8b1b-4da6-a446-2dc34b6438e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b563da3-42d9-4034-823d-7fbf406157b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6eccf5-f120-4376-9381-1a6809ffc424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9d4af8-268c-4ea6-bc7b-b64c308e7702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013bd3dd-4176-4140-9942-d1a52d010ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7938c5cc-72b9-4e25-9f91-c6ba1cbdeb10",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b743252-3bee-40e9-b3dc-d53cb97374be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f06610-3535-4f4d-935c-6be3a702f35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d74f86-52d9-4375-b113-27ca5b31b817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbe0f21-ee69-4b7b-bb5d-51a67d169c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f245d2d-14d8-446e-96c6-667f139318c7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d63e73f-d3b8-470d-80cc-4ca336b76764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdc814f-035f-4634-8421-27b7cedd6d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64fd9be-e95f-47da-90cb-da9b0755a68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bada1d00-bdb3-49b0-9fae-4249ce53de00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e86dde4-cb43-4444-9b6d-e2863812779e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ae7f9-ef76-49d7-ae8b-c09f82aaf18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073cbc0c-d71c-4d70-9f71-d9437d5579a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf043fcc-be73-40b2-9e68-8a6e0398aeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c4f4d1-3d32-4b02-aa38-7949069c108b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fac22f-b020-4716-b14f-6698a51e0f30",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a949f6-c7fd-4fed-b896-a74a809d6d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfe20f5-6b2e-4bd6-90e9-a616c642a9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6577e049-a6e2-4452-811f-730523baed0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629c1177-6a7f-4442-86cb-abf5cc2dc7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158d4b4f-c8d5-4df4-8486-494f0307902e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e931ad32-063b-4055-947c-ed30c634cc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa4487a-1fe2-491e-8222-dc727182cb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d2cab-661b-483d-b6e8-14a72055e1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f07267-964b-4474-a06e-384b64c1a7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d8e9f7-7e68-4617-b442-dec08acf046f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dda3d6f-7aee-4f16-ae47-f4c2b6ad2001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93def053-4f6f-46f9-a5dc-90bb5b8ded76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fba6d3-1a9c-448e-9da3-ec100193d72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f70a49-b36f-4a99-af64-d8594a91f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0082dd7-d44f-4ad3-b78b-d521e388bdf2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26a8427-c983-4624-84eb-2c5e44b56f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa031587-c7b8-4e65-8f6f-018ba86548b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab35cb3-9a3f-4fdb-aa53-2858e396c1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f694f36c-99ed-4417-959b-3418aaf05caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7018d9-a2bc-482e-aaac-de04d8630955",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e7fe38-1c84-4d45-bf2c-660840592776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65cc79e5-f7e4-43d1-b5c4-074de4ff254e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5863b0-2aac-4f03-9853-fc43e547a9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcbea69-910d-447d-8848-7a815272467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a1f522-9f35-462f-bfc3-84e50813f0c1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14ad0c7-a3aa-457a-9b91-4f358a4f891d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f49175-8671-42ac-bf21-c9c955de3daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae071be-db65-4ee5-84d7-8a5e5559115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7a6fec-bb6e-435c-9af8-0765422476d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b336494-9677-486a-b511-81042e75d832",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a361f-8bf8-4b36-b1bb-b8ce86d55a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2681c2a9-215f-4740-9b57-fa43b23c6733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7242bc0-d251-4d92-81a0-cbce9dcf135e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c1936e-60f6-47bf-9048-d206693d74a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfeac22-55d4-4010-bd62-59374e2bc8b0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e46e54-e6ec-4162-a4f1-798a2e66adea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6162fc88-929e-4c89-8718-8e78d08ce8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15eb62a9-572c-4bcf-9337-f265abeb6afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad299f3a-f176-4417-b0c6-88531ad5e0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94737d00-0d4b-4393-bad5-16d4fc229e8e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae749d2-21bc-42b0-a1ab-1ba4352d772f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20b5be0-352f-4310-b165-21f2fd3c7fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62a88dc-6808-4d6c-ae28-5dfbb97b4c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4964b8bb-538b-43f7-a115-80766e79fa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95f80a-ad44-4feb-964a-dd2076137894",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fb1ee2-470f-4f28-99c4-a362e3aaab49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fc1a5c-32c7-4250-a44c-ffbf208124df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30733e9-3e99-4a28-a1fb-1e30fa067e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d576a558-fd93-4491-8e28-3c624f6be404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f604a-1533-42f0-91f8-166f4678b269",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e2b681-0e26-4330-8567-ed3f46748bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d839801-3103-41ce-a366-74da41d9e47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb8a33-2fd2-4c3a-a010-5f3b9020fd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1e328f-b43f-44c8-b12f-999dda1e2e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3db10e-c31a-4603-910f-8b49d3d11859",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7843992-6357-43e2-8a88-d2ba55e22bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b9c1c5-821e-4cfe-b422-7b44db2448e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945dd3f4-6e28-43ea-adfc-cebbd59cb1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997221ef-20d8-4362-9e11-8e98ac906c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c16f66a-72dd-4813-b1aa-a0d5d047f25d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7417aa35-61a6-48c0-8d9b-b8d2b7f2593c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b738eac-42a1-4fe9-b6a8-3b65c5cbc93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cbd233-cb6b-4750-af5e-ac7fcd25ffba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c969153a-6b4f-4d9a-baad-fa4e4eeb674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a484f9-ad4f-44cf-b8f2-ced87f1ddafc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b397211a-e02a-410e-9874-8f8f87fe0eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ba724b-edf9-4ad3-9b76-1e848a1bb8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee5fbe4-e027-43fe-8ca1-299109cc923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39ca437-376f-47a1-a8f9-88e7ea6f6df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd4f90c-1c98-4894-b692-e8cdae82a63c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3665c028-0a2b-4dcf-b90e-9224c867a126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859875c4-cdd1-49f1-b290-70d78af78b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184e5da0-f75e-4432-a935-8dfd34c194f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cec679-a0c7-4442-8466-418da5a1c436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a4f51c-4afc-4e50-ba05-33c298c1d06f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d65f42-0252-4cbc-92d9-61ed5db53a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d228890-2114-41a7-bc55-e3bb5dc63438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e7f3a7-1ac3-4a5a-a630-be0cee463bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bb1f4a-6f5a-4ca3-ab8a-9b5b55c944ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c6dc16-abd0-4fcb-ba6f-bea8c7abc78e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbedf82-63ac-46bc-93fc-98addb9e005f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11867e16-17c1-4f36-8348-b497ec635a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7a7092-52f6-4fc1-9837-58d343fa3f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cb4de8-c414-43c3-aea4-642bb2eaaf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6862fe-16ec-4ae3-90d7-4ceee4089af2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f40095-dd0b-486c-8bb2-d8461a33198a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc64f2e3-fa87-433c-b1a7-af3dc1dfa96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a973047-392c-4642-ba6b-522b0ad30c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb13d498-0b78-47a8-b4d9-fe34c92ba9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4521ec2c-5e5b-40fd-9836-c67ac2db3975",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f918159-8beb-4af4-85f3-85f7c8b58183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe8e37f-458a-4aac-a947-ebb2bbccadc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c668e-217c-4dbe-ab2d-78fa66bc8f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cd9090-70b6-4ae0-9e0f-07d9b12883c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9c4321-8463-4736-8fb7-c8d90393f72f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60d4a8-e5e5-4aee-bde2-f970bda67d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9341edaa-484f-4d95-9f8e-5d6f348e4009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040e2722-814a-4e6d-ab25-91e0133c1072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f6863e-5ae5-4bf8-a5cd-5c8cf377fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b2d0f3-cf9c-477d-ab75-5c8688744d5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90e90f9-e901-4141-8d15-a321edaa57ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d398aa-4058-4eb6-a1ea-17a5450fcafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae7a7f2-ba08-4553-8d4c-b7e3e2d43477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444297a5-4884-4e0f-99a6-3e733f36d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84c59ff-bd13-435a-bc6c-81fe11af64b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0276aa53-fb88-4656-97d2-5c2e2ac6f580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a0185b-c68a-4d2b-a789-e10e7b872bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed16499-a293-40a6-83b6-7c882ebad2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a21d3f-8b40-4b2b-94b4-0359c0dca769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ee704d-4ba5-424f-8739-f78100a8f7a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0298781-9dd6-4554-90ab-26091db241f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32baa9b3-3f09-4206-9354-86d19b0f1ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17df2d59-aa37-48d0-a76d-837cc2fd8c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893bdd27-13cb-49b2-9fc9-f1137fd29bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd91f314-110c-455d-99c4-5492c7d9a025",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc666dd-f24e-4f09-9350-ebf02d3a4d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60a9574-4be7-4d81-8afe-a2e396dac30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cfc47a-ab9a-4ae3-8324-d883639ac1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb1bac7-2069-4b45-a1b1-1bf6fe249a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140b0cd2-e926-4d4d-8b74-e90cfb0eefb8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52f6c4c-ca5b-4455-a76b-7740217a5b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66cccf55-92f2-4d1c-986d-83fba01faee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5548d38b-afbf-449a-a931-3a11b7ce8379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e3c7ef-e9c9-4730-ac90-4a6521bf04ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168f0b6c-b3e5-4e2c-978f-550d25ea403c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae786a-6a41-4550-8095-4f96d6ecb2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d48b30-2c0c-47d2-9282-6c3bb72173f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ed7956-2df7-4337-ab26-a289ec37e631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c6ec8b-47ee-418b-91d5-66428331667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bd06be-729d-4f10-9391-9b2f958d5240",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b63d7e5-c270-487b-a67f-cea035103c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25705de5-6d0e-439e-99ff-de00829cefc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98256197-fa4d-43ab-987c-b551f5b1d620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7aad59-e177-44fd-8200-8916d30dd1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65aeb2-8423-4bcd-8da0-4b2996375090",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd80701-ceea-4bd9-9820-f6deeb77b90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b058ca36-880c-4e13-a7a8-52c59dca2d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e84134e-729d-4983-8b23-5d316e6b1980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa621419-356b-418f-85c6-56011b2c1183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d58ebeb-89d3-4751-9112-d2e23f7591fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09223bb3-b0b5-4f09-8ead-3114c0b6e378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5648dfe3-4614-4357-aa46-ad05e9b5a2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6df519e-6dfa-44be-90a3-2997f05fa070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a5222e-375c-4750-bd8f-27b44a0ebd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48780e71-a0bb-49e4-b9fa-3c27922884d2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8bb631-e85d-40e5-aba4-fedecdcd70ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e48b3e2-3b71-4618-b6ad-7db7c8c5e463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ce1a1-92cf-405d-b04d-0db4ce3d9df1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018a9504-fe60-46bd-920e-920e4e385133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2445a109-115e-4151-a32a-72871e990d7c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24e9e19-f284-4fb4-9563-507fbdf075a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "869c5408-b002-45f4-8cbf-f6c1371ba665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2483cf07-ec69-4962-94d2-186291bfc8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f359907-44b0-44ab-939a-64e26837503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597be7a6-fa47-4eff-bcaf-00f6c3e8d1af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d20f02-b82d-4dca-8966-4919fea3b3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca4c45f-01fa-4b9c-8dda-009425b8b84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d7342c-e3bb-4775-bba3-728a8597f442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b8192e-53e1-4a79-b297-39c2fb791a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb96f0d2-04fa-40d3-a781-fef3e49cd6f9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35886b93-7e5d-47b5-8d1b-e175d520134d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9795baae-d901-4a00-9a9e-c65e5ff4b03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a9447e-9936-47d2-9522-2a2bb74b8af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83027ace-bd1c-4d5a-b16f-07df035edb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02316305-c183-4bad-977c-4eeac05c78c4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b04656-5e18-4960-a7ac-94e36ecad143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0cfce2-df4d-4c32-bcb7-edefe6c9d775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16e8e5d-6060-48d3-b3a0-42e12fb7abc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e585cab7-bc46-4d22-996e-0685b2593ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6941dab8-aad4-4d74-99eb-5857e3c5b670",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcea697-dfab-490d-95c3-b1e652b9c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d34133-2379-4148-b28a-405e565cc948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5b606b-2ed0-4b39-97b6-3ae9309cc593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0be7e50-9f31-4a8b-b8ed-db29683c1772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af7f3f-8c93-412e-b2a2-910562d49c2a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aacd7a-62c1-4e36-ab8c-0f0e82454637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de72b98-4d69-4ecf-8308-7c367b28d05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c1134b-5e3b-42a4-bf1f-f3216a338ece",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa7081d-f502-47d8-b56e-4113ba91fffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0844ed67-4de5-4ac0-a5d9-7f622caaf2a6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01a2ebd-91b5-41a7-9ba2-63e42bbbdfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cc46e7-a18e-4e77-b970-d40b4247def6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b1348a-8290-4bcc-882d-93d7cc7c2023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0578eefe-156a-44ac-adae-7e89c17ceb97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33334d07-9bc8-464b-808b-7af4008070d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbda55f2-3688-4690-b705-9f8f78947278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "597599d3-e06d-4d23-a5a8-40bf0ff94700",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9b7cac1-08d3-4d59-8dd9-4dbe6435fc0d"
                    }
                  }
                ]
              },
              {
                "id": "b19765c6-862e-4155-a1f9-65ecd05ad079",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf6b5a21-dffb-40e4-b7ef-bb0f25e81a2d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b89fa09-dece-46d3-87d2-d021cdb84ae9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fd4060a1-0702-4bb3-b132-24e59f697b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0498d7f6-6825-4e05-8974-8e6395c90203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2df7db52-db94-4729-af8e-6027e54b1c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030dd214-7739-4246-9488-e86dd10b183a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fa12b7-f955-4575-a82e-4af97f7a1ccd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ceac4b0b-1004-4361-96ac-2ff49dc2795b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91d64ac-83f9-43f9-a295-68e30e97ca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656241c5-1164-4130-be69-10bc77b2bf68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "088f8e64-6061-4181-8893-ff78efa9d472",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e9ba57-c4be-4d7d-8e93-cae9be263c2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12fdaac8-468b-472b-925a-1d406244d97e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab0ab301-1f26-4ae3-8d27-70ff82237068"
                    }
                  }
                ]
              },
              {
                "id": "d8ea4dd4-d3d3-494e-828a-f7fc5841efed",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f4f2e19f-5fe5-4188-9f4f-5fb0509d2a5b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27b1a7c-2943-4342-a93b-1eb5a494dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fdf4e42a-ec68-40a0-9fcf-d9f4ccf23b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac405f2-a37c-4cab-a39f-d7c62e2c37ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a8b7ee-5510-4a8c-8e82-a23f67198978"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d09490c-6a77-4479-80eb-330e018a51fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28810ddc-a329-4dc5-a0b3-6969a155551b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42cb7841-1989-4cdc-bfb2-ad2abbd55d0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "480ed600-9f1f-4ff8-bc55-73922f3045fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b264917-0cf2-4b87-9e79-b45aa39c9859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824c9dff-0116-4a05-bf2a-a971842aaaba"
                    }
                  }
                ]
              },
              {
                "id": "413efd59-bac3-48e6-a8fe-f07eb5116f48",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49d6163-588d-44c1-b1cf-7ade9f0cb7d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a08c70fa-a2b1-4dec-b31b-33fe09924f8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "799175c0-271c-4e58-bf0f-cdcb4021c80c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad535b66-50db-429b-ad26-8fb8bc1abd2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f743d8d4-a8d6-46bb-bc6f-f14c28ae4ae2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "71d66763-21a1-463d-9f4a-37f9f3f5ab5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "552661d8-a64a-40e8-bdaa-938751f51202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2d8f4e7-2ef4-4f3a-be1a-4f4e83bfff42"
            }
          }
        ]
      },
      {
        "id": "fe118397-534e-4ef6-b485-28ed64dfb0a7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e8b95187-7959-4754-9a63-d56e054498fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb9d1865-54e6-44a2-aa98-372e1812d095",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59164b81-418b-489d-aed9-cf0e247b0cea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76ac76bb-8cd7-48fa-a685-3e7452f7d100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab1dcf-6c09-4f51-8105-7d6c38d7b993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a63ec6b9-d094-48a9-93ca-b7f01df8c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491683e8-d180-4a25-8aff-8cf709036a3a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4499a085-a8e7-4d72-93b0-d505973b5ad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfb00440-859b-4d8a-8476-23bb9041398c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3368ac2-6da7-47cd-93b9-5c8c025e5ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "522f3fa4-f40c-4505-a2e3-af4dfe4c2946"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c23311b-c1e4-4b56-836c-b999c6550abf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3fc6f11-d4fc-4421-8202-58eefaa3cff6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e28b4c6e-619a-490d-a4ba-a204c1545e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "060c241e-81c3-459b-b974-24755e50e570"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "612cd592-5dd3-449a-b560-53637ae0ecfa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc02ea31-fd55-4940-829f-c0d3c9373605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb98923c-76cc-45fe-8d9f-86308259eee1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7280461-aa31-4a03-8fc7-b2370e6b15b7"
            }
          }
        ]
      },
      {
        "id": "78b7937b-cf4e-47f2-808e-04e99f3d492d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c209722c-5f6e-4969-a6de-2dfdf8c67f22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a32c1637-299a-4c65-bb36-cf2b86a2f447",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4514d3b1-7418-47d3-98f9-e0f66ea2e8d6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9c3410-6957-4105-a196-41e552c8ba55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d2b2bbe9-edcc-4e72-9ada-88f9ac36ab64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b305d0-6481-4954-a88f-4a1fed45669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0da30e5-a637-4aef-958b-65ff88f09c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda80bc-e79d-4d2a-a66a-b1294f4dda3e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f2386b-d46b-469b-992b-e9e7f978d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44ff57fe-9173-4dc5-b9aa-a866d2c96e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c54e80-1801-416e-99d3-33dd9bfd1fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70049df6-1572-4352-a8f1-bb7a2667ac6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6158ac3-a60c-4550-bd9b-bb0328a668ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "955935cc-88c6-49e7-81ea-faaa79557b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a8ef699-76c4-4363-bfa5-32ae977c8a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fa0fb81-4902-437f-b180-c780517dfa48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17087ea5-ce5f-49b6-90c4-c31a92c42860",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9d700142-34a1-4714-85df-aff1b3e4a418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55d22a6d-d9f1-4b63-b761-fd330cca7087",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a263cc21-9ada-4a3a-90dc-d9996b6a2bed"
            }
          }
        ]
      },
      {
        "id": "41d18868-9599-4a6c-945d-9059a5e48e04",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "23b9f7e5-00b1-49f2-9d68-e5a195d078ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fcfe462-d6a9-4d66-a46b-08cf441b290c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d2aacbd-bb63-442d-8d24-659571216d96",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9f79b-fab6-444b-9edf-4ed1fac1e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "77555623-ac88-41bd-8c00-64afc58c805c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86535987-0f1c-429a-ae9e-35fe66b0bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7803b552-551e-4436-a483-06ff4680ffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd8c7af-3f09-47a4-888c-f649b420d701",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014b55e6-b424-405c-9b71-e0bb11d98e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abdf6283-de8f-4a51-b05f-511b2fb157ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1000ba-07f1-49c0-b128-f95170accb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f79bd628-f19e-4247-890d-f09c37d8add4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8be6b811-011b-467c-bc8f-22735f2df850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c3bfaa9-6569-4927-9098-bc1d798cb283"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e6fe6df-def8-4ec0-8324-55c4032e4f9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e95c40aa-0828-4415-af74-bb3329e30a38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9c34faa-82a8-4e2b-89bb-95bb2e900c0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c62907f6-bcf2-4c85-a8e9-d49516ee32ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a68881ea-4f64-4b36-85e4-ddae9582af6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8872689a-8d8f-481a-9326-461c05fefe9e"
            }
          }
        ]
      },
      {
        "id": "5e016009-26bf-4442-88e0-716f0f7220ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76ec3480-3c08-44b2-8339-5d7c2f2dfd4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571e4f82-5f22-477b-bb51-2f954234e292",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a4c46cf5-b240-4132-89d1-ceca92927bd5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acc94880-3d01-41d3-8cb2-1275d8500a28",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8954c3c4-714d-4da3-b126-e9117a8d297d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 588.4541984732824,
      "responseMin": 6,
      "responseMax": 6384,
      "responseSd": 664.9914622375115,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674866376380,
      "completed": 1674866541470
    },
    "executions": [
      {
        "id": "0293ed78-b225-4665-899d-533bdc95ae5a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29bbcb58-e1a2-4d3d-b9c3-642b2aedbc2f",
          "httpRequestId": "6d92c715-7cd0-44a8-b0d5-dba331d0e54e"
        },
        "item": {
          "id": "0293ed78-b225-4665-899d-533bdc95ae5a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b07b4f40-fb29-4e01-a322-d727bb7c295b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "9bc752f5-2769-4a06-9bed-1f588032b51a",
        "cursor": {
          "ref": "94d7993a-ab38-4ad9-b835-4a6af684568a",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c52bd639-6933-4b0e-bc03-4bb1a9799091"
        },
        "item": {
          "id": "9bc752f5-2769-4a06-9bed-1f588032b51a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "49ad87c5-ca76-4d95-837b-c54059df1372",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "aed3d1a3-90e7-4b8e-b246-64491022c234",
        "cursor": {
          "ref": "c41a181e-d72e-4b90-8386-4f410f2574aa",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4cd6b20b-5c8b-4fd3-a490-022a22820c64"
        },
        "item": {
          "id": "aed3d1a3-90e7-4b8e-b246-64491022c234",
          "name": "did_json"
        },
        "response": {
          "id": "831ac2ca-b769-4b28-bcb7-cc5a9275b4d6",
          "status": "OK",
          "code": 200,
          "responseTime": 996,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b4a977-7b84-4ad7-bd05-995315b6cba1",
        "cursor": {
          "ref": "bfe577d8-6a73-452b-88f4-42c131514bb1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3dcefdad-8620-49b3-8013-a148aeb010e6"
        },
        "item": {
          "id": "93b4a977-7b84-4ad7-bd05-995315b6cba1",
          "name": "did:invalid"
        },
        "response": {
          "id": "88224b7c-52a5-4d6b-8f06-df7bf5efba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1134,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b4a977-7b84-4ad7-bd05-995315b6cba1",
        "cursor": {
          "ref": "bfe577d8-6a73-452b-88f4-42c131514bb1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3dcefdad-8620-49b3-8013-a148aeb010e6"
        },
        "item": {
          "id": "93b4a977-7b84-4ad7-bd05-995315b6cba1",
          "name": "did:invalid"
        },
        "response": {
          "id": "88224b7c-52a5-4d6b-8f06-df7bf5efba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1134,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa03b6b2-b3da-4151-8e5c-7844b717bb49",
        "cursor": {
          "ref": "0c8a9f23-9d55-4866-a8f0-fcb548302102",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fb191731-fbf5-4c3d-9781-f7473c8dc2a3"
        },
        "item": {
          "id": "fa03b6b2-b3da-4151-8e5c-7844b717bb49",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e14b451b-7869-4be7-b0b2-ccca58c4228e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 663,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21885c78-2f73-48b2-afb3-8fe878666707",
        "cursor": {
          "ref": "a6ec6d9b-1db9-4149-88c5-2454ecbda668",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0142114d-3459-4a30-9ec3-de040a1e1b9c"
        },
        "item": {
          "id": "21885c78-2f73-48b2-afb3-8fe878666707",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "faf64a76-74b7-4d14-ab76-1adfd553b67f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 540,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a0f88d-aedf-43d4-83af-ae6184f9fd07",
        "cursor": {
          "ref": "13d9a654-6d13-4a32-9626-bea308877e6b",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d15b89a-21f9-4136-8e5b-04fd5bd5f3ea"
        },
        "item": {
          "id": "b3a0f88d-aedf-43d4-83af-ae6184f9fd07",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "32d8d813-a9f3-4fc9-92eb-4e68d93aad43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0566698-9151-4aca-bcc6-0973a88f3158",
        "cursor": {
          "ref": "d1d4c24d-3dd7-4102-ad63-feb91dae1b36",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b14f5c8-10bc-47fc-8593-4e8181e7e6e8"
        },
        "item": {
          "id": "a0566698-9151-4aca-bcc6-0973a88f3158",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "08afc976-c33a-417d-859c-f18ea9e5c65b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0566698-9151-4aca-bcc6-0973a88f3158",
        "cursor": {
          "ref": "d1d4c24d-3dd7-4102-ad63-feb91dae1b36",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b14f5c8-10bc-47fc-8593-4e8181e7e6e8"
        },
        "item": {
          "id": "a0566698-9151-4aca-bcc6-0973a88f3158",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "08afc976-c33a-417d-859c-f18ea9e5c65b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f69e1-b600-45eb-ae17-84ae286896d7",
        "cursor": {
          "ref": "dfb80101-7c82-47f9-904c-de1090f3d61d",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bfbaddfa-53e5-49f4-8c58-e15af806b2ef"
        },
        "item": {
          "id": "9b1f69e1-b600-45eb-ae17-84ae286896d7",
          "name": "identifiers"
        },
        "response": {
          "id": "8fa5dab8-ddd6-48ef-bbe9-236bc0ef1d02",
          "status": "OK",
          "code": 200,
          "responseTime": 1047,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5792d0-bea8-4e9a-a72a-be793dbb4178",
        "cursor": {
          "ref": "0c77d7b7-2695-440a-b673-ecfb49d1078b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9cce2f91-3a77-4a8a-8888-70b41e4763f5"
        },
        "item": {
          "id": "1b5792d0-bea8-4e9a-a72a-be793dbb4178",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7ae29e4-e0f4-4d86-b378-7440a9a8cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5792d0-bea8-4e9a-a72a-be793dbb4178",
        "cursor": {
          "ref": "0c77d7b7-2695-440a-b673-ecfb49d1078b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9cce2f91-3a77-4a8a-8888-70b41e4763f5"
        },
        "item": {
          "id": "1b5792d0-bea8-4e9a-a72a-be793dbb4178",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7ae29e4-e0f4-4d86-b378-7440a9a8cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a677ca2-8c99-4f14-b7a1-124d62e62ce5",
        "cursor": {
          "ref": "0ce710df-0796-4d79-857c-e74b8bbee190",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bcdb3c97-e4bf-4eb6-9356-28ba7e7c400e"
        },
        "item": {
          "id": "0a677ca2-8c99-4f14-b7a1-124d62e62ce5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78428d3a-b2b8-46a5-917e-9bd575828cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5019d35b-d297-4813-828d-27cbed7ed93f",
        "cursor": {
          "ref": "1918feb6-987c-43c2-b92b-28dccc473020",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2901afb7-f7fc-4aa8-beb2-ad3978d66108"
        },
        "item": {
          "id": "5019d35b-d297-4813-828d-27cbed7ed93f",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "10b2b125-a614-4cf7-8916-0940661fd999",
          "status": "Created",
          "code": 201,
          "responseTime": 2489,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "73de47a8-7b01-4607-84e6-283a0cbf8071",
        "cursor": {
          "ref": "7b7d0fdc-2513-44cb-a6da-918cd82dd89c",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d31d4af2-5a66-4fb2-9e66-4f8e6065ec32"
        },
        "item": {
          "id": "73de47a8-7b01-4607-84e6-283a0cbf8071",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "30b69090-b43f-4c54-9680-55b5a823cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736eb0e0-936a-4357-90d1-a08f5d65b2fa",
        "cursor": {
          "ref": "457c5406-4208-4ab6-b4ee-d13e9d3bb10f",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc7112d8-9642-4363-951e-74eb7946848e"
        },
        "item": {
          "id": "736eb0e0-936a-4357-90d1-a08f5d65b2fa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "835305ab-5559-44fb-a026-1d86a53a347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79479d9b-d4dc-4370-9264-8ad3541ca3dd",
        "cursor": {
          "ref": "cf134604-0281-49ca-a44f-6641023ef17a",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f446ca77-fa0d-4162-bf35-37a5d5f8cbad"
        },
        "item": {
          "id": "79479d9b-d4dc-4370-9264-8ad3541ca3dd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "92bf8d42-3ba0-4c05-8e12-6afadda057ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ea7bdf-f24c-420b-9820-de7d26b701fd",
        "cursor": {
          "ref": "a796084d-c86a-4d0a-ba99-d0a3b535e3e3",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0ed83b86-a138-441c-8d77-31519a8ed685"
        },
        "item": {
          "id": "32ea7bdf-f24c-420b-9820-de7d26b701fd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b53fd99e-3d4c-488a-92e2-c7573dfe23b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4f6d9e-7795-4a1a-9bdc-ac96f8b0a4ef",
        "cursor": {
          "ref": "0059665c-32f9-4252-acf1-62c9cd75af9c",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98e6d05e-5323-4a67-9316-f6859338e205"
        },
        "item": {
          "id": "df4f6d9e-7795-4a1a-9bdc-ac96f8b0a4ef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8c341898-426a-47b4-a185-0cc23b805f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68538ce0-c4ce-4802-80bb-a77b51da5d8d",
        "cursor": {
          "ref": "f26fee08-646a-4d57-b8d8-143ee2cec566",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "358f7e9a-62ca-48ea-a7a4-31244cc198e8"
        },
        "item": {
          "id": "68538ce0-c4ce-4802-80bb-a77b51da5d8d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ed2321ec-31b7-45f8-b097-cb0868e2b8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1648fb-6a32-497c-958a-9b8f8c4d18c1",
        "cursor": {
          "ref": "de29a572-1122-4931-b2ad-a90fa9e5c96c",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f41dbf55-7697-4797-98f0-ad901034f585"
        },
        "item": {
          "id": "8a1648fb-6a32-497c-958a-9b8f8c4d18c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34ddb0ba-a76d-427f-915e-e5f187312f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2e8dcf-683d-49bd-b73a-b40c236726e9",
        "cursor": {
          "ref": "c0dab480-c061-4f2b-bac0-bf26f878632e",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fc55e045-fad4-4b25-8976-556b091b6e5f"
        },
        "item": {
          "id": "3d2e8dcf-683d-49bd-b73a-b40c236726e9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c8bd6fb-4a3d-42ef-acf0-473ae5169281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4669f0-b8fe-4578-8397-6a8ed9a9b8c0",
        "cursor": {
          "ref": "ce2618d5-dd27-4f56-ab67-000dd16873d8",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6cb97b0c-638a-408a-b354-ed4baa58b903"
        },
        "item": {
          "id": "dc4669f0-b8fe-4578-8397-6a8ed9a9b8c0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9b43ffb0-4d2c-492d-95b1-1ee3d0f8cc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152b9c02-7943-473f-a5f1-c8491f652e84",
        "cursor": {
          "ref": "5f5f7b7f-7483-4ce0-8762-41483ebea78f",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a7d5f25b-2a12-4610-bcb5-33537750961f"
        },
        "item": {
          "id": "152b9c02-7943-473f-a5f1-c8491f652e84",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "71a18c45-66e6-4c34-b43c-6f63bf8929fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a97c3-f768-4b1d-9df4-dea0782f20f9",
        "cursor": {
          "ref": "68301002-9deb-4a66-a272-3406e21c7e17",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "987dc220-2a4d-4093-a68e-2ee225a99af5"
        },
        "item": {
          "id": "988a97c3-f768-4b1d-9df4-dea0782f20f9",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "30b90996-6767-4a56-b494-2a8c7a584e95",
          "status": "Created",
          "code": 201,
          "responseTime": 4403,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "dea094f6-8b02-4374-973e-91fe6383e418",
        "cursor": {
          "ref": "93459b0a-fc66-4b7f-8f46-4c162254d340",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d83cb03-e559-4f86-9965-26bedb44a009"
        },
        "item": {
          "id": "dea094f6-8b02-4374-973e-91fe6383e418",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "440314c7-2389-4f2c-8e68-3de43120249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d63ba3-c9e9-4e98-ae65-5128b9409465",
        "cursor": {
          "ref": "b065f491-886c-4c19-bb7f-e162c34975ec",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2d41a6a1-9e68-4fe4-ae2c-571767146aae"
        },
        "item": {
          "id": "77d63ba3-c9e9-4e98-ae65-5128b9409465",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85ca92d0-695c-4a7e-a8a4-9896af5f0bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8418ad13-dc83-478f-9990-bfca55534b7a",
        "cursor": {
          "ref": "02b12dc8-f807-4a00-997f-076866cd589e",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "edc1f336-e070-4a74-800e-a5a2503ca939"
        },
        "item": {
          "id": "8418ad13-dc83-478f-9990-bfca55534b7a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "178de80d-277d-47b0-bb46-40bbfc92fa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6171754a-e680-4c3c-90f3-57156097f74c",
        "cursor": {
          "ref": "db714f77-211a-4630-bb5e-98128cdda836",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "593e8a49-1b60-4dd1-94f0-7505924e2f05"
        },
        "item": {
          "id": "6171754a-e680-4c3c-90f3-57156097f74c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3cb552fb-d013-431c-9348-4e846746b65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042ac979-86d6-49a2-8a71-a56d40255f1d",
        "cursor": {
          "ref": "80b35b15-f8ae-448c-b97c-944e53ba2b88",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "491d9639-8191-4ce4-8cad-80bf5996c035"
        },
        "item": {
          "id": "042ac979-86d6-49a2-8a71-a56d40255f1d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5df3b036-fe17-4830-99df-7e5e00c708c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22ea3c3-509d-4b78-80c6-8a3957c6887a",
        "cursor": {
          "ref": "62ae9874-8529-4d5a-ad1f-303cd0d0da91",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "49e1aedd-b289-40ee-bc5e-ada4b64f0cd3"
        },
        "item": {
          "id": "c22ea3c3-509d-4b78-80c6-8a3957c6887a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c9a3e57-66cf-4c72-876d-8d32b23d7605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d9ca88-b52d-4629-b483-45ebe526e9d5",
        "cursor": {
          "ref": "46058fde-bf3d-41cf-990c-e9d031896f30",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e7976978-03ab-4d81-93ff-0e4e3816e379"
        },
        "item": {
          "id": "90d9ca88-b52d-4629-b483-45ebe526e9d5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4f3b28a3-e338-4679-b809-016a67dd7f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a2a1d-8bb4-469a-b582-fe0fd7c13ee5",
        "cursor": {
          "ref": "21f559d6-51ec-4e4b-9345-f7df2726812b",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b53d80f8-f098-4839-855b-bcefe505fc54"
        },
        "item": {
          "id": "859a2a1d-8bb4-469a-b582-fe0fd7c13ee5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6dc21274-9cff-4bbe-8df5-bc76a770bcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a662ecc-3d2b-4a22-87d5-61498d79ba9a",
        "cursor": {
          "ref": "edfeb3d4-ace9-4942-9b3d-19c71e36ec66",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "17c0e0eb-8359-4477-a661-2d157f338836"
        },
        "item": {
          "id": "9a662ecc-3d2b-4a22-87d5-61498d79ba9a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fa5badaf-fafa-402d-84d8-3648675d0f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e5ba28-93c1-4939-9a20-b0afe8f2b94d",
        "cursor": {
          "ref": "aa78d6ad-6886-4a71-90fe-26ef85343053",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f867f35b-4a50-4b8b-978b-fcdab67eeadc"
        },
        "item": {
          "id": "d9e5ba28-93c1-4939-9a20-b0afe8f2b94d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a5b15a5e-3bce-4eae-8613-2ba6cb3297ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c6b88e-eb62-4c8e-832b-d90caef8a431",
        "cursor": {
          "ref": "72839858-62b4-4e0f-8a32-bf42cddb1fc3",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dbb58ae9-9295-42e0-8d97-613dd2869713"
        },
        "item": {
          "id": "69c6b88e-eb62-4c8e-832b-d90caef8a431",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7bbcdf4e-8aff-4613-a67f-779843557396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c00193-dfd4-44a7-8d1d-9a4c3b1b09cd",
        "cursor": {
          "ref": "9b702af1-43a8-4b8e-aa6c-226d5d9a767b",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8e8721ef-055d-4059-9d4d-da8e0e2e4b3c"
        },
        "item": {
          "id": "00c00193-dfd4-44a7-8d1d-9a4c3b1b09cd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0920786a-b8a6-4de6-84e1-52cbc31a13a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1698,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "6a64eb2a-5b78-43c4-8e83-87c2f09ec9fa",
        "cursor": {
          "ref": "8f5bbf2d-4ae0-45f3-946b-6fc1b141fd79",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "476e2295-a0ee-4ed3-b05f-ac7d655f4cb9"
        },
        "item": {
          "id": "6a64eb2a-5b78-43c4-8e83-87c2f09ec9fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "405f968c-ff16-4a6c-96ca-c12872a453cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5735f-046f-43f4-8c21-800a843ca80b",
        "cursor": {
          "ref": "de5ddacb-51b0-4291-8668-e3670c98d7fb",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b3e800c7-7767-4409-9d9a-9934c4069398"
        },
        "item": {
          "id": "3cd5735f-046f-43f4-8c21-800a843ca80b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d7b5c6b5-2520-4e92-980c-943c45a8de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44271197-83ba-4b67-8123-4b343a92643a",
        "cursor": {
          "ref": "9fbab3a0-b086-48b0-83e1-d822953189d3",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2ed13025-c115-4f17-a669-6b46c13050a6"
        },
        "item": {
          "id": "44271197-83ba-4b67-8123-4b343a92643a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5230ad86-cd9d-4fd5-bf2e-122769a96785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d94b6d-d172-4281-8631-7fa0bf67adee",
        "cursor": {
          "ref": "b5853834-c43a-450a-9417-acafd9a4f75c",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0591aa82-4a15-4216-881d-27f827432131"
        },
        "item": {
          "id": "55d94b6d-d172-4281-8631-7fa0bf67adee",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6569b2ac-0613-4256-9d04-7e962d093a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329dff56-de2a-4622-9daa-746d8fa5273f",
        "cursor": {
          "ref": "a65cd19e-5fe4-4352-8b82-83cabc4e4f1f",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2a26b009-7adf-41bf-b08c-666233aaef20"
        },
        "item": {
          "id": "329dff56-de2a-4622-9daa-746d8fa5273f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af421d63-3f2a-42b0-9c79-b68131159291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1200,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2819d61-723a-4fc1-8bd7-5698c291c35e",
        "cursor": {
          "ref": "40c84edd-86d4-49a2-911d-a1b4d9154eab",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "95c878fa-2d28-4825-9605-3f37a9ad91df"
        },
        "item": {
          "id": "e2819d61-723a-4fc1-8bd7-5698c291c35e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9c53dd92-04c9-462e-ada6-ca4a86593a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1267,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84243cb-91fd-4619-bac9-57e4454115a0",
        "cursor": {
          "ref": "a63c7c2c-f8c1-40ed-b7bc-5c03d6a9e67c",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9808769b-2b8e-41b2-8d59-584b01c12237"
        },
        "item": {
          "id": "e84243cb-91fd-4619-bac9-57e4454115a0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ca8b8df7-bdcd-4f51-96d1-60e322e1eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa0018d-e5b8-42f3-a766-70fbdd910b1a",
        "cursor": {
          "ref": "1e72b5a0-bbb2-4796-9489-7c826999496b",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cd27bc3e-79e1-44ee-88d6-6347f01839ff"
        },
        "item": {
          "id": "5aa0018d-e5b8-42f3-a766-70fbdd910b1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ead015f8-7f60-4a58-accf-c790343769be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18067336-730f-4fb2-9131-3609c0535c04",
        "cursor": {
          "ref": "ff63a357-e058-49e8-a076-3636abbc81b8",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "07437cdd-5f50-4e9b-97ba-cec037b12015"
        },
        "item": {
          "id": "18067336-730f-4fb2-9131-3609c0535c04",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4b713885-01e7-4b42-bd53-902c56d60173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa360236-04ae-43c4-96ee-3f59e98c1658",
        "cursor": {
          "ref": "08a5f647-8e96-4633-8ecc-5d97dfb32218",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0dc20afd-cb1e-46f1-b026-b80e3aee9651"
        },
        "item": {
          "id": "fa360236-04ae-43c4-96ee-3f59e98c1658",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f59ac050-297c-4243-8115-5faebf1416ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf66d5-28af-4442-8223-1bb647ae1319",
        "cursor": {
          "ref": "48ac1de9-3a26-4e4a-b995-7f3fd6c52f7f",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25cab8e4-69bc-4ed4-943e-5be798d6238e"
        },
        "item": {
          "id": "5ccf66d5-28af-4442-8223-1bb647ae1319",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a0007b1b-11d1-45ad-8002-99cdb987160d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b22f2f4-861f-483c-8195-fcec83d91402",
        "cursor": {
          "ref": "499045ba-da8d-4f4e-825e-471429b599fe",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f073950e-63ee-4e0b-bce2-674a3cab6dd1"
        },
        "item": {
          "id": "3b22f2f4-861f-483c-8195-fcec83d91402",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc200178-5111-44ee-8d7b-38a33db669a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 612,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761b9228-9c63-40fa-90e1-d7480de19bb5",
        "cursor": {
          "ref": "099fad49-0549-4979-94ba-b5cd3e35a928",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "11d09771-efe3-4f9b-859a-b3c85a6e0cc5"
        },
        "item": {
          "id": "761b9228-9c63-40fa-90e1-d7480de19bb5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "042b4c18-e065-4627-b0b5-ad52686869b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 506,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "bb52b54e-7d58-419d-ab8c-a6882d264f9d",
        "cursor": {
          "ref": "6b1a37f9-fa5a-4233-84d7-75e37eb14dc0",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "45bb2528-2805-4812-bee9-43079a672a02"
        },
        "item": {
          "id": "bb52b54e-7d58-419d-ab8c-a6882d264f9d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "24dbe478-a84d-490a-9589-839596d8d2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab76657-5c36-4770-a191-b8ef287525cb",
        "cursor": {
          "ref": "985d903e-ab66-44a7-9cff-9a46fb319a25",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5aedd57e-571c-4c41-81c2-2f50d405a350"
        },
        "item": {
          "id": "6ab76657-5c36-4770-a191-b8ef287525cb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0d9bf8e1-b13d-4203-8afa-eb0881caa6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce061fa-8406-407f-875c-843737374247",
        "cursor": {
          "ref": "4f7e08c8-d329-477b-80e9-13933680880a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "73c111ee-d98d-49fb-9701-dde4d34f4a1f"
        },
        "item": {
          "id": "dce061fa-8406-407f-875c-843737374247",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8e027fc0-c643-4664-ba45-bfd3ebf242ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee80d2b-47cf-410f-b8a9-1a7d7028fda1",
        "cursor": {
          "ref": "c88ad517-9519-4d18-a956-57bf3d5a2958",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0547fa45-b605-4c1c-b0a2-b64c070d629e"
        },
        "item": {
          "id": "6ee80d2b-47cf-410f-b8a9-1a7d7028fda1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "02ca6c69-27f9-4846-80d0-7258b90513bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002bf957-e5eb-404e-8f6f-f14d54f8cfd5",
        "cursor": {
          "ref": "c23deeba-6327-4dda-ade7-98840ccb1d9e",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "94e11386-ede6-425d-9205-eea6c72e2850"
        },
        "item": {
          "id": "002bf957-e5eb-404e-8f6f-f14d54f8cfd5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e7d6008a-f785-4604-86e7-7c1a15a2b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4329dc9e-694e-4a1a-9c38-bb39bdca0c1a",
        "cursor": {
          "ref": "8cd7cf33-604e-4c55-8513-61aa8c9fb18d",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9459cc48-5f78-4bca-b89d-928e836a4259"
        },
        "item": {
          "id": "4329dc9e-694e-4a1a-9c38-bb39bdca0c1a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b895eef-02ab-46e5-95c2-8d22a8b82467",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 554,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8391ec-923c-4f55-8da2-55c664d7a768",
        "cursor": {
          "ref": "ee364115-f9ae-44bf-9d52-821af23b76c4",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9f9fc74f-6343-4ca2-8031-16090a5d416c"
        },
        "item": {
          "id": "1d8391ec-923c-4f55-8da2-55c664d7a768",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2eefad4f-5b3c-4bed-8828-b82ece35d48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11dc93e-d391-46cc-a574-e41adacc1a5a",
        "cursor": {
          "ref": "ce90607c-afcb-49b4-9eb9-c5fd88c2322f",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab9b8587-385a-4543-b2b9-d91dbc48a58d"
        },
        "item": {
          "id": "d11dc93e-d391-46cc-a574-e41adacc1a5a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0d7341b5-55de-450e-807f-3e6685feaef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0b8ae5-e146-488c-a0da-5079d330ff8a",
        "cursor": {
          "ref": "826bcdd0-4db9-4f58-ba49-2ba113b36417",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a3d06a6a-9525-4dfd-a67d-1e9dca95aaf7"
        },
        "item": {
          "id": "6e0b8ae5-e146-488c-a0da-5079d330ff8a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "798a56c9-de8f-4036-bc2c-cb81cb02de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304427bc-2e06-4e5e-8d11-a71605d286da",
        "cursor": {
          "ref": "cba1ded4-7e87-40e1-bdef-b68f0bfc1e28",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "db7c2811-d567-4f4c-93fb-ee969a268ad3"
        },
        "item": {
          "id": "304427bc-2e06-4e5e-8d11-a71605d286da",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "49a970bf-6980-4ba3-9234-7335d9710b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d27d68-ab1a-4653-aa1c-40ece024dc1b",
        "cursor": {
          "ref": "399e68fc-a479-4041-8faa-4df1d69aadd2",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "317dee11-ec5f-4700-979f-0915f8888e93"
        },
        "item": {
          "id": "06d27d68-ab1a-4653-aa1c-40ece024dc1b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a4ff5df-28d1-43bc-825d-102ea9790d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e64e3-7cd8-4ba5-8e66-ca0d61b89a18",
        "cursor": {
          "ref": "b3cbb58a-d5b7-4403-b4a0-dd4ed0b92860",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fe25af1f-7cf5-4314-9f1b-1a4fa430b1e5"
        },
        "item": {
          "id": "759e64e3-7cd8-4ba5-8e66-ca0d61b89a18",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8fd8ee9d-9bea-40d2-98ec-cc707edb3ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc45cbb-b944-4f77-a55d-7db4d67c1d7c",
        "cursor": {
          "ref": "6c9d8dd0-e670-416a-bfd4-a6b53d8fff52",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "23288914-cda6-4104-ac3f-6e463f5adfe9"
        },
        "item": {
          "id": "9dc45cbb-b944-4f77-a55d-7db4d67c1d7c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "64a3294e-b350-40b6-9e27-2f7674657ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a8a4d-3d90-44f9-96a6-c1b8282da582",
        "cursor": {
          "ref": "6af8a170-47f4-47b1-800d-c0eaf9adf28d",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "12e66272-800b-489b-a939-8d3543ecc2bd"
        },
        "item": {
          "id": "f77a8a4d-3d90-44f9-96a6-c1b8282da582",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7df306ef-1bf2-4544-bf49-388a8d9985fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07555f19-6632-433d-b038-9aa46ac62985",
        "cursor": {
          "ref": "ed4888e2-9b01-48bd-ac05-3cb00a195eb3",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6d5ef873-a16a-48e5-8dfb-859796fb4f08"
        },
        "item": {
          "id": "07555f19-6632-433d-b038-9aa46ac62985",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9036e2a-907e-4549-bab5-66656eb28c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b552a8-5d16-4cc4-af74-4bfd6ad8dad0",
        "cursor": {
          "ref": "cd4fb731-9853-4960-ac94-31a8bfbc20f3",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bed3f985-7cc5-438e-a3f7-07f2cfdff46a"
        },
        "item": {
          "id": "68b552a8-5d16-4cc4-af74-4bfd6ad8dad0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2f9d65df-013d-4e15-9995-c781fcd130bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c7e1b7-541e-4c63-95f0-3a3ca1fe76ab",
        "cursor": {
          "ref": "6e21bd1a-c69c-4516-93ec-4866e19b5cdf",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a45a03ea-d618-4131-8473-c2f7dd5586e8"
        },
        "item": {
          "id": "c6c7e1b7-541e-4c63-95f0-3a3ca1fe76ab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c952ba08-5896-4fcd-890c-83306791eab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe9b26-623c-41dd-a5fa-08cce7afdef9",
        "cursor": {
          "ref": "cb9a2cde-6e7c-4bea-91f5-67f8744f3299",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "21b09d16-8004-43fa-a116-c584ba60787f"
        },
        "item": {
          "id": "2dbe9b26-623c-41dd-a5fa-08cce7afdef9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1d6635b8-b176-4e9b-946c-b0c665520504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6b64e8-9313-46f0-b59f-00133588fd00",
        "cursor": {
          "ref": "022fb7cd-e5ac-4f3b-b407-5b1aa3e9d857",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d4725ecc-fc2a-4891-95f8-ea6632f8fc4d"
        },
        "item": {
          "id": "fa6b64e8-9313-46f0-b59f-00133588fd00",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "41d0684d-eae7-49f4-be76-6c3a6b308ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183bf87-b0a7-4a8d-9d40-b64828e32944",
        "cursor": {
          "ref": "bcbc3377-c0ed-4b21-bf86-ebce12bdda26",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a2a5429c-d611-4f99-9e93-ca5cfaf71c5b"
        },
        "item": {
          "id": "1183bf87-b0a7-4a8d-9d40-b64828e32944",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4b120987-3b7a-41e7-9181-3d91a75f3ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82580b9b-d8da-4f24-9ae2-563b45abf1a3",
        "cursor": {
          "ref": "9d6bcc8e-b54d-407c-b1bf-ed1fa309cc44",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9a44d096-fb8e-453e-bc81-de5f162b5587"
        },
        "item": {
          "id": "82580b9b-d8da-4f24-9ae2-563b45abf1a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e3b8955d-0a69-477d-a946-a3284a69fa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceaa3fd-9c52-480e-9ae1-4c46d5d49406",
        "cursor": {
          "ref": "cf759cce-f110-4843-82d1-2c8dfb386525",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "632e70cb-c2f5-4c80-8da3-c4e507caeb0e"
        },
        "item": {
          "id": "1ceaa3fd-9c52-480e-9ae1-4c46d5d49406",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5daafa18-3a56-4225-9433-f56aa8d14848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89502f15-3c60-4f42-adef-11d11728e161",
        "cursor": {
          "ref": "4a3deaf5-1ddf-4de4-9dc7-c12a470bf7e2",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "377b9114-df52-4c14-9b25-1f85b703940a"
        },
        "item": {
          "id": "89502f15-3c60-4f42-adef-11d11728e161",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f5079215-517a-4db2-bd4f-05f2a68e33bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69bfde3-966b-4e57-a942-19b61e857d83",
        "cursor": {
          "ref": "46206cb6-5820-4680-9689-a93437858b04",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "888539f7-67b1-41a1-9844-199db1ac3a6c"
        },
        "item": {
          "id": "a69bfde3-966b-4e57-a942-19b61e857d83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3c42bb45-8dfd-42e4-9564-761a86665f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df324991-3507-4db0-bcbe-6ceb2842100f",
        "cursor": {
          "ref": "8bdefc7d-aa86-4f54-bac7-03e614a8a54f",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "071b6bde-62f3-4e3a-abb9-08448bb5a139"
        },
        "item": {
          "id": "df324991-3507-4db0-bcbe-6ceb2842100f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "814e6bdf-395f-426c-bdd5-edb85fba077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5464c56-466d-42cd-9864-54a8aad60f7a",
        "cursor": {
          "ref": "9a103506-2cc7-4208-9aa5-c5d85a6c70cc",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ba4782d5-3347-420e-aa63-8ec7f87c3ada"
        },
        "item": {
          "id": "a5464c56-466d-42cd-9864-54a8aad60f7a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "52e7ba17-87cb-4bca-a593-ef7c62080f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1176cd-bf6d-4966-b9d6-bf15deee3c9a",
        "cursor": {
          "ref": "be5e3e61-0f74-4e72-999f-3627d8092be1",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c2908d7-498c-4485-bc17-2d0a0a04a4b6"
        },
        "item": {
          "id": "2d1176cd-bf6d-4966-b9d6-bf15deee3c9a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dc639b6e-6d65-4fbe-8e20-fd45603f8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8097603-a805-4f46-bd4e-11406ffa0aa5",
        "cursor": {
          "ref": "48dbe0b7-674f-4cb4-8619-9655c2ef18b9",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0459056d-b21c-48b7-923c-f70f42e47186"
        },
        "item": {
          "id": "f8097603-a805-4f46-bd4e-11406ffa0aa5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "da2bc427-e220-4ada-9107-a1b6402e8e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6218dac-faa8-4388-8550-e1c123a08caf",
        "cursor": {
          "ref": "dbfc687e-b26d-49be-9434-5a4078e0708d",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0f60eee1-6bb3-4a00-a804-922f8549fffc"
        },
        "item": {
          "id": "d6218dac-faa8-4388-8550-e1c123a08caf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "482ded11-6896-4e76-8009-ce2b28109c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6973d9-efe7-4617-8bbe-482d97a31919",
        "cursor": {
          "ref": "b53bd026-57a4-420f-9401-e76d03db1101",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c6db800-af60-4328-a986-9f2bb71904ad"
        },
        "item": {
          "id": "bf6973d9-efe7-4617-8bbe-482d97a31919",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c8d4115e-99d0-4f8c-8e9c-12ca12773509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60dd99-d1c8-45dc-93ec-1685b46e6ab3",
        "cursor": {
          "ref": "82b0b29e-425e-4c16-a4dd-cc839cb6ba8e",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9b4f2208-4744-445d-ae6a-3738b3ccb2e4"
        },
        "item": {
          "id": "fe60dd99-d1c8-45dc-93ec-1685b46e6ab3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6e3f75cb-5cf5-4f2a-b2a6-28dcc387a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5d63fc-7be5-448f-be21-c88be455f307",
        "cursor": {
          "ref": "9fc32566-cf1e-41d5-9169-a4d0d50a701d",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c030cf43-6ea0-45e3-8e43-a67a65da34d7"
        },
        "item": {
          "id": "ed5d63fc-7be5-448f-be21-c88be455f307",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b4c9b803-e4d4-40a5-8e9d-60dc63875a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac57dc6-5d9a-4918-9163-d2cab5a834fe",
        "cursor": {
          "ref": "5a1ffe97-1efe-434d-af0a-95e6392d9740",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a0e4ec60-bbe3-4996-8de2-c6835226df49"
        },
        "item": {
          "id": "1ac57dc6-5d9a-4918-9163-d2cab5a834fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a817b957-a666-4f41-a89a-4ec9b4b7621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce0015-1265-46e3-9e81-0b0913af96d7",
        "cursor": {
          "ref": "4140d0b9-a843-4b38-88bd-5f6ca70a5f7c",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7a813ed9-7d95-481c-9535-608b15bd34f5"
        },
        "item": {
          "id": "56ce0015-1265-46e3-9e81-0b0913af96d7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a7c8a264-905b-4f18-b066-ec3c1ee8ef9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753f471-e6cf-4d2d-a8bf-a289254f52d7",
        "cursor": {
          "ref": "63583c6b-07fc-4779-b2a8-9e3bdf519bdd",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c20404e4-fee5-436b-920c-3cee9249a338"
        },
        "item": {
          "id": "2753f471-e6cf-4d2d-a8bf-a289254f52d7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6b82f1e3-ef6d-4d8c-9ea0-ff08f4f98ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1545ba-405a-4397-ba50-a3aaa55dab16",
        "cursor": {
          "ref": "34e12977-66cd-47ea-ac38-8f49be71c3aa",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a49d902e-7914-4a1d-bb19-a2b4f0bc004d"
        },
        "item": {
          "id": "1b1545ba-405a-4397-ba50-a3aaa55dab16",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3982f919-53c2-4795-9370-5124c368949f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5316550-f30e-45de-b942-4fba5f14921b",
        "cursor": {
          "ref": "a89f8b70-ea44-450e-bb42-119d5730bb32",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "36a20a7d-7eba-47b6-9779-e382b6edf611"
        },
        "item": {
          "id": "f5316550-f30e-45de-b942-4fba5f14921b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4683ed7a-3552-402c-9d78-9241886e88b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef8040-de22-4a2a-90f5-3beb186cb7f7",
        "cursor": {
          "ref": "3927af11-4300-4fd7-a74c-85e386304fc0",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ed077693-e49e-426d-b7da-0ff61dc09deb"
        },
        "item": {
          "id": "2bef8040-de22-4a2a-90f5-3beb186cb7f7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "22b3f0fd-d022-4bf4-83bd-1eac2a00ccf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369ee1fd-3071-489f-9785-0bad0d8146d2",
        "cursor": {
          "ref": "384cd4ce-8fa5-4185-9c88-28992a956d39",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a717696d-50ca-4e60-8839-016e576639f1"
        },
        "item": {
          "id": "369ee1fd-3071-489f-9785-0bad0d8146d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "aee06fde-53f0-45ce-8e8e-bc61fd90f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3aacf20-60e5-4771-9146-a0f3fc414672",
        "cursor": {
          "ref": "aa695384-bd3d-42d6-adac-8556d911fd23",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "234d4387-a3f6-4bfa-a328-e8aafae73527"
        },
        "item": {
          "id": "f3aacf20-60e5-4771-9146-a0f3fc414672",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc0b687c-89c6-4001-824e-760400107716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4ca106-bc7f-42db-a21a-d0566a8779b3",
        "cursor": {
          "ref": "80978ce5-0913-49b3-b4ef-1851078ace49",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6508d33a-6840-471f-9360-a0b6d1bc89f7"
        },
        "item": {
          "id": "0f4ca106-bc7f-42db-a21a-d0566a8779b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a4f4a1f2-6bd7-43ec-8d18-8f581f29bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9041bb-a0f0-4806-89cd-a3381989c1cc",
        "cursor": {
          "ref": "76378402-a086-4c6f-9ee0-bbc26ae5d8cf",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5f9dfc53-e1d4-4789-b74c-d48c2b3edb04"
        },
        "item": {
          "id": "7f9041bb-a0f0-4806-89cd-a3381989c1cc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3ad0d3d5-94b4-48f2-8ff8-7da8d2b4b847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc02ad1-5778-4676-afea-d69e1505ef17",
        "cursor": {
          "ref": "a96dd802-6a28-474f-ab30-f8e7ca5fb724",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d2a0e1b3-5bd1-41a3-aa3d-6a587cc68e5b"
        },
        "item": {
          "id": "dbc02ad1-5778-4676-afea-d69e1505ef17",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c6c7bea-74f8-44bc-b12f-fe0e08704708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65efb14-221c-4172-8b28-601e23088961",
        "cursor": {
          "ref": "c50b99a0-4050-4dcb-ab04-3aaf379463b9",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c08319bd-da3d-48ff-a20c-b626184f8047"
        },
        "item": {
          "id": "f65efb14-221c-4172-8b28-601e23088961",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "19baf9c8-dbc0-4c5e-a75e-df2c6893926f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9546f95e-3ced-42fa-8e36-404684caa175",
        "cursor": {
          "ref": "a9993078-a58d-4637-a753-7fd11d7178a9",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "442c28a4-a88f-4512-afd5-25b7604dbf18"
        },
        "item": {
          "id": "9546f95e-3ced-42fa-8e36-404684caa175",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ef28e4ef-e6e9-463e-81ab-6d4162b890f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0405e90d-6812-48c9-b6b8-8760867bde93",
        "cursor": {
          "ref": "c82c6c49-fdfe-4585-8637-04690ccc9d53",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cb69dcb8-5ccb-4213-baf5-a1ecc967992d"
        },
        "item": {
          "id": "0405e90d-6812-48c9-b6b8-8760867bde93",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "982f736b-e80a-425b-a0f3-26501497524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2797e791-6df7-4a51-a7cf-b8c0c3c95d16",
        "cursor": {
          "ref": "b3cc65b2-f9a9-43d1-9c85-b65733f38dac",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f52e50a4-e82e-47a7-9b12-0770c9e4d326"
        },
        "item": {
          "id": "2797e791-6df7-4a51-a7cf-b8c0c3c95d16",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "59b30803-ab9f-4029-8db8-22e41f95f882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8bcba5-a64f-434f-9f10-94b7a5ac7e82",
        "cursor": {
          "ref": "5cf273f3-6793-4a10-b8cf-1d15d25c8a9d",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d5a47f3-d57c-48f2-98f9-97fe9d4a532b"
        },
        "item": {
          "id": "2c8bcba5-a64f-434f-9f10-94b7a5ac7e82",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f2620b8e-1ea8-4c60-8c28-b07efca130fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d980886-9693-41d9-a23e-458db69417ec",
        "cursor": {
          "ref": "2e9b4537-0560-4dff-b9c5-4786ef3ff7e3",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b43a0080-0fcc-40a0-b700-976be1b3e079"
        },
        "item": {
          "id": "8d980886-9693-41d9-a23e-458db69417ec",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "edb68853-6619-4f85-b804-648945a4cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69792508-a1fd-40df-9734-f6a5df519dd2",
        "cursor": {
          "ref": "ae2d343d-3ed3-47ae-86c4-3619b74f099d",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d7fbc74b-3864-4896-a109-885057ea3ede"
        },
        "item": {
          "id": "69792508-a1fd-40df-9734-f6a5df519dd2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "763c94ce-c090-4e23-8320-cc1478e5ae00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cc46ec-8282-47ea-8e9e-c32b1dff2321",
        "cursor": {
          "ref": "aeaab293-2cc7-468a-92f9-2a8281796856",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b6d8de7-6fd1-4af5-94da-f2e64fbc6acf"
        },
        "item": {
          "id": "a9cc46ec-8282-47ea-8e9e-c32b1dff2321",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e27e46d0-f039-4d65-8a38-215c683fab48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123656ed-025f-4897-844f-88ff4246bcca",
        "cursor": {
          "ref": "5fca46cf-85b1-4cf0-846f-2c57e7a645a6",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2cf58c38-ded0-489e-be46-fb2fca3a105c"
        },
        "item": {
          "id": "123656ed-025f-4897-844f-88ff4246bcca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3a8e17fb-57dd-490f-b363-bfd371f0c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807919c8-1d00-4e74-ab61-9c4078fbdf5b",
        "cursor": {
          "ref": "f29e1d5a-6fa8-4026-a701-972dffde46d6",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1943ccc5-7c23-4097-b8f7-17d4cda10ff6"
        },
        "item": {
          "id": "807919c8-1d00-4e74-ab61-9c4078fbdf5b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "80948a06-a3e7-466d-b742-ff7bea7ea922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb8792b-1656-4120-8343-c1608a496240",
        "cursor": {
          "ref": "a0d4dc25-38c2-489a-8129-69a4d09086d3",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06ebb35f-b43d-4581-a49d-c81b98bceb7f"
        },
        "item": {
          "id": "efb8792b-1656-4120-8343-c1608a496240",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6dba2f0f-1a6a-4ee5-91ca-c2ae0a153cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7275332-c264-4a60-b5ca-f0a7e0a521b5",
        "cursor": {
          "ref": "c7358fa4-6484-4c70-86e3-5fa03f77d683",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dbf0e618-69ea-46a9-9d8c-4b21019c8a25"
        },
        "item": {
          "id": "a7275332-c264-4a60-b5ca-f0a7e0a521b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2ac41c3c-563a-4ccd-acc0-1b09d82b920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305a872-7b5b-418d-a334-3107ad9e6dff",
        "cursor": {
          "ref": "613e6eae-a9ae-4a35-b405-21ada8efa11e",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "08b747d2-6b7d-455d-b3ae-06f6a3e1c174"
        },
        "item": {
          "id": "a305a872-7b5b-418d-a334-3107ad9e6dff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "91fd114e-bd71-47a1-b970-847a8f06abb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258f72a9-15bf-4131-828c-e7d9ef7acb97",
        "cursor": {
          "ref": "48d5fa51-ae10-45c2-969b-592369392734",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "137cf69c-457e-4dc2-976b-3cd6d00e1f3d"
        },
        "item": {
          "id": "258f72a9-15bf-4131-828c-e7d9ef7acb97",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "beaee1e0-af96-42cf-b789-e8be3c8a498e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5207e01d-0c88-444e-b316-a74cdb503222",
        "cursor": {
          "ref": "db195016-ec27-40f2-aa3c-af6353cf7e4b",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5126f05b-861c-4f9b-865c-7d50b77556ff"
        },
        "item": {
          "id": "5207e01d-0c88-444e-b316-a74cdb503222",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e9af4511-2039-4d93-b30a-4d59ea1484d5",
          "status": "Created",
          "code": 201,
          "responseTime": 4074,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "f4e4ce48-dc0f-42d0-adba-3beedb87d9e2",
        "cursor": {
          "ref": "3981c01c-706c-476b-bb0f-86e53c0eb3b2",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f998b209-a873-427f-ba11-1e8abc51b613"
        },
        "item": {
          "id": "f4e4ce48-dc0f-42d0-adba-3beedb87d9e2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e9c84ec7-2cc3-4462-a26e-57456b73c21e",
          "status": "Created",
          "code": 201,
          "responseTime": 3662,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "52de512e-e7ec-4134-a0e1-8a1bfc4447af",
        "cursor": {
          "ref": "966961f7-4176-4baf-98bc-06c739720e27",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a4d077f6-5486-4212-a9bf-749cea2f181d"
        },
        "item": {
          "id": "52de512e-e7ec-4134-a0e1-8a1bfc4447af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "677e3f71-05ed-48b9-ae6f-a445a548b58f",
          "status": "Created",
          "code": 201,
          "responseTime": 3772,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "ab3d40e7-2ea0-4df6-a75d-e4fb5566aba1",
        "cursor": {
          "ref": "604ba3ef-f001-4cc9-9a16-d221113be64c",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be33c5b6-3562-4553-8a29-5a467a66751f"
        },
        "item": {
          "id": "ab3d40e7-2ea0-4df6-a75d-e4fb5566aba1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f471985e-678a-4622-921f-6c7a51a61644",
          "status": "Created",
          "code": 201,
          "responseTime": 3747,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "e7f7c959-f0d1-44f7-b99a-246fa064da5e",
        "cursor": {
          "ref": "1482c987-ba2d-4c31-ac87-40f54addebb6",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "739f5e02-b554-4b5e-8447-dfe7734af77f"
        },
        "item": {
          "id": "e7f7c959-f0d1-44f7-b99a-246fa064da5e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "09cb84c4-d1ec-413e-9d51-ab6fa74ba0ca",
          "status": "Created",
          "code": 201,
          "responseTime": 6384,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "647bde91-73ca-43ee-abf0-9f2f08747197",
        "cursor": {
          "ref": "e5895508-991c-4a76-bbe1-fad96245d599",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a60f292-33b3-466f-becc-60988a6d52b3"
        },
        "item": {
          "id": "647bde91-73ca-43ee-abf0-9f2f08747197",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf035f08-2706-48b0-b409-83f142d1cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647bde91-73ca-43ee-abf0-9f2f08747197",
        "cursor": {
          "ref": "e5895508-991c-4a76-bbe1-fad96245d599",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a60f292-33b3-466f-becc-60988a6d52b3"
        },
        "item": {
          "id": "647bde91-73ca-43ee-abf0-9f2f08747197",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf035f08-2706-48b0-b409-83f142d1cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035d7d5c-9cbc-477b-a470-20fcbcc7b818",
        "cursor": {
          "ref": "e0c66759-a2de-49b1-ba7d-3e6dd2c40253",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "36629fac-7026-48ee-833f-3a112454656e"
        },
        "item": {
          "id": "035d7d5c-9cbc-477b-a470-20fcbcc7b818",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8d51ac9d-0a0a-45f4-a225-729416b5b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977a3263-70b0-4e8d-88f3-f58ed2dea636",
        "cursor": {
          "ref": "ac116b73-9a24-4e84-9776-09ef5e3c5ecb",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "daf78fd4-7683-457d-a332-f54be6640bba"
        },
        "item": {
          "id": "977a3263-70b0-4e8d-88f3-f58ed2dea636",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39d552e1-aa25-4849-927f-bdc9bb45a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac458c2-b916-4158-a601-6f6a1ed487bb",
        "cursor": {
          "ref": "c6853a7a-aa08-40e0-8717-3f0925f253a4",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0f3358ea-47e6-4483-a2e5-8296bdbe287d"
        },
        "item": {
          "id": "9ac458c2-b916-4158-a601-6f6a1ed487bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2d6256d-225e-41ab-9b7d-f6db02309dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0364c438-5c40-4d09-ad54-62cf08ab0efa",
        "cursor": {
          "ref": "a942ead1-19a3-451c-ad95-03130e4ab67c",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "03ae600f-c7b5-4810-90f6-a0a0430a5f45"
        },
        "item": {
          "id": "0364c438-5c40-4d09-ad54-62cf08ab0efa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "767cb6ea-07be-4221-b53f-f6568e3d2237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3553396a-1188-47a2-a19f-866ac449cb50",
        "cursor": {
          "ref": "0b273ada-e357-4a38-b671-0552c1d7a980",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a19f212d-afc7-4664-9488-7c008de6417d"
        },
        "item": {
          "id": "3553396a-1188-47a2-a19f-866ac449cb50",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f37a42b8-0912-4ee8-9b89-750ad2bf38cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe858c26-8843-4686-b50c-13627dc64a5e",
        "cursor": {
          "ref": "e486940e-d0e7-4448-88f5-4fba019bfa41",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0e8a5dc9-e47b-4859-aee9-58d8e2d2aabd"
        },
        "item": {
          "id": "fe858c26-8843-4686-b50c-13627dc64a5e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e86b6f83-b2da-44c9-b1f7-4d77975f0ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e55af0-b34d-4dcd-8815-cb6523798c52",
        "cursor": {
          "ref": "ebadadb9-22ab-40cb-a820-6a767f985876",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ebbf5916-c198-4a6b-b3bd-4e68723dfead"
        },
        "item": {
          "id": "d5e55af0-b34d-4dcd-8815-cb6523798c52",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b1dbaec-bf08-4ddf-aed5-56d1e7da37e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fc9676-9855-4fe5-a4a4-1f7d6960b55e",
        "cursor": {
          "ref": "f6d12dc3-97e8-4232-b739-2694918ca890",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55f74c6a-d46f-479f-a980-da657a60eec2"
        },
        "item": {
          "id": "70fc9676-9855-4fe5-a4a4-1f7d6960b55e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8b33e3db-27b1-44a9-b078-3bb3d9fb1223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c40524-af1f-4bee-8acc-8ed881b12265",
        "cursor": {
          "ref": "3fa1740c-5745-47d3-9100-fa2dc3907438",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a5fa8166-2127-4b07-b9da-75c0c01b8667"
        },
        "item": {
          "id": "83c40524-af1f-4bee-8acc-8ed881b12265",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3f1ef4fc-0bb0-4049-ada4-1ca38e06ab2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1930814c-502f-44d2-9170-75116a7e4bbb",
        "cursor": {
          "ref": "0351cc0c-cf52-4b99-9ed1-f75e397a616b",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0145b307-f0c2-4e8c-a177-8717627ea470"
        },
        "item": {
          "id": "1930814c-502f-44d2-9170-75116a7e4bbb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e893e42-b48a-42f8-9115-5f243287df2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688761a6-28c9-4cec-a40f-c6b9e2356e12",
        "cursor": {
          "ref": "08f673ef-c826-404b-9f18-10437b7a666c",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ffcaa145-6d24-47cc-baa8-a86c17289851"
        },
        "item": {
          "id": "688761a6-28c9-4cec-a40f-c6b9e2356e12",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f059271c-b04b-4858-9d28-31fcf582ca3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b73e13-57d0-42aa-8c28-5a56b72b3e38",
        "cursor": {
          "ref": "3091c7f7-9ea1-49c4-a0fb-cfe63cec4638",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a2daed65-f6c7-493e-93a1-87c668a334da"
        },
        "item": {
          "id": "f6b73e13-57d0-42aa-8c28-5a56b72b3e38",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3b3e563-51da-47df-b7f9-c8ec22397dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ee373-ad2a-47cd-b5c9-b17ac8d9dbc2",
        "cursor": {
          "ref": "9358e327-a620-4e40-b5c2-a5d297f89958",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e401bfa-ebc4-4984-959e-e0e6b81f3430"
        },
        "item": {
          "id": "6e0ee373-ad2a-47cd-b5c9-b17ac8d9dbc2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e5c38bfc-5b3c-482c-81f2-b4aaeb1b769c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119849fd-55b4-482b-a612-22e66cf29de6",
        "cursor": {
          "ref": "a333beb6-908b-4065-94a1-980d255d6217",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "07d793f3-e3d8-462a-ae64-52e66213e392"
        },
        "item": {
          "id": "119849fd-55b4-482b-a612-22e66cf29de6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4818fff3-9359-4f19-b2df-f504043e28e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ab6576-b86a-4fbd-ab29-af41a6e69db0",
        "cursor": {
          "ref": "1431e3af-b3c4-4d66-9c89-8a68bf7adca2",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34185d11-44f0-4c38-bf72-83f052a7d1e6"
        },
        "item": {
          "id": "78ab6576-b86a-4fbd-ab29-af41a6e69db0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a6c20511-ac8c-427b-b5f9-820acbd58fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61bac2c-4ee7-49e5-9657-0ce79fc71edb",
        "cursor": {
          "ref": "e207c550-013e-4684-9df0-1bd2f97eb2e3",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b63be4f-0f1e-4a1d-a3c4-defc9bd071b1"
        },
        "item": {
          "id": "a61bac2c-4ee7-49e5-9657-0ce79fc71edb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "878bf4df-df5d-4610-a381-124ff619472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ba43fa-681c-4e8e-8ad1-70f62e9e462b",
        "cursor": {
          "ref": "65dfbc08-0a85-4d8d-97d5-a60804e2f200",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4b9376da-cd38-42b9-b534-36141f6bc5f8"
        },
        "item": {
          "id": "48ba43fa-681c-4e8e-8ad1-70f62e9e462b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b3846ea-6518-4d52-a8d6-ce742c349f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c805cf92-b80a-4193-9f6f-31ae473439a9",
        "cursor": {
          "ref": "c4050304-91d8-40fe-8d67-6d81ba560c94",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d229e468-1731-4fc3-9cb9-9428057b2fd8"
        },
        "item": {
          "id": "c805cf92-b80a-4193-9f6f-31ae473439a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc679022-c78e-4f42-a7d5-ae5ea468e29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ce1217-a56c-462c-95e8-09da1137019b",
        "cursor": {
          "ref": "2e0997b9-1209-4f76-940a-e1f8a315c7c7",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "26565670-9d9a-49ae-bf1d-0a9c1b5639a0"
        },
        "item": {
          "id": "a1ce1217-a56c-462c-95e8-09da1137019b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a959eead-6fdf-490e-bbbc-ac982e7db5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa5e991-5999-4189-be85-f83c77587ea2",
        "cursor": {
          "ref": "f4b25805-89e4-4bba-9f4f-54c092a756ad",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b1f4e3fc-8c26-45db-bf0e-fa32b64b9fa8"
        },
        "item": {
          "id": "3fa5e991-5999-4189-be85-f83c77587ea2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf3c99b0-cbd8-49f9-91be-6f4aafaf9560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4a0170-9ea1-4cfd-8664-dee9ec204213",
        "cursor": {
          "ref": "97ddb6cf-1df3-4bb9-beb1-23dc1c589abc",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "030e21d4-8a0c-420e-9243-f655ae5e135a"
        },
        "item": {
          "id": "bb4a0170-9ea1-4cfd-8664-dee9ec204213",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "373a5181-b941-451e-930c-54c9740ee631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971846c3-1ee4-4e2a-9d93-5114c3c053be",
        "cursor": {
          "ref": "772922e4-cc34-4062-8ff8-77bc1acf942f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aafa4077-8ee8-45d8-9fcf-4d711427fcdc"
        },
        "item": {
          "id": "971846c3-1ee4-4e2a-9d93-5114c3c053be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "95b1b05a-0137-4a38-bd8b-f7d66fc86135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da7b337-9c77-4d31-9b83-462105931554",
        "cursor": {
          "ref": "dcbdb431-b5c3-4fe6-a2f2-297ee1187122",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "243188f9-32db-4729-8d60-452874ae4aa8"
        },
        "item": {
          "id": "5da7b337-9c77-4d31-9b83-462105931554",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b057c970-9822-4a08-86f0-a8a504420342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918b04db-3d10-441a-945b-755192fc3e8d",
        "cursor": {
          "ref": "bafa08cb-d4ea-441d-8bcf-1b01ff543b05",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1b3a68d2-af15-4e84-8fbe-2c943f332c26"
        },
        "item": {
          "id": "918b04db-3d10-441a-945b-755192fc3e8d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "922d8657-ff3d-40a5-9eca-a1a6e129bcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d98e89-42ef-4b79-a7bc-fa58ba6809d0",
        "cursor": {
          "ref": "e04b4f68-3a57-4cd7-878c-b190a2fa7cc7",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a4747a18-2991-4d3b-a7cf-3fabc10d6bf6"
        },
        "item": {
          "id": "40d98e89-42ef-4b79-a7bc-fa58ba6809d0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12c1a5d0-a9d0-4ff8-ba72-460dfb5cf7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4e50e8-c3da-4eec-b89e-ba1c6bd68525",
        "cursor": {
          "ref": "bcd490b7-0ac4-401b-ae4b-d28c2802e5c9",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c37263a9-c744-47d8-af56-6a73ca13cd57"
        },
        "item": {
          "id": "7e4e50e8-c3da-4eec-b89e-ba1c6bd68525",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8f361d97-7161-499f-96c3-cfb5eac66c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f070ca-f047-463a-8b88-bc496f483a35",
        "cursor": {
          "ref": "5f55cf47-9dc5-42e2-a902-430d306d21f8",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec5d6e6a-a8ca-46ec-8a8d-67d1ef2a290c"
        },
        "item": {
          "id": "e4f070ca-f047-463a-8b88-bc496f483a35",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5056b1c5-589a-42ef-a6ca-3cbfa1fe77b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f032bc-87d8-46d2-a4a0-669bab9d5b68",
        "cursor": {
          "ref": "cbb215cc-255c-45c7-98c5-55202e554428",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "98f6bdf1-f12a-44df-bd25-5ce01faa41d4"
        },
        "item": {
          "id": "f6f032bc-87d8-46d2-a4a0-669bab9d5b68",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed4cb019-216a-4464-b7a0-77bd391e96fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93350c60-5abc-46bf-99ed-21cc20ec280b",
        "cursor": {
          "ref": "cb696849-6d27-447f-ad76-758e896b3980",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb359eca-8319-4a60-afe6-9e864545fb35"
        },
        "item": {
          "id": "93350c60-5abc-46bf-99ed-21cc20ec280b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "62fccb50-daa2-4c2f-88d9-8e80f026bbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff71c2e2-c9a0-43f0-b86d-99427bd9bd69",
        "cursor": {
          "ref": "56b751f1-452b-4dea-ae32-5d9d24f88e7a",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a48b5968-b420-467f-80f1-4398cf2804c9"
        },
        "item": {
          "id": "ff71c2e2-c9a0-43f0-b86d-99427bd9bd69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "384af6ec-2638-4dec-aa3f-79756d4b0569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf452a23-37ba-420f-84c6-dcafe27dea19",
        "cursor": {
          "ref": "6eefb809-bae8-4f5c-b013-2d15340093d4",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9a8f908f-70a2-4656-a7c5-be690b01f735"
        },
        "item": {
          "id": "cf452a23-37ba-420f-84c6-dcafe27dea19",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d0f5292e-0a34-4441-ae0a-ea1db90e9e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc0d7fd-3f05-4cf2-9d42-62b669cb14d4",
        "cursor": {
          "ref": "ec36de0f-2f54-4943-97f9-35d3c8e1a7f9",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3f89695b-d812-4e89-a6f9-a9dd7f7bfa30"
        },
        "item": {
          "id": "1cc0d7fd-3f05-4cf2-9d42-62b669cb14d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a64f7997-dcc4-4d9b-8a8c-1d826297dad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3d5012-23ed-4bf1-9701-0a66d65498fa",
        "cursor": {
          "ref": "7ee940a2-4f22-43f3-a444-97e4db48f848",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47103bfd-4995-4001-b8cd-8717bddcc81d"
        },
        "item": {
          "id": "bd3d5012-23ed-4bf1-9701-0a66d65498fa",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "28caf95d-1312-49bf-a39e-80ac04cf28ac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31ec2b0-dfa0-46e3-af66-66ed2253eb68",
        "cursor": {
          "ref": "db038a6b-ead8-4953-8f87-653668e8c89f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5af0da5b-59e6-4c19-bb0a-feace3fddc94"
        },
        "item": {
          "id": "d31ec2b0-dfa0-46e3-af66-66ed2253eb68",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ec3e8282-b393-4394-8de6-45ae04843def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31ec2b0-dfa0-46e3-af66-66ed2253eb68",
        "cursor": {
          "ref": "db038a6b-ead8-4953-8f87-653668e8c89f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5af0da5b-59e6-4c19-bb0a-feace3fddc94"
        },
        "item": {
          "id": "d31ec2b0-dfa0-46e3-af66-66ed2253eb68",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ec3e8282-b393-4394-8de6-45ae04843def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3163a17e-0992-417c-9a9d-b461773bc77c",
        "cursor": {
          "ref": "65476b72-4f7c-41fe-bbf5-5f34a146b8ba",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ef211f2-0aed-4c02-91cf-5ecc87520ba7"
        },
        "item": {
          "id": "3163a17e-0992-417c-9a9d-b461773bc77c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99fc066d-e352-4558-9adb-d415eb675f2d",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "0b89f407-aae1-426c-bb93-4920cc493db7",
        "cursor": {
          "ref": "bebd4361-dab3-46c5-ab8e-924f2e79628d",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5e23b6dd-31cf-494f-9803-86a1723b56d1"
        },
        "item": {
          "id": "0b89f407-aae1-426c-bb93-4920cc493db7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9c44b306-1bbc-4ee0-9c3d-c3a3df50c12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb0d16b-6ff8-4f4a-8540-c63319e23002",
        "cursor": {
          "ref": "9fe795e3-704c-46aa-9ca0-60fbaaa0282d",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7692c76e-884a-431f-84d7-7fdf278e1b4a"
        },
        "item": {
          "id": "ceb0d16b-6ff8-4f4a-8540-c63319e23002",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b8244173-a415-4dfd-9447-97213e32dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199b079-2e6f-4873-9c71-e7359fe99302",
        "cursor": {
          "ref": "4914f63c-7f65-4e70-90af-30b0864b02dc",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2c7b1b9-1a1a-4222-b6ed-2f5389dbb152"
        },
        "item": {
          "id": "7199b079-2e6f-4873-9c71-e7359fe99302",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "67373eff-ef2c-4d27-bd08-90b6d4c935c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fded3ba-b086-4807-a6e8-1f2bc0090b54",
        "cursor": {
          "ref": "bd22dd08-6bb4-460c-b046-6225ec9488f2",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b3b3ed2-4d89-4d50-84b7-f0416d501704"
        },
        "item": {
          "id": "7fded3ba-b086-4807-a6e8-1f2bc0090b54",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66794746-9b67-4063-973d-d7fa69925429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27cd67-3832-43b9-9cbd-d54ed8fad543",
        "cursor": {
          "ref": "6b46fdf5-ab18-4bd4-b83c-79a082fd6b49",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bf8fc252-7f4c-4f3f-a8a0-48a07c124a5f"
        },
        "item": {
          "id": "1b27cd67-3832-43b9-9cbd-d54ed8fad543",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "22589109-df2e-4d31-ba3c-af29db11df53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629c76fa-f0ad-4c54-9fad-3638438ea255",
        "cursor": {
          "ref": "3d19c59d-e7f6-4c48-bde9-0160db68dbc3",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "97cf03e6-d808-4e2a-8fa6-723570803d69"
        },
        "item": {
          "id": "629c76fa-f0ad-4c54-9fad-3638438ea255",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e84afc69-afa1-41c5-bc14-1bf8ca90a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d08eb3-0439-4318-acac-83a859a61a69",
        "cursor": {
          "ref": "0f265c1a-a070-4ceb-b7b7-b6545698e09d",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87a5651d-2d69-4fff-b42c-77473b709047"
        },
        "item": {
          "id": "42d08eb3-0439-4318-acac-83a859a61a69",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1bfbbbab-87d0-4d48-96b6-9d87bf732f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824a2367-41df-49ce-9cfd-b28333d3d6e2",
        "cursor": {
          "ref": "0ff7d5f0-bd9f-46e4-bfe3-189835a41232",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "df81ef58-727b-4364-ac6d-cf43d1f863fe"
        },
        "item": {
          "id": "824a2367-41df-49ce-9cfd-b28333d3d6e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "346be51b-d81a-421b-9631-5ddb01401806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cfa711-8afd-4744-a6e4-797f51ad2e1c",
        "cursor": {
          "ref": "be35aaa6-1b7a-49e1-95bc-d8f0bf8e0be8",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9b178d6e-6dd5-431f-b8bf-8819d2ec3b88"
        },
        "item": {
          "id": "67cfa711-8afd-4744-a6e4-797f51ad2e1c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc0df39a-1da8-40ca-ba2a-daa8b2149d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a6e27f-5ba6-47a3-bce8-397637a954c3",
        "cursor": {
          "ref": "2245e0b5-ce31-4f35-bd80-7310bf82b3c1",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9a65df2c-b7b8-49c8-a1bf-a645c256ca0d"
        },
        "item": {
          "id": "c5a6e27f-5ba6-47a3-bce8-397637a954c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3deecbf-6767-43b9-9c23-e420a3eb935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161d9ca-5ab8-4cca-82b6-e2c85b36fbfb",
        "cursor": {
          "ref": "1727847a-530c-4ccf-9a15-8feb002015bf",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "03524fa4-1fa1-4a65-922e-e52d21a2c0e7"
        },
        "item": {
          "id": "2161d9ca-5ab8-4cca-82b6-e2c85b36fbfb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cce8d27d-c37b-4c84-9f4d-4ad9dbed903a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f34c52-b20a-41eb-9d72-ac9e766d9b55",
        "cursor": {
          "ref": "3a0c6d74-71dd-4773-8870-60a3643f5408",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7d81f646-432e-47a2-821e-d5962d6e8f0e"
        },
        "item": {
          "id": "c4f34c52-b20a-41eb-9d72-ac9e766d9b55",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2b0aeed4-0102-4a99-967e-8ce7658b9353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a800d-8a92-487a-ba1d-3798ca8bfd05",
        "cursor": {
          "ref": "8c631982-ad5a-40c7-8fb1-655418c0693d",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "57d11fe4-d9bc-4d76-a0d0-f095b559d657"
        },
        "item": {
          "id": "ac0a800d-8a92-487a-ba1d-3798ca8bfd05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30fbf894-3039-4131-aa3e-c3176a8ed865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03df87e4-d157-47f5-98d7-170ce1583a6e",
        "cursor": {
          "ref": "44f156ba-7221-4614-92ce-320f3a003440",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "25e8ceb7-0bec-4c83-866a-3cec0f830e28"
        },
        "item": {
          "id": "03df87e4-d157-47f5-98d7-170ce1583a6e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "924d6907-c155-4daf-8b35-70811c071335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85772e43-ff97-4e55-89e2-1473ac45ff74",
        "cursor": {
          "ref": "a854788e-63af-4c30-b031-d19a32d73590",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0ec638ed-126d-4904-b3f5-7a0ec7f45494"
        },
        "item": {
          "id": "85772e43-ff97-4e55-89e2-1473ac45ff74",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f0f85a72-f1e1-484d-b601-371f2e221077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e012cecd-7fa0-4402-888d-00e87fbf822d",
        "cursor": {
          "ref": "01593b98-1b2d-41a8-9bf1-3186ac1cfbef",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "66544ff0-a7b7-459f-8605-27c29144db53"
        },
        "item": {
          "id": "e012cecd-7fa0-4402-888d-00e87fbf822d",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "631627ae-c8b3-4e45-8147-90f819e135f3",
          "status": "OK",
          "code": 200,
          "responseTime": 1901,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "4d36c273-cb4c-4fd6-adc1-e483fd6cdcba",
        "cursor": {
          "ref": "592a49ea-c743-4d09-a54e-e418ab04cb5d",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2578558-02eb-47dc-8315-ca6be1d672e6"
        },
        "item": {
          "id": "4d36c273-cb4c-4fd6-adc1-e483fd6cdcba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f51d66c3-e14c-4d38-9465-f3581d014364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7f3cd-c731-475c-8feb-ed79c9215ee9",
        "cursor": {
          "ref": "17b3f2ec-925d-4a5e-a3c4-78173fe66b03",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f65c2098-4a4f-4ae5-b14b-14892246edcd"
        },
        "item": {
          "id": "88c7f3cd-c731-475c-8feb-ed79c9215ee9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "17080c11-b051-43ae-8e60-4ad26b805cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e550c05e-9525-4e0c-928d-e58520b6ef5a",
        "cursor": {
          "ref": "548ac803-77cd-4d40-befc-44dbfb4cf43d",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9f6026e0-6e26-4475-b2d0-0c8efba398ed"
        },
        "item": {
          "id": "e550c05e-9525-4e0c-928d-e58520b6ef5a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7b61bae8-d0f2-458a-9e7d-1211fc275b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02d51b2-c65d-4427-a1b1-660020a7c4b2",
        "cursor": {
          "ref": "bd3a5a18-42d4-450a-9831-959dfdedaa6f",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a95ad21b-3e38-44df-855b-44b2cb815f10"
        },
        "item": {
          "id": "b02d51b2-c65d-4427-a1b1-660020a7c4b2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ad9f583-0800-4fb3-858f-d44c930d56a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a7aeb-691f-4c9c-914a-f3dabc241094",
        "cursor": {
          "ref": "d4b7b153-b688-4c7a-bf88-d5bf1380d5d4",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "be001e15-21f4-48fa-9b96-2a66266e1504"
        },
        "item": {
          "id": "fa3a7aeb-691f-4c9c-914a-f3dabc241094",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "39e053ba-dff3-4346-a689-f40f8fa24ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81092c5e-9b43-42db-8fd5-a6b21a496940",
        "cursor": {
          "ref": "5fc1867c-4c7a-4677-b77b-6e368ef54736",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d7e14d1e-031e-4696-a369-18d2441036af"
        },
        "item": {
          "id": "81092c5e-9b43-42db-8fd5-a6b21a496940",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ad0ec0cb-1294-415d-8b40-2edae22bb306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8666bfe8-dd81-450e-ad2b-d238409d9022",
        "cursor": {
          "ref": "5c01236d-d4c8-487c-bf7e-57fa5823d2d9",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "29015fdc-78b6-4f95-8985-10f487b2bdc6"
        },
        "item": {
          "id": "8666bfe8-dd81-450e-ad2b-d238409d9022",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "878c2a27-d47d-4142-af1d-6d796f4cad20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5069f106-4f28-426b-8ee4-b2a54ae8f0ad",
        "cursor": {
          "ref": "23d02446-204c-43aa-99bb-0485f0aed79a",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3bd673ef-72d5-4ec1-afe6-672d94843eda"
        },
        "item": {
          "id": "5069f106-4f28-426b-8ee4-b2a54ae8f0ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9c6133c5-e5d9-4e38-a8d1-779787b965a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6971425f-0720-4b4a-8d46-a4f2055cb51e",
        "cursor": {
          "ref": "787faff6-a7b7-44a2-bf90-d2e4bb593dd3",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c7734e96-f850-4669-9681-a0fda52dffb3"
        },
        "item": {
          "id": "6971425f-0720-4b4a-8d46-a4f2055cb51e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98823ac2-9b62-4833-a706-b20e5bf20e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268cf321-c5e9-4f6a-969b-c20f5632f492",
        "cursor": {
          "ref": "cf6c532a-441d-4cd7-b040-cdfb87be388d",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "913b115a-cd2a-4946-9e4d-7a80408c98fd"
        },
        "item": {
          "id": "268cf321-c5e9-4f6a-969b-c20f5632f492",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9267b95a-3d3e-4f3f-a505-836fba95d0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cdfd14-ab1f-4e68-b0b2-4973e6f522a9",
        "cursor": {
          "ref": "c95db138-0be1-443a-a68f-1e9dc9a77705",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d5c7c72a-f11f-455b-8111-9bc52c6b625c"
        },
        "item": {
          "id": "f5cdfd14-ab1f-4e68-b0b2-4973e6f522a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fec502f1-b8c9-418a-87ef-bc5bd86032d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cb6968-a18c-484b-babf-18c458c45bc8",
        "cursor": {
          "ref": "3c324d0c-9163-4dea-8f60-470ef70390c9",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4a87ad97-cd19-4b0b-831d-32556dddd4f6"
        },
        "item": {
          "id": "67cb6968-a18c-484b-babf-18c458c45bc8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "59b592f0-968d-45f7-8736-81ff3526f9f3",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4b665f83-65cf-49f9-bfc4-8ca667285e5f",
        "cursor": {
          "ref": "fd469a63-9166-4b6f-8647-751bc82fe3b1",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6b25f164-a48f-49e3-a684-392d47006e4c"
        },
        "item": {
          "id": "4b665f83-65cf-49f9-bfc4-8ca667285e5f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd5f00c5-59bc-45b5-8eee-b9d206134b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2aa8e9-415d-4545-ac16-ff754aa28914",
        "cursor": {
          "ref": "8f3be533-5292-463a-a2a1-52a36fd4c162",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ce66cfe7-1f99-4ff2-9f85-29eca0e4dbfd"
        },
        "item": {
          "id": "7d2aa8e9-415d-4545-ac16-ff754aa28914",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "726e022f-cac6-4e0e-8f70-b06d59b227d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b75636-c42d-4fd2-8c1f-472475ab9ab3",
        "cursor": {
          "ref": "7d528948-e80e-4d10-b109-6e5c3e0aac8b",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ac01cba6-80b0-4505-8838-61ec21bcb707"
        },
        "item": {
          "id": "64b75636-c42d-4fd2-8c1f-472475ab9ab3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eb83572c-a279-44bf-8895-9f568da139f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03c8e0f-6650-46cf-a0db-04a0bfc221eb",
        "cursor": {
          "ref": "6a815d97-61bb-4b30-ab42-1794c76d74de",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "81e7b7c7-a4c5-4564-a8af-413d90697eea"
        },
        "item": {
          "id": "c03c8e0f-6650-46cf-a0db-04a0bfc221eb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0d70eb9a-2d3f-41ba-9ea2-ea3fc1a2dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cabdcb5-d35b-4a13-a3fd-0a45b33c4d8b",
        "cursor": {
          "ref": "083d9d4c-1d86-4fa0-bd5a-e9b5d68e0378",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34d1e390-3ef4-4b9f-82fe-581b4a6f635d"
        },
        "item": {
          "id": "3cabdcb5-d35b-4a13-a3fd-0a45b33c4d8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "374d468d-46cc-4fc7-849d-dfaf9ce32f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ba147-23cf-4ccd-a816-79604a3e8bcc",
        "cursor": {
          "ref": "6146288b-753a-4640-a8a2-5bae927da42f",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "693e8626-f1ad-41f6-9f65-b5190a635432"
        },
        "item": {
          "id": "0a3ba147-23cf-4ccd-a816-79604a3e8bcc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a61d922-9219-46d6-8be7-f8b9bfb422a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ba0f6-7ab5-4edf-b1d0-b72ee6c75aea",
        "cursor": {
          "ref": "90539e50-7edf-4f30-9501-6058d10c74dd",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c67af05f-cf7e-4e19-aa39-01ed2594f28a"
        },
        "item": {
          "id": "c45ba0f6-7ab5-4edf-b1d0-b72ee6c75aea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "22cdc957-56dc-4405-b7f8-fc1db9b67cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2cf709-f373-4be7-828d-c01cdf4e45c6",
        "cursor": {
          "ref": "25c61fd6-fb71-424a-910f-51b96fcdcfff",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c2cc339f-87e2-4c0d-ab73-5550f9346c0f"
        },
        "item": {
          "id": "dd2cf709-f373-4be7-828d-c01cdf4e45c6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2228dba9-4c44-41be-b8e9-26429790abeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7869716c-ac93-4fe7-936a-97ce89de8144",
        "cursor": {
          "ref": "325835a5-b002-4307-b308-ac84e1876445",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24882741-b667-4e4b-8cfe-86f7cf6cb29e"
        },
        "item": {
          "id": "7869716c-ac93-4fe7-936a-97ce89de8144",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cf82147b-2ba7-4297-8d30-4fe1beb41f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d8b43a-b0d0-48de-b7ea-c42bce51de9c",
        "cursor": {
          "ref": "27929376-cb37-478d-acb9-a7bac0638e29",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "544550fd-df47-44d1-8aff-0ed4a0ab7342"
        },
        "item": {
          "id": "c4d8b43a-b0d0-48de-b7ea-c42bce51de9c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "585295cc-207e-43c2-9c18-bce0c09df12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d0ded-13c2-4124-903e-74e350f51ed6",
        "cursor": {
          "ref": "0c888648-8602-41f1-9e06-72c0dd2d2872",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c74a2179-616e-485b-9644-d830bdc0dae7"
        },
        "item": {
          "id": "041d0ded-13c2-4124-903e-74e350f51ed6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ed6c57e-cb8e-4989-976f-474946a009a2",
          "status": "OK",
          "code": 200,
          "responseTime": 278,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "18192447-0e94-49a3-afb7-7fdbfd3d10ef",
        "cursor": {
          "ref": "aa1fa889-25b5-43b5-8858-6be023af29e1",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "83c672b8-c19c-4819-8c89-c01977fa93c3"
        },
        "item": {
          "id": "18192447-0e94-49a3-afb7-7fdbfd3d10ef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0629ca87-ab65-4c91-ae2e-95ab066fa9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b51670b-225c-4b2c-a78e-b14d02f45683",
        "cursor": {
          "ref": "871a5b00-710d-4857-ab98-3a026b32330b",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8eee0d8b-2c30-4736-8420-b672b0d441c0"
        },
        "item": {
          "id": "5b51670b-225c-4b2c-a78e-b14d02f45683",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "17b1b352-a9b0-4c8d-9414-1ceaaf179b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d7d567-a57f-4355-8941-6f29eaea8dce",
        "cursor": {
          "ref": "ee3a6648-471f-4f97-88ee-c52b8994e7fc",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff665a81-737d-466e-902a-cb10b46ab051"
        },
        "item": {
          "id": "35d7d567-a57f-4355-8941-6f29eaea8dce",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "286c1f0e-0b06-4298-8063-4488752e2ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7d9f97-264c-4238-b440-47bcb75cad0e",
        "cursor": {
          "ref": "708d0287-c9ce-4881-a9e3-6c07061694ea",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f8e8c1bb-fb60-426e-8865-ff3af91e69aa"
        },
        "item": {
          "id": "5d7d9f97-264c-4238-b440-47bcb75cad0e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9b8eb764-89d1-4c8a-9f89-fd431732d39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b644d507-d29c-4528-9ff1-474149c4e495",
        "cursor": {
          "ref": "bf292383-e89d-42c2-919f-d10c57d2d9c5",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0fe3f179-7ced-4354-b957-ae6a0a6cb878"
        },
        "item": {
          "id": "b644d507-d29c-4528-9ff1-474149c4e495",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "81d1ca96-e8e3-4e75-98ea-b88218e37b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123ac65b-9956-4f6d-9826-65801387230f",
        "cursor": {
          "ref": "2b8a3000-5442-4b33-96fc-ff31b48401b4",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2b9af892-c95d-4358-99a1-fa8261302bb6"
        },
        "item": {
          "id": "123ac65b-9956-4f6d-9826-65801387230f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b25527d8-998a-406c-a0ad-99c7117576b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb67963-4d96-4ee4-b53e-723a97b85cbe",
        "cursor": {
          "ref": "4658674a-c8e2-489a-a14a-2d3986489fb1",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6e087854-0080-4bab-82c0-7fbe92f604fc"
        },
        "item": {
          "id": "9fb67963-4d96-4ee4-b53e-723a97b85cbe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9fa87553-8cbc-461e-833f-41f100c1272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab6cf1-b72e-4e2c-a1f8-344a14ca7299",
        "cursor": {
          "ref": "c980acb8-46e4-4929-96dc-dbf4ec5353d4",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "165d0df5-2af0-4fa9-8a0c-daad4433a38c"
        },
        "item": {
          "id": "05ab6cf1-b72e-4e2c-a1f8-344a14ca7299",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ed75c87d-c692-4ea0-8564-170794fa1389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7affab-5bec-4d67-855b-932f5e666665",
        "cursor": {
          "ref": "16f47161-cd6f-4268-9905-5944d5851db5",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "08b5ea33-54f2-4bae-a40b-e1bf511d5629"
        },
        "item": {
          "id": "5f7affab-5bec-4d67-855b-932f5e666665",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "538e408e-28fb-48b6-832d-93e2509dff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f72e83-8814-4e53-b3c2-09d08afd5c34",
        "cursor": {
          "ref": "07da42cf-6a01-4858-9387-a3f11e8f00bd",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "38c6e58f-7ac0-4c78-8852-4f32a7afceac"
        },
        "item": {
          "id": "37f72e83-8814-4e53-b3c2-09d08afd5c34",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1fcdb19c-6767-4b45-a3f5-7acd30aabb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e7577f-6a3b-4dd4-b084-6ec156dcd341",
        "cursor": {
          "ref": "f22d090f-e0e3-4d7c-90b7-7ad6cabb98a4",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "79f9260a-05af-47ea-8a81-bdfe6afac4c8"
        },
        "item": {
          "id": "e0e7577f-6a3b-4dd4-b084-6ec156dcd341",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d79a1be7-f40b-45ed-9c35-28c0e34811c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a971d-4608-437f-a176-d6e7cfea7e1c",
        "cursor": {
          "ref": "16dc4716-4c9d-448b-9086-62ed43ea6465",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82d2f318-04f0-43b1-868f-bce56de59839"
        },
        "item": {
          "id": "7d7a971d-4608-437f-a176-d6e7cfea7e1c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e7473e7-0797-4a74-9aed-ac6d6679c7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413a88a-eef3-4bb0-ba76-674f309eee2c",
        "cursor": {
          "ref": "0cf424bd-d52e-4dc0-b7c0-d6e98a9f6f53",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0c5244d6-409d-4052-854b-b57f0146caf5"
        },
        "item": {
          "id": "2413a88a-eef3-4bb0-ba76-674f309eee2c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f12fd613-e305-407e-bce8-c4ec207c53a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7becee-bef1-49ee-9263-232d33d41acf",
        "cursor": {
          "ref": "387b79c4-dc1f-45d1-aa0b-e8852b238631",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0ab4c969-dacb-4717-803f-4ea783351a27"
        },
        "item": {
          "id": "ed7becee-bef1-49ee-9263-232d33d41acf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "55e6765e-4864-40d3-a481-4b8e470f2495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b564aa9-62aa-47d2-b364-027af1e41b02",
        "cursor": {
          "ref": "86a3b1cc-1451-4884-afc7-b89a485f6844",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4206e682-5fc2-4a6b-95c1-619741b0da2a"
        },
        "item": {
          "id": "2b564aa9-62aa-47d2-b364-027af1e41b02",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "875fc7bc-69f6-4da0-9174-bd3428483d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77d06ad-0568-45bb-a15e-9e797994c5dd",
        "cursor": {
          "ref": "e3ce2861-8dcb-4a5f-9437-f8b105f0e3af",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c353027e-3a00-4d2a-9f89-55291b246a17"
        },
        "item": {
          "id": "a77d06ad-0568-45bb-a15e-9e797994c5dd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9f840b10-2c12-41b8-940b-e25a3652c66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f258455c-8b1b-4da6-a446-2dc34b6438e0",
        "cursor": {
          "ref": "b301a1f6-424b-4a54-be7a-ffd20f816e54",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "96e349d0-f70e-4e22-8039-8e8075153942"
        },
        "item": {
          "id": "f258455c-8b1b-4da6-a446-2dc34b6438e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fdf95ea4-f4a8-4ec2-b09b-e2e428edebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7938c5cc-72b9-4e25-9f91-c6ba1cbdeb10",
        "cursor": {
          "ref": "b2caa8c2-e3b3-4be1-a60f-7a635e3ffd03",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d1ccd6de-3266-4dc1-b8d9-8d6ec65a3e68"
        },
        "item": {
          "id": "7938c5cc-72b9-4e25-9f91-c6ba1cbdeb10",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d8cfb79b-d8b2-486c-80cd-fd71e4e75d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f245d2d-14d8-446e-96c6-667f139318c7",
        "cursor": {
          "ref": "4c3f0017-1bf2-4f40-8ef4-26dcff958482",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "199f1ec6-632d-4684-a53e-85114a452ffe"
        },
        "item": {
          "id": "7f245d2d-14d8-446e-96c6-667f139318c7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "461dc881-3e08-4518-82eb-3cf3b6dfb651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e86dde4-cb43-4444-9b6d-e2863812779e",
        "cursor": {
          "ref": "a7825256-49a8-44df-839a-ab3c104120e6",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c7ddad64-0bef-4a3f-a32b-01a3c347b151"
        },
        "item": {
          "id": "1e86dde4-cb43-4444-9b6d-e2863812779e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b6f9291e-3a2c-4359-b7dd-ec1b1dbc3bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fac22f-b020-4716-b14f-6698a51e0f30",
        "cursor": {
          "ref": "44350c5f-306c-4df2-bad5-8d9e8eabf782",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9fbf238f-3613-435d-9bce-630ab5e41d4b"
        },
        "item": {
          "id": "f2fac22f-b020-4716-b14f-6698a51e0f30",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "08a985d1-01ee-4150-824d-4e4c1db6d67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158d4b4f-c8d5-4df4-8486-494f0307902e",
        "cursor": {
          "ref": "1806d91f-cf89-4da8-8d6d-6270ccc096d8",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "28e94842-f823-41e1-9f1a-059199964a50"
        },
        "item": {
          "id": "158d4b4f-c8d5-4df4-8486-494f0307902e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "10af3331-351d-458e-a8f1-9e7b03ce3d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d8e9f7-7e68-4617-b442-dec08acf046f",
        "cursor": {
          "ref": "94d20e93-49cf-442f-9036-9db04bb7665f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "85d2c22f-5d00-462b-a0db-aaebfc3e2e3c"
        },
        "item": {
          "id": "32d8e9f7-7e68-4617-b442-dec08acf046f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0713fb4b-9b39-4ff6-b66d-02e7f8d9602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0082dd7-d44f-4ad3-b78b-d521e388bdf2",
        "cursor": {
          "ref": "07d489e4-eb5e-4750-94e9-01b61110e2ed",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d5c2e1f9-f7c2-43a9-8850-160caa572baa"
        },
        "item": {
          "id": "f0082dd7-d44f-4ad3-b78b-d521e388bdf2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d8569424-ff20-4b1c-a8a1-8f32fc8287c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7018d9-a2bc-482e-aaac-de04d8630955",
        "cursor": {
          "ref": "79478a74-3483-496d-972c-98071fbde90a",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc77e6dc-fdbe-4d0f-af6b-6db246493532"
        },
        "item": {
          "id": "8f7018d9-a2bc-482e-aaac-de04d8630955",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fc5da642-ac6c-4883-9ab1-c626dcdbdf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a1f522-9f35-462f-bfc3-84e50813f0c1",
        "cursor": {
          "ref": "c40d2af2-885a-4f24-892d-b20d4801d45e",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8cefe76f-7869-4bb6-aae8-54e3b7c12811"
        },
        "item": {
          "id": "54a1f522-9f35-462f-bfc3-84e50813f0c1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7ecf1abc-8f50-4732-824e-635b46a194cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b336494-9677-486a-b511-81042e75d832",
        "cursor": {
          "ref": "399f9caf-98d3-4125-a149-848f37384cde",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ec9825bc-216e-4d09-9f07-da3036dce91e"
        },
        "item": {
          "id": "7b336494-9677-486a-b511-81042e75d832",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8b5a148e-a654-41f6-929d-02f6675c171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfeac22-55d4-4010-bd62-59374e2bc8b0",
        "cursor": {
          "ref": "832629bd-e29c-4225-9dd5-d1158c34b506",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7c176069-b2d2-482a-8cdd-0844341422ab"
        },
        "item": {
          "id": "7dfeac22-55d4-4010-bd62-59374e2bc8b0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "593e46f1-ade8-4f23-bb56-ed6c47d18412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94737d00-0d4b-4393-bad5-16d4fc229e8e",
        "cursor": {
          "ref": "2da27d9f-9a02-44a7-92ec-7a999a40f409",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5d0f4ef-4eab-4a58-ab03-9fbac434701c"
        },
        "item": {
          "id": "94737d00-0d4b-4393-bad5-16d4fc229e8e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "89f9cdf0-13d3-4fca-a7af-d4707815f544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95f80a-ad44-4feb-964a-dd2076137894",
        "cursor": {
          "ref": "c47dc6ff-bbd3-4683-8cd0-cbb055275e12",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d7d65c90-be72-4c0e-99f5-629f7a32527c"
        },
        "item": {
          "id": "db95f80a-ad44-4feb-964a-dd2076137894",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5613b123-4422-4806-b6a3-7e843f1ace03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f604a-1533-42f0-91f8-166f4678b269",
        "cursor": {
          "ref": "21d07f6f-6c57-44be-8639-d178bc4f9878",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bbe25b05-0fed-43e6-81cd-9445354ecd82"
        },
        "item": {
          "id": "624f604a-1533-42f0-91f8-166f4678b269",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b0dab5ae-ffc0-4e53-855f-d00cbd1f492d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3db10e-c31a-4603-910f-8b49d3d11859",
        "cursor": {
          "ref": "73a7bf83-5f8d-4919-86ee-2f2498da696a",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "819eef13-d3f8-4847-b9e2-4dbc11ebdc41"
        },
        "item": {
          "id": "3d3db10e-c31a-4603-910f-8b49d3d11859",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a645339f-1e4b-4278-b1db-93ffd0fa5c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c16f66a-72dd-4813-b1aa-a0d5d047f25d",
        "cursor": {
          "ref": "f2c46a39-fcd6-437d-bb2f-f7d1db7c9a99",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b913b18-67a2-4a17-9414-9f344621a861"
        },
        "item": {
          "id": "0c16f66a-72dd-4813-b1aa-a0d5d047f25d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5606ed43-fe75-4069-ac30-df67792b6671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a484f9-ad4f-44cf-b8f2-ced87f1ddafc",
        "cursor": {
          "ref": "f9307724-1ceb-4b9e-932c-b0d84d46541c",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7055b82d-f1fa-46aa-b196-ac7b0a1b7b33"
        },
        "item": {
          "id": "29a484f9-ad4f-44cf-b8f2-ced87f1ddafc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f0c3c008-7e6f-4462-a2c7-6d13c678d0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd4f90c-1c98-4894-b692-e8cdae82a63c",
        "cursor": {
          "ref": "b1e18e2c-8a6a-4335-80a2-0a9087784993",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6a1d02eb-1596-4d9a-b7f6-9ee6e28c6c3c"
        },
        "item": {
          "id": "7cd4f90c-1c98-4894-b692-e8cdae82a63c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ef8134da-2817-4837-bcf4-47069d3d7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a4f51c-4afc-4e50-ba05-33c298c1d06f",
        "cursor": {
          "ref": "f55c3e7b-cb93-47c6-9f75-14110052a361",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13254fae-23bc-414e-b97e-5fa9321b2771"
        },
        "item": {
          "id": "f2a4f51c-4afc-4e50-ba05-33c298c1d06f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "29a93f45-5a6b-4dbd-a853-4d376d493c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c6dc16-abd0-4fcb-ba6f-bea8c7abc78e",
        "cursor": {
          "ref": "2e5cc1a9-fa6c-4868-ac32-d649d4483bb8",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b56a25c7-2ef9-4735-a3f1-0b7c1f2cb59c"
        },
        "item": {
          "id": "e3c6dc16-abd0-4fcb-ba6f-bea8c7abc78e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "401581db-0f8f-4f07-8c19-18e2ceae1c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6862fe-16ec-4ae3-90d7-4ceee4089af2",
        "cursor": {
          "ref": "6f6ce71b-8e05-45d0-b8bc-5b03f93df5a3",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fea87949-5016-4ce1-916a-da18e3ddb08e"
        },
        "item": {
          "id": "ce6862fe-16ec-4ae3-90d7-4ceee4089af2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d3bffa97-68ef-4da2-9709-7bb0e910adf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4521ec2c-5e5b-40fd-9836-c67ac2db3975",
        "cursor": {
          "ref": "8c7bb63b-b566-41be-9e9b-0990b3b76f74",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9eb395c6-4971-4237-a201-496d9477696c"
        },
        "item": {
          "id": "4521ec2c-5e5b-40fd-9836-c67ac2db3975",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7728c754-1c52-4bc7-8012-4be6ff484e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9c4321-8463-4736-8fb7-c8d90393f72f",
        "cursor": {
          "ref": "973aff0c-bce7-41a8-b628-b660a5f6ad64",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a86b6473-0caa-4417-bfeb-38530a3c7f15"
        },
        "item": {
          "id": "9f9c4321-8463-4736-8fb7-c8d90393f72f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a71cc0a-e0df-4b8f-9625-2eda12ba156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b2d0f3-cf9c-477d-ab75-5c8688744d5e",
        "cursor": {
          "ref": "0a915ec2-6b59-4cc7-a6e2-ea1dcd82a885",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c2656922-321f-4a5e-989f-4c474673d187"
        },
        "item": {
          "id": "b4b2d0f3-cf9c-477d-ab75-5c8688744d5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f546a936-4da4-42b2-8497-911b59b6e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84c59ff-bd13-435a-bc6c-81fe11af64b0",
        "cursor": {
          "ref": "0b0709f8-f45d-4c5a-8c41-89718030bd05",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8747fa73-16b6-4280-adb3-6d54833aa6b1"
        },
        "item": {
          "id": "c84c59ff-bd13-435a-bc6c-81fe11af64b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e8ba676a-389d-4323-af3c-36701ef58ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ee704d-4ba5-424f-8739-f78100a8f7a8",
        "cursor": {
          "ref": "520a1949-ce76-4784-ae9c-e75fa21e6ec1",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "421b2bcd-14a9-4243-952f-e9da68192d45"
        },
        "item": {
          "id": "25ee704d-4ba5-424f-8739-f78100a8f7a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "000eb95f-cb32-459b-966f-1f5853e91aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd91f314-110c-455d-99c4-5492c7d9a025",
        "cursor": {
          "ref": "de1e22bf-89c9-4438-8ec0-b2df8ab6c1be",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a3183a8-eb45-41bc-a19c-22af5bd83130"
        },
        "item": {
          "id": "bd91f314-110c-455d-99c4-5492c7d9a025",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f399ded-952a-4a98-9087-f0260fc8adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140b0cd2-e926-4d4d-8b74-e90cfb0eefb8",
        "cursor": {
          "ref": "fcd7a442-4c0d-4ebe-8f6e-d9ac5e16a793",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "127bf50d-784b-4d09-bb2a-95b221c6761a"
        },
        "item": {
          "id": "140b0cd2-e926-4d4d-8b74-e90cfb0eefb8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "22dba3d9-8f01-40c9-abd2-66cc9a0e5ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168f0b6c-b3e5-4e2c-978f-550d25ea403c",
        "cursor": {
          "ref": "2e3ed30c-cf7f-46b1-8a69-1bdd5d4b5396",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2d5dd366-cb8f-47b8-b11d-77b0f86ff9fb"
        },
        "item": {
          "id": "168f0b6c-b3e5-4e2c-978f-550d25ea403c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e0d85b83-b234-4e8c-b142-9618108d1fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bd06be-729d-4f10-9391-9b2f958d5240",
        "cursor": {
          "ref": "3436ffa0-b1c9-48e1-9018-8e85f787c99e",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8a1c5069-ef47-4979-a9bc-63983a52f238"
        },
        "item": {
          "id": "35bd06be-729d-4f10-9391-9b2f958d5240",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b46332b-ffc9-40e2-be4b-d7c9058c604e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65aeb2-8423-4bcd-8da0-4b2996375090",
        "cursor": {
          "ref": "d34377a5-f0ad-49ee-b339-0d8819d4263d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b424dc29-1d5d-489f-9989-bbdc23fa25dd"
        },
        "item": {
          "id": "8f65aeb2-8423-4bcd-8da0-4b2996375090",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f0678ebf-2a56-42b8-9abd-0ae7fd7b30e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d58ebeb-89d3-4751-9112-d2e23f7591fc",
        "cursor": {
          "ref": "7e4b4a8a-8ee9-4437-a780-e21b42f70c6d",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef534f1f-e888-4774-8fa7-96e6378a0b37"
        },
        "item": {
          "id": "6d58ebeb-89d3-4751-9112-d2e23f7591fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8852074c-1a0f-4338-a440-da46abd8477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48780e71-a0bb-49e4-b9fa-3c27922884d2",
        "cursor": {
          "ref": "60410083-254a-4bfe-9e13-9831d42cd850",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed108c14-f7fe-466c-b8fb-82b4651589b4"
        },
        "item": {
          "id": "48780e71-a0bb-49e4-b9fa-3c27922884d2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "780cf118-42b1-47d4-9cbd-6130c53ece48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2445a109-115e-4151-a32a-72871e990d7c",
        "cursor": {
          "ref": "c91faef1-b200-4b89-888e-b80c5f657f7a",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "52b32a7a-9403-4bee-acc2-690508328ab8"
        },
        "item": {
          "id": "2445a109-115e-4151-a32a-72871e990d7c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "098e0456-fdd2-47ea-9adb-a0f16367d3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597be7a6-fa47-4eff-bcaf-00f6c3e8d1af",
        "cursor": {
          "ref": "184799b0-858c-480f-b7a6-eff71948328f",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2177ac39-86f2-4a8f-96a1-843d2b140064"
        },
        "item": {
          "id": "597be7a6-fa47-4eff-bcaf-00f6c3e8d1af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0716d7a4-92e3-42de-9451-ca6cecf46134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb96f0d2-04fa-40d3-a781-fef3e49cd6f9",
        "cursor": {
          "ref": "dad47dfa-8910-4219-801a-b644226bd794",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1412f9f3-84f5-466a-88cd-5ec9ee9ca215"
        },
        "item": {
          "id": "eb96f0d2-04fa-40d3-a781-fef3e49cd6f9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0d7157a-85b2-45b6-9754-a34cbd4c7690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02316305-c183-4bad-977c-4eeac05c78c4",
        "cursor": {
          "ref": "44331cf7-b200-4c7c-abe5-2a0d4cc78b4b",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "936acf46-9b0b-4699-9386-58966013345d"
        },
        "item": {
          "id": "02316305-c183-4bad-977c-4eeac05c78c4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f67c2d5b-27d1-444f-97ce-592635066479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6941dab8-aad4-4d74-99eb-5857e3c5b670",
        "cursor": {
          "ref": "74767ac5-b290-45e2-a179-c49ecb760522",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b9007ae-9cdd-454b-ad97-c729ae054340"
        },
        "item": {
          "id": "6941dab8-aad4-4d74-99eb-5857e3c5b670",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7baac0b8-eed6-4362-9949-e364360cef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af7f3f-8c93-412e-b2a2-910562d49c2a",
        "cursor": {
          "ref": "ecaaed2d-c498-4a60-b48a-7b7d8e4e963a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74934111-3fba-43d3-854c-a97d8ca24e60"
        },
        "item": {
          "id": "d8af7f3f-8c93-412e-b2a2-910562d49c2a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "06985cd5-fe3f-4f75-bfc1-c93084a27812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0844ed67-4de5-4ac0-a5d9-7f622caaf2a6",
        "cursor": {
          "ref": "a9e4e3b4-a01f-4588-9a36-c4e2b22a7265",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7968d6de-5659-473c-9e99-b30445202869"
        },
        "item": {
          "id": "0844ed67-4de5-4ac0-a5d9-7f622caaf2a6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bbfa2f7f-2d66-4813-afee-b6a5e9741c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b5a21-dffb-40e4-b7ef-bb0f25e81a2d",
        "cursor": {
          "ref": "803062fa-239a-46c0-98ac-7b6b747b63d9",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cb2cb60b-aa5e-480c-ae0b-1b4875f835f9"
        },
        "item": {
          "id": "cf6b5a21-dffb-40e4-b7ef-bb0f25e81a2d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e87a94b1-6b1b-4574-8268-6c06e59bad4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030dd214-7739-4246-9488-e86dd10b183a",
        "cursor": {
          "ref": "b75cf21d-eb9c-4e17-bb57-ff869225fae7",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b657a548-2f0f-4260-b1a3-bd3f22c7a865"
        },
        "item": {
          "id": "030dd214-7739-4246-9488-e86dd10b183a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d46f479c-9e11-47c6-b70d-2bc384d63118",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 505,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f2e19f-5fe5-4188-9f4f-5fb0509d2a5b",
        "cursor": {
          "ref": "8804c9b7-d258-419c-9233-7b7663f5858a",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a5cb3c23-f73f-476c-abd5-4f5d28e7b8ca"
        },
        "item": {
          "id": "f4f2e19f-5fe5-4188-9f4f-5fb0509d2a5b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dc5dc381-b030-4b2f-a643-e6e9998a0093",
          "status": "OK",
          "code": 200,
          "responseTime": 803,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "28810ddc-a329-4dc5-a0b3-6969a155551b",
        "cursor": {
          "ref": "7d52f9b0-6f36-4874-b1e9-b170f3edb8ee",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a3e0c00-169c-4ab9-8546-23bb77161acc"
        },
        "item": {
          "id": "28810ddc-a329-4dc5-a0b3-6969a155551b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ad9b37cd-ff35-4f4f-81f7-d04551d21bc4",
          "status": "OK",
          "code": 200,
          "responseTime": 2567,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "413efd59-bac3-48e6-a8fe-f07eb5116f48",
        "cursor": {
          "ref": "75a7ace5-89b7-45ec-a1b7-e5551c07b61e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3b9269d0-05e5-43cd-b8de-2e1d2dd68306"
        },
        "item": {
          "id": "413efd59-bac3-48e6-a8fe-f07eb5116f48",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9c4222e5-5f4f-4a77-85df-a1eb6e945614",
          "status": "OK",
          "code": 200,
          "responseTime": 1852,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
        "cursor": {
          "ref": "e87c674a-9f09-48a2-96bd-83f800b7b40d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e811986-b910-4ac1-95c1-fda3c4325018"
        },
        "item": {
          "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50e053b8-b0ea-4f21-bbd7-8adeac5ac9ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
        "cursor": {
          "ref": "e87c674a-9f09-48a2-96bd-83f800b7b40d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e811986-b910-4ac1-95c1-fda3c4325018"
        },
        "item": {
          "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50e053b8-b0ea-4f21-bbd7-8adeac5ac9ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
        "cursor": {
          "ref": "e87c674a-9f09-48a2-96bd-83f800b7b40d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e811986-b910-4ac1-95c1-fda3c4325018"
        },
        "item": {
          "id": "befd3510-604f-4201-a394-3fc7f7aad4c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50e053b8-b0ea-4f21-bbd7-8adeac5ac9ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491683e8-d180-4a25-8aff-8cf709036a3a",
        "cursor": {
          "ref": "0671106b-3e19-41b0-bac9-fc75794bee63",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c1f2cbe2-fcd6-4369-800c-0de385bf2804"
        },
        "item": {
          "id": "491683e8-d180-4a25-8aff-8cf709036a3a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "82c06188-100b-4250-91a1-eb7e215a8dce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 342,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4514d3b1-7418-47d3-98f9-e0f66ea2e8d6",
        "cursor": {
          "ref": "454fe0ea-bd3b-4c52-975a-14cfb72c274c",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0437041d-021e-4d04-a33e-826fb65a868d"
        },
        "item": {
          "id": "4514d3b1-7418-47d3-98f9-e0f66ea2e8d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a49922d9-eb03-4e31-97cb-0ab2f40fd24e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4514d3b1-7418-47d3-98f9-e0f66ea2e8d6",
        "cursor": {
          "ref": "454fe0ea-bd3b-4c52-975a-14cfb72c274c",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0437041d-021e-4d04-a33e-826fb65a868d"
        },
        "item": {
          "id": "4514d3b1-7418-47d3-98f9-e0f66ea2e8d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a49922d9-eb03-4e31-97cb-0ab2f40fd24e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda80bc-e79d-4d2a-a66a-b1294f4dda3e",
        "cursor": {
          "ref": "24165838-7a85-4042-bcb9-ae4f1fd17db0",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9ec4bda7-1bbc-4206-8668-6c9602d4f299"
        },
        "item": {
          "id": "9bda80bc-e79d-4d2a-a66a-b1294f4dda3e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "64d8abbc-49a3-4512-a323-d09c36721172",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 555,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2aacbd-bb63-442d-8d24-659571216d96",
        "cursor": {
          "ref": "10d3bd9a-6419-4c66-aa02-cb0df2c6763a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "325ec576-4c69-4811-b14e-e5cf2b9bff5e"
        },
        "item": {
          "id": "1d2aacbd-bb63-442d-8d24-659571216d96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "46aed83a-4a8b-4d33-bb5c-39790b253688",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2aacbd-bb63-442d-8d24-659571216d96",
        "cursor": {
          "ref": "10d3bd9a-6419-4c66-aa02-cb0df2c6763a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "325ec576-4c69-4811-b14e-e5cf2b9bff5e"
        },
        "item": {
          "id": "1d2aacbd-bb63-442d-8d24-659571216d96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "46aed83a-4a8b-4d33-bb5c-39790b253688",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd8c7af-3f09-47a4-888c-f649b420d701",
        "cursor": {
          "ref": "8ae2e55d-87e2-4609-a98f-4a5531c28f20",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1142abe2-8707-424a-9f4a-272a1f043077"
        },
        "item": {
          "id": "4bd8c7af-3f09-47a4-888c-f649b420d701",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "79bdd3f0-b037-4a4d-87a3-f91c31a50e78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 645,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}