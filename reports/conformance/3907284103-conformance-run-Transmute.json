{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3fc4fd30-0284-4f32-9973-b76322a3bc88",
        "name": "Clear Cache",
        "item": [
          {
            "id": "269f9fe8-2fcf-4d89-8834-a169f7a3d945",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "046954ea-1e5a-4a0a-91e4-96cabca2c45f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d055ee6-1aaa-463b-a65b-a108745a1bda"
                }
              }
            ]
          },
          {
            "id": "acef360c-fef0-4c69-9c8e-5c9a2158164f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77501745-9824-4548-9566-ec9aca9d58a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d29b26f-5370-48a6-b155-b83becc9a262"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cf04dfc3-d70c-4ed2-81e5-1b583473f217",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "59c52a2f-e60f-4fab-95ec-c6373e576986",
            "name": "Positive Testing",
            "item": [
              {
                "id": "feb9b39c-b8e2-49d4-8879-da2b9c6af245",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8f94007-e455-4d3f-b6a4-0be3c98db134",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5924890-4dee-4d74-a768-796570390efe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81edf20d-402d-45df-9717-6752a75f0ab0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ebac57c-e26c-45bf-8c02-8e80cade74db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f0e6cca-daf7-4bfc-8b71-6afb52106746",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0673223-4dd8-4d6d-a313-67caf2cfebe2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b74a928-a8e8-4e09-9676-1a484f713b5d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46853b41-9438-44ae-ab2c-001397ec4453"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55155306-c686-4b8c-866f-e02c174a831e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee6e7848-4fa7-4d5c-8123-7e0f04df3597"
            }
          }
        ]
      },
      {
        "id": "ec6fca1d-0e2f-4989-b96a-f74694e5ad3f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d21ce568-c402-4aaf-99b7-a22188d254dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5707af7-8700-40fa-9160-068aa028b8dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ee09a11-2177-468a-ad6e-a459aedeab56",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac8a86c-a405-406d-8c06-1d13d762a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7f77ff5-d965-4080-9ac5-3d8a889acb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64c2731-0279-43f5-91da-004beddc94d9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedd24f9-5695-4a47-9393-214f83210250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71bba05e-2167-421c-8455-874726bdb7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183af59-2b3e-416d-8c6d-b41b5d298b21",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c0e105-a9f1-4ea3-8b4c-994249465d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe339de1-93e3-4124-ad63-4e0149c0bb42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35ac5afb-a9bc-4dbe-987c-f9ca53e98530",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d48aa5c-aa83-4903-a7ed-6cf7a61d0cc2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f57509-3ee5-4e64-bb33-3d9c5c611763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa81e835-5954-40fd-8680-32e8770ac829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cb57cb-b961-4f18-b455-f42f8c54ff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7327d2-6123-46d1-b66d-9f81365a7cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486f008a-c4bd-4e86-97f0-a092304f4c1d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f45b49-c8c9-4326-b884-7a38ba5e81c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbb584a9-f56e-4d66-a550-fb66b390a694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e852f50-4553-459e-a259-983c67430f3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1529491b-475e-4593-b077-a8cc5451e729"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b177066-3a06-40af-a9aa-ca75b6a8dd49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa5298ae-75f6-467c-b1f3-638c6752f16f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d08a6292-db82-4eaa-bcfb-82ae4fb9183c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d156126f-8fcd-45ce-9b30-2dc4d8cdf015"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1007e6a5-55c7-47c8-824d-44753ff3c288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5d572061-b7a1-4235-990c-c3386c5ef3e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90a3346a-809e-4d0d-a577-0b23a72ccab8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a617bc55-4bb8-491b-8e36-3943fe4b4784"
            }
          }
        ]
      },
      {
        "id": "a9264df5-b5a1-4504-bda2-8e7cb2ed30c9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e60ebe24-4c1a-4286-8e11-de1f003cf622",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ec3a4eb-99b6-4a28-be9d-b4cd6aca1cb4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a5b2470f-ca70-4da2-a22e-9fb8a801cefb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1037af-cefb-46a0-8673-450284361442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c02b61b-cfad-49aa-8f62-e26d18356ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5081c5f6-03b0-4045-a2dd-49b4b31f7038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1799fc68-8960-4e1f-8d5c-7e73c5f8ab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6900df3a-535d-491c-a870-5bb0f49155f4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cd2406-4c67-4e6f-839b-bd3e00648647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e44272d-93b3-4fe2-8032-33c43f2739ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df61506-e875-4691-a853-c89b24e8faba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80d9c371-1f89-4a5b-b19a-c98f9fa681cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587bdfa0-597e-4a6c-bc8b-469b32dc87b3",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9790648-7739-4944-9c55-75877266c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3192d13b-a634-49d1-90de-d27e49149dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72976f6-d16a-43c1-92dd-4b88af33fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6b5152-227a-4c59-a83f-69755c587a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f66bd-ba77-4846-8283-910f11a30bc7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb48508-b5be-433e-9aac-de408c349f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e8c816-7adc-4fec-bdeb-b049a91d1a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b57788-6f36-4246-8fca-d89a862c0d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a53658b-1afe-400f-8935-a94a4f0af50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48140cfa-1d4f-40af-bfd7-58072a36607a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ad6afd-0464-450e-805e-882969e2594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6a0c0c-8808-4db1-bd50-a1af79f99c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81106bc3-2b24-438d-b42b-c7a3bde2dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ffc18f9-eb70-4bc2-b4e0-a53179eecc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce41323a-e044-4d34-aa04-51de1a136b15",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a43d26-29e2-4387-b34a-65decc182a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5caa91-8de3-4431-89c5-af4fcde0911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5d384c-62f7-44b0-83e0-b04c43888d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b940b0bc-dba7-4fae-9d89-94ad1f2a7a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec242b-6349-4bc2-a970-e52a18f7db98",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1a2fe1-82be-4ae3-bc33-e7c74eabe0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047e3b72-a808-476b-a0d6-0aba5db1300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9e9fcb-6771-41a1-bddb-028282bb04b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37127ab4-3d2e-4456-b0a7-983baf73d039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6280c9b5-b33d-4f89-9fdc-df5fef05763f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e99946-e04e-49bf-9b55-bcd05f06684c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b494b86-911e-45a2-a3cc-9ee25ff785d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f48a3e-24b4-4d2d-b79c-2d37a844c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d736932-bc3a-48d5-ab4a-ebb7516858bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df5ae90-f453-4f88-b955-1da17eb79045",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c891f6-60f2-4594-ab38-2d1b3e4d6009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec5c2a7-3943-4ade-9f90-7ba11d1d57f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b59461-a441-46fb-9ea2-68fcc3544f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89df3011-f3f6-49a0-af96-6be522a0a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6650ed-7f25-40c0-9f76-72e266f13150",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a2a8a-7838-44f9-a2a0-861590437061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3178ada-7778-4bc9-8856-2b181b4d4447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c66629-27c2-47d3-9ad9-d588c3b047f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36249371-fac3-470a-96dd-965060293782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf98f3e-e93f-4071-a3f4-6227d0a05e39",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16bf348-d15d-46c7-9b2a-f49443e14e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c16c5a-cf50-4420-90be-07a7287905ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d625f96d-1569-4cd4-853a-673c7f29c27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "875b541f-92ea-4311-8c36-3f4c58d9799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a706a469-ab4e-4699-b8f0-8825da3fb0cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b792dbb-83f8-4d10-963f-1d3fc3ce3bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f34c730-022d-418a-a777-f189f6f3be2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f873db-8af1-4996-aefb-6f1a0ce8fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09ba5538-f5fa-426a-9523-5bb7f45e03d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a985fe-c981-4e5d-971a-6059daa5a169",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b058e-84ec-490e-b10c-429bec1e90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2e266b-f462-4eb8-b44a-20a97754b408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa8db67-0b5f-4c3f-be06-875947728ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca38389b-066e-4a10-8497-f4fa77453011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d15228-287e-4930-bcaf-796ef7856f12",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad11310-9d4e-4550-a82e-fad7c447fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e52ede-dc4d-46a3-b06a-5889948193b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9521da8-4c72-4d19-9a35-d8ec939a2d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa237c3-5d94-4a66-b070-95bfa11702b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c4bfa-bc36-4924-9bdb-e9ac8009330d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c309c96-98c9-4319-891b-b9a1d6f1e29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f2b04a-0e43-4d84-99ef-115b75726aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a5fc32-d2d9-4b5a-b5ea-25de58db2361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "495a8666-01d1-421d-b18d-3d7f53c0562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd40c0b-1d7d-4844-ba97-d56439dc11b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e485e-0d58-4978-963a-55593af47d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a236da1d-0d5b-43ab-bca9-b8c02a4735c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55d9904-d21a-43ec-95f3-17ba6a296fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af12569d-9683-4ea9-80c8-017df0d42349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cc64c2-4ca7-4047-855b-f812ddd919a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd7ac06-4fd2-4363-94d0-8c5f2e927804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6207c4-7124-47e4-becc-22a4364bc19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73492620-1d0b-4b0c-9c93-3ca41a6b8e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bfa0809-94df-45df-b87d-677a9760cb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a235b1e-a045-46f9-bba0-a9cd0eb87afb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf265e61-edd7-4459-bed2-3154fa818363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c21bf1c-6b64-4b9c-837d-1579af511c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851b8c3-b098-4534-b564-724b297de405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eb70b6e-d681-4994-a156-c1056c0c9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a04e60-1910-4945-8feb-5b2ae1bb85e7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9881f-f7b9-4b00-b83d-677be5d792c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27775f1-0ad1-471f-8f7a-75b64616721e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f4215b-0ee8-450f-ab74-575648177bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ebd291-01c3-4856-badb-3d4c3fcc1705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4820c29d-0659-4863-9e1b-63c79fd68e12",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413b2fb9-6591-408c-b23d-db401e8bfbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6625844-b56f-4045-aa72-828e0fbe3b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14347e0-99ff-482d-9569-cfea6d5d1ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6900d08-04a0-4175-9959-8fd78f8db910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec2fb80-423c-4002-ab51-cf97108ad313",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae787561-2e3c-424c-8ddf-70e42f1113db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363e1ebe-35ab-4548-b481-9df0cc0d8a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12b3e4-6b64-430b-ab95-48303e4e867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "069dbeef-f9cc-4aff-acc7-ebea3346915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3430b415-362d-4b99-bf87-3e84ba61e488",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b78ac-9ab2-4fe5-9b92-c1ae48899df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653a47a4-d26e-4c0c-8599-d6fec40744f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c693a64-b9f5-41be-aef9-83c075a4466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8349fa39-2425-4ad7-89a3-b067eacbb7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529dbdb-7eef-410a-a301-108ac6856db7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9d9598-5bed-475a-b3cb-48a80c7bc604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10ad671-a399-4e30-9521-8e18daf8d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e4321-1339-44b1-b8a1-c57435f65ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cafd8b-cfdf-42db-b295-141581af2cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe355e40-30a4-4da3-a40f-da62fadf4e09",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6067799-71d1-468a-be09-cf3e5d6dd169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dc75d8-50c2-4638-8afb-01a51b796b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90771bb-e7fe-4ed0-9737-49b250ec7265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d009bfb8-b6c1-4a16-b80e-89ea28769a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b2fb51-b569-4c67-80e1-f57ff4a66423",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a2e187-21ae-450c-82d1-954bfea97efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92f8201-ef7e-4c91-b325-5cf7694646c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d29a0a-728f-48c7-9359-e6d47d5528ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2d3ec4-3388-4f43-83e1-276da77febf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b30a9d-668a-4625-8ffb-13feb087d1ff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723f93a0-5fa6-4481-91cf-1f70850cd150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7414ec0f-6ae3-473d-a086-92d1dc8b0996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7a120-cce0-41f4-bf85-08a1d30dc5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b8b029-0a53-4b26-8a65-745b5f14a9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ae7ee8-fa9d-446b-b7eb-28a58c432169",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3443c8fe-bb84-4efa-a9bb-cd51aba760fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab587ab9-a6fe-4c7b-8a3a-fd2f7d8c3e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8826eeba-4a5e-4d94-9666-2705f5e837cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ae3c13-3df0-4764-8c59-464dd45611a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8d0cd9-9385-4c67-94f7-abae23322d54",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e23264-730f-4003-b39d-c445bcd66dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2aac3d-1f6a-4d35-832c-678014a1cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df51890-23f8-4f5d-8c77-6b79085aaf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cac2685-2cc3-447a-b877-a86397698301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c234ebf6-0e6e-4a00-99cb-684befd0d50c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2260a19d-3c10-436a-afab-12dd163afc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a322157-0154-4bd0-b5e7-57d4435dbb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434083ee-babe-449e-b5a6-7373ef824727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7287fb-1ee0-4561-9c67-6a388ef1aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531e136d-d368-4869-a0ec-d7011cfc7eea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce524d10-a366-4270-b8f6-27e7e4a4d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31becc63-86a1-4225-8161-fb061f01a383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8186a22-89cf-4405-970c-38e357b98873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8544317c-47db-442a-9b69-939858d37522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb71f55-792a-43c1-853b-80b0f20c0c80",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed73fbc-d4b7-45bb-ba78-fd811f36ef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8067a9-8eab-4898-a899-4a384f8ccda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa713410-b2de-47a6-944f-a293c93eb567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd2620e-8178-4c9e-af94-fb511acf3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b0094f-391a-4eb3-b726-df74436e65a1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11acb10-6e7f-4e11-a25a-3da721815652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e309ece-8dc2-47d6-9944-19ac95b7c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7cc9a5-6e5c-4034-aa31-6f4d2d47b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c95db37f-3dad-4b92-b7fb-55c6acb821bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc2c348-5987-4bfe-8363-a8dc98f03431",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14851841-93e8-4d8f-bdad-af349280a292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994fa5f9-fd74-439a-8c77-47fd15a427d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dabc6e-bc82-476c-a69f-873e3dd5da6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c78961b-c405-42af-8394-3f5e06aa0129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911636d4-ec73-468f-bd3f-20b588bae9be",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66799e31-1c3d-412d-846b-42e2417ec582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3b7160-2405-410c-8400-b76c10009dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e744da-17ab-47fe-9871-28944e12249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9986028a-3ff9-4e88-bead-5bdc329234f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ff1c61-97f8-48a3-bf96-245854b536d2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5a0df0-161d-441c-bc58-ac782f1ca7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62c3582-cc49-4db0-9867-0a7b495bd5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08f488a-ec14-4236-9c1a-708d7d15b022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a239ba02-4221-42d0-82ab-81f6cd78cceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2744ff88-0cf2-40f4-b1ac-ae4996079da8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ff99b5-6a75-4aff-b767-3ea1cbf69b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c38a207-d9f2-4141-b6a9-895e93edfea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccae8f-7484-4eab-b140-aba2b85dd4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b493eed-4966-49a0-949e-4fea17777b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b2a1aa-5362-46b2-aaed-710090a57eb6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d590d173-4e92-49dd-9c78-0f3848779b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a49f3f9-22c6-4e51-8f09-d503f4e61767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f0da5c-e27d-4a89-858c-b07b2201fb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0f88c934-8c2a-4057-86f3-c0061ce60183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1a8cb1-9096-47bb-b22d-e9cfa630684b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28449f0-470d-4fbc-a6e8-3fdda8372c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38b2afc1-6cf6-4b2a-9906-814aee777856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57df414e-0c21-4dbd-9016-4f97146aaf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "619ac6e3-08ac-4f0e-a94c-dc3f88b93ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2048603f-401b-4f7c-a429-57772c3acf95",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f98104-f08e-45da-b892-92a3c2c6c542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858b1854-922e-48de-8d62-410675e55c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc3be7c-6556-4179-b04e-590b12156218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06bde61-1a34-4246-9b3a-7dd9682d9ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcb9ae0-11b4-426e-bfeb-b3012d372793",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f17b9e-2c17-4ac4-8125-986e6332859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670c39db-65dd-4236-80da-994c4a31628a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fb806a-a2a3-4ec9-afd6-bf7d647c482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "58bcc721-5dd0-41b6-9da2-86971f76c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98bed0e-fc35-46d2-ad1e-bfb5a6978633",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba9f639-e82d-40af-ae59-4f87534dc384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2943f86b-17c0-4dee-b3f9-dae03f2fbb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a217fae-d378-4044-9245-ffd33d96523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd35afd-5130-49ea-a830-e2af3f2beb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d12ab2-5a80-46aa-a8ce-84ffbef79d87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f9014c-ecdd-4a99-bfb7-15ed697a3e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bf6790-fe1b-4d7d-a8bf-9f1e4d005e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13041a77-ba5a-4792-9138-06bfb49fbb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f33e8604-8867-473f-a66c-3328f90997f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eb1dff-e00d-42e0-a6cf-a1a06e23acaa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3669e4-2d69-4f76-9cd5-0e971c1dac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369131ad-04be-4ab0-84b7-fb8f398e1dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fccaed8-86a7-4585-9829-e6d5dcbf1891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7272c4-2574-4942-a6df-331eea9a25d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e74b17-2f3a-4036-b7ee-e427aeb41bce",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05f265e-31c7-417e-82ab-9d404a0e5120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be3b3d8-3c76-4145-b049-23541b11e1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340dd5b6-be8f-4b30-8574-13dd4a92dcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a790396d-5957-4035-8ebf-518cc797d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0169ecd9-2055-473d-a8da-45caa1e28d50",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca91851-1c72-410a-b95c-616ec8de43f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a2bfff-fc4d-4a4d-aba5-753bbb923b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237d4a4-8814-4e72-9f76-b714bbb59d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed8ffa7-f696-4fad-b547-3b16b8fe5854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24529b4-7269-4502-b741-24ecd55c5c4a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c11ef08-a61b-4393-8ddd-dd6901909497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b36b4e-fe80-4ba4-9ee1-64d3612474ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac76bc7-bb5b-4701-a49a-3adf2b2afbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "51740a36-7229-4a64-9cf1-8bf2fab286f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498dc748-4db0-4580-9aa2-37661d5a7978",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa8ed35-4749-4fab-b0cd-2801c0c87560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244126c1-90a1-4d01-919b-5a683eda1649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dabd27-a440-464e-843d-e275caba7f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94ec7ef-f7a1-4093-8f9d-d298228e5dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae30a5f2-01c6-4971-9823-1849ce22d350",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e9d746-9bb5-4c38-ac07-99cac893ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a70035-7d6a-4021-962b-f147390b2233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31166bf9-34ad-4848-8f02-792e81c6accd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56a2fdd-7511-49d6-a478-cd50dac7588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f1a57a-2fc5-49e4-93d4-c42d4e530e96",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2abf920-9377-4c06-9840-1929eda6b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2456617-5073-4606-a0c0-8bef048ad4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33a0de6-e2e3-453f-bcdb-c45c11688efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bce5581-7346-462e-a021-9b1d48cea466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88888af-0c00-4233-8832-d70f8c3434d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e917a349-5264-4223-b1bb-e98fb1b4e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b8cf39-e528-474e-bec5-2ed3da2312a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db889f5-45ef-49dd-9303-e0f3323ab11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ea9eb9-f1b6-4768-9d5b-98f28c368626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8e2780-3a59-4533-b586-4f823aa8dca0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b7439-05d9-466c-a5c6-8ddb928dd574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a153bb1e-28e8-4061-a069-0971e7a0da82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4460894b-0ca1-462c-ac5a-39e3657629dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a45c18-c0d7-49b4-a5f4-8b73b6c1b648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca401d9-45de-48da-b7be-4e0111955d35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9342db41-01f9-4e4f-8d03-c405c5564f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2f7299-c1ae-4533-87c1-4e12b6258be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4326f92-cb0d-4922-929c-e322e40fc478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d973c575-89ac-4e62-9564-5fd6520298d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20b4109-1a89-4d9c-8e92-f7f01bb298e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa98b7c6-7765-4a97-b740-482350bf9fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bf62f4-1f71-4353-9694-90d7060160cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe23634-3369-457e-8192-ab5e49888bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4413f926-4866-4def-93cb-fb7794e28e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff946ae-9d68-49f5-8d7f-80c08a7744b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad5ac9f-34d5-4181-84b2-68ca83700dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d4f0af-d499-4854-9370-b740b280e6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15b67a-e6cd-43b2-b277-41f80f58ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a47c1d-031d-4255-989a-c100c005974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ccc53d-83b5-4525-a921-41433129f61f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a515ff7-99ab-45b1-ae6c-f50129e3265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10b92ea-4055-4015-b0d8-a72814f39521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f64e91-cec2-4786-9d46-613a871cc31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e635b183-4711-4a6f-8df0-850d22374a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eeebc5-86ed-4c57-8a39-22b7c12749d2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ac714-5ae3-4d2c-b49b-165721534564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4815e63-a0a0-49f6-8d8a-c18add1a7e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17badf29-085c-4b71-88c6-a60b79ec161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e29a01-bef4-4995-a49c-4a284762fa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08d3111-68eb-4c80-aea9-efd68dbf6dfa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b049a00e-c36e-44e8-a2f8-c8ced504b31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d694d1-9fcd-4254-91b8-2fb9a3fc0d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8f9576-7e0c-418c-b018-f1c41ed34621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775fc73a-344c-4edd-8dcc-172b59b2bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6832d991-cefc-44d9-83ab-f74ee733e442",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6e0946-5ac1-49cd-8e2a-ca708a211fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0725aee9-c1dd-47da-8092-dab95f66b65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c72e2-e86c-4166-b06a-432f05bfbb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2cec48c3-bdcf-4c24-8cb9-1839a93aeee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bc45d1-9714-4749-bccc-a2fb76f2dadc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfc7267-e77d-4e31-b903-c35e2bfc47e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c0fd19-6c96-448a-b0c1-be3c2e3b44a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e162dd8c-3315-4b3b-94be-954ed780b8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8c37df-659f-4fe4-8c9c-fe71e466ea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8d7c4b-f378-4575-a5e5-9e5f45571fa1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610ca103-076d-41aa-a9f8-a94624d6aa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e052bd80-acb2-40e4-adaa-523d811890cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ed0a9f-7c62-4725-a1bf-bdda1a09f194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cec5c7d-ba5b-4390-8335-aac023662787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe0014-2f3f-415c-8029-b0ec9fc83246",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9adac5d-2d84-4691-9002-ee6d368ba47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453d8595-5183-4e88-a58d-81d1c52cbef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60990df-1339-4a72-979e-aebf8b60bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a74f0c82-d2c8-49b9-9fb7-7044ebf7334e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc2b34e-1bbe-4638-a5a3-c233020298c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143b1522-fbd5-49cd-883f-4bfd1aa222d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3263cbf3-db57-4a0a-974b-53fb66216328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2c1abc-b61b-4265-a8f6-87a2a5f9239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaaee039-fadf-492b-abc0-5a166e5b4b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb29683c-49d0-4673-88ad-a19196312950",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86851c33-6e84-417b-8f1c-2d92896ab654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847e32df-982a-4acb-8140-5c61d6f59ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166a1241-d8c0-4f12-8eaf-581c04c5bf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53cf6545-d9fb-42e4-bc3b-960742254a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03c1636-cf51-4abc-897e-0af830e98c2d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34499c7-b66f-400e-90ab-13d46842d03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb72c7a0-e514-4643-8989-74517e8364ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aad0445-2a14-4f05-bdc1-ab48f9f8696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "152e0576-37c7-4e93-92b8-c6ebeaf25251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1ed7e-5033-4f2e-8436-d72b63d9dc24",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef00e57a-8138-41c5-8cf9-be08c6605e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554d6e05-7697-4684-9d65-2c6880491880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f6640a-8357-4818-b741-30e83f42aaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "403ec64c-7b59-4516-baa3-38448e285411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a83a33b-ec74-4b78-b896-4fe9cc0bf174",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58992f2-c4c7-4f56-9d62-07603592279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8d6f73-5f8b-4df6-9954-cebd66a374f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1593db5-8f75-4547-99e4-5a518280b39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5590b75c-0fb8-4a02-95be-ef938f666506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c955cb-acd0-4aeb-ad70-8ef4ddcd9eee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672c02e4-79d9-4f55-9687-67a64ab4f6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785b52c4-858d-4b01-b7a5-f6d810ac4da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b3fd79-cc21-4216-932d-fb6e7e70bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3664b5b3-d493-431e-b07b-7df774d90b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a2e32-1a07-4981-97d0-9cffeb837ffc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9643018-ae17-4c6a-8eae-7196157cfa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342d9633-6f5d-434c-abf1-cf82dc23ab35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d53898b-18af-4c49-b079-99a7c013a235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3309d5ec-84a7-4aa4-bfe8-194a0252424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60b7df-5224-4d8d-b287-93684173263b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911f4f51-9ca3-4878-98a4-230a0559a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd466d54-19bf-40d6-bd12-c1b70168c6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbeb88d-34b3-455e-a372-6344ad9db8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b3bf46-f04e-4e0c-bc21-bf76a57ef4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eb4cb2-46ed-415c-9b90-96a5b185e45a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c613123f-5999-4644-a98d-766e2b5f0267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb61fc17-5748-4822-960b-cd6117450261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecf5252-89fc-45b8-9ef0-a0a17e4527f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e6c84d-a92d-40d9-a219-b06c3c811c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5988063-8263-4969-84e7-d261350f0c70",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529ee64-9aaf-45ab-983f-890355c4e4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958f920a-7509-4a4e-b5bc-b4348bf4b020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6ef337-7c40-461a-b1bf-111935242c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63564596-cc30-4d72-8c51-545dfd846e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21362c6b-4789-46fa-a628-51e400f5d201",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01455e1b-2be6-4423-94d4-ddc13def217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205953d0-34b2-4321-b8fc-5af46ae953b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9b790c-4adc-4aca-b19f-2e0674bbb7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f83465d9-909b-48c6-90b9-4d254012ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ea542-30ea-486a-a7ac-d020f3837940",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550fe9ee-a8ea-47e6-a863-d4cef4e41238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a9754a-deb4-4c8a-81cf-7bfda247ce4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa4d99c-3a09-484e-8297-1aa2eb4906ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "458e6b78-1cf0-44af-8740-c7691436654e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c836eb-8c8f-41e1-8669-7d3efea2d488",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113dc5c8-cfde-4fd3-84e5-99ac8f426f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a8688e-293a-47f8-9ff8-460ae000bfae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee75f2d-18c5-4822-94ee-ceee8fdd19d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a576400b-6e43-479e-90a0-fe44ac67412d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac39e0e-9a4e-490d-8b16-ef9ea39a9ee0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4f7e1a-2ffd-4627-94fa-b88003e201e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663ec3a7-010c-4c58-81bd-4219813212a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5e23dc-d5f4-4f05-892f-c5d8941160df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb543c73-72cc-4766-b9f2-12bc3e9bc14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a5f22b-0401-4482-b150-c6df4ff66074",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17926dff-dc23-44e2-ab92-3b5afd799de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b402f593-b375-406e-897b-0730e3262145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd22fa2-0f21-4138-ade9-23989e119030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b5ac7b-dc4f-4084-b695-56fdb5bb6cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c241bc4-dc99-48ec-88af-174acc090aa4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c047c-18c8-47af-b2e4-cf38476dc8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c778d7c9-c7eb-4b3f-9bea-2a871d78aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86678aca-0052-4a68-a38e-558545e5a430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d04900-9394-4222-9a3c-c991ccd14381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a59472-6afe-42aa-b254-4bbc68e6be9e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fed731-ca50-48aa-99ae-88454b5eb152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514b16cf-cbca-418f-8169-16fce4053a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048eb0d5-78f3-4bf3-9755-67c0b4cdcfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f45dbd6-adfb-4a85-9c47-e0336a1071c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5358d865-94ce-4a72-a646-9564a99365a3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a9891-b926-446d-985f-3b7dad5d9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf3a8e7-b924-4b4d-8188-84bb1c4b67bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2870234b-a612-42bf-bde0-e4bc350506ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c72aab10-babd-4938-8b05-664de5429cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b9491-842d-47a5-8a69-3f68cf6c3053",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ddede6-fa5e-45aa-9cd4-9037fd0bd39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17620ecb-3a76-492c-81b1-64a3a9bdd482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7984a94-c234-4d8b-93fc-e54e2f6c429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b019ef-737a-4538-bdb9-05def7858386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09be4942-cec1-4c49-a181-7d65fbf7d989",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f129d85-23e6-4027-ab1f-b1e08d818af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7c9411-9fa7-4a30-b625-dc4e12fb90d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc95a076-22ee-4656-93cf-47e6a6ee4c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda81e17-ded1-4cb0-8d79-165dff6bd7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f579cb-9444-4be9-a945-0f5e1655a3ff",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060d6b27-b3e5-4991-b8c4-8be267b42798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d9f4c7-786c-4b90-b29f-13d7024a4995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b528de3c-8243-473f-8952-a5d1e4a181f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "103e98ba-2f0c-4dab-82c6-74fc57eb34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c358cb4-8622-48c4-a6a7-6e8275641b06",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33923b3d-5e2b-4d35-bd8f-e51de864c69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c898b9d-8a1b-4927-bd33-f4f9d9e272d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e70d60f-e759-4c62-9a1f-187206174b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b122e64-b6d7-47f6-b3a9-fbeaf7ab2d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66740d3-eb16-45d4-932d-a5cd48e2e282",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9093612-c847-4437-8ceb-6d27894232f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be17aadb-9bc3-4305-912d-8953fddf0e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da010bf0-99db-466b-b39a-680c9062f80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6486b7e-a148-4c13-a246-da3053ce02d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ee6639-3737-454c-adf2-8e9d9bb39e51",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d3ca8a-21a3-4670-8e2a-8f0157fe3722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627c0ad7-8f9c-47eb-9416-7474699a034f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d0f46b-c3ad-40ce-bc86-090919f7b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c9dcbe-f1e1-4a18-9986-eb3af1fd9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53276914-58ee-4ad3-a7e8-406143a2f86c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6929fb50-bf44-455b-80b2-83233834e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8d4ed7-e895-4410-bbf9-75e22fab307d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fde7d3-81ae-4468-bedd-d20bf731b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "107337fe-8e1f-4765-be51-7aefed993b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb25e4d-0d18-4162-8a65-102a25cfd931",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aab7c9-4ddd-4d3e-b5cd-7a25cc4e1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4910e83b-7ed3-4217-a569-a9fc9f0baef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9569ee8-4056-4e71-b4b7-0659d94bd89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1160eea2-3478-40d9-a98b-c060cffe2a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52652b7f-0488-41df-a662-c0be6f1c9ca5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609ffdfd-f986-43f4-94a3-72b70eed69b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bde66b-8ceb-4e8e-8e5b-c25180f5dcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20785350-7be0-4167-84ec-5576523bd234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2b4f46-2af8-404b-9d3f-e94100b2b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5a0c0c-04e2-4072-ae51-29309432383d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354aada9-ddaf-4c19-a58f-172b5b045057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6287f5d-5730-4b40-8397-dd29a1e61368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d922fa4-13eb-4af0-b2ad-b5b94e1c13b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c95953c-6ed4-4a99-b0be-a0a37c747147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1382844-d2cf-461c-a716-f099127327fe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d42916a-7a37-4cd8-99be-017c80fd8a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db51180-8602-46d4-b521-15ceeef265ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278b2be4-0a12-450a-b71b-d7388223aed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5b4d81-e53e-4cd1-9c82-72697fafcabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c10bfc-45ed-4c55-9d3c-2a985eb5e458",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c542d92-a7f4-4629-a2aa-ef9ccb536e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50731dd5-b3fb-4281-898a-7f027fdbcbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b570090f-9143-4eb2-bb84-b2bd67c186cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c95eebcf-7f6d-455c-8a58-f71d62b8270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb775e87-0bf2-439e-ae01-f4ac890e784e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4c0a48-a7fd-40fa-a5fc-238425fff39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2952f71e-9014-4f7c-89e6-5ba2edc97f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9d1b5-5bc1-4fbe-b3f5-b89e58218123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "351a6a7b-4eb3-44ae-bec3-22497f5be3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ca643-9391-48e3-9d07-ae3b27ac2ea4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55120199-100f-431f-9586-58161e9839be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628db974-7651-4a2c-9230-100d39b62689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d3ce49-b072-4f8a-8da8-431eddf19ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf5a3a2-dd40-4381-aff4-c5096f2f066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d07e2be-4318-4add-8915-6df26f33dfcb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff71d69c-e6f5-423e-bc2c-1d44b9242d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6a01fee-13be-4c83-a464-ffadb9639a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6507f6-a3bf-4350-94a9-d7245bf30750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "abdfda33-4ef7-49af-80d6-16b3901eba5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fe8dc5a-22c6-4834-af77-601dbe8c23a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97db3008-1081-4ff9-af0e-dc1b6f5ebfe8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf243f01-2f70-4705-920f-35fdcc8fcabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a2ca8d6-1063-48f7-80a7-58c034bdede4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2fe2db-9f32-4367-b73c-125e84e7c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "809e9a9c-0ec9-4a28-821a-2e715e38ea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40889947-2f27-4788-b2c7-f781c24156db",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dca2b9c-4127-48e4-b2ae-3c22ab2d92a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d6152d-73d9-4a78-b5e0-f9d2342b8b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbbd364-b6dd-4a17-a6eb-26c2465a460a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fc792388-1f69-4765-88c5-6958815aabda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67695f69-6244-48c0-a1b2-e103cce5bb40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84d7977a-275d-45a0-9a82-946ead2ac67b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77dcedac-6914-4f3e-a462-dfb437a51947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ba1882-fc03-4df4-b958-53a15e996e28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49fe4a7a-9721-4cd5-a799-68c328678dce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5377ce05-f0f7-4eab-a02f-4ef6c47fc555"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f36582f9-7370-4561-9fcf-42389b937182",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b7afc5e-492e-42c7-b2c4-e2216a113a29"
                }
              }
            ]
          },
          {
            "id": "15f701d6-3279-4deb-84c0-ac3c714105c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8495f44-fa10-48c9-ba99-8d5e48d2aaf4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "febf77fc-0ff1-4f3b-9c96-696a1c38cee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f272306-3cdb-46a0-9973-9886f0e1ccf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50bf3f3f-2c67-4943-ac63-d1ee41a45190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57d614de-1e70-4f57-af34-69eced268ae2"
                    }
                  }
                ]
              },
              {
                "id": "4533e6e0-b0a7-4345-bd4b-ec70bfa291a4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d77df9e-6b95-46b7-8a42-d36702cd04d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23236067-3f04-4b5a-9163-b580997267a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb473283-b951-40f8-a019-e09a90c4b31d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89ab71e4-2b8f-4771-ab1a-e9f6222fd980"
                    }
                  }
                ]
              },
              {
                "id": "27783e96-7524-4f1c-8d32-e9fe35cc1039",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dc4e079-72b9-4a18-9b52-0a346869ad6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20678dc2-4843-468a-a621-d8479a93fde0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd38bb41-e587-47f1-8681-21b81ef3f8a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dcb963f2-769b-4a94-920f-98207bd57e43"
                    }
                  }
                ]
              },
              {
                "id": "5a55ce59-8e21-4e5a-ae8a-02972f7aceea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8d3febe-09ee-48ff-ab82-c49ea3c1ed74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8957f4a9-4d7f-4db6-8642-f3f2a0e04cdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3af8ddfb-8936-48c0-9e3c-47deb1ebe40c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "353a55d3-4214-4a02-b035-44ccbc188e7d"
                    }
                  }
                ]
              },
              {
                "id": "bc3c93ce-646d-47bf-8810-380ac448954d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47ab645c-ad97-454b-97f8-f2b0947ac299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd8e2494-c891-45f7-a5b3-7fb9648a20c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49adcd6f-6699-4184-8a10-5da954a1e155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3486a689-f4bb-420f-8507-3808d3b9a967"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "551b3a4b-0bea-4efb-82de-be4f0f36695c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdb59ec4-c1e6-40fb-a305-8e447b5c3f81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b85ce9d2-9279-495b-95dd-43ead7b377ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "738d054f-fca7-480b-a7f9-96fb22c2b732"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff109858-1e76-448e-b63a-858f901974eb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "194eb610-4fd0-400b-b2ab-43e1359aa648"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d79701ca-b69c-4c21-b6b2-431c91af4ec0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b508b005-a7a1-444e-be10-c5ce2176c87f"
            }
          }
        ]
      },
      {
        "id": "3a96cd32-9067-4489-84b1-0a63fb00452e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "985c0dd3-eb62-4953-a52c-b08a3f4271e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00aa21d3-5ab1-479c-b57e-3d49957169e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "369f18e8-0e2f-4e9b-aa40-6b81c8fe9ff0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3da64ea-0b6c-4846-b6af-d176e1ccda1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476dc486-267f-41fe-ab0b-1cc672b07b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646bec1e-093e-41c2-9602-fc3f14700ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab8df47-8235-42ab-9233-f6023aa32519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804b1349-3559-411a-86c7-81eba233d119",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bab6301-1ee4-4736-bea3-64ea9a5185a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f81afa8-9552-4b70-ae7a-d34e106a6dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c45b7d-51a6-46f6-ae63-5ed7cf52921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4290ad-9b6d-49c5-901d-02830ab2e5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b869c7e-012a-40b4-b3e7-94c625ace7e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1977d32-eda5-4e44-9987-1b94ff2ed293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14726f35-58be-4855-ac90-d6a7215d7e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101337bb-738d-4be1-aa56-d6f24e917895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1343de-0046-44e9-89fe-b059806a87a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ead30c-e4e0-4fe1-b486-a777465d8216",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144f1dc3-0e07-4e86-93a2-df34d3a25f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b6aa87-d422-47e9-9bed-f7a14040ad5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373eef3c-bbb6-4fe0-90a3-6fab5b1ba3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "501b15dc-bb09-438e-9aa6-2bafb9184b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a2e80b-5dee-4cfb-99d9-cc3f56481ccf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4348a5b7-8681-4877-a94e-7738a59ef0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae3de6a-bb96-4a6a-b5bb-7330ad3d4847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed93444-3aea-4986-bc16-a46ce02904d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4070a2d-622a-47c9-ba2e-de2792244b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f502ae33-9c8c-4883-af72-4d8d34c7e81b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2479bf1-6495-4b11-a10f-43e495669f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54834d7b-d568-4a3c-b10c-9a4bf93198e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f548e5d9-58a2-4b3a-8fc3-8252d88d107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1ba74b-d18b-46dc-bf9d-a0421eae661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc05122-1f6e-479e-8748-ec88aa279b9a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562efea9-4e45-4365-b68d-f33bb883db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2410c2b5-197b-4179-8020-5a958203fc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af71a9ca-6f27-4637-affe-e97eef6b9f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "db602aa9-6f4b-4f06-9b35-3a7ee5a2f0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aec568-2f64-442f-9b2d-aca0c65cf2f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51d167f-33b6-41f6-918e-9da43c26c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d606712-ac63-40e4-8de8-0ac6118741a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb6afe6-94fa-4548-923f-eb6f4fb16a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62174df3-f37f-4c45-9c42-ba706772d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406ba4de-74d3-426d-ae67-37b106f253ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a19e1b-17f5-4d71-a2d7-f7f562ed8802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb11bcc-0f9d-48ab-bda5-61591d8deef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcb7a66-73fb-4d9f-8d9a-46e03415c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eda86bb-732f-4ce1-99ab-6f376eaf56ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a82518-212a-4604-8dc9-2f0a3e8adb84",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e54557d-7049-46cd-ba8d-ea416561403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe359f2-64db-4026-aa85-59b3b94d728d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6cec49-f8a3-41c3-9abe-f3d4363cf879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e8d635-1e04-48a3-80d7-e6fa8b3be488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8592f-7f39-4f11-8fba-87d2b13e175a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056893b2-bb42-4dd0-bf4f-20c2537967f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea97353c-e039-4cef-9d8d-a70ebbeae47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e9ee9-4d27-4a37-b26d-6d9aa3d90aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23f45d36-59ab-4912-bca1-6cfcbc3a5766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7674ea9a-a433-4f82-b879-8a36916ec4ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10590597-fe86-4524-a3a8-84966f8afdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5952b69d-ff30-404a-87e8-7d19f7af34d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7e9bb2-859d-4847-b535-4c15436257f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3764a478-521d-4f4d-ba5a-d35f9679037b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f804af7-42d3-4a27-95bf-c1b7a7b0c5d2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecd7c5b-5bf9-47ef-9702-e26b34454051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910ca263-fe05-48e9-88de-e073cfee38bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2067e9-8d29-4750-ac67-ebacfe3362b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "978723e9-681d-4777-8167-5cf0cd505446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f80c33-a48f-4003-a2d6-1964529f2fca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a126517-d40c-4863-a2b4-9732d92dacaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ab0a04-683f-4b8b-92a2-d8979324df98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe3a2a6-3ff2-4910-a7d5-e1484f5a8728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ff4e84-e3cc-4935-9ea1-cca383ae6fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6009124-433e-4e0d-a9c0-87c53f0018c5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79da7b99-4740-4638-9589-3f5ed3ad5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186498cc-6d16-4d6b-a572-5054d5eedf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52a454a-4ff0-4741-864c-42a00b208b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "90496152-6e7f-4de6-a92a-39f0088610b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f64b9a-a008-4723-a16f-8eb2ed839170",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffeb022-c3b7-4e51-bef0-fd0875c4e344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f011083b-7527-4afa-8fbc-1501972f6886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d8eda7-ef8d-4bce-b02a-a9821e7f9302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad4c836-d03d-4895-b314-6b13b697e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54e34e-e79f-460e-bc34-c4bad4a26d84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0591fb2b-8f04-4d13-ad69-4f0b9f739c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abafe97-ce68-428c-8125-e44e464869ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1756f983-7abd-4015-9c75-4f4723fcd09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "287fb8b8-7e25-4b07-aff5-c5b97d3320f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e538e2a3-d17d-4993-b4cc-40c0b3cc08bc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb86b69-7867-46be-9dff-f123940d11cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d7ee5e-f2f4-4d8c-8def-38a437eaea4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324becb0-8002-4448-b3ce-70a4ffbd8e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c23d6a-aaed-4d60-9290-885c30809a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2643b8-90fb-4661-adb8-bcc78196e998",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cbe7e8-41d2-484d-8246-5716f0274628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ace34cf-8845-40aa-a196-a951c2ceb44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840f839b-37e8-46a9-abd1-7a28e3f052b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4f1893-6266-415b-8ff4-6d40bf53f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffc3ad1-0aa4-4bbb-9779-024fe1e65975",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30265024-032b-48d3-8d3f-eb2920432493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fbc645-0137-40c3-8804-7e1a46e3edfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e608d6-be26-4972-9f11-e55067f21b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4d2d2c-9180-4268-9abf-a4be97aa5b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625e5aab-0dc2-4dd8-988d-fb74564fd4c4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad233007-ea58-4b0c-97cc-33a35b76e350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631efc65-674d-453a-8d02-a20a076441aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ab47d6-a5a9-404a-96ec-c318e087f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc8421c-e542-4fcd-8b91-75db7489f413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462bacb9-aaff-4300-a9d2-c1197b36aa5e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d381d859-e7df-4154-a9b0-f01b3beb8b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41e2516-0f88-4042-80ff-54680d971346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3dcc7-254a-430a-8168-4ef53beb5e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992e102f-c93d-44db-a297-2e7061d2b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa6cb66-2ede-4182-ad7c-54b5c183acdc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b8217c-43fb-4097-8d9b-68b8bef351f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee91ef5f-0738-4f2b-9232-2b3b43b541fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0780ac80-8b23-466a-8ac3-72571f05c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c899a2a4-87f1-40fa-bdac-be05a9ded04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031b68f-52d6-4f15-a8f3-f46dee43d211",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff23a4a4-3710-46dc-972c-8e863a99b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbacf28-38a1-4883-abea-a118c8c47311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8129dd-2536-46b8-8abe-d1c3acad1258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33896432-4097-4cf5-92e7-e4e8d9592cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efad47ff-a042-41e5-b04a-c28a61b4bc87",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6be4c0a-dd75-4b42-94b7-fb3ed0079d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413071ab-9d75-4cf5-bedf-d68cc99f4fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e819d2bf-b72a-4295-9600-f1b84668cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6602e817-f0b7-4fb1-b494-723c1751b382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b76864-df03-46db-845a-3f8f1dc43f58",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27433a5c-c375-4aac-bd65-56001755fc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42db367e-3f49-49d0-9e7c-fb40d13577a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea73a67-99d4-415d-9f76-e9c8830ed6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab697aa7-933c-419d-8ebf-8317365d8fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d711399-a801-46a5-b601-20ce53aaaa7b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421f8bb-b3a9-4fc2-a552-a261237c6623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2932f040-f371-46f3-b8a4-b954b4f7b536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598fd79f-4243-4761-b3af-ae8afc684aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0288199b-dd30-4332-aa97-a5486bc613c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05176bf3-482f-4d7e-a9c8-3e0b6ca54fd0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8822ef5-032a-40ce-b674-7b1ce9d5dd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385ab568-6385-4311-a950-000ddb68bd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fac61d-8d02-49e3-82b7-88df744ad7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6032220-0b58-43c5-86f3-2a79e4a9af63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0526d865-f6ac-435f-ad01-48fe7c82fd87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e36aca-82a6-4437-affc-3b0a93edc21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b5b355-4447-402f-b9e0-887444a971f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786e9d8b-d2b5-4347-878e-8885cba0ebb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76546f4-d829-43d8-8bec-e346ae835dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77a55a5-9c37-47d3-a2d0-3db810de6461",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6998200d-d135-4995-bf16-e673771daa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb10ab8-4c0d-474b-968f-d50dfb28efa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b25462c-e7ca-4e58-b2b2-8dde57a8a8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b102adad-a0d3-465d-9339-96fbede9984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16efa0ac-c2d3-48e2-9742-11f137c9f9f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b025baa1-e49f-48e3-b1fe-138c1e908e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b832dae-a40f-44cf-810b-73342b272fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eec4ae-91c8-4801-8413-a9fccadb69a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1ba9de-9fd9-473e-9e48-0f9bd21ff1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d060e59-6933-47a3-8846-834d838ef040",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c33a6b-0964-41e7-9915-9236ffc171f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4824f2-a493-452c-b678-aba561f4565a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c508a27-2ab2-454b-bc47-00219a0499a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b61d7f-5ce2-47c1-acd7-df72da6b0354"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae0a7afc-2e52-4660-8b04-0fc509176baa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a1a08a0-1ab2-44e2-bc6d-7f262a06fa6f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46503ce3-f289-4eeb-a9fe-46ee89827a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34438ddb-664e-4837-b9ad-4e20d0cb1f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3ea978-8450-4387-a87c-05bb6c85d92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "380ebc73-3a17-4adf-8300-e7f6f4378dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394fce80-9280-4256-b26f-85bfa98446a6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf2f714-1917-47ec-b8df-4682fb286e24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "90a185e0-7bdb-443b-ac88-e66416db7da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2406ae-2706-4b74-8e89-6fdacfe9a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24d610c2-00e3-4a62-ae43-a67f38a60560"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cfdf58e-1b9a-46e8-9c10-1886400b5c58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d804569-a92f-48de-b341-e019205e1d9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f7fc9b8-e76e-4e11-9283-7bee45e3c500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c65d94a-8c1a-400a-8853-7377f9d3d61b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "261befe2-9691-477a-bfad-afbc9919006e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd08ca25-517c-47a6-b9f3-e20c4deea0a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbf11fea-51f9-426b-9f9a-bdc369863353",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "418e4128-7f2e-4a23-8e23-65debd2f62f1"
            }
          }
        ]
      },
      {
        "id": "4349f56d-fb4d-4656-b930-df0be2570ecf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ceef9da-3651-4a96-808c-84f99b1c50ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a771e0bf-65b8-42a9-a160-c0bfc6042c16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8bc0631-66cd-45fa-8929-d6384280082c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d96f9a3-b00a-45c9-9d77-1c55298d4ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21762ab5-0a69-4908-b2a2-8f0914f8e273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f8b0f6-1c75-4302-8a5d-cc4eab2ef44d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad5a30-fe50-4237-a7f4-4b56dad53ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85911e21-5ccf-4432-a315-2f5f90975b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb584d9-bec7-4032-9451-52f87670baf1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe9edb8-6062-4bfc-ad87-359d8bca7f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3349a376-01fb-4f47-aeb1-e37e7b37b761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a066bdd-7c18-4fc9-ad26-e746182d40e0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122f4eb-e9bd-480e-8e02-40455567fb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e1485d-8988-462f-939c-90afdc756934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feaea7f-8b68-48d7-893d-9523059d5f69",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f482bd57-d86b-43f2-b11e-aa2373c79480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dbffa5-353f-48de-850e-8d5a1076445f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef48b46-bfff-49bf-af84-66764fc96cbf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e475a1-f9d0-4ca1-89cd-ec4f56e866e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49cbff6-0705-4220-a223-750dee040d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb573c-e31b-45d4-be61-dc1e21d08f87",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35cff5e-7557-4990-ae00-b753dfc30e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af4e745-9463-45c3-9fb5-b959c595766e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0304110d-f985-4f8f-ba67-f82bb9ad9770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b15175-bcf6-4728-a73a-d27ee20a7c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24376da9-066e-4e9d-8bcb-3e21df8bfa1a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e22967-500c-4656-92e4-53dc89ba8a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fcc237-30f6-4953-81a5-04db1a737c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af56c057-64f3-467c-8cec-06e13ab6afc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72805d5b-d3a6-48df-b32e-8cf227fd6d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab36279-3e88-4734-9692-bd24d88cd7ea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d35c1d-20bc-48bd-91c4-0afbf3558ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b012b5-3f30-48bf-835c-68f6b7f1f069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5019120b-620f-4ce9-95ff-4fd62afb5ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86af92e3-e2cd-475e-91c2-2beaeaca7905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be37b4b-50b9-4254-97ec-967c014807fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbaf7a-9d89-4f27-9a32-da46b303962d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c72411d1-4899-4550-9c49-258a983eda2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf091f3e-bb47-40ad-9eb2-d114e0b31e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0561e1-9ff9-4177-92dd-2ca09d30e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ed6bac-cddd-4326-a3d2-3ca47612daa6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca222ed1-5eae-4595-8adf-562ba79dd335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e9e29f-dfff-483b-8787-1fa4a653670c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aec9e1-f02f-48ef-bda8-0d0f746c379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65edccc-9e05-41f8-a046-1344d2877a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d7fe9-c40c-43d0-ac28-65a8082e6b80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c24d2e-5991-4aaa-bd14-e3206b140450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f654bca6-f894-4bc0-ad47-050eae672c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34050800-711a-40aa-a72c-9b1ce758cdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8af2064-a84e-4c41-86da-cac108429aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609a2d0b-5348-4817-8b4d-0c23b7a4e870",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d3a4dc-8aa5-4dbc-a371-07b83de677c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96522481-0e12-46e9-9a83-434102832320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4c927-206b-40c4-b2c2-74edf9d014d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0999fcc2-7be6-48f6-8523-fdd5c1c9bd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360cbc26-6bf4-47f7-acd2-1d48c336d4be",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf01ba6-ee6d-40d5-a08a-37e51e128c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2160efb1-c872-4670-8cc9-593b086ee8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4cb8ad-c7b6-4e68-afb4-490f69f132c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cb8934-1391-4db1-9282-10e3d06520af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27adb2d5-7d28-4e79-9dcf-00b4a076492a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660c99e-e0d4-4ff3-b700-b2258ddf2277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02d2b73-19d7-4d2d-a258-86e5b4a07bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3467322b-4e05-4384-983d-a83517d00207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153c4ef0-df34-4fb0-ad40-066941917976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aa2629-0e76-47c6-bb0a-7287398e7f23",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75702f8-c8eb-4622-a717-641f727b4a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cee7970-eb99-45a3-8fa8-b1149048463d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7e20d0-47c6-4af7-8abd-1f133cc84ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11097505-767d-473a-a9fb-a4672c0ee57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e833effb-8b5f-49ac-9831-03bed5e02c81",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286bd956-5236-4158-b67e-7b91fb877e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e832a91f-a247-4c71-b481-18898254d1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce1bceb-bbc0-49b4-9101-cf7d8934e9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7fe79d-4a8b-4dd6-a0e3-761215fd7251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9dbcb5-5ee7-495a-8a25-5414cb4d1ae4",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabf617a-7426-499a-a68e-9673cec591cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5c5900-266c-42ca-afb8-b73fe043f9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156210e6-133c-4631-9018-49cd86adcda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9b4dc0-7732-49bd-a552-d85a9e5a4fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcf6237-8608-45d6-a7a1-ff533b20a7ba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c203947a-a38b-4dcd-9e37-c116439bd5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c19d813-c2eb-4663-b9d0-d473b3fbfe7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9020e3d4-0d7c-4518-bf53-60031cf5a716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02c1906-023d-4085-b167-e3062c7eb38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05a776e-8d8d-4e23-8ece-6ff064c658c2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a2377a-774d-4222-ac6e-5da82d101a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0b470e-c8c2-4810-a778-290731ecfe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf602b-e685-4949-b949-38fc122c77d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba4a47d-28e5-4e8e-ad5b-2c553592f22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79920f72-59c6-42f0-bf2d-8057986f4d21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda4476f-020c-4d59-91da-bb12e9afe6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd39d60-957d-434e-a4fa-3c1edcba94c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff463b7-3509-4f3f-97cf-05dfb6b51370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed05f47-d709-4b03-b64b-3e04142462ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f15673-a15f-469c-bc24-ece063f573d5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96d198-4ab8-479b-aaed-5d9fd0fc045b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25b7a8d-2e59-459f-87f6-2e93b7d61493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3d6848-70a9-41df-8d08-c32e7d7d7064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39df5c8b-967e-4553-99a8-c663847375cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70537e14-7acf-4e40-82a7-fb9615314b54",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b0ca8-b1a6-4207-9ddf-c7e8deab606a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b892579-8b25-49ca-b05e-cb8d62b5d684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e156c1ee-c519-422d-aca5-59ded2750a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2846c6d2-2278-4f5a-8052-faed6c425329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd9a67c-c2ed-41c4-9712-75198dddec78",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7fd143-63ae-44ab-b546-2acfdbabedd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d654e0d-a87a-4885-aa36-f8adaa7099d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bacb1a-2d59-42f3-8316-5704bb10bea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f010645f-c099-479c-a7c2-bf09337304d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53031a9-25a8-4846-8f1a-ebb4894d7c86",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602a9155-af7a-4ece-9f1e-87c3d4c71a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3d106b-2499-457d-8306-406daed67958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa1eb5-a3f7-4f2c-bac0-c25a965a7cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331266ea-6688-4a29-8e25-918d294bbe75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56be4616-2a6a-414d-8a3a-9478a7c5ec40",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1a1c3d-7ef5-485c-b3c7-4e14cbaca7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8604223e-e4a3-46b8-8253-1a15183bb074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e1474f-609f-4e60-827c-b19ea132a91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c92255-3183-439b-b78b-6309d40b0967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f54f54-c4fc-420f-8ff5-affa58499d18",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cad176-31ac-40cc-a24d-e9b47b81318d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4523bb2c-c378-4a28-82c1-a09187cc9a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c86384-8654-41db-b752-2feb407b0402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9c7c77-006b-461e-86e7-1436d40dee74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf43a52e-9fae-4305-b40a-a37023e5783d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7d8650-f2fb-4e45-b908-10defa323ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f5f268-425b-4735-8e07-470160ed4ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b4317c-0262-46a2-b84c-678ae3b11919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8033c3c-d690-4bd7-a376-07fd47d18f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a04bb4-d904-4469-a4f6-af135e63dff8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f551c710-b763-49af-958f-a567b6c22ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351f45ae-26ff-40be-9d3a-a95829aa0045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f4719-2ebe-40e7-8f0f-d41e978a6762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1acf4e6-af03-46c5-b685-65de44518375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564860b0-57ce-44d6-bfb3-2ef156872873",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe66c178-dcb8-4eec-bebe-afd50d3f71fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd85247-1df1-4d90-998b-ddeb614a28aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd0ddb-745b-47e0-9572-d93a156fe95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa9f000-2408-4ab4-b7eb-1f48c1c33b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163d95d5-f4de-4fe7-8b0e-6c99683638e9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d585a-caa4-41b5-8c17-652b1f2cadef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c4f488-d35f-4ea5-b7de-da5fc40c0cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ecff1-360b-488b-bc2c-474e3c242ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee8369-d4f0-4e5e-a1c1-1f3e67112079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedeee7b-4568-46ac-b3f7-f144a8f8c08d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d8232e-6337-4a8f-ad31-dc32fc10ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc5642b-616a-4345-a0d5-cd22e065bb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5466f09-7ddf-4b3c-b0e3-becc955c7fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb49d27-3285-4568-a4be-b6e5000385f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef822346-25a3-4893-825c-a357f1a6a877",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee5ab1-5cde-47bf-baee-3f319738bc8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5897413a-d632-473f-97aa-38e83ebc059a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7df794-c311-4c24-863d-9c0f45fd6a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8af7eb8-4af0-49d3-b462-b5285845201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1715e8b6-71e0-4353-8758-e0bba16b6acf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881671df-f48d-4846-8991-910af9cb045e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b7531b-4bd9-4979-9f53-659d83b64edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d0ef33-7655-4cc6-b04b-32f801ca58f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d42437b-78f7-469a-9ba7-058d9fa2560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8735423-1dac-4e57-8e37-3343d1c12229",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714eebc5-aded-4036-9378-c9fbd4a2ec2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f1b36a-0942-4c43-acc7-043464e3fe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed5b0f6-bcbe-4aa4-97c6-1492098da2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4474d6c4-bef2-413a-84b4-82439788c191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d41feb4-c482-48c6-bfe8-bf4614a3870d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c934ea-853b-4f9f-af45-15f435bce804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad2bd0-a6a0-4f2b-bd95-5409c2b7f585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e15182-ecfc-40aa-bddf-d398c8f9aec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110ebbd2-7813-4f20-b261-33e56faeb55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f600e7-00fb-4124-865f-a6912e47328d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8858221c-9506-49ef-92ed-d8794a68a980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f378b2-b5e2-4565-b89f-516c33d5e0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5ef01c-0067-422f-ac9c-cb107509fbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b4b8bb-3449-4b43-9dd4-bea203f39a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8eba09-c45d-4b9a-af56-d17c09b4ed27",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6b21a6-ef26-429a-9963-f42e09239c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d033cb-792b-4788-9015-47117e859906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ff53b3-6f3e-4ca7-99c8-af63f2b3731e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ceba84-b056-410f-87be-f2626bd9ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ce0fc2-1e92-47e6-9f45-1f75a56c6e32",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5e1380-fe5a-45f1-939a-d5de2aa7c7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28200c6-dcf5-49ec-8650-91ce32d1cfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b466194-8934-4229-ba8a-b85b9c61dde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4677afe4-e35d-40e1-8ca9-9bf85ba22e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394be72-5b68-445c-929e-c6bf928a7b4a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a683015f-bac8-42ab-8caa-515664c10667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229a816-c4e4-4879-9ea2-ea18571f894f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3c1ec5-123e-4dc5-b966-8847ac15cb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b9a3fa-48d2-49d8-9a08-b68eda9b9e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f0ec68-887b-4b62-aca5-91c3870e6d9e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b62c495-834b-4b62-9fe4-738ac77d7eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b724e2f-f5d6-46d3-aea7-b9d7afea7d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc7e553-9739-476f-8bcf-3e2d344d801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb16dcdf-d572-40a1-9eb2-3124bbbebc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41437437-3114-4ce9-9c60-542d6aed647e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee5a0fc-70ff-41b8-b53d-1004ac033623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d188351-f651-4379-b0d2-265c1d5d366b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f05bca0-9908-4151-852a-45fcd7875441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a2b6a6-657f-4c29-bcfe-da2208c787e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69273a6-bec0-4d6e-89c3-4b091b5e0588",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d5f87-554d-48ca-a89f-32717cfb2017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1eb678-7870-4dcf-81a0-1b4f6a2f87d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a067d745-66fb-4c1f-a23b-38ef6d4d3055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868d2c3d-dc24-4668-a0ec-392adbcbb057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60f7866-26da-4aba-afaa-f47a6eab04c6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046f1d91-9ed1-451a-8899-6e8678a1e07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559942df-42c7-408f-9950-9f4c417db71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d4ff7a-6051-40ad-95e1-363a42e4c215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6723036d-df61-40e5-8d0e-39c11bf10112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dfd5b9-d313-41b6-8ecd-11245739ec4c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ead9c1a-6433-490a-a42b-90fb039ff3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a575f8c-fd9a-4dea-b4fe-3db22f4e322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a2a359-0aa2-42a8-85e9-bd5537d8ff13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8677ebb2-8e3e-4039-b8bd-e2f132067671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b421f69b-cb8e-4323-952d-6754ea12eb7a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d359042e-3c51-4e8a-bbaa-6e5b86adc4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1151c08-4dd7-4ee0-83e9-28133c8b8702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e529f064-d071-4bc6-a1ca-d2d3de2f1f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5bfc50-63ad-49c7-a760-e0592845f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe97f58-b5c5-4d31-a85d-1c756e741798",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37946d3c-6cc6-44bb-ab24-403c4a017f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883a59c5-9351-477b-8780-ec095f08edb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1da66c-7b83-467c-b327-be7e242b6b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93711105-8dec-47ff-bd8f-5cfb1607f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ab273-6b1d-4753-83b3-9295aeb3bd9f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef7c85-f616-45e3-8ffd-6739242c2518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66879eab-a972-4a8e-8d9b-451474950768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb383d-5713-4af1-8dde-c202057bd2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d325070b-c29f-4f75-b39c-92f204237dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dcfb2d-4ad5-4895-885f-85ad0313674f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c4b901-604e-4fb9-8c6c-89a090dfe711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bd6fc6-32ba-43ae-bae0-b7fbe1fe2a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622cf4b6-e860-4526-91f6-4bd597c40075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83767ec-08b2-47f2-a50a-1b5df9740a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa84c8b-3933-4e41-85e5-0aeb730b3fcf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15df0f-9a5a-45a8-89b6-a38e11145c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117b6089-e864-441f-bb19-a792178b2175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6ababc-cbab-4667-9382-1bbe4436547a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20de726a-3ec6-42dc-9561-85de40c91bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05b0614-c1bb-4ff5-893e-fcb4d7ee7a6d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006e07d2-7456-4043-95f4-dca685ababb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c1dfc7-3bbc-4760-90a5-60d3491280c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30645e7-8d7f-4cb6-a3da-c20ad4b1091f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8098500e-308a-4c24-8365-fa0006857897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6080f30-fed8-4b11-a6d5-7426ef8d6477",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee34cdf-0b47-4acd-b0dd-82a2a54737a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b358d4-e4f8-4c94-a6da-0d9cf599e055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548e23d0-da0e-4615-b787-e51291da88dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9008396-6253-4f40-ae8d-e63597c6c083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0df940-9078-4786-818e-bcaf6b70db36",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53700429-3a7d-494b-9ff0-fec33d8dda18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451192c1-b8f0-4a93-9455-db5e8fbcb368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5413d92f-05d9-4991-b109-cba01b650c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3987f212-77cc-46e3-9019-fe72ffd22621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29788f3-aa33-4cd9-b17d-eb94fed70566",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6b8ac-7245-4583-80e5-30206647874a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01e7b29-f016-4e1e-870f-d20b05baf67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271f5321-1f17-4a4a-82c0-2112f27a9340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c212e7-531f-4bbd-8d95-0c7f0341145c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6c7bb3-f29b-442e-a489-167e9ea4e20a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea7ac11-64c7-4b3d-ae39-eda4d8fb0901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f9face-f6b4-49e3-a4ff-54b32f52205d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba27add-b1c6-4ca0-8e5e-c9635b03ee68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3506842a-2354-4e6a-8240-efadf7b37461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09fb8ad-6507-42bb-87c7-f17cf3968183",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3336147-f5e7-4c72-a34d-6b0f7c25e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33c9d70-3d7c-46c7-8400-2bc2fb157fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f30d8b-c752-4cd9-a7b9-632fba604ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999a9c5a-adde-4365-89da-e86371c17570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85135396-b5bd-45a2-ab34-5ff5b95b1fd7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd279bc-57f4-4009-8304-562b0b02d903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2922f63d-c65a-4184-a9a6-5ad83620a51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12894527-d899-4ab1-851a-17c638396c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acfdd95-ade4-4190-9af3-206cb6350e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671cff0c-d6e0-4766-8dec-9ea5d5c80653",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79151d28-ea38-4202-93da-da9d0189dde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d79e77-e37b-4f35-8077-d9d0a8392ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cc5290-a361-4d79-9319-deba66332308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbe314d-ec1d-4e0c-b24e-eab13eb16e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ddc916-4255-46e8-9dbd-c91e8c51f23c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921d01d6-93d9-4121-9424-e307fcc7b4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86bb006-c143-4466-8db9-abdf75f32f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04396c7-2d4a-40fc-adac-3d57c44663bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e99b93-dae5-439d-be00-3553c238c0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3f0ff-6313-451a-8ed3-50a67175a292",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a361c7-bdff-4c30-851d-f44dc33f2be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56957345-9029-4e52-8401-eb5a4a598d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0418c99-33e7-4a3c-9c53-23d269cb4ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b08900-2ad7-4842-9f89-21a4758377e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc3424-b57d-40d7-adfe-4259139e5d51",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668ba298-6d9a-40bc-b265-c02d5ddac622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd067b78-7f30-4f28-91b6-28091a073218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25de1d44-f283-4014-a0cc-63c251f94a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27140bd0-fbc4-4fde-8e46-48b21b31eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c6151-4b05-4fca-bbbd-376ca79f4971",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b91a99e-e2fe-4606-8b32-6743f7df37d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b956e2a-642d-4f70-b56e-b4371b04467e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54ad21-c47c-4333-b74a-6f764f7bf22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf76fbb8-b841-4ede-891b-8a516ef5d57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aed238-ed59-49ae-8d64-a62cc04a2c34",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb093a7f-3773-4dad-bbc3-0ba12aa945ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d744924-988f-4fc6-9c27-ca5718f9eab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a621f06b-21cf-4eda-a050-e0876301f9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d74128-685d-4789-8ff8-c05a29313f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fda576-8779-4257-82ad-5a1fae95c2c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717604e-8a7f-4299-aa32-95c8fcc76983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc03864-ca83-4866-9230-af1132d01bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ae48f-dd5d-4646-9c33-01f05ffe6bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0cc3b3-1725-429d-be34-9f61c986e4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7068a10f-2a36-48c4-bd92-803edbc1332b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dd300c-a0ba-4a25-b08c-f79bb9b7816f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0156882-c5d3-466b-977e-afb3560e5bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef11dcc4-5486-48a7-aef6-b4673b700503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2363125-98fb-47b4-b288-a97bb26bd426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48f51dc-c5be-442c-8e22-d8edbcd6e178",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408b2d96-e972-41ef-b556-e2e7d294cf02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6ca2f0-e9dc-43aa-86de-6b09929157a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc404741-64ba-4cd6-8d65-a6746e0fe406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4345cdba-7424-413f-9aa7-dd5b3e279a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b15a8e-8b3a-4242-9701-a4bc07949c27",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fedf45-ac46-4d7b-9526-27a50ada5657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87710b91-b100-4ed9-986b-fe2e07af7b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fc200a-ebaa-4c1e-be25-e52fe242eaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170c1bf9-353f-42b6-a52f-1f11e19e4910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17a88fd-35ed-481a-a62b-303a5df5d753",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b2cfda-fed1-49b3-933f-8c08eeceb2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80eaf303-9052-4405-a894-cffef3542f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff35fc0e-4c7e-45dc-8409-96ce35b4b342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d4ec79-c85a-412a-b66b-f8b60af4fb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1801a937-0b70-4e36-8734-f0ccb028176a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8470cd6-6918-4ba7-8210-c1a05a9879b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e52c5ca-a6b3-4388-b19a-5511018b7c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce399cfc-f5cc-4b41-aa80-cfd0bc2bc0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e560a2c5-e371-4c86-bef9-50da09734a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9148ceb1-0327-428d-bff8-1249e34d286b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c70603-8d6d-40e9-80b6-5750f6a6556e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d6a776-aaca-4433-a48e-c535025fed18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f605beff-c232-4e38-928d-a0af6e1498cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f81776-00e0-486f-a245-4f2f5b9a3285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec5b144-6f0b-4961-b832-fd4787a38234",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedf9546-acf6-49bb-ab23-dc0b4c8fdc94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e20263-7c66-4908-b0f5-a13aff6e6e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0d7036-d2a1-4fdf-a456-373694d91b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56bd2cf-53b5-41c6-8f8e-61067830c578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7a629-645a-40c3-a96b-c4dfa610c8dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c059ed3a-0248-4ec7-9141-1926653f440a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2983292-0bb1-49dd-8900-152fbb4f1caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcdb888-4dc0-41cd-a68b-fbc28d729547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b79926-3d05-403c-86eb-474f67534b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b651e-2941-4cb4-9330-829d15d50239",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de164f4-81c3-4e5e-890b-e3c902dbc27b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac025da-9939-430f-a3bd-226a7dec254f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d6c5f1-15bb-4c5f-9419-dc647d5d18e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca390b5-5071-4cba-8696-00a556699c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000c94ee-9461-4f0a-87f5-5fa97eb2c2ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d30762c-c01b-421c-9b61-0c5ee552bfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89a2a9c-dd73-49f4-8a78-3d905063eb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b6af2e-df29-4bef-b6d0-bc08da74b333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6faac440-4b24-49c7-b8f9-24f63e559e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dab378-18f3-49f8-972a-ab15df880e3b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c409b75-187f-4034-8a66-106959f53b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ddfe25e-8a3e-4669-8e55-e4a8f2995883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c209bc-a1c0-40ea-8752-6fb7ba8044d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0308e7-4c9f-4947-b96c-32edf45468af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7aa5f9-2bb3-4545-8936-f9741005e24e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af5f6d2-24fe-480b-a786-c4f2b343a0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2d9556-5351-4060-8aa1-ab8ae7197502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe1a036-5254-4b69-ba2f-dd2a4764bf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464990d1-fe23-4b0e-9f1b-d8ac394a31e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f720c2b-c89d-4ceb-a822-fbf5c5f6000a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c83ab0-76ec-4cf7-a295-4e31e07ba623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05052f67-eab7-44b5-8230-b538f05fcd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b0db1-49e2-4fcf-8fbc-68872bcfb03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8565c6-2eae-4e15-b3ba-1123704eaa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bcfdf6-d661-4ff6-9312-7ad7611e481b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0cb49a-9ad6-4562-8a51-10ff9ba6637a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7302ba4-2114-4f45-a4a5-385401d81387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa0290-86f9-45d6-8737-799eef97a2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7227bbff-3033-43f0-b521-5a2621d04a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506f02e0-0176-495b-b15b-d4be5b682ee9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdff840-6118-443d-8e15-a1c1bbc6806b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db0068a-7ba9-427d-a43a-9a35076d61b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db403350-aa5e-4a2e-8645-c94343213859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5e883a-3ca0-469d-8a9f-0cb72f3ed23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53849311-799b-459a-a936-c2e8b58bb3e5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc79593b-fcf0-4d4f-8197-dbf436bb0524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc53155b-d8c3-4a74-98a9-e35cfea2638d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2b684d-4cfa-4806-87ad-9bd19fdca0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd196c3-3903-4990-b6fc-1121bf9dc98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2aef80-209f-452c-9dd3-ceeb650d7fa3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b806941a-841f-4697-a341-76d6f61a0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5245a8a2-d73f-4540-8b5c-7993ec1f1072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ace8db-fd07-4126-b258-a17c1f7df8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f7a9fa-b92c-42f5-b1a3-45f46b689cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b813f5-63f2-402a-890e-3c44faea5fdb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2266999a-1ae9-4a75-89ef-c5559f2aece6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc177550-d1c6-4f9e-8b83-99eb4c5c40a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d57c69-49ef-436e-9be4-64d3bfc87913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcfd16e-b66f-45db-840f-e610ef88164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a7b638-8d93-44e0-a6be-82a3de88edc7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fe044a-3f74-43f4-a5cf-39254967a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca6664e-7f81-4661-a4e2-ec8861020e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf256df8-a03a-4368-93dd-4bc2c0811a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5b3f3f-ca74-4019-8c1d-fd22fce73584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67412989-1004-4fda-a68a-70d495de4f18",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab77cf83-ec5d-4f26-b3e4-f8b190c775ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c376ee-00ba-4a1d-86d8-2901354f5ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0433674-3adf-401b-a15c-c3827e7f020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b292f072-8b32-49e9-bbbd-ea5f1ad28fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b2f006-7a24-4c90-988e-a95f8720f296",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68be809-e0e4-4659-ae65-0303c9b330bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bf5b3c-725f-4427-a2e6-29664ac1628e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85d4a17-3648-42da-97a9-464a04bc75b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eadba22-4e90-4bf3-9500-6cbfd381d804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c380a6df-c7eb-4aa9-8709-a1e7558f4ba8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1727adaa-55ee-4ce1-a578-782834290a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12291355-e10c-4cec-805c-533100cf8cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b09e2f2-accd-4ad3-b38f-b02b27163ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918dddfe-9430-4cf8-8388-b1482e91facf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6cf1fe-ee9e-44c2-9bc8-33a8faca5f0f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da8fc20-cbcf-4457-b57c-4ebd92eead35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afe65b1-c217-4fc4-b672-660ca13bc1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0ffc25-ff9c-4f1f-8ffc-02b316aa7d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb219d6-da36-4190-8c70-38a91cfbd953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ba036e-39b6-4c9f-8a20-3743332c3453",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c893a3ff-db7f-4f6c-8a79-1475c5215741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22f0164-2b3e-4cef-9bbd-89ac22e3ad2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e28f1d-abcc-47d4-9857-f05d5532de81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458078e0-54b7-48d0-bfb5-cf1221dc41d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b18c8c-a748-455a-a619-ad3e2741fecb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1477eb-084a-4974-b447-af225df20582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91cebc1-376b-4bf0-aab0-7db8425196e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8bf211-c0d3-4505-8721-646522045afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1284bc30-7d00-4ed0-bd39-55b955638bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e340a1-f516-4545-b76f-654e1f71fe7d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b069a99-dad9-453a-96c7-619c7fd53b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350b014f-a4f7-49c5-a9a8-d1027b986b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e095c302-d4ea-4778-89ae-7f3ead20877d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feb1028-a4c3-416e-903e-4a56d802d3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f322308-a9fc-4f66-b7e1-292fc5b67a5f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a622918-28c6-4884-8573-da6454f266b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "264f599d-9121-4071-a56c-b3eb1436bb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1ea01d-2219-4d23-a802-40536adf0a9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c606f2c0-1159-4da5-88b4-5b670ac1f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c470b60-03c4-4b8e-8fb3-723363e870e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2fc4f3-c398-46a7-a23f-d4edd6f3d691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d20eb5-0000-45ac-81ea-a6ab5985e595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556e60b6-5672-4b0d-9ca7-e1b1071cc87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9777b4f1-ba8c-4077-b03f-fea0a554550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc956b44-60fc-41b2-a36e-860f2c14c04d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65843eb1-d435-4abd-99d1-c3dc49d1d501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cac6de-f6ac-40c1-aaa2-be96b5310409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0903bbba-550d-4a7f-afbb-032b1718210b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a589c19-1e3e-4003-b08b-f4cc920010a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb991ad-865d-4676-b9fc-1613bee6884d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84dde1a-fc15-43c6-a3bf-f5a9b4a0e127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501f5fe7-0826-4663-b2c0-c4592d8657fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6a94ab-a66a-4512-9c07-b5f219ebecd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff46f68-1d19-43a5-8972-6e0fd79fe2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6992c4a9-e994-4e07-a546-352a4d4a1b86",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86225b4f-909b-4d4f-8364-9fb4fee47917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5802322f-2b8e-44c4-85ce-01682896ab9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e86556-01fa-4181-8e1b-70c2fccbb2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a603fd9a-7154-4e12-93dc-a7db1132b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300fd137-c258-4a87-bbe3-ecb6b1111cf0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274a0ec-e1b1-4319-8f6c-4decff579032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1587e8b4-2929-4d67-a64a-f7d313877393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33122e22-6a99-45db-84c8-2b53b63213f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e8b40e-cb58-4c99-bc5a-cbdfdac53d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0057bc-df75-4548-9529-bc404210e7ec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae671ba8-24f6-4010-9667-0226971e6ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68240240-f2bf-49ce-9634-204bbfc6ae99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f20c986-110b-465f-8407-55eff6546100",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f64cb2-28a0-4d9c-82fe-c6de524e8937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1053482-7bb4-4d2c-988f-f5629e86db12",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d6dcb-35ae-4db8-b89f-119e0fede5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0ff07a-807c-469b-8b0a-78c40a687325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973ed32a-ea66-41a9-aa4a-9a5e74a78e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de68ae56-60bb-4c48-b987-612fa0230116"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e6e7fd3-87ff-412f-8e28-300b78030e3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba3a286d-12d4-46cd-89ac-2fed50f1c52b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "278debc7-50ba-46ed-8fd6-f5676e5448e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e31ecbdd-6329-4b93-a0b0-dd28a296da4f"
                    }
                  }
                ]
              },
              {
                "id": "76859a9e-047a-42a3-9c90-8c6fbf4ccf47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7001501a-6f87-4bdf-9825-15b554ef8482",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6835f6-3d71-45e3-861c-727fe15ab060",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4e267c14-af6e-4566-972c-60c2fbfec19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0f4178-32d3-425d-b6e9-0b01e1c4ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "defdf033-f341-49eb-a9bd-328cc6e28b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cf1ae9-06ce-46f2-b1f2-cd4cfe2fb5db",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592c0fa8-16dc-41a6-a7eb-438435d9fcb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d54b043-478e-4437-ade1-79484cdedcfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e2bde0-cb3f-48bd-9559-b619a163f9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17a4f133-46c6-40ad-ab54-f3c10dbd6a26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27b6acee-b3de-4967-b386-87df43f3914c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1933b50f-f5cc-40ad-aa5c-a6e39e173541"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ccad54-dfd5-48f5-b7cf-1af05e9a7200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "405777bb-7159-4467-9efc-05da6abac7ba"
                    }
                  }
                ]
              },
              {
                "id": "b56f430d-8b0d-4b64-b045-b141ac1edbc6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b360711-5757-4ec2-a311-7ef6589605cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9113d6d-3737-4880-8ee8-8f2649830fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ef2a356-081f-41af-b176-4d588664ab0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8024b1f2-49de-44fc-81b2-684f73b737d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e06890e-e7d1-407c-9827-16f64192681c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e8ce73ee-d2dd-47e6-b1e3-88067cc79d9a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87947165-13da-409c-8436-6030d3017aac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "498665eb-32e9-4fdf-b95f-a8a3d85c8662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9113fce6-c4c6-4805-a044-b164ad377c68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4064e0ff-f868-40af-bc4a-8e3a3bf068c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4d07ab1-045f-432e-8ad7-038d4f876fcc"
                    }
                  }
                ]
              },
              {
                "id": "f13ee2bd-de37-4065-b3c9-5e986a4694a6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21959f37-c8fc-42b4-8bef-edfcd4a460e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c839acf1-0e06-4873-809a-b9e76f374a3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bb21cf3-d558-4240-b0b1-1f572e19c3d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ecd50eb-ead1-4198-a548-725316d472e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "238fa015-73a6-431a-82bf-79dc9b9614f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0007e2de-aa9f-4fde-9083-5279b27d3074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1b967b4-ffee-4c4d-86f1-1482b296c707",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72abd5aa-5f0c-48df-80c2-6e1ee4bf2325"
            }
          }
        ]
      },
      {
        "id": "ea502e79-09c7-4e96-992c-55956a7f7719",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "528b9943-73d6-4a58-947a-259ddba1ff61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da6a1579-ca6f-44af-87c3-c3e584383424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eecddd-1b42-421f-adce-6372a5c91d6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3fef129d-bdde-4d53-ad19-da492d01c6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3ddf0-452c-45cf-b3d4-84a0b66eb432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87dd6247-4582-46e5-ad4a-f3c771a978b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31866ac8-fc5c-406d-a93f-425cb99b6e11",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac08598-4683-4037-b11f-2cdb1cfc9609",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee8aa4d0-bacf-4378-9d7d-3bef1b2547e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66041ebb-37a1-424d-8771-6bf01501d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "341d8e91-56af-436e-a97b-a491dc536ce2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ccf74f5-f3df-41ff-861c-0bc56b830c67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59dcf51e-cea6-4693-b9db-9f81f464c0eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b501419-b004-4079-bf1c-8a86972a2b24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb7acdb-f434-4a3f-9863-da846e04d5c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b9fa7b4-a735-4217-b811-59ae9a304922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7b9c5b66-109e-440c-9a51-956aac87e7c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c41b123-d204-4f06-96d6-ac887e9f210e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e05590fa-c7fa-4c04-a65c-20f9c9c6410e"
            }
          }
        ]
      },
      {
        "id": "030b3bb1-351c-4d7f-a547-f0b29be5e180",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9730317a-5d2d-40e5-8d4c-b0b3a7a07b7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1550899-3bcd-4ec8-8bdc-1e75f1deef06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "022a6391-45e3-4918-9169-e76c3093696b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8173eda4-936a-47a9-a772-0c72a06ae770",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4730b53-14bb-41d8-b3d7-2dc7967dd7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc03d8-f388-4f98-8acd-b9378328c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc75df38-b13c-4d0b-8bac-bb94f3dd8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d08aa-3539-4196-ad90-6a9d85a9bb95",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667b4fad-6fd1-4802-9b09-9a8ff4c77097",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70938bfe-5dd3-4885-9be6-ca45f8811dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcb7586-bd0e-4c10-a737-6d797e159fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dac6ba81-4d2b-48df-a9be-d3c9a9498216"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc50200a-fcbf-4e5f-9e0b-6b22291924df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a930cd9-ea2b-4d2e-b237-0bc0c4ac39e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d401bfd-478c-40e7-914f-51089abff39c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7793ac65-32e4-4301-8e25-de3dec446e60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91409f3b-eea1-40bb-8080-b8508a6a523f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6041b43c-19d7-477e-bac2-c9db2d758ea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc4691b8-c552-4bca-b922-130cbc0d5d3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c52b1c77-3a3e-4f12-9a1c-ae3a4fdb2de7"
            }
          }
        ]
      },
      {
        "id": "5b68dbab-ebd3-4cd2-bdef-4d19bde1c068",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a92bb0f0-e2b3-4435-8fa4-ea0ed096f59c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b5b4096-3aa9-4073-b1ad-082fada8bf5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a4c0ccd-eecb-4cc4-8b18-505b5287f694",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f34474-2d25-4c45-8678-7dd7ae421481",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba2c6749-622e-407c-9fb0-c569a34acf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e67532-f39d-4892-8f34-0f8611f95baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bc1ca9c-bebe-487e-841b-a836183ba0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd57610b-0c7b-4ddc-968e-480316303182",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87582965-c783-43b1-9f63-de48dddb684e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e29c559c-a991-455b-a6db-63a483365cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100e3e0d-90f4-4ce3-ace9-b195469a9d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7250d18e-94d0-4e94-bf3f-7737285d2720"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50dc8f4e-50ba-4bff-8569-4aee4ce2835d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4559ff1-6342-41d3-a0ff-a6bd93a20f9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7aeabde-799d-47d2-9a4f-5200acf22e98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63e9f145-9831-45d4-8be0-8301e1742d71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22479c12-e804-4b38-8c99-d9d16e99a263",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2d62b3d0-5172-4c64-8fc0-54630e38baad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84cc1b06-ea11-4a56-83c9-3dc330737146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d1ac76f-81a3-47ef-a130-42bde08942df"
            }
          }
        ]
      },
      {
        "id": "eccdab3b-3afe-41c4-b78d-3b6353f31055",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b2d9315-4e69-4a7e-be24-ca86d4b443e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a85d6af0-69ea-46a2-be0d-106d3266760c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b9bf101c-c496-4302-8de8-90537ffbe1b3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "794a9aca-9fda-4146-b45c-1320892dbbb7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd8d76bf-5f74-4b3f-a365-176495f9920d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 607.4503816793892,
      "responseMin": 33,
      "responseMax": 9573,
      "responseSd": 892.8046914099806,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673570408781,
      "completed": 1673570578748
    },
    "executions": [
      {
        "id": "269f9fe8-2fcf-4d89-8834-a169f7a3d945",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fed64b08-ce33-41de-a457-5b467a82a415",
          "httpRequestId": "19d55521-0ae2-45a9-8f71-28804f14b3de"
        },
        "item": {
          "id": "269f9fe8-2fcf-4d89-8834-a169f7a3d945",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b9a0c83-32af-46f0-b2ad-7f0f8c227159",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 0
        }
      },
      {
        "id": "acef360c-fef0-4c69-9c8e-5c9a2158164f",
        "cursor": {
          "ref": "3d752214-3c3f-4cfd-9fa7-c276de19baa8",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c106f619-5b51-49f1-8728-8f1e06ffd9de"
        },
        "item": {
          "id": "acef360c-fef0-4c69-9c8e-5c9a2158164f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "00fb3ff7-0488-4474-9851-330374170b34",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "feb9b39c-b8e2-49d4-8879-da2b9c6af245",
        "cursor": {
          "ref": "3a28bb6c-d92e-4fee-9c59-4c3f27ebe22c",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bba3b72b-f3e9-4b8f-bc24-b73993e13098"
        },
        "item": {
          "id": "feb9b39c-b8e2-49d4-8879-da2b9c6af245",
          "name": "did_json"
        },
        "response": {
          "id": "786633ac-3238-4edf-9945-fe4255662afc",
          "status": "OK",
          "code": 200,
          "responseTime": 825,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee09a11-2177-468a-ad6e-a459aedeab56",
        "cursor": {
          "ref": "b06540f0-2224-473d-b4ef-dbedc0fc3d17",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eda634fc-d5db-4ff3-8283-0ec3d01ed672"
        },
        "item": {
          "id": "3ee09a11-2177-468a-ad6e-a459aedeab56",
          "name": "did:invalid"
        },
        "response": {
          "id": "c78f8242-6588-4716-8f5d-59c62933f19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee09a11-2177-468a-ad6e-a459aedeab56",
        "cursor": {
          "ref": "b06540f0-2224-473d-b4ef-dbedc0fc3d17",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eda634fc-d5db-4ff3-8283-0ec3d01ed672"
        },
        "item": {
          "id": "3ee09a11-2177-468a-ad6e-a459aedeab56",
          "name": "did:invalid"
        },
        "response": {
          "id": "c78f8242-6588-4716-8f5d-59c62933f19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64c2731-0279-43f5-91da-004beddc94d9",
        "cursor": {
          "ref": "4ab483bb-5470-41a2-ba2b-997961cf1fbe",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ece29a68-1522-40c5-8aed-24d64b6ae4dc"
        },
        "item": {
          "id": "c64c2731-0279-43f5-91da-004beddc94d9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c1aa11c8-58b7-480a-b398-1a697336b17e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 633,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183af59-2b3e-416d-8c6d-b41b5d298b21",
        "cursor": {
          "ref": "d71cbf12-3396-4d5a-b339-3f9e6f42e2a7",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "51211abd-5f28-4f5d-8e44-248d4b97abb1"
        },
        "item": {
          "id": "5183af59-2b3e-416d-8c6d-b41b5d298b21",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dedd2ce4-b0a5-42a9-b0db-fa7321cf321e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 743,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d48aa5c-aa83-4903-a7ed-6cf7a61d0cc2",
        "cursor": {
          "ref": "8e0bc5e2-82f1-4ef9-8045-f04754185197",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fdd1613a-6c59-4d77-a2d7-1b2e949eb9e0"
        },
        "item": {
          "id": "6d48aa5c-aa83-4903-a7ed-6cf7a61d0cc2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e0aa8050-4fd8-41f3-9c02-ae879096fd2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486f008a-c4bd-4e86-97f0-a092304f4c1d",
        "cursor": {
          "ref": "e6ba4f18-bbca-4883-ad56-0cd90db3e711",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "beaba9b4-6f84-4b8c-a772-8da4c9e7dbb7"
        },
        "item": {
          "id": "486f008a-c4bd-4e86-97f0-a092304f4c1d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f3775be5-6f11-4de6-a166-436656432ac8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486f008a-c4bd-4e86-97f0-a092304f4c1d",
        "cursor": {
          "ref": "e6ba4f18-bbca-4883-ad56-0cd90db3e711",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "beaba9b4-6f84-4b8c-a772-8da4c9e7dbb7"
        },
        "item": {
          "id": "486f008a-c4bd-4e86-97f0-a092304f4c1d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f3775be5-6f11-4de6-a166-436656432ac8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5298ae-75f6-467c-b1f3-638c6752f16f",
        "cursor": {
          "ref": "d43e535a-afeb-40fe-9826-aca36af2c8bc",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a4bd8d80-464a-467b-b005-acb44a2ff25b"
        },
        "item": {
          "id": "aa5298ae-75f6-467c-b1f3-638c6752f16f",
          "name": "identifiers"
        },
        "response": {
          "id": "b92f0452-b48b-490d-8d2d-b384416be97f",
          "status": "OK",
          "code": 200,
          "responseTime": 869,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b2470f-ca70-4da2-a22e-9fb8a801cefb",
        "cursor": {
          "ref": "99be4360-3892-40e4-a477-4979c486a307",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6255b2c7-d1e2-4c7e-9b7e-538178f786ff"
        },
        "item": {
          "id": "a5b2470f-ca70-4da2-a22e-9fb8a801cefb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a007cc3-b375-43d1-9c9f-60e6e9bb1560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b2470f-ca70-4da2-a22e-9fb8a801cefb",
        "cursor": {
          "ref": "99be4360-3892-40e4-a477-4979c486a307",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6255b2c7-d1e2-4c7e-9b7e-538178f786ff"
        },
        "item": {
          "id": "a5b2470f-ca70-4da2-a22e-9fb8a801cefb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a007cc3-b375-43d1-9c9f-60e6e9bb1560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6900df3a-535d-491c-a870-5bb0f49155f4",
        "cursor": {
          "ref": "69498beb-9c5d-4c0c-a5af-66298ebd0554",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "05f7b710-456c-4ebc-b6a8-4b6d801e01df"
        },
        "item": {
          "id": "6900df3a-535d-491c-a870-5bb0f49155f4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a1d5ef81-e2ef-4bc5-8825-45ecfbfa52e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587bdfa0-597e-4a6c-bc8b-469b32dc87b3",
        "cursor": {
          "ref": "53ec960a-5dfc-495f-9ed2-5fc26f19d6ac",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bc5f4b03-98e0-42b0-9da3-cf1bccd7a968"
        },
        "item": {
          "id": "587bdfa0-597e-4a6c-bc8b-469b32dc87b3",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "5956c25f-e22b-40f4-8cfc-3be6cdd126ed",
          "status": "Created",
          "code": 201,
          "responseTime": 2605,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "b14f66bd-ba77-4846-8283-910f11a30bc7",
        "cursor": {
          "ref": "4e444cf4-b0ea-48d2-b456-bb8ea4369bb9",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "914daeaf-4c5e-44c1-af05-49214efc7386"
        },
        "item": {
          "id": "b14f66bd-ba77-4846-8283-910f11a30bc7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "43127b7e-9466-43cd-88fc-835fa879bb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48140cfa-1d4f-40af-bfd7-58072a36607a",
        "cursor": {
          "ref": "86fcc1df-5b7c-4b4e-989a-d7d1b95eebb1",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf6dcad1-e7fd-46b3-b355-45eceb36d62b"
        },
        "item": {
          "id": "48140cfa-1d4f-40af-bfd7-58072a36607a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5cdd1f2a-0f63-4d49-bcdd-f9505d4baace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1066,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce41323a-e044-4d34-aa04-51de1a136b15",
        "cursor": {
          "ref": "63efea33-8709-4bcb-b28c-d4d787bd71b4",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "978db41f-3888-4744-acbb-43e9af45803b"
        },
        "item": {
          "id": "ce41323a-e044-4d34-aa04-51de1a136b15",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "59452bea-f0a1-43ef-8102-17a68d23e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1607,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec242b-6349-4bc2-a970-e52a18f7db98",
        "cursor": {
          "ref": "a1a6e5fa-c1e2-4981-b9a5-b16d097cc3b2",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cddfb794-f19e-43aa-8513-74f14a0ceb26"
        },
        "item": {
          "id": "20ec242b-6349-4bc2-a970-e52a18f7db98",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a80c7634-22e1-455b-82c7-8c0ffc5f17d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6280c9b5-b33d-4f89-9fdc-df5fef05763f",
        "cursor": {
          "ref": "db9e5551-391a-4f96-af5d-3e563070e144",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "149f8315-5bb0-4a80-80b3-4fae9aac3b28"
        },
        "item": {
          "id": "6280c9b5-b33d-4f89-9fdc-df5fef05763f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "757ed6e3-5083-4054-94f2-0f8509795e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df5ae90-f453-4f88-b955-1da17eb79045",
        "cursor": {
          "ref": "ec45a03f-a7ae-4005-969f-c898028f56c8",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0f806c62-baad-4619-8954-5e13c24b0d60"
        },
        "item": {
          "id": "4df5ae90-f453-4f88-b955-1da17eb79045",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e1bca6e-c7ed-4031-8995-5723446f4653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6650ed-7f25-40c0-9f76-72e266f13150",
        "cursor": {
          "ref": "08123714-e98a-4e47-aacc-1c9027ae8a69",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "91e92b44-f79a-45a9-8182-63de44c52b73"
        },
        "item": {
          "id": "cf6650ed-7f25-40c0-9f76-72e266f13150",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc24f561-fd30-437e-88e2-68d20e213ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf98f3e-e93f-4071-a3f4-6227d0a05e39",
        "cursor": {
          "ref": "eeb4fdba-9e1f-467d-b579-4cbfd3bc366f",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7c7a25d4-405b-4236-8b15-da120c02c481"
        },
        "item": {
          "id": "bdf98f3e-e93f-4071-a3f4-6227d0a05e39",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5eb8ce6e-b26e-49f5-84ba-9c9ac9a24182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a706a469-ab4e-4699-b8f0-8825da3fb0cf",
        "cursor": {
          "ref": "781deaff-9e25-4e39-acdb-313adc2d25df",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d96cd034-ee88-45f2-a7fc-6c3aefe2f39d"
        },
        "item": {
          "id": "a706a469-ab4e-4699-b8f0-8825da3fb0cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0cd59705-530e-4169-9424-a7d96d973aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a985fe-c981-4e5d-971a-6059daa5a169",
        "cursor": {
          "ref": "b0203a5b-ae41-4cb1-8c1c-2a0432df82e9",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ebd86d78-ffbd-4300-939d-6297b584c22a"
        },
        "item": {
          "id": "a1a985fe-c981-4e5d-971a-6059daa5a169",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4456fdf5-3802-40ee-ab1f-3a6f7700d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d15228-287e-4930-bcaf-796ef7856f12",
        "cursor": {
          "ref": "694b2f9d-3f22-4aef-87cc-8157595c7345",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "af901f2c-8701-455f-8db0-6134aee328b9"
        },
        "item": {
          "id": "12d15228-287e-4930-bcaf-796ef7856f12",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "c01b336f-c469-4a48-99d6-119e889eb184",
          "status": "Created",
          "code": 201,
          "responseTime": 4162,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "5a1c4bfa-bc36-4924-9bdb-e9ac8009330d",
        "cursor": {
          "ref": "42dddf05-0cd7-432a-88d8-0673f605b9f2",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "24b94c54-04d3-486a-9a96-2dfb54c20050"
        },
        "item": {
          "id": "5a1c4bfa-bc36-4924-9bdb-e9ac8009330d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "13988e37-551c-4698-8818-e4a432312b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd40c0b-1d7d-4844-ba97-d56439dc11b8",
        "cursor": {
          "ref": "5848a6c1-6639-4c69-aa10-b0cd8b9c4a52",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f4eeb7e1-e4ec-49fb-8b77-884718c01127"
        },
        "item": {
          "id": "3cd40c0b-1d7d-4844-ba97-d56439dc11b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d35e2b35-5672-41a3-ab79-948dad692bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cc64c2-4ca7-4047-855b-f812ddd919a1",
        "cursor": {
          "ref": "77ea1859-a602-4119-a3b2-5c1169dcb5ba",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cfd8062f-9aed-4301-80f2-6640568df15d"
        },
        "item": {
          "id": "25cc64c2-4ca7-4047-855b-f812ddd919a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c03a6fc7-8d8b-4dce-baa6-1cfd7444bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a235b1e-a045-46f9-bba0-a9cd0eb87afb",
        "cursor": {
          "ref": "d5739b4f-5b86-464e-882c-584804e0046e",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53556237-b026-42f6-9a3f-312453494be3"
        },
        "item": {
          "id": "1a235b1e-a045-46f9-bba0-a9cd0eb87afb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ebb8f263-188b-402d-9762-c37f2a729069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a04e60-1910-4945-8feb-5b2ae1bb85e7",
        "cursor": {
          "ref": "5f5db93f-375c-4638-92c7-dadb4ee6bf70",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "44f65056-4737-4856-a185-17af72e93aaf"
        },
        "item": {
          "id": "e0a04e60-1910-4945-8feb-5b2ae1bb85e7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2b55e633-1659-484f-92fb-371b52179adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4820c29d-0659-4863-9e1b-63c79fd68e12",
        "cursor": {
          "ref": "42b2f118-c905-417d-af76-266da55ca44d",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1ecb6ae-dc60-4a1f-962d-c3bed63d6abf"
        },
        "item": {
          "id": "4820c29d-0659-4863-9e1b-63c79fd68e12",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "89989115-d817-45aa-aaba-d7518b667d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec2fb80-423c-4002-ab51-cf97108ad313",
        "cursor": {
          "ref": "87b04443-67cf-44ee-920a-7b4529eafff6",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54f3ada9-9471-4e4a-bd4b-4c86d1b3a7cc"
        },
        "item": {
          "id": "aec2fb80-423c-4002-ab51-cf97108ad313",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "11d452de-7eb2-46ae-80e5-7493bb9c42ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3430b415-362d-4b99-bf87-3e84ba61e488",
        "cursor": {
          "ref": "295b3c06-f359-4572-ac2c-26deda1df9ab",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39954faa-f2ad-486c-9d6f-7401b3102940"
        },
        "item": {
          "id": "3430b415-362d-4b99-bf87-3e84ba61e488",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8074a1a7-5b81-4c3c-864d-6a6e63e8c5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529dbdb-7eef-410a-a301-108ac6856db7",
        "cursor": {
          "ref": "a31c5130-e746-4f25-bd14-b856a6a10f1f",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "98d32890-4bbd-4ff1-ae81-709f4b83e333"
        },
        "item": {
          "id": "2529dbdb-7eef-410a-a301-108ac6856db7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "62334c46-adda-49fa-bd86-eb4830531522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe355e40-30a4-4da3-a40f-da62fadf4e09",
        "cursor": {
          "ref": "97462cd0-ddb8-4bad-b749-0cb002140664",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a72a2cf8-f0e0-4b9e-a42e-a7c8dddf70e1"
        },
        "item": {
          "id": "fe355e40-30a4-4da3-a40f-da62fadf4e09",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5a7c92ff-0b26-465c-920c-2b0eb62d9aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b2fb51-b569-4c67-80e1-f57ff4a66423",
        "cursor": {
          "ref": "c6e19153-6204-461c-aa59-8ffeab957556",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6c2abbe8-202e-4e47-8030-0dd3017a7c7a"
        },
        "item": {
          "id": "81b2fb51-b569-4c67-80e1-f57ff4a66423",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e1446aeb-7ee6-41c4-8cee-5ded12068dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b30a9d-668a-4625-8ffb-13feb087d1ff",
        "cursor": {
          "ref": "2091b791-9314-40ba-b227-743ffbe76d1c",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7b791ce3-fd40-4ce5-850d-2a35f3b62d68"
        },
        "item": {
          "id": "05b30a9d-668a-4625-8ffb-13feb087d1ff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b0b6af37-15d8-4c19-b729-9e8fa7be7d9c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1655,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "94ae7ee8-fa9d-446b-b7eb-28a58c432169",
        "cursor": {
          "ref": "30d26527-37c6-4b10-8ac3-a5146832d3e8",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4cd5da05-d788-4fb9-90fa-48b1c8b8de1b"
        },
        "item": {
          "id": "94ae7ee8-fa9d-446b-b7eb-28a58c432169",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bb51c395-6770-4e4b-8234-f01abefbcb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8d0cd9-9385-4c67-94f7-abae23322d54",
        "cursor": {
          "ref": "a1f12d17-f922-4c36-aa91-a303b2b27c41",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bf4a22a4-6973-459b-95d0-b2f0a94580bc"
        },
        "item": {
          "id": "9e8d0cd9-9385-4c67-94f7-abae23322d54",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1312a2b-826e-425a-a687-b3cfb8ead159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c234ebf6-0e6e-4a00-99cb-684befd0d50c",
        "cursor": {
          "ref": "c2be3d38-d3e9-461e-bf15-bd5309078361",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8001f943-879e-4849-acb5-30e9b6916712"
        },
        "item": {
          "id": "c234ebf6-0e6e-4a00-99cb-684befd0d50c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "06d46343-4803-4ac9-82e9-692144cd5d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531e136d-d368-4869-a0ec-d7011cfc7eea",
        "cursor": {
          "ref": "68d93a0f-5c97-481e-a132-309ebe39b927",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d46702e5-32c8-4686-b825-d9dd5c987bad"
        },
        "item": {
          "id": "531e136d-d368-4869-a0ec-d7011cfc7eea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "672b30a8-236d-473b-915a-84018820a68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb71f55-792a-43c1-853b-80b0f20c0c80",
        "cursor": {
          "ref": "8b15bb87-1fc7-4d15-a8d3-9b7e5d157676",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a3ff1a15-836d-4824-8369-8e6cd38c837f"
        },
        "item": {
          "id": "fbb71f55-792a-43c1-853b-80b0f20c0c80",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d0a146e-4612-4df7-8e92-6d8312191d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b0094f-391a-4eb3-b726-df74436e65a1",
        "cursor": {
          "ref": "c7947822-0463-4fe2-8627-a0b25976c907",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bbad5eb-7550-4f51-80fe-2eac52886647"
        },
        "item": {
          "id": "24b0094f-391a-4eb3-b726-df74436e65a1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bb78d4a7-4264-45b5-ac59-c3d62ac367f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc2c348-5987-4bfe-8363-a8dc98f03431",
        "cursor": {
          "ref": "1656fa09-fe5f-4035-a421-994779cf39f8",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "728f7a9f-cde6-40ff-8207-dc6172ef9d15"
        },
        "item": {
          "id": "bcc2c348-5987-4bfe-8363-a8dc98f03431",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "62b580d4-25b8-4310-897d-d2e5621005d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911636d4-ec73-468f-bd3f-20b588bae9be",
        "cursor": {
          "ref": "029960dc-4ab7-4951-885b-d52f8ad785da",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "47ebf5ec-ace8-4575-9ca5-9881f19b5173"
        },
        "item": {
          "id": "911636d4-ec73-468f-bd3f-20b588bae9be",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "14f67230-32d3-448b-b10f-a9cd8313e06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff1c61-97f8-48a3-bf96-245854b536d2",
        "cursor": {
          "ref": "7142d365-6405-4e4d-a8a3-22f4c4f59808",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b4d98ef-e8dc-4a20-b8ad-1c9e4a2f862c"
        },
        "item": {
          "id": "e5ff1c61-97f8-48a3-bf96-245854b536d2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2309295-187a-495f-9e00-28c3b5e3a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2744ff88-0cf2-40f4-b1ac-ae4996079da8",
        "cursor": {
          "ref": "6f67d047-4348-496e-acd2-55a8b58f9f1f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1172bba4-5810-4be4-813a-87411b0d599b"
        },
        "item": {
          "id": "2744ff88-0cf2-40f4-b1ac-ae4996079da8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57da713f-aeab-43dd-8e37-d56837446ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b2a1aa-5362-46b2-aaed-710090a57eb6",
        "cursor": {
          "ref": "2f556ae5-90c1-4575-8c29-8d640cd1711b",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1ac599e4-31f5-4b19-a0d9-64d43f0c4253"
        },
        "item": {
          "id": "c1b2a1aa-5362-46b2-aaed-710090a57eb6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9b93f4bf-057d-4063-aeb4-37b15d32f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1a8cb1-9096-47bb-b22d-e9cfa630684b",
        "cursor": {
          "ref": "1cc9d0a5-c8f5-4020-b23d-f6ed023df42c",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b5defacf-2149-4622-aaac-65738f9ec7a7"
        },
        "item": {
          "id": "0e1a8cb1-9096-47bb-b22d-e9cfa630684b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b3fc3130-6060-4e8f-a2c3-1b0076023941",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 516,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2048603f-401b-4f7c-a429-57772c3acf95",
        "cursor": {
          "ref": "30386eab-fa48-4d63-8b42-9123835c3f1b",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "66a24327-e120-4c4a-8d01-73fa2f861171"
        },
        "item": {
          "id": "2048603f-401b-4f7c-a429-57772c3acf95",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8d51c395-f981-420c-863e-3a063bf71aeb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 491,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "cfcb9ae0-11b4-426e-bfeb-b3012d372793",
        "cursor": {
          "ref": "c6281aa1-5fa4-49da-8523-01e561d10f74",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "84550f13-9dcc-43a5-92e8-73b60d309d25"
        },
        "item": {
          "id": "cfcb9ae0-11b4-426e-bfeb-b3012d372793",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9aa3648d-05b4-492f-84fd-6eaac5aa7efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98bed0e-fc35-46d2-ad1e-bfb5a6978633",
        "cursor": {
          "ref": "dbfb2789-672d-44ca-b8b2-bbb4b55320fe",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "033c8fa4-cb27-4ea7-9d40-6e7fe316c574"
        },
        "item": {
          "id": "d98bed0e-fc35-46d2-ad1e-bfb5a6978633",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b6af682b-fdb7-4949-816c-90dbfcb4de14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d12ab2-5a80-46aa-a8ce-84ffbef79d87",
        "cursor": {
          "ref": "14a64670-69c1-48f0-9f8e-73a5b2be15da",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b83a91d0-8dc7-430a-b77f-30c4083a5192"
        },
        "item": {
          "id": "04d12ab2-5a80-46aa-a8ce-84ffbef79d87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "92b25b8e-351d-43bf-8ae5-6a47380b17ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eb1dff-e00d-42e0-a6cf-a1a06e23acaa",
        "cursor": {
          "ref": "a7e6a4b0-0659-4d30-86e4-a9eb8fcb6445",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aceabb54-d41e-48bf-abd8-85a718413919"
        },
        "item": {
          "id": "b7eb1dff-e00d-42e0-a6cf-a1a06e23acaa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f56bdfb1-9122-48c8-adce-6ae79cbbcc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e74b17-2f3a-4036-b7ee-e427aeb41bce",
        "cursor": {
          "ref": "8da3bf50-1478-4acd-8928-2ec53f5c09b4",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "77cf87b1-8d90-42bc-b0a9-091857db24b5"
        },
        "item": {
          "id": "73e74b17-2f3a-4036-b7ee-e427aeb41bce",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9564284f-bb26-4c26-8755-21d5a83f113f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0169ecd9-2055-473d-a8da-45caa1e28d50",
        "cursor": {
          "ref": "a4697868-c017-47d8-9d21-ea8608bdd76c",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6647b2ad-d4d8-443e-a833-ed9a3d6fcc2f"
        },
        "item": {
          "id": "0169ecd9-2055-473d-a8da-45caa1e28d50",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "327b5b0f-d5bd-46b1-8d59-f8bba2d3b4b8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 568,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24529b4-7269-4502-b741-24ecd55c5c4a",
        "cursor": {
          "ref": "33dcf2ff-ba51-49a2-bd8a-ea1787a2bd0a",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b13cfe86-cfa7-40bd-ae5a-17f9a74574f3"
        },
        "item": {
          "id": "c24529b4-7269-4502-b741-24ecd55c5c4a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f28e684d-59d3-4f97-8eb6-46458b35ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498dc748-4db0-4580-9aa2-37661d5a7978",
        "cursor": {
          "ref": "f6eb9afe-e976-4fe9-b4d4-ea2932557ccf",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8bd4e3a7-13a3-4805-8543-c397d29d2a0c"
        },
        "item": {
          "id": "498dc748-4db0-4580-9aa2-37661d5a7978",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b329229a-b251-4bcf-a4b3-f7ae70e7ace2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae30a5f2-01c6-4971-9823-1849ce22d350",
        "cursor": {
          "ref": "96393644-2949-4efb-868c-caa0c3710f09",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dced581e-0f86-4816-b6a1-da0aa0a68563"
        },
        "item": {
          "id": "ae30a5f2-01c6-4971-9823-1849ce22d350",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97241feb-4807-41d5-9451-3aad497090d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f1a57a-2fc5-49e4-93d4-c42d4e530e96",
        "cursor": {
          "ref": "97a5162a-a8a0-406e-aa85-ffadb52ddaee",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d361a065-3f03-45c9-a1c3-ea5abeb8cf81"
        },
        "item": {
          "id": "b6f1a57a-2fc5-49e4-93d4-c42d4e530e96",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1621065-e751-4543-bce2-aaabb9daac10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88888af-0c00-4233-8832-d70f8c3434d9",
        "cursor": {
          "ref": "f44d1c9d-a711-41d4-bda4-f2aad7b0f71d",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7dfc6803-d9bc-4bae-8503-115d44e6dc7f"
        },
        "item": {
          "id": "c88888af-0c00-4233-8832-d70f8c3434d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8344874d-6448-433f-bfd7-bd0ebf3b81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8e2780-3a59-4533-b586-4f823aa8dca0",
        "cursor": {
          "ref": "9d04514a-f5ae-40ab-a393-a1a65944d767",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "923aca1c-70b0-4dda-80d3-11512f525afd"
        },
        "item": {
          "id": "7c8e2780-3a59-4533-b586-4f823aa8dca0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "35ac45bf-233a-448e-b27b-f32059ff3df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca401d9-45de-48da-b7be-4e0111955d35",
        "cursor": {
          "ref": "8851febf-8306-4a1a-bc4f-ffec9f6fd932",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5601f372-cdcd-4de3-844d-c0051ee174ad"
        },
        "item": {
          "id": "3ca401d9-45de-48da-b7be-4e0111955d35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "388385cc-6b79-45e1-842a-00767b685de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20b4109-1a89-4d9c-8e92-f7f01bb298e9",
        "cursor": {
          "ref": "2255f5ab-ef71-4822-a732-943d588ac15c",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b5439d1-ac96-4492-bcdf-9d178139e683"
        },
        "item": {
          "id": "b20b4109-1a89-4d9c-8e92-f7f01bb298e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eff2b75a-7447-4647-8464-48fc60dee785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff946ae-9d68-49f5-8d7f-80c08a7744b1",
        "cursor": {
          "ref": "77de41d3-305c-4539-831a-511c459f8238",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53463994-1912-4791-9636-f5e298906a45"
        },
        "item": {
          "id": "6ff946ae-9d68-49f5-8d7f-80c08a7744b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6858387b-fece-4d52-a190-5e6003cd3b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ccc53d-83b5-4525-a921-41433129f61f",
        "cursor": {
          "ref": "41861d1a-e787-4d92-aa38-cc3d80a2e942",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "743fd7f4-2045-4497-aa5d-a62beacd84d4"
        },
        "item": {
          "id": "34ccc53d-83b5-4525-a921-41433129f61f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c82b6e61-ebae-4e26-8130-44aaed1a1551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eeebc5-86ed-4c57-8a39-22b7c12749d2",
        "cursor": {
          "ref": "b4b7378f-9af0-4940-99ad-e2096d062af0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f71ee751-1263-46bf-b654-46222b4f0817"
        },
        "item": {
          "id": "76eeebc5-86ed-4c57-8a39-22b7c12749d2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ca50807e-fb29-4b66-80dd-98ce2d8d4f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08d3111-68eb-4c80-aea9-efd68dbf6dfa",
        "cursor": {
          "ref": "d6022ffa-55ae-48c8-931e-2364d5d6e161",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2925f12b-b4a1-4399-9076-f0f527e63525"
        },
        "item": {
          "id": "c08d3111-68eb-4c80-aea9-efd68dbf6dfa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b0a1d46-5f28-4bf0-a3ab-8a64859e01e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6832d991-cefc-44d9-83ab-f74ee733e442",
        "cursor": {
          "ref": "206d9e39-e4a1-4f8d-b92a-37e52d1c6f70",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e41df27-cb69-4471-8da9-61bcda6fa048"
        },
        "item": {
          "id": "6832d991-cefc-44d9-83ab-f74ee733e442",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2840fbbc-ecf0-486b-91e4-89df5840753f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bc45d1-9714-4749-bccc-a2fb76f2dadc",
        "cursor": {
          "ref": "0a64238d-35b1-4827-b63a-6ff6affcab7a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "043a5c92-9ddb-495b-899f-fdb83c04127e"
        },
        "item": {
          "id": "e4bc45d1-9714-4749-bccc-a2fb76f2dadc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d78a2163-3fed-4f78-8eff-c7e6054d244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d7c4b-f378-4575-a5e5-9e5f45571fa1",
        "cursor": {
          "ref": "7bf1560b-8186-4ec8-a4b2-c847c25efb1b",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "10f76de5-5f55-4de2-8dd2-872e522e68f5"
        },
        "item": {
          "id": "ef8d7c4b-f378-4575-a5e5-9e5f45571fa1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9790b92b-34eb-46a1-9799-24c8f3275b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe0014-2f3f-415c-8029-b0ec9fc83246",
        "cursor": {
          "ref": "04a93799-fa5d-4c46-b7d5-c9d80027d05d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "28625705-b69b-45ee-818c-fa1a787d90f0"
        },
        "item": {
          "id": "76fe0014-2f3f-415c-8029-b0ec9fc83246",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "abd4777b-2f9f-47e7-b18b-e90d89bcd5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc2b34e-1bbe-4638-a5a3-c233020298c3",
        "cursor": {
          "ref": "8816868b-35e8-4e88-88cd-7a7636724db0",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a1f78470-1c2c-4511-8098-90f82c1dd061"
        },
        "item": {
          "id": "ccc2b34e-1bbe-4638-a5a3-c233020298c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9ee0310c-95a6-4263-8785-77f106603134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb29683c-49d0-4673-88ad-a19196312950",
        "cursor": {
          "ref": "1b05c4b6-ae2e-42cb-a93f-5ef169517dc5",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8e629820-cdaa-4781-8723-4980b7001dd1"
        },
        "item": {
          "id": "bb29683c-49d0-4673-88ad-a19196312950",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "432ac9cb-3cce-48d1-a06c-dedd68fcbb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03c1636-cf51-4abc-897e-0af830e98c2d",
        "cursor": {
          "ref": "34838e2b-e3e8-4fb6-b529-4c9a4e811f81",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4133086a-55ec-4c81-abe5-61211e95c1b8"
        },
        "item": {
          "id": "f03c1636-cf51-4abc-897e-0af830e98c2d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce562d46-b2a1-400e-8ec7-950fe70bd748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1ed7e-5033-4f2e-8436-d72b63d9dc24",
        "cursor": {
          "ref": "eded8511-21a3-4534-b022-da9049d0fb28",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6adb2c9-e85a-4720-97d3-587f2bd6aa36"
        },
        "item": {
          "id": "5db1ed7e-5033-4f2e-8436-d72b63d9dc24",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "10a27762-9d02-4d79-861f-6106597f5ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a83a33b-ec74-4b78-b896-4fe9cc0bf174",
        "cursor": {
          "ref": "cf0ac267-1090-4ddf-84d9-07aaefaaef48",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a037b4ee-ecc9-4124-953b-7a79a5e4bcba"
        },
        "item": {
          "id": "8a83a33b-ec74-4b78-b896-4fe9cc0bf174",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a5973372-5e0c-4bbb-b012-6f358171fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c955cb-acd0-4aeb-ad70-8ef4ddcd9eee",
        "cursor": {
          "ref": "d8479524-ca5e-49f4-8fe7-ac956699b4e6",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d75a754-235e-4e94-a94c-eee76e407f59"
        },
        "item": {
          "id": "e1c955cb-acd0-4aeb-ad70-8ef4ddcd9eee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1b13827d-7022-46f9-baaf-761a576e2877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a2e32-1a07-4981-97d0-9cffeb837ffc",
        "cursor": {
          "ref": "ba62a186-3dc9-47dc-b15f-049cae2d85ee",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "adfde328-1e61-46ab-a594-087ba6f01ba6"
        },
        "item": {
          "id": "404a2e32-1a07-4981-97d0-9cffeb837ffc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ffd81212-b87f-44a9-aa44-6ead15cde99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60b7df-5224-4d8d-b287-93684173263b",
        "cursor": {
          "ref": "4fb43b8a-18c0-442f-8d40-049139e84165",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2d51e268-08a2-4ee5-96b7-5ba4a525c641"
        },
        "item": {
          "id": "fe60b7df-5224-4d8d-b287-93684173263b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "76a6c731-9ed4-481e-9f3a-d496d46f190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eb4cb2-46ed-415c-9b90-96a5b185e45a",
        "cursor": {
          "ref": "c74447f1-b123-4238-ae8b-7700bb6345e0",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eea08ba1-50f8-4ce6-912e-7a3a392bb1d5"
        },
        "item": {
          "id": "c6eb4cb2-46ed-415c-9b90-96a5b185e45a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e26beb3-d720-461f-b994-59acb2e5eb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5988063-8263-4969-84e7-d261350f0c70",
        "cursor": {
          "ref": "84adf92d-7c31-42d3-a74a-f3b5f408a26b",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "306629c5-a5fa-493d-9b72-840bcd7abe7b"
        },
        "item": {
          "id": "e5988063-8263-4969-84e7-d261350f0c70",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f7a327af-64cd-4508-b965-0f7924257a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21362c6b-4789-46fa-a628-51e400f5d201",
        "cursor": {
          "ref": "bf677cef-e65f-4051-afb9-9f970abbd6d6",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98bb9ef8-c39c-442a-88e1-01dacdbb127f"
        },
        "item": {
          "id": "21362c6b-4789-46fa-a628-51e400f5d201",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aecbd298-15fe-42b3-8da7-d18fa3a5b96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ea542-30ea-486a-a7ac-d020f3837940",
        "cursor": {
          "ref": "79b96f14-e591-4fc4-bf04-1c29a93222e8",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b84ce51-3855-4f66-809a-1cbb6cd6809d"
        },
        "item": {
          "id": "267ea542-30ea-486a-a7ac-d020f3837940",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "aefb1b09-26d2-49fc-ab43-042a00561d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c836eb-8c8f-41e1-8669-7d3efea2d488",
        "cursor": {
          "ref": "53ec803b-402f-4a40-bb2e-3a8ee4a97f63",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2e8c4a82-a499-458d-bffb-69cb51f5b000"
        },
        "item": {
          "id": "33c836eb-8c8f-41e1-8669-7d3efea2d488",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0bc31704-687c-4d77-9fe4-3769ea04cd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac39e0e-9a4e-490d-8b16-ef9ea39a9ee0",
        "cursor": {
          "ref": "d14de73a-0aaa-42c9-ae0f-90aa3437cc09",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df0ef2af-aa07-426a-b91c-21de9505189f"
        },
        "item": {
          "id": "5ac39e0e-9a4e-490d-8b16-ef9ea39a9ee0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2ef167e1-0de8-4702-a2d9-ec3f0a85f630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a5f22b-0401-4482-b150-c6df4ff66074",
        "cursor": {
          "ref": "f2724083-b11e-495c-92f0-fa532a939e19",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "03956d04-15d2-4a8b-adfc-6a4fb98aa7ef"
        },
        "item": {
          "id": "e7a5f22b-0401-4482-b150-c6df4ff66074",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7995ced2-86ac-4565-b4f5-4d3c3275dae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c241bc4-dc99-48ec-88af-174acc090aa4",
        "cursor": {
          "ref": "6299386d-a883-4ced-a659-e33fd55c5292",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ae6c506-b441-4c3c-bbd1-3d1b690e4280"
        },
        "item": {
          "id": "1c241bc4-dc99-48ec-88af-174acc090aa4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd1cc14f-28be-4433-ad25-3ec18dcbaebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a59472-6afe-42aa-b254-4bbc68e6be9e",
        "cursor": {
          "ref": "72a0b17a-0d6b-480f-911e-b52967d86355",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c192ff2-2e44-44ed-8faf-c1efed388882"
        },
        "item": {
          "id": "e7a59472-6afe-42aa-b254-4bbc68e6be9e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e867406-cf90-4749-9f3a-33decec9ef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5358d865-94ce-4a72-a646-9564a99365a3",
        "cursor": {
          "ref": "13e500a9-cb5f-46b9-8b5a-29f0ba53a3c3",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4b1131ae-84e7-488e-ac9d-fc193a215bf5"
        },
        "item": {
          "id": "5358d865-94ce-4a72-a646-9564a99365a3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7aad5d16-73d5-4c03-8230-ff0bb35f05f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b9491-842d-47a5-8a69-3f68cf6c3053",
        "cursor": {
          "ref": "afc2fd91-a5fa-497d-9ad3-3f9606fc0311",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bd2d75e8-eab5-4f16-a061-89b2f6423d26"
        },
        "item": {
          "id": "441b9491-842d-47a5-8a69-3f68cf6c3053",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52b49846-4ac9-4309-b277-ed7328eaf3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09be4942-cec1-4c49-a181-7d65fbf7d989",
        "cursor": {
          "ref": "d72afffd-60f0-46ac-a96d-6385c74d7a80",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "494d14eb-caca-4787-bf5e-fa91ac989a89"
        },
        "item": {
          "id": "09be4942-cec1-4c49-a181-7d65fbf7d989",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "357a41df-73f7-4e22-93ac-e86b4a25f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f579cb-9444-4be9-a945-0f5e1655a3ff",
        "cursor": {
          "ref": "00975282-f82a-4366-8006-9aabf4119c73",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f2570ec7-b42f-4aee-b96c-6190bc3c5370"
        },
        "item": {
          "id": "d3f579cb-9444-4be9-a945-0f5e1655a3ff",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4fcda785-15f1-4939-88b9-bc5412e0f0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c358cb4-8622-48c4-a6a7-6e8275641b06",
        "cursor": {
          "ref": "17e1c2e7-d3d1-4579-b734-72c40772b64a",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6039115f-65a2-436f-8ccb-bd99ee95ddfd"
        },
        "item": {
          "id": "8c358cb4-8622-48c4-a6a7-6e8275641b06",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ff05974-49ef-4cd2-999c-f361c3b06afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66740d3-eb16-45d4-932d-a5cd48e2e282",
        "cursor": {
          "ref": "d3bf7119-d0da-42d1-a793-9778ff226081",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "312a708e-f61c-4a0c-b4dd-07d9259b267f"
        },
        "item": {
          "id": "a66740d3-eb16-45d4-932d-a5cd48e2e282",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a28d6401-ddf9-4832-a12b-c8c6e09e555c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ee6639-3737-454c-adf2-8e9d9bb39e51",
        "cursor": {
          "ref": "3c3f2417-d5d7-4203-b328-b835dc0545d7",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8a52538b-6186-4f63-8c3d-37246d3e00cb"
        },
        "item": {
          "id": "28ee6639-3737-454c-adf2-8e9d9bb39e51",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ac25843e-7cd9-45cb-998c-e4a2e3c485b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53276914-58ee-4ad3-a7e8-406143a2f86c",
        "cursor": {
          "ref": "805bf1a8-a6b9-482a-ba18-5d6e9cd7460d",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e7058b5a-7a21-4e30-8512-e52a5c361528"
        },
        "item": {
          "id": "53276914-58ee-4ad3-a7e8-406143a2f86c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8fd71274-44e8-4d19-aaf8-0e8a79abcd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb25e4d-0d18-4162-8a65-102a25cfd931",
        "cursor": {
          "ref": "49a76563-6fe7-458f-93a1-b33d79f0acf8",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ff446a36-2651-4c0f-83eb-17ef2f3ea186"
        },
        "item": {
          "id": "ffb25e4d-0d18-4162-8a65-102a25cfd931",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7b0bd93b-7adf-45d1-8725-8d84291c1c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52652b7f-0488-41df-a662-c0be6f1c9ca5",
        "cursor": {
          "ref": "d208dc86-23ae-4d8a-9f9b-1f96397649d1",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "44f95df3-16a1-4a41-a9ab-58f8c1c2c742"
        },
        "item": {
          "id": "52652b7f-0488-41df-a662-c0be6f1c9ca5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8fb5fbc8-0bf5-4885-9f34-b5f774db8c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5a0c0c-04e2-4072-ae51-29309432383d",
        "cursor": {
          "ref": "e8faa88b-7c99-4431-b1b4-cd4b185a955f",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c69af8f2-5a4d-4809-b078-8cfa1cf79e2c"
        },
        "item": {
          "id": "0c5a0c0c-04e2-4072-ae51-29309432383d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a506dcd4-1463-4bdb-a072-295a6881bbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1382844-d2cf-461c-a716-f099127327fe",
        "cursor": {
          "ref": "9a0d6907-d907-4e6e-93ff-bd902601c469",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "28ef9f60-36e7-4134-8f9b-c2e6bfc3b1bd"
        },
        "item": {
          "id": "d1382844-d2cf-461c-a716-f099127327fe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aa125948-32ca-43ea-aa52-90bfcea95962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c10bfc-45ed-4c55-9d3c-2a985eb5e458",
        "cursor": {
          "ref": "2e46d1b7-edfa-41d9-a4bd-77a413e26538",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ca5eba6-e646-4707-8c86-9cb74e40a5cd"
        },
        "item": {
          "id": "c7c10bfc-45ed-4c55-9d3c-2a985eb5e458",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c8d2d4c6-4092-4eb5-b0c7-9ed7a465ca1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb775e87-0bf2-439e-ae01-f4ac890e784e",
        "cursor": {
          "ref": "7c379ce3-dc36-4064-9d36-5c31cdcc7921",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "35a0a018-f288-4248-850f-9d37563f8f31"
        },
        "item": {
          "id": "cb775e87-0bf2-439e-ae01-f4ac890e784e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fe6e6978-714a-4025-8340-a2d93446cd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ca643-9391-48e3-9d07-ae3b27ac2ea4",
        "cursor": {
          "ref": "d2404f82-0880-47f0-9221-a66ffd1ba21b",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8fd4e87-3968-424e-92fa-a8ef1aaf7cb7"
        },
        "item": {
          "id": "b02ca643-9391-48e3-9d07-ae3b27ac2ea4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e6e9232-c45a-4a21-b9cf-99cffd1e4b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d07e2be-4318-4add-8915-6df26f33dfcb",
        "cursor": {
          "ref": "b3e129ab-4176-456c-867f-ea03e92bf46e",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "07a9e86d-b2c4-4311-808b-00acd6b49f00"
        },
        "item": {
          "id": "0d07e2be-4318-4add-8915-6df26f33dfcb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85f02536-588a-4b55-9d10-1eacb560ddd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97db3008-1081-4ff9-af0e-dc1b6f5ebfe8",
        "cursor": {
          "ref": "01f8c81b-6186-4ecb-b5af-8cdab74dac00",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a08b1c79-065d-4692-87f6-854ff1f06577"
        },
        "item": {
          "id": "97db3008-1081-4ff9-af0e-dc1b6f5ebfe8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a87657f0-559f-4662-97cd-e0c984b6b54e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40889947-2f27-4788-b2c7-f781c24156db",
        "cursor": {
          "ref": "0d64b7a8-5f2e-4a70-a40e-fbab1e624135",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d295889-5d81-47e4-95d5-d1bf091301bd"
        },
        "item": {
          "id": "40889947-2f27-4788-b2c7-f781c24156db",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "859a1d1a-1335-43be-870a-ac775cd86f71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 478,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8495f44-fa10-48c9-ba99-8d5e48d2aaf4",
        "cursor": {
          "ref": "12519359-d81e-44ba-9608-1fa03e8fdb80",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85b745b7-0612-43a1-99a8-7c90637be586"
        },
        "item": {
          "id": "c8495f44-fa10-48c9-ba99-8d5e48d2aaf4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c47f2ee4-0541-4bfa-8269-3b59892c6192",
          "status": "Created",
          "code": 201,
          "responseTime": 3846,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "4533e6e0-b0a7-4345-bd4b-ec70bfa291a4",
        "cursor": {
          "ref": "3970da59-3b34-4aa2-a6fd-e96a4a55403c",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d017c786-8215-4f6e-a7fc-c1f70b5c36eb"
        },
        "item": {
          "id": "4533e6e0-b0a7-4345-bd4b-ec70bfa291a4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "28e2d696-8577-4a60-91b8-40c06f17229d",
          "status": "Created",
          "code": 201,
          "responseTime": 4238,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "27783e96-7524-4f1c-8d32-e9fe35cc1039",
        "cursor": {
          "ref": "7ffb1a66-afc4-4779-9ad6-6baa64bac8bb",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "93b07a15-a627-4bd4-b1fb-740b51e5be81"
        },
        "item": {
          "id": "27783e96-7524-4f1c-8d32-e9fe35cc1039",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c866fd8f-9ce3-4c79-8c71-a74a5fafbdc0",
          "status": "Created",
          "code": 201,
          "responseTime": 6422,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "5a55ce59-8e21-4e5a-ae8a-02972f7aceea",
        "cursor": {
          "ref": "aecb4121-4b3f-40dd-a235-06241330b9cf",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7b892349-980e-41a7-83ff-2a8aee5bfcc6"
        },
        "item": {
          "id": "5a55ce59-8e21-4e5a-ae8a-02972f7aceea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e4214f13-4668-4dfe-b095-5777d3a43c60",
          "status": "Created",
          "code": 201,
          "responseTime": 9573,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "bc3c93ce-646d-47bf-8810-380ac448954d",
        "cursor": {
          "ref": "5b6d074d-6491-4aa6-a8bd-52155ba26eae",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0cc2ee3-3092-4f1e-bb46-4c22825a6a94"
        },
        "item": {
          "id": "bc3c93ce-646d-47bf-8810-380ac448954d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f277d5a5-1d49-43e0-9613-d1b25984d2c0",
          "status": "Created",
          "code": 201,
          "responseTime": 5856,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "369f18e8-0e2f-4e9b-aa40-6b81c8fe9ff0",
        "cursor": {
          "ref": "db39b254-1a91-49d8-8d0d-45e5b79be20b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9014c8be-7c84-4009-9bcf-74f752986707"
        },
        "item": {
          "id": "369f18e8-0e2f-4e9b-aa40-6b81c8fe9ff0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60864b36-95c9-4410-bc18-bfa568419221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f18e8-0e2f-4e9b-aa40-6b81c8fe9ff0",
        "cursor": {
          "ref": "db39b254-1a91-49d8-8d0d-45e5b79be20b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9014c8be-7c84-4009-9bcf-74f752986707"
        },
        "item": {
          "id": "369f18e8-0e2f-4e9b-aa40-6b81c8fe9ff0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60864b36-95c9-4410-bc18-bfa568419221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804b1349-3559-411a-86c7-81eba233d119",
        "cursor": {
          "ref": "41130cfd-2d9f-45d4-ab16-3eb97e8b5743",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "88673438-114f-4098-b0d2-6bdbea7d934e"
        },
        "item": {
          "id": "804b1349-3559-411a-86c7-81eba233d119",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81b4ab74-41de-49ed-b5f9-880dd06bba42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b869c7e-012a-40b4-b3e7-94c625ace7e3",
        "cursor": {
          "ref": "01805d01-5517-4a8a-be59-37b364a775dd",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7860e194-f389-46da-a96e-f8c4e4e41a3c"
        },
        "item": {
          "id": "1b869c7e-012a-40b4-b3e7-94c625ace7e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fed3d764-cf86-43d3-809f-d53e120b5369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ead30c-e4e0-4fe1-b486-a777465d8216",
        "cursor": {
          "ref": "fbc32226-736d-48f7-8756-08e66e41184b",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33613ed7-86c6-464b-adda-fc115a8ac4ae"
        },
        "item": {
          "id": "91ead30c-e4e0-4fe1-b486-a777465d8216",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df4249a2-4062-4f27-b13a-f6760eb14510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a2e80b-5dee-4cfb-99d9-cc3f56481ccf",
        "cursor": {
          "ref": "a922b060-40fa-4446-9b14-ab6fdd6ccd3d",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5d9b3871-48c6-493c-8fbe-a659f6196b09"
        },
        "item": {
          "id": "05a2e80b-5dee-4cfb-99d9-cc3f56481ccf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "32afe2a8-7510-44f8-b70e-3b3046cc8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f502ae33-9c8c-4883-af72-4d8d34c7e81b",
        "cursor": {
          "ref": "61244c7b-5362-4023-9eec-ef810fc6fb26",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "60f16a95-f15c-4e13-b970-77e9a323c388"
        },
        "item": {
          "id": "f502ae33-9c8c-4883-af72-4d8d34c7e81b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aab2a21e-78e8-478e-808c-b21630eb65b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc05122-1f6e-479e-8748-ec88aa279b9a",
        "cursor": {
          "ref": "6539dede-e9cb-4456-9ef3-e04bb6f90023",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d7e45566-a534-407e-b635-ae8697d3581b"
        },
        "item": {
          "id": "7dc05122-1f6e-479e-8748-ec88aa279b9a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83324be4-7ddc-484c-b0c8-682276829e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aec568-2f64-442f-9b2d-aca0c65cf2f6",
        "cursor": {
          "ref": "1cf49b92-edd7-4577-89e6-c056c1bd0fba",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7481e572-1da5-4e99-a858-e6bf6fac4c13"
        },
        "item": {
          "id": "f4aec568-2f64-442f-9b2d-aca0c65cf2f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "da652e74-7663-4ce3-8a45-071ffc7db536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406ba4de-74d3-426d-ae67-37b106f253ed",
        "cursor": {
          "ref": "651b9f34-7410-4eae-a989-e23fbb6f6524",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "964e0884-fbb3-42bf-9a96-670dc14cc8b0"
        },
        "item": {
          "id": "406ba4de-74d3-426d-ae67-37b106f253ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "49cf031d-99fb-46f8-bd67-9469138fc884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a82518-212a-4604-8dc9-2f0a3e8adb84",
        "cursor": {
          "ref": "cbc060d7-027d-455c-88c0-0b7cc0f18344",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4461300f-7bf2-43a8-8635-90ac179efc2f"
        },
        "item": {
          "id": "81a82518-212a-4604-8dc9-2f0a3e8adb84",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c7657c0c-340f-47e0-ab73-c298a8f470b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8592f-7f39-4f11-8fba-87d2b13e175a",
        "cursor": {
          "ref": "a45f9e92-88c0-4799-8451-597c8b64571f",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "38472c2e-eeb4-4865-a83c-da70ab319d5d"
        },
        "item": {
          "id": "84c8592f-7f39-4f11-8fba-87d2b13e175a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbc4315a-1edb-436c-82c3-5c9891db2d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7674ea9a-a433-4f82-b879-8a36916ec4ee",
        "cursor": {
          "ref": "7b299495-2b0f-4955-8c22-f2d8b5ad609e",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d081e0b2-abd1-4574-ba6f-14e04053e41c"
        },
        "item": {
          "id": "7674ea9a-a433-4f82-b879-8a36916ec4ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fc214200-cbcc-4e2d-b2a7-38d9d3f4fbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f804af7-42d3-4a27-95bf-c1b7a7b0c5d2",
        "cursor": {
          "ref": "9743998a-bac4-417f-a2e6-d467911bc272",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0b26c845-f320-409a-bafc-285e30c3fa91"
        },
        "item": {
          "id": "3f804af7-42d3-4a27-95bf-c1b7a7b0c5d2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49121a4d-66c6-4d6a-b150-0dbbe236ffa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f80c33-a48f-4003-a2d6-1964529f2fca",
        "cursor": {
          "ref": "0a7b7cfd-9c25-477c-a258-0958ea5d4d59",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2108a0f7-2a88-49f6-ad9c-cd9b3d9a8b2e"
        },
        "item": {
          "id": "b1f80c33-a48f-4003-a2d6-1964529f2fca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc234d98-e21b-4ca8-a45e-893b122dac42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6009124-433e-4e0d-a9c0-87c53f0018c5",
        "cursor": {
          "ref": "641fa638-3571-484f-bb0e-29b5b15a6c6a",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f8b3440d-5204-49ae-b388-441e32ea7587"
        },
        "item": {
          "id": "e6009124-433e-4e0d-a9c0-87c53f0018c5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3d3c4032-04a4-4b32-b013-03993fe60bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f64b9a-a008-4723-a16f-8eb2ed839170",
        "cursor": {
          "ref": "ec9d145d-22b1-4623-a86c-00f7977c771a",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1fdc8887-3f68-4458-a9a5-f891dcb19ac7"
        },
        "item": {
          "id": "b5f64b9a-a008-4723-a16f-8eb2ed839170",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0073ca12-0f12-40d6-9fea-92489e495895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54e34e-e79f-460e-bc34-c4bad4a26d84",
        "cursor": {
          "ref": "69499d4b-a8fc-4f83-9546-ebd468a6474a",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55fec427-7cb1-47f5-ac91-08e49364d01b"
        },
        "item": {
          "id": "ad54e34e-e79f-460e-bc34-c4bad4a26d84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b909e595-1a5a-4503-8b96-377f0ceec0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e538e2a3-d17d-4993-b4cc-40c0b3cc08bc",
        "cursor": {
          "ref": "f8067804-7306-42d6-81df-586360d48053",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8bc368ce-d8fd-4c06-aea6-ffa4967f4f76"
        },
        "item": {
          "id": "e538e2a3-d17d-4993-b4cc-40c0b3cc08bc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2558e71a-cb21-4c04-83d6-22bc87e5c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2643b8-90fb-4661-adb8-bcc78196e998",
        "cursor": {
          "ref": "1ba17ead-aa15-4983-8def-a334c55a8623",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0ffa42c-ebfb-480a-b8f5-4685d939a379"
        },
        "item": {
          "id": "9c2643b8-90fb-4661-adb8-bcc78196e998",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8e388bd-819a-4cfd-a12e-fd78dd57f6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffc3ad1-0aa4-4bbb-9779-024fe1e65975",
        "cursor": {
          "ref": "0c5e972a-bfaa-44d7-b8f2-25393bc6636e",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "82e12221-1998-4ec7-a1e8-4da154e1729c"
        },
        "item": {
          "id": "dffc3ad1-0aa4-4bbb-9779-024fe1e65975",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0273e803-c7bb-4c63-a106-65124d9075f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625e5aab-0dc2-4dd8-988d-fb74564fd4c4",
        "cursor": {
          "ref": "0c906608-d458-48f5-9d91-2c0b8a205a5a",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c16f4977-00ab-4a8e-a716-3cc3eddf8b0f"
        },
        "item": {
          "id": "625e5aab-0dc2-4dd8-988d-fb74564fd4c4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef88f7fd-1e23-4d3f-a632-e58dc28df9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462bacb9-aaff-4300-a9d2-c1197b36aa5e",
        "cursor": {
          "ref": "9c54169d-6e1d-4671-b59d-60a6ba1f05ef",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5e1147fa-d220-4d2e-aacd-3d64780c1eb4"
        },
        "item": {
          "id": "462bacb9-aaff-4300-a9d2-c1197b36aa5e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c77cb7b9-f626-4624-86ab-981aa4dc8495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa6cb66-2ede-4182-ad7c-54b5c183acdc",
        "cursor": {
          "ref": "e18eebd8-baa3-4563-b12d-4bf589baff48",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a493c96f-bf32-42f2-8037-c313843a4ad7"
        },
        "item": {
          "id": "9fa6cb66-2ede-4182-ad7c-54b5c183acdc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d6a4fe96-6b90-471e-adf5-225ed987dd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031b68f-52d6-4f15-a8f3-f46dee43d211",
        "cursor": {
          "ref": "463c69bd-ec16-4b01-b66f-c4dfc3e0821c",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9c25ef9f-4adc-4b96-aa7d-9563c6908e5f"
        },
        "item": {
          "id": "6031b68f-52d6-4f15-a8f3-f46dee43d211",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a392f19-9479-4671-9ce8-a8d81475577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efad47ff-a042-41e5-b04a-c28a61b4bc87",
        "cursor": {
          "ref": "649e370f-297d-4284-afad-75dc147643ed",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "82a0fd90-746e-4210-8182-04e105d9e4ba"
        },
        "item": {
          "id": "efad47ff-a042-41e5-b04a-c28a61b4bc87",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b057b42-4eec-4027-b463-bdc6970417ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b76864-df03-46db-845a-3f8f1dc43f58",
        "cursor": {
          "ref": "735bea3a-bc7f-4111-a759-9b2b761a278f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e88f0cdf-e250-4ab8-bc98-bad5afc114dc"
        },
        "item": {
          "id": "20b76864-df03-46db-845a-3f8f1dc43f58",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "35880fdf-70d4-4964-8a64-9f4c1e136bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d711399-a801-46a5-b601-20ce53aaaa7b",
        "cursor": {
          "ref": "222a31d6-99ad-480d-bbba-9eea689e182f",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1f446b75-3684-44b9-8d88-1fa444930f16"
        },
        "item": {
          "id": "7d711399-a801-46a5-b601-20ce53aaaa7b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0db48d00-18c0-4938-899b-87f209140c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05176bf3-482f-4d7e-a9c8-3e0b6ca54fd0",
        "cursor": {
          "ref": "aa9fef9f-351f-425d-9a9a-80dae4923b92",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb84b814-bb43-4b87-ad65-7bed75c2be4d"
        },
        "item": {
          "id": "05176bf3-482f-4d7e-a9c8-3e0b6ca54fd0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69a1830e-c6b7-4977-aba4-38486a055c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0526d865-f6ac-435f-ad01-48fe7c82fd87",
        "cursor": {
          "ref": "10b8fa72-da7f-4b5b-afad-fa82c2a7350b",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64f4e7bf-bf74-4f6d-85ca-310cb5286539"
        },
        "item": {
          "id": "0526d865-f6ac-435f-ad01-48fe7c82fd87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aad529f3-479c-490d-a13a-b7f625bc0cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77a55a5-9c37-47d3-a2d0-3db810de6461",
        "cursor": {
          "ref": "a0324437-7c49-47a8-8725-caa649ad6756",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c7f9806b-32d3-4936-bb1d-5d5150fcd88c"
        },
        "item": {
          "id": "d77a55a5-9c37-47d3-a2d0-3db810de6461",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4aaeb995-b889-4b0b-81a4-699855b0b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16efa0ac-c2d3-48e2-9742-11f137c9f9f9",
        "cursor": {
          "ref": "6fc3ff7f-d3a9-40eb-ba07-05198e86be84",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c0f34f2-e8b7-43a8-ad96-f2abd45757f1"
        },
        "item": {
          "id": "16efa0ac-c2d3-48e2-9742-11f137c9f9f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ce06d42-0188-4b81-960a-3c8e8c2387b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d060e59-6933-47a3-8846-834d838ef040",
        "cursor": {
          "ref": "b196ce19-166f-47df-8e53-61e45672b54b",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c2f9864b-bd1b-489b-804f-397eb0f8b5a2"
        },
        "item": {
          "id": "5d060e59-6933-47a3-8846-834d838ef040",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "820dc6ac-5530-45be-be34-47c6907345d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1a08a0-1ab2-44e2-bc6d-7f262a06fa6f",
        "cursor": {
          "ref": "b38e5db5-7ea4-491d-a673-ef795f7982f9",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4cc9f358-517c-43ea-a17b-e5a0e3698a6f"
        },
        "item": {
          "id": "9a1a08a0-1ab2-44e2-bc6d-7f262a06fa6f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "48e0e8a5-8611-4a9f-bcb3-5df3965d2841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394fce80-9280-4256-b26f-85bfa98446a6",
        "cursor": {
          "ref": "5eafc12b-c7a7-4553-925a-b72b789e6f85",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5ffdecb-a7f3-46de-867d-f17bfbc65c26"
        },
        "item": {
          "id": "394fce80-9280-4256-b26f-85bfa98446a6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9b37c684-3641-4ae0-8ab3-59fc272b0d78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bc0631-66cd-45fa-8929-d6384280082c",
        "cursor": {
          "ref": "aa45beb7-bc55-4684-a89e-0e5ecca1d2dc",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d819dbda-1265-4b37-a546-5a58387f3728"
        },
        "item": {
          "id": "e8bc0631-66cd-45fa-8929-d6384280082c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d36d19a1-00b1-4852-b6b3-27dceeefc47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bc0631-66cd-45fa-8929-d6384280082c",
        "cursor": {
          "ref": "aa45beb7-bc55-4684-a89e-0e5ecca1d2dc",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d819dbda-1265-4b37-a546-5a58387f3728"
        },
        "item": {
          "id": "e8bc0631-66cd-45fa-8929-d6384280082c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d36d19a1-00b1-4852-b6b3-27dceeefc47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f8b0f6-1c75-4302-8a5d-cc4eab2ef44d",
        "cursor": {
          "ref": "6cd6e5c5-b0c3-4076-a688-ba694270c7ad",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b9775912-2eb3-459e-b451-f2b7531481fe"
        },
        "item": {
          "id": "b4f8b0f6-1c75-4302-8a5d-cc4eab2ef44d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5c0b1842-2f4f-409a-843b-66202dd88c2d",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "3bb584d9-bec7-4032-9451-52f87670baf1",
        "cursor": {
          "ref": "8286262b-b9cf-40d2-9736-cbbfdc486388",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8ebff185-ef91-4ce8-a880-cfbff4e860e9"
        },
        "item": {
          "id": "3bb584d9-bec7-4032-9451-52f87670baf1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d8c27f4a-a7aa-4c4a-8487-35c8f1286ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a066bdd-7c18-4fc9-ad26-e746182d40e0",
        "cursor": {
          "ref": "f7217386-12c0-4190-bab1-eebd22193bb0",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ae49b3a-2794-45a5-963d-e8dd9147e325"
        },
        "item": {
          "id": "9a066bdd-7c18-4fc9-ad26-e746182d40e0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e802ac1a-e8f5-419e-8b47-d48ea775a50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feaea7f-8b68-48d7-893d-9523059d5f69",
        "cursor": {
          "ref": "0824657c-269b-43be-a5b9-b289d1d75769",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b0428eb8-2dc3-48b1-82b0-859374b447f7"
        },
        "item": {
          "id": "8feaea7f-8b68-48d7-893d-9523059d5f69",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "558061ef-81aa-431f-a9a3-7919f630a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef48b46-bfff-49bf-af84-66764fc96cbf",
        "cursor": {
          "ref": "73521141-f491-4982-a26b-73684c721133",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f6111b5a-42a3-4d12-bd17-e9116886f9cc"
        },
        "item": {
          "id": "7ef48b46-bfff-49bf-af84-66764fc96cbf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "41344b04-c103-4aa0-940f-6f0b1f403096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb573c-e31b-45d4-be61-dc1e21d08f87",
        "cursor": {
          "ref": "377916bf-55d1-486d-b0c8-a000206392db",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb6b343a-2d3b-42be-853b-5d0bcc39d057"
        },
        "item": {
          "id": "deeb573c-e31b-45d4-be61-dc1e21d08f87",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9f4a736d-84a4-46a6-b4aa-9811ab8e6b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24376da9-066e-4e9d-8bcb-3e21df8bfa1a",
        "cursor": {
          "ref": "46b5be4a-9d57-4660-9589-b99258cba799",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cae5cb96-bc91-4d79-b332-cbc8406fa3d2"
        },
        "item": {
          "id": "24376da9-066e-4e9d-8bcb-3e21df8bfa1a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3fe56abd-b07e-4b3e-be43-bf187114919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab36279-3e88-4734-9692-bd24d88cd7ea",
        "cursor": {
          "ref": "974d3128-293a-457a-b284-4477a6fc26e3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "201793fc-2a54-433a-a300-c4f7e314f6e3"
        },
        "item": {
          "id": "cab36279-3e88-4734-9692-bd24d88cd7ea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f337cf1-d554-4f7e-9f3f-7de9d348834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be37b4b-50b9-4254-97ec-967c014807fb",
        "cursor": {
          "ref": "e7eb46b3-b917-4c9a-9084-b07f99247ea4",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "650afe25-3219-47ea-90fa-9a33b13a4557"
        },
        "item": {
          "id": "5be37b4b-50b9-4254-97ec-967c014807fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7610227c-a467-4c5f-a1d6-2fba23b779d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed6bac-cddd-4326-a3d2-3ca47612daa6",
        "cursor": {
          "ref": "0e54f3cf-5c9f-407e-835f-1b8972b95f17",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e8fe44ad-81e9-4d5e-89a7-60098de14938"
        },
        "item": {
          "id": "21ed6bac-cddd-4326-a3d2-3ca47612daa6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3e98f91f-fc0d-4dfb-a568-471461c87317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d7fe9-c40c-43d0-ac28-65a8082e6b80",
        "cursor": {
          "ref": "437df148-e015-421d-8a7a-926d834624ca",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8309099f-4d0b-4fdb-b9dc-130d96427bcc"
        },
        "item": {
          "id": "b87d7fe9-c40c-43d0-ac28-65a8082e6b80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31ca6645-9e8d-4d7c-a8fe-ef528b3aa1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609a2d0b-5348-4817-8b4d-0c23b7a4e870",
        "cursor": {
          "ref": "626a413b-229f-4227-859b-90104469afee",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c31d3587-2ec8-4f20-b6bf-7fbb2d84f5a5"
        },
        "item": {
          "id": "609a2d0b-5348-4817-8b4d-0c23b7a4e870",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bfd9548a-378e-41b2-bb51-8f4cffc34cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360cbc26-6bf4-47f7-acd2-1d48c336d4be",
        "cursor": {
          "ref": "79f980c3-4386-4ad3-aa56-66878c4c7ef0",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3c792c9f-5de9-4e07-8869-e3c5ebdc0c99"
        },
        "item": {
          "id": "360cbc26-6bf4-47f7-acd2-1d48c336d4be",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "baee3a89-b412-4906-97b9-7a50f22f534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27adb2d5-7d28-4e79-9dcf-00b4a076492a",
        "cursor": {
          "ref": "18163e6d-52b9-476a-a17c-2f6a6ada28ae",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5daa0ad-b83e-47a2-a936-c572a2515aef"
        },
        "item": {
          "id": "27adb2d5-7d28-4e79-9dcf-00b4a076492a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "deb3fd59-4a20-44ed-b5f0-f1dd8f69b793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aa2629-0e76-47c6-bb0a-7287398e7f23",
        "cursor": {
          "ref": "798087d7-6364-40b6-b3c8-9f29a9ff50b0",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "de94459b-3503-4930-bf52-41632816eb9b"
        },
        "item": {
          "id": "86aa2629-0e76-47c6-bb0a-7287398e7f23",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "300c3951-11a2-44b1-af4c-624985655367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e833effb-8b5f-49ac-9831-03bed5e02c81",
        "cursor": {
          "ref": "9c5c9be9-0429-4059-90c8-ba082d0eb791",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "152cfc33-c8bc-4e3b-b307-ddf50fb6e9ce"
        },
        "item": {
          "id": "e833effb-8b5f-49ac-9831-03bed5e02c81",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f770c44e-7637-475e-b0b0-2577990aa683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9dbcb5-5ee7-495a-8a25-5414cb4d1ae4",
        "cursor": {
          "ref": "ebb1b45d-61cc-4158-8799-09b6b44db2be",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b6d041f4-1672-470a-b64a-ad081f3716ca"
        },
        "item": {
          "id": "2e9dbcb5-5ee7-495a-8a25-5414cb4d1ae4",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "2b3b3a09-ab68-4f2c-b41e-5e885d775558",
          "status": "OK",
          "code": 200,
          "responseTime": 1878,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "abcf6237-8608-45d6-a7a1-ff533b20a7ba",
        "cursor": {
          "ref": "a11f26d5-7be1-4f04-a639-75be2c4dd5d2",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef12e4ec-ec8d-4eac-ad61-a4a2fd1fb4df"
        },
        "item": {
          "id": "abcf6237-8608-45d6-a7a1-ff533b20a7ba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fb719411-25ad-4074-850c-9bdd37871231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05a776e-8d8d-4e23-8ece-6ff064c658c2",
        "cursor": {
          "ref": "6347db6c-5202-4508-8890-bd431bd44b29",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b8c5c567-28d0-40cc-82c6-dc904a4891b5"
        },
        "item": {
          "id": "c05a776e-8d8d-4e23-8ece-6ff064c658c2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ff59da25-0b06-4406-b53e-0db1d7bb4abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79920f72-59c6-42f0-bf2d-8057986f4d21",
        "cursor": {
          "ref": "e4df888a-d2bb-474f-b21d-8def9c789b6c",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ca30d762-9af0-41b0-b207-a7a0043e8a1f"
        },
        "item": {
          "id": "79920f72-59c6-42f0-bf2d-8057986f4d21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e3a2c7f9-8210-49f1-9e9d-5f5e575d4266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f15673-a15f-469c-bc24-ece063f573d5",
        "cursor": {
          "ref": "e4a797fb-a084-49c6-b6b3-a5c6da6f312a",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9b534959-1f83-48b6-8859-2cae74807faf"
        },
        "item": {
          "id": "a7f15673-a15f-469c-bc24-ece063f573d5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "359c2e0e-3671-41db-bbe1-e39f2f0e3306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70537e14-7acf-4e40-82a7-fb9615314b54",
        "cursor": {
          "ref": "c55dcd2b-748a-43eb-9147-7936b042c9cb",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d55d7b32-5f32-450b-b476-0e54583feafd"
        },
        "item": {
          "id": "70537e14-7acf-4e40-82a7-fb9615314b54",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "253f639f-5982-4f42-a2b3-edd59a2cf2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd9a67c-c2ed-41c4-9712-75198dddec78",
        "cursor": {
          "ref": "66befcd6-6a4a-44bb-85b8-03dfe7838877",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "58ecf6a6-f6be-4164-ad5f-e92008385edf"
        },
        "item": {
          "id": "bfd9a67c-c2ed-41c4-9712-75198dddec78",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1267578a-ecc1-450a-835f-432251f9c985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53031a9-25a8-4846-8f1a-ebb4894d7c86",
        "cursor": {
          "ref": "1fd44b55-40fe-44c7-978a-ef17fcf95527",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "788f9612-113b-4254-974b-51bf0e14847b"
        },
        "item": {
          "id": "d53031a9-25a8-4846-8f1a-ebb4894d7c86",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba03636c-7766-430c-93d8-195cb4587681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56be4616-2a6a-414d-8a3a-9478a7c5ec40",
        "cursor": {
          "ref": "48f5d82d-5451-4b69-ac6d-64d1e4dcfff1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c4ace0f4-f612-491d-b496-d054217982a4"
        },
        "item": {
          "id": "56be4616-2a6a-414d-8a3a-9478a7c5ec40",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ea3fa73e-ab37-4827-993e-1b846b5f16a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f54f54-c4fc-420f-8ff5-affa58499d18",
        "cursor": {
          "ref": "c6750c79-47b1-48e4-887b-499643f35e00",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1f276574-3236-4e95-a103-6c745cffbc1b"
        },
        "item": {
          "id": "18f54f54-c4fc-420f-8ff5-affa58499d18",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "534e023a-0f7a-4f93-ba4d-e4ab0d8220b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf43a52e-9fae-4305-b40a-a37023e5783d",
        "cursor": {
          "ref": "c044d06d-4911-4dce-ab74-593f4ae3be4d",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "30a5494d-bafd-413c-b16c-ed01ad50082c"
        },
        "item": {
          "id": "cf43a52e-9fae-4305-b40a-a37023e5783d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4e9c8979-8a09-481e-a820-02d3dcb74e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a04bb4-d904-4469-a4f6-af135e63dff8",
        "cursor": {
          "ref": "e26f126b-0807-41f1-a344-b9eab7e83877",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "54b87afe-e57b-40e3-be16-a5a544c537a7"
        },
        "item": {
          "id": "49a04bb4-d904-4469-a4f6-af135e63dff8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a189c0f2-b186-4e27-ab5f-a79295109803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564860b0-57ce-44d6-bfb3-2ef156872873",
        "cursor": {
          "ref": "3f384807-5933-4f2f-b25b-257e703e3a23",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "34bb61a4-fc77-423c-aec8-be9a9b363438"
        },
        "item": {
          "id": "564860b0-57ce-44d6-bfb3-2ef156872873",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "34f246e6-38b2-4c1b-8406-97d3a0ae3b81",
          "status": "OK",
          "code": 200,
          "responseTime": 303,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "163d95d5-f4de-4fe7-8b0e-6c99683638e9",
        "cursor": {
          "ref": "4efd06b3-a7a2-4ecf-9c61-c25f8bca854c",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5bed5626-88e7-45e3-839c-dd3d39be6bfe"
        },
        "item": {
          "id": "163d95d5-f4de-4fe7-8b0e-6c99683638e9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ad89e09f-8956-4ee7-8876-7135d738fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedeee7b-4568-46ac-b3f7-f144a8f8c08d",
        "cursor": {
          "ref": "43a745b0-ac37-4837-96f7-ce64b7a94e77",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fde86146-9207-4e4f-ba18-f528974d6e06"
        },
        "item": {
          "id": "aedeee7b-4568-46ac-b3f7-f144a8f8c08d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "14f954ff-4184-48d2-b880-17c976f2dbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef822346-25a3-4893-825c-a357f1a6a877",
        "cursor": {
          "ref": "b0faeed9-6dfb-48d5-bdcd-d209065a4a2f",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d37ce27-b34b-47e5-9030-130c0dbb2763"
        },
        "item": {
          "id": "ef822346-25a3-4893-825c-a357f1a6a877",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5c021c9f-0f08-4cc1-a202-7929d05092a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1715e8b6-71e0-4353-8758-e0bba16b6acf",
        "cursor": {
          "ref": "884a5ed3-d9f9-404f-8a1f-28dea44a92c9",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fde6bdaf-6f59-47e4-a078-b810d736e6b8"
        },
        "item": {
          "id": "1715e8b6-71e0-4353-8758-e0bba16b6acf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "15191db4-4d4e-4ab4-853b-6442991afd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8735423-1dac-4e57-8e37-3343d1c12229",
        "cursor": {
          "ref": "04167016-cdaa-463e-a562-c1d93ec22c76",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "44b6d8d6-57f7-45d5-98a6-5b6f4f8ca315"
        },
        "item": {
          "id": "e8735423-1dac-4e57-8e37-3343d1c12229",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20a8d29b-18d7-450e-ab74-3da8c429d541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d41feb4-c482-48c6-bfe8-bf4614a3870d",
        "cursor": {
          "ref": "0e63480c-0366-47a4-9b6c-5697bc1d1ddb",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e05790f-5096-4aa4-9c15-fa61d224bc2e"
        },
        "item": {
          "id": "6d41feb4-c482-48c6-bfe8-bf4614a3870d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "19567817-d863-428c-b1ed-6b557bbd711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f600e7-00fb-4124-865f-a6912e47328d",
        "cursor": {
          "ref": "bfb0a5b3-014e-40a6-bef4-9c77d5791cd7",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b4a6d16e-9bc0-475d-8bcc-35654941c39b"
        },
        "item": {
          "id": "82f600e7-00fb-4124-865f-a6912e47328d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "701a89fa-38e9-4ffb-94cc-22b37f350681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8eba09-c45d-4b9a-af56-d17c09b4ed27",
        "cursor": {
          "ref": "4fbce2b8-4c70-4184-bc41-a4e16cf6dad5",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cbfffe62-7382-4639-8a18-dd0e26df23e5"
        },
        "item": {
          "id": "7c8eba09-c45d-4b9a-af56-d17c09b4ed27",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "af8f4a04-072d-4625-aeb7-45b94acd17c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ce0fc2-1e92-47e6-9f45-1f75a56c6e32",
        "cursor": {
          "ref": "be3e9649-fc3a-44fb-9da9-d28e95f652a2",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5ff1a321-32d5-4511-9ad9-f2f08455ec13"
        },
        "item": {
          "id": "66ce0fc2-1e92-47e6-9f45-1f75a56c6e32",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8f7cd0ba-1ee3-4357-8afa-78bb9f355e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394be72-5b68-445c-929e-c6bf928a7b4a",
        "cursor": {
          "ref": "b7acb7bd-c219-4a6e-b80a-354a2407f5df",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a9012ad-f34f-4ac4-95c0-1efc814e747d"
        },
        "item": {
          "id": "0394be72-5b68-445c-929e-c6bf928a7b4a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "66b4a181-e044-41f3-85c3-e4fca2b7ae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f0ec68-887b-4b62-aca5-91c3870e6d9e",
        "cursor": {
          "ref": "23abb608-4483-4a0b-a2ad-08df9461d86d",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "741e6856-7301-49c4-b5ec-d9f5d0ddb8f7"
        },
        "item": {
          "id": "b2f0ec68-887b-4b62-aca5-91c3870e6d9e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af251438-e81f-4249-95d6-7e60c2f9c836",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "41437437-3114-4ce9-9c60-542d6aed647e",
        "cursor": {
          "ref": "598652dd-d2f4-4229-9ead-173aa17e2e6b",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7de1ba72-241a-4f28-b251-27831063b3c2"
        },
        "item": {
          "id": "41437437-3114-4ce9-9c60-542d6aed647e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6dc5335d-598e-4d9c-982a-b50a60aebe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69273a6-bec0-4d6e-89c3-4b091b5e0588",
        "cursor": {
          "ref": "c83ecc34-efce-4576-a2dd-63f640074169",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ee4ff01a-3534-47b5-b9bf-9fdc63cd9164"
        },
        "item": {
          "id": "d69273a6-bec0-4d6e-89c3-4b091b5e0588",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8c1de422-9ce0-477d-a942-be3c3cae8197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60f7866-26da-4aba-afaa-f47a6eab04c6",
        "cursor": {
          "ref": "45d5001b-10b4-4dde-b707-7059824854e3",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bedc3451-7530-47f0-9404-df640c0522d4"
        },
        "item": {
          "id": "c60f7866-26da-4aba-afaa-f47a6eab04c6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d7b8cbe0-ac0e-491b-9e8c-eb2565077d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dfd5b9-d313-41b6-8ecd-11245739ec4c",
        "cursor": {
          "ref": "c2685fa0-e02b-44b9-9cd6-13a169cdea6a",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "97d80b7b-e8ba-407f-bda1-ebe564f34c03"
        },
        "item": {
          "id": "21dfd5b9-d313-41b6-8ecd-11245739ec4c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "11741e89-7366-4c53-bb28-4b0e826370e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b421f69b-cb8e-4323-952d-6754ea12eb7a",
        "cursor": {
          "ref": "912bb077-a727-469c-b4e2-2a4b9b77ff34",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "092ab60a-e650-4775-b7c8-3ea01e48e507"
        },
        "item": {
          "id": "b421f69b-cb8e-4323-952d-6754ea12eb7a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1c07d16e-6686-4b08-bead-3499aea0aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe97f58-b5c5-4d31-a85d-1c756e741798",
        "cursor": {
          "ref": "3c124e0e-ce19-4179-8550-7cf0098d6b16",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7466dc09-fd5e-4158-bc4f-b7f0dfe39c9a"
        },
        "item": {
          "id": "2fe97f58-b5c5-4d31-a85d-1c756e741798",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "10a831d5-c447-424d-b825-157f4fc637b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ab273-6b1d-4753-83b3-9295aeb3bd9f",
        "cursor": {
          "ref": "7773ac59-5c3c-4cd1-9724-2f8912c283d6",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c7f34f0-2fcf-41fd-b878-1e7d91f6f615"
        },
        "item": {
          "id": "5f3ab273-6b1d-4753-83b3-9295aeb3bd9f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0d509430-1820-4502-952a-cac6473e9fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dcfb2d-4ad5-4895-885f-85ad0313674f",
        "cursor": {
          "ref": "92718401-c64c-47f7-a895-ede99c424731",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "371db401-0f6d-416f-b141-ce2530d6efab"
        },
        "item": {
          "id": "25dcfb2d-4ad5-4895-885f-85ad0313674f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "581ed6b7-12d5-40d1-8a7f-7a7fc4b6b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa84c8b-3933-4e41-85e5-0aeb730b3fcf",
        "cursor": {
          "ref": "ebd0b4d6-5271-4b7e-8221-73157da3356a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c160cec2-6061-4234-b7e5-3816e13c8471"
        },
        "item": {
          "id": "0fa84c8b-3933-4e41-85e5-0aeb730b3fcf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5f51f74e-960f-4b2a-b858-028394c76de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05b0614-c1bb-4ff5-893e-fcb4d7ee7a6d",
        "cursor": {
          "ref": "f83c2152-b05b-4a38-a6c6-4658f36d6626",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "55c6d454-6b2a-4c37-8a11-40ad1a9d028a"
        },
        "item": {
          "id": "d05b0614-c1bb-4ff5-893e-fcb4d7ee7a6d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f0d63cf2-b93d-4556-97b8-549ebcca509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6080f30-fed8-4b11-a6d5-7426ef8d6477",
        "cursor": {
          "ref": "5c38fc1c-93ba-4c3c-a48c-c8578fc6e938",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1794126f-ec6d-4072-8852-cf0f250e2ed7"
        },
        "item": {
          "id": "b6080f30-fed8-4b11-a6d5-7426ef8d6477",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "71db3a88-aa14-4358-9d4e-3108a05d87cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0df940-9078-4786-818e-bcaf6b70db36",
        "cursor": {
          "ref": "d09e866d-433a-46b4-9874-48c653e008a9",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "800114e3-95f3-48e8-8c4e-759d869525b1"
        },
        "item": {
          "id": "9d0df940-9078-4786-818e-bcaf6b70db36",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "617208f0-b812-468c-b824-680827a049ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29788f3-aa33-4cd9-b17d-eb94fed70566",
        "cursor": {
          "ref": "576c126e-9248-4e39-a815-9f6eb474bbfd",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8fea6f80-2e93-482f-a961-0d6b450434f4"
        },
        "item": {
          "id": "f29788f3-aa33-4cd9-b17d-eb94fed70566",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d577b772-d3e7-4cc0-8af0-2de8b42996dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6c7bb3-f29b-442e-a489-167e9ea4e20a",
        "cursor": {
          "ref": "d42ccd32-966c-4260-9d15-d9202915d041",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "85039cd0-a6ae-44bf-a79b-9c01f0199919"
        },
        "item": {
          "id": "fc6c7bb3-f29b-442e-a489-167e9ea4e20a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "34c52049-1b8d-4271-badb-790f45a6e1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09fb8ad-6507-42bb-87c7-f17cf3968183",
        "cursor": {
          "ref": "08e04a92-7f55-44ca-8b6d-6cb75efc3c8c",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb1cc477-733a-4b32-aa8a-ca1dd1383878"
        },
        "item": {
          "id": "e09fb8ad-6507-42bb-87c7-f17cf3968183",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2bc805bd-db8c-4e87-b09d-8bc0e77618fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85135396-b5bd-45a2-ab34-5ff5b95b1fd7",
        "cursor": {
          "ref": "e61fe426-b477-4791-9287-cd97f00ad3dc",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b85194b-43e2-427d-b1d0-247623086cf3"
        },
        "item": {
          "id": "85135396-b5bd-45a2-ab34-5ff5b95b1fd7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "32987e69-6706-4ac5-acfc-cfb9a1665668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671cff0c-d6e0-4766-8dec-9ea5d5c80653",
        "cursor": {
          "ref": "224c76aa-4920-475c-9aec-7eebfd8b2636",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b746499a-6c25-4b05-a52e-23b4ec7cd1b9"
        },
        "item": {
          "id": "671cff0c-d6e0-4766-8dec-9ea5d5c80653",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6cf30e9e-2473-409a-bb76-de5fa2359635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ddc916-4255-46e8-9dbd-c91e8c51f23c",
        "cursor": {
          "ref": "b329a9b8-dbb9-4ffa-9b4e-f06045065202",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "924944de-5e9e-4e95-9d42-fd8558209f40"
        },
        "item": {
          "id": "37ddc916-4255-46e8-9dbd-c91e8c51f23c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ac460925-f2c3-41ec-b4bf-adb2ab5032d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3f0ff-6313-451a-8ed3-50a67175a292",
        "cursor": {
          "ref": "c241f000-943f-4450-8d77-582cb7474aac",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a9e08ce3-3bc3-4f81-a12e-65fef2325966"
        },
        "item": {
          "id": "94a3f0ff-6313-451a-8ed3-50a67175a292",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ae2b4be3-c55a-436c-b820-b2f6952909c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc3424-b57d-40d7-adfe-4259139e5d51",
        "cursor": {
          "ref": "9db5683e-8eaf-444d-9e7b-efc91ba04c68",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "060139ac-775a-479a-b981-69630b03bedb"
        },
        "item": {
          "id": "3bfc3424-b57d-40d7-adfe-4259139e5d51",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d8f28c9f-d00b-4ebc-868b-6f1d076cf4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c6151-4b05-4fca-bbbd-376ca79f4971",
        "cursor": {
          "ref": "1aa895bb-238c-4dde-8d59-864ace1d4d1d",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a5572dc5-2275-422e-b4ff-fd1b9733ffcf"
        },
        "item": {
          "id": "3e2c6151-4b05-4fca-bbbd-376ca79f4971",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ba5b6c36-53b7-47cf-be4d-4943877f8084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aed238-ed59-49ae-8d64-a62cc04a2c34",
        "cursor": {
          "ref": "b3bf6450-3c30-4b03-ae34-2b9ffd77f014",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce0dbca5-77b8-4396-a1b7-628845326953"
        },
        "item": {
          "id": "73aed238-ed59-49ae-8d64-a62cc04a2c34",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "33fa89bd-787a-49d2-8bd6-573ad58328e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fda576-8779-4257-82ad-5a1fae95c2c0",
        "cursor": {
          "ref": "cb29de05-214c-4526-a93d-9b75355aff1b",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8efc823-3c80-448f-aff8-dc20c7212597"
        },
        "item": {
          "id": "97fda576-8779-4257-82ad-5a1fae95c2c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e80709a-90f7-4b24-9d1e-6021a9bf597f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7068a10f-2a36-48c4-bd92-803edbc1332b",
        "cursor": {
          "ref": "52ed422f-778d-4bd7-a0a6-c10483e7256f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "78697d80-8d3f-491e-85da-88ff5d2e34a7"
        },
        "item": {
          "id": "7068a10f-2a36-48c4-bd92-803edbc1332b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7588a8d9-1708-4e5d-a6d1-cda5cec1cb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48f51dc-c5be-442c-8e22-d8edbcd6e178",
        "cursor": {
          "ref": "7c90b6ac-4dfa-4786-b00a-8a8676afb6af",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac2a687a-09bc-4fd5-9ca4-215fc08bde34"
        },
        "item": {
          "id": "c48f51dc-c5be-442c-8e22-d8edbcd6e178",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7ec72203-93b1-4b0e-90a8-06dcf725475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b15a8e-8b3a-4242-9701-a4bc07949c27",
        "cursor": {
          "ref": "8435d10f-daa3-4bf8-8fae-b0f7b1bea017",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6990788f-3d80-4d9c-8017-2f8bd2b95337"
        },
        "item": {
          "id": "69b15a8e-8b3a-4242-9701-a4bc07949c27",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9d7e1283-7670-4c40-9258-21eef63f1cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17a88fd-35ed-481a-a62b-303a5df5d753",
        "cursor": {
          "ref": "8f7d3a38-19d8-4ec1-a7b4-ea821eb4ca2c",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "942761c6-acd7-4371-815c-f2f9b48e7585"
        },
        "item": {
          "id": "e17a88fd-35ed-481a-a62b-303a5df5d753",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "869f446f-f495-45b0-9d4d-cf12d8b1e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801a937-0b70-4e36-8734-f0ccb028176a",
        "cursor": {
          "ref": "e2a4a44b-8774-46de-a659-9b6ea00a533d",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "769cde84-d0c5-43a9-bc2b-ecf4ee032df9"
        },
        "item": {
          "id": "1801a937-0b70-4e36-8734-f0ccb028176a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5f71ba0a-b318-4346-83cb-b473dbbf06b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9148ceb1-0327-428d-bff8-1249e34d286b",
        "cursor": {
          "ref": "d5fe8149-eb17-45cc-9a54-1bb6263b088e",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f78b202-0ddc-479d-a64b-3c6df7d0ffee"
        },
        "item": {
          "id": "9148ceb1-0327-428d-bff8-1249e34d286b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d2e04466-5590-42b8-997a-aeb002f84a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec5b144-6f0b-4961-b832-fd4787a38234",
        "cursor": {
          "ref": "600ddcd9-23a8-49a5-ab38-1a12f63e42f9",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "37b01a6b-63d6-4ba6-a0ba-5401ff4e4008"
        },
        "item": {
          "id": "8ec5b144-6f0b-4961-b832-fd4787a38234",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "86aa4d02-77b6-4fb6-8d67-61327de2d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7a629-645a-40c3-a96b-c4dfa610c8dc",
        "cursor": {
          "ref": "9e373404-2018-48ff-a89d-595520998bf2",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "92ee71a6-8e54-47de-96e1-1c8fe3aaeef5"
        },
        "item": {
          "id": "02a7a629-645a-40c3-a96b-c4dfa610c8dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "703ae7ef-1c09-4a83-997f-ec04d0e043b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03b651e-2941-4cb4-9330-829d15d50239",
        "cursor": {
          "ref": "4f9e8a53-c864-4632-9300-f1538be26282",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3be81c90-ecbc-4cc8-a66b-08ec1af3a9e7"
        },
        "item": {
          "id": "b03b651e-2941-4cb4-9330-829d15d50239",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed1f534d-a689-42ea-a5b4-b8258a517704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000c94ee-9461-4f0a-87f5-5fa97eb2c2ef",
        "cursor": {
          "ref": "d54134e0-df5a-4843-a8bd-2cf920cb8ca4",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ec8413b0-5155-40fd-91e6-492e561b6198"
        },
        "item": {
          "id": "000c94ee-9461-4f0a-87f5-5fa97eb2c2ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d909a387-010a-4edd-bc1b-9ec8d9f08dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dab378-18f3-49f8-972a-ab15df880e3b",
        "cursor": {
          "ref": "1b66ce11-1723-4989-9280-c763661d9932",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "83892976-0858-444a-899b-65ef66a2fe38"
        },
        "item": {
          "id": "d4dab378-18f3-49f8-972a-ab15df880e3b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "afeaf829-fb15-4663-bffe-4cecf12a5a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7aa5f9-2bb3-4545-8936-f9741005e24e",
        "cursor": {
          "ref": "28ba1857-804c-4a3c-a1c5-73c9b0262215",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "648c76cb-3ce3-45ae-b844-47659e9ca90f"
        },
        "item": {
          "id": "0c7aa5f9-2bb3-4545-8936-f9741005e24e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3be7c967-29ea-4d9d-ad99-22ab6fdc659c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f720c2b-c89d-4ceb-a822-fbf5c5f6000a",
        "cursor": {
          "ref": "ee6ade0c-e936-49cb-be50-df9d94407277",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a86d374d-0886-4649-bf1c-eb5e4b209e74"
        },
        "item": {
          "id": "3f720c2b-c89d-4ceb-a822-fbf5c5f6000a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d165043b-cf23-42f9-8321-52bfaa90de98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bcfdf6-d661-4ff6-9312-7ad7611e481b",
        "cursor": {
          "ref": "afcc4453-67ad-4881-be66-f169d3742030",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9a20d1fb-a406-495c-bde8-0ebaa1963d14"
        },
        "item": {
          "id": "95bcfdf6-d661-4ff6-9312-7ad7611e481b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a277f7cb-4b06-4730-bf54-f47a47b1a8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506f02e0-0176-495b-b15b-d4be5b682ee9",
        "cursor": {
          "ref": "a84807d9-8e11-4454-89b7-40becc11cade",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9e254a00-dcc6-4993-9e56-6fce1a0b03b6"
        },
        "item": {
          "id": "506f02e0-0176-495b-b15b-d4be5b682ee9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb5150f6-7d64-42a1-b9fd-509071b49ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53849311-799b-459a-a936-c2e8b58bb3e5",
        "cursor": {
          "ref": "e8f8836a-e966-48e9-93e1-a9800f54b8b8",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c99d216f-2df6-4401-b018-7c1137449e55"
        },
        "item": {
          "id": "53849311-799b-459a-a936-c2e8b58bb3e5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "84ead27a-1032-4423-b31f-c170ad259b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2aef80-209f-452c-9dd3-ceeb650d7fa3",
        "cursor": {
          "ref": "60469715-5f64-4957-8bcc-43e8ed685c93",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "be178514-11e8-40bf-b36d-c4d49315cbfa"
        },
        "item": {
          "id": "5e2aef80-209f-452c-9dd3-ceeb650d7fa3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6e456847-3865-499c-b99d-673c56f5098f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b813f5-63f2-402a-890e-3c44faea5fdb",
        "cursor": {
          "ref": "7167b0c7-bcb3-4c60-80f7-f44acdd8e34b",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15fe982c-094b-43e9-9ce9-8b457a3f7926"
        },
        "item": {
          "id": "73b813f5-63f2-402a-890e-3c44faea5fdb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "75b35c2c-105d-4525-b507-0cf01dc0ad08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a7b638-8d93-44e0-a6be-82a3de88edc7",
        "cursor": {
          "ref": "6b42ba81-a9cd-4ff9-9ebb-aeba4801ea11",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "272b68f3-15ef-422d-ac98-4a2d8b516527"
        },
        "item": {
          "id": "e6a7b638-8d93-44e0-a6be-82a3de88edc7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b25a30ad-d80c-401a-b386-7568b3f6ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67412989-1004-4fda-a68a-70d495de4f18",
        "cursor": {
          "ref": "4473f192-f9c8-4b63-9c88-f9a2d10ccdc9",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e71840f7-fb69-4ecb-a797-ffaad3685271"
        },
        "item": {
          "id": "67412989-1004-4fda-a68a-70d495de4f18",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "149a1d26-3ae6-4e72-9050-08bbd004dbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b2f006-7a24-4c90-988e-a95f8720f296",
        "cursor": {
          "ref": "6120a314-aef4-4cdd-b25c-3f5c03ea45a5",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9736581d-298f-454c-b82a-9b5fbedd4e00"
        },
        "item": {
          "id": "12b2f006-7a24-4c90-988e-a95f8720f296",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "db66eaab-69e2-469c-8cbd-fe90ae24a052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c380a6df-c7eb-4aa9-8709-a1e7558f4ba8",
        "cursor": {
          "ref": "f61b8f7f-6d41-441f-8e7c-1b9193c9ee0c",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "edd2eea1-d022-4123-96bc-2695cd5381ae"
        },
        "item": {
          "id": "c380a6df-c7eb-4aa9-8709-a1e7558f4ba8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a6bee64-2ea5-4791-9e91-658d5c16b829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6cf1fe-ee9e-44c2-9bc8-33a8faca5f0f",
        "cursor": {
          "ref": "3722880b-747a-4a6b-b85e-15b6a0d40cd5",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b1dc17a0-66fd-4939-afb4-3b32c20dd5c1"
        },
        "item": {
          "id": "0d6cf1fe-ee9e-44c2-9bc8-33a8faca5f0f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ccd43025-f632-401d-aaae-677c2486c2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ba036e-39b6-4c9f-8a20-3743332c3453",
        "cursor": {
          "ref": "0f85e0ed-5a48-4c17-8132-3f965bf00528",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7ec43293-60ab-4643-a420-6712e3389228"
        },
        "item": {
          "id": "17ba036e-39b6-4c9f-8a20-3743332c3453",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5f6eea62-15de-469d-8b91-9e2e947e3f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b18c8c-a748-455a-a619-ad3e2741fecb",
        "cursor": {
          "ref": "119bcb83-3dbe-4ae4-9a2a-9e36edccbdd2",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "290c9042-668b-4f7f-a230-926dd0420a69"
        },
        "item": {
          "id": "a1b18c8c-a748-455a-a619-ad3e2741fecb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57de342e-256b-4407-810f-da22cb06fa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e340a1-f516-4545-b76f-654e1f71fe7d",
        "cursor": {
          "ref": "1089ba14-8eeb-4c22-a45d-0c76456bc0be",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "747404ff-b1bf-46ee-854d-b500d4cb59f8"
        },
        "item": {
          "id": "07e340a1-f516-4545-b76f-654e1f71fe7d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "142c2256-ce4e-483a-b6f9-ceabd665b639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f322308-a9fc-4f66-b7e1-292fc5b67a5f",
        "cursor": {
          "ref": "846276d3-a437-4d30-be77-3d7763d3e193",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9a7cdf74-d039-4fcd-924e-f04367ecd242"
        },
        "item": {
          "id": "2f322308-a9fc-4f66-b7e1-292fc5b67a5f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d5e75dc2-716d-4f94-b58e-5c272402988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c470b60-03c4-4b8e-8fb3-723363e870e3",
        "cursor": {
          "ref": "2b44c851-812b-4432-acd2-4f5a2a5924d5",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e3c6a62-113a-4d4b-88b6-0dd08ef8afb3"
        },
        "item": {
          "id": "7c470b60-03c4-4b8e-8fb3-723363e870e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b7d83d33-76af-4ccb-ab61-fb4f8cc97bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc956b44-60fc-41b2-a36e-860f2c14c04d",
        "cursor": {
          "ref": "aeb09b0d-3de0-4c32-841e-3140c328be85",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c15c0674-8f4f-4c81-8a22-8e59f7cd1fba"
        },
        "item": {
          "id": "bc956b44-60fc-41b2-a36e-860f2c14c04d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4e487795-0f5e-4e2a-a8ee-a0f46ef79183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb991ad-865d-4676-b9fc-1613bee6884d",
        "cursor": {
          "ref": "782361ca-d0bd-43dc-b451-82a854a28041",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d58e80a6-069e-4084-82a8-3b13598493c7"
        },
        "item": {
          "id": "3bb991ad-865d-4676-b9fc-1613bee6884d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "629be104-74f4-4bd9-920c-d5344747fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6992c4a9-e994-4e07-a546-352a4d4a1b86",
        "cursor": {
          "ref": "64ad6122-712c-407e-bfdd-a46214985aab",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5f0229ef-7e21-406f-a434-c2e688afb6e3"
        },
        "item": {
          "id": "6992c4a9-e994-4e07-a546-352a4d4a1b86",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7cb71a22-e476-460e-bb9e-6057da6eaa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300fd137-c258-4a87-bbe3-ecb6b1111cf0",
        "cursor": {
          "ref": "b54b7a54-5a9e-4a36-bee9-e2959c7f5355",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "391ff185-2e4e-4121-9f8f-d39499a0e93a"
        },
        "item": {
          "id": "300fd137-c258-4a87-bbe3-ecb6b1111cf0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "057cca66-e44a-4977-b0e7-3da79174c315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0057bc-df75-4548-9529-bc404210e7ec",
        "cursor": {
          "ref": "dca182ad-00d1-4b4c-a725-ef148a9341ed",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "77180c74-032b-4941-a0a2-aa225261e2b2"
        },
        "item": {
          "id": "dd0057bc-df75-4548-9529-bc404210e7ec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "304f8736-5e5d-4e5c-b1f9-dc5f4f7a3dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1053482-7bb4-4d2c-988f-f5629e86db12",
        "cursor": {
          "ref": "ee6f328e-28b2-42da-850b-14968cea44a4",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "774cd311-b984-42b5-918e-f6a39b9f95ca"
        },
        "item": {
          "id": "c1053482-7bb4-4d2c-988f-f5629e86db12",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "24794ec4-87b3-4ebb-a108-1b8117e89e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7001501a-6f87-4bdf-9825-15b554ef8482",
        "cursor": {
          "ref": "9735e311-24bf-4ef3-a768-2a7bb34991d2",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "77631cc5-3522-480b-ae82-ea6d8eb6d021"
        },
        "item": {
          "id": "7001501a-6f87-4bdf-9825-15b554ef8482",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "72c15bf0-1f3a-41e1-afe8-20889416aca4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cf1ae9-06ce-46f2-b1f2-cd4cfe2fb5db",
        "cursor": {
          "ref": "365c26b6-7845-4416-897c-0c19b253d65c",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d6a729fd-0029-4d90-a097-95895d34177d"
        },
        "item": {
          "id": "43cf1ae9-06ce-46f2-b1f2-cd4cfe2fb5db",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "be50b5c6-a5a5-4606-9334-db0bbd20669e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b360711-5757-4ec2-a311-7ef6589605cb",
        "cursor": {
          "ref": "02b5e40c-e98a-4aab-ab6c-23739171fb64",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d2b9fc04-6039-4286-b36f-58aeac8533e8"
        },
        "item": {
          "id": "9b360711-5757-4ec2-a311-7ef6589605cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f1d0e4c4-88d7-4915-b4df-d804d23d6c05",
          "status": "OK",
          "code": 200,
          "responseTime": 920,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87947165-13da-409c-8436-6030d3017aac",
        "cursor": {
          "ref": "9aba781f-3e46-4db2-a479-4a5033da4b25",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be990178-0854-4fbd-88fa-c5bbac7453ad"
        },
        "item": {
          "id": "87947165-13da-409c-8436-6030d3017aac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a1932b08-ff87-4372-89c1-bdde8a3ad489",
          "status": "OK",
          "code": 200,
          "responseTime": 2604,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13ee2bd-de37-4065-b3c9-5e986a4694a6",
        "cursor": {
          "ref": "7495c42d-3eec-46a7-8fa9-1501ba107bc6",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ed12c59d-2382-4dae-aa7b-a0278e848436"
        },
        "item": {
          "id": "f13ee2bd-de37-4065-b3c9-5e986a4694a6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e6b9c99-3250-4215-b9dc-fc2ceaf1ab56",
          "status": "OK",
          "code": 200,
          "responseTime": 2625,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
        "cursor": {
          "ref": "cd3ca304-f1cf-4cbd-b0ef-ec36bee5f4e7",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c84bdad-4239-47e8-84c8-b5cb3041143e"
        },
        "item": {
          "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4865b9eb-d80e-4bfa-9351-c9eb306e6549",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
        "cursor": {
          "ref": "cd3ca304-f1cf-4cbd-b0ef-ec36bee5f4e7",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c84bdad-4239-47e8-84c8-b5cb3041143e"
        },
        "item": {
          "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4865b9eb-d80e-4bfa-9351-c9eb306e6549",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
        "cursor": {
          "ref": "cd3ca304-f1cf-4cbd-b0ef-ec36bee5f4e7",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c84bdad-4239-47e8-84c8-b5cb3041143e"
        },
        "item": {
          "id": "7c3eb8d3-162d-4a48-a9ce-3ecb0a182ba1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4865b9eb-d80e-4bfa-9351-c9eb306e6549",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31866ac8-fc5c-406d-a93f-425cb99b6e11",
        "cursor": {
          "ref": "ca5f07c5-4736-4933-bda3-779f73fbb36b",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3b7a0ff2-3922-41a7-84e5-4fd2e41877ff"
        },
        "item": {
          "id": "31866ac8-fc5c-406d-a93f-425cb99b6e11",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "85a0cd6a-4ae1-41c0-858b-5863928ecccb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 291,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022a6391-45e3-4918-9169-e76c3093696b",
        "cursor": {
          "ref": "8d196a8a-bb0a-4e54-9425-616cc36eb0eb",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "43e04e2b-b649-4ed6-86bd-6c4aedfc90b9"
        },
        "item": {
          "id": "022a6391-45e3-4918-9169-e76c3093696b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "296f470e-2b3b-4203-a67f-52e54bec95ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022a6391-45e3-4918-9169-e76c3093696b",
        "cursor": {
          "ref": "8d196a8a-bb0a-4e54-9425-616cc36eb0eb",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "43e04e2b-b649-4ed6-86bd-6c4aedfc90b9"
        },
        "item": {
          "id": "022a6391-45e3-4918-9169-e76c3093696b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "296f470e-2b3b-4203-a67f-52e54bec95ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d08aa-3539-4196-ad90-6a9d85a9bb95",
        "cursor": {
          "ref": "c5472f73-6017-4e85-9c31-2ff10e781d4e",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "62c27021-e932-4b02-ae5e-b345a4129a6b"
        },
        "item": {
          "id": "8a9d08aa-3539-4196-ad90-6a9d85a9bb95",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d0582625-eb0d-4006-aed2-2fc12c301d56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 559,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4c0ccd-eecb-4cc4-8b18-505b5287f694",
        "cursor": {
          "ref": "108c51c9-d218-4eee-b822-49d667acf558",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5964a372-d556-4191-b8a5-064499374629"
        },
        "item": {
          "id": "2a4c0ccd-eecb-4cc4-8b18-505b5287f694",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "753ae497-c2e0-4445-8d05-11f3fbcdb57b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4c0ccd-eecb-4cc4-8b18-505b5287f694",
        "cursor": {
          "ref": "108c51c9-d218-4eee-b822-49d667acf558",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5964a372-d556-4191-b8a5-064499374629"
        },
        "item": {
          "id": "2a4c0ccd-eecb-4cc4-8b18-505b5287f694",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "753ae497-c2e0-4445-8d05-11f3fbcdb57b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd57610b-0c7b-4ddc-968e-480316303182",
        "cursor": {
          "ref": "059a6b63-f4bd-451d-a46e-504bf2f6ca5c",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8090cb40-ba95-40f5-8e31-cfe37907f4b2"
        },
        "item": {
          "id": "dd57610b-0c7b-4ddc-968e-480316303182",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3ab311aa-10fe-46c4-8dde-a706e17e96e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}