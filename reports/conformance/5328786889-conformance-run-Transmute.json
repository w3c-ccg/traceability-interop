{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "666a2b52-eb0c-451d-9d34-54eeee96be9a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1a7e7a71-d5dd-49c3-8f75-8859d0950a2b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a1c5d54-26b6-4b01-b9c3-3a413cb3c8e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "631d2ee3-1382-455d-9ed3-5ba012af8d32"
                }
              }
            ]
          },
          {
            "id": "9b1febe1-0760-4516-80ef-ad55737e53ac",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a63f930-a897-4113-9a66-baabb25fcf0b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f65f6395-f34b-4bd0-9109-dc2ea45f3f6e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "411c66c7-dd82-4891-9ae0-12c4449d24f4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6c41bc09-f2b4-4e79-85c6-365f303a3015",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c2f5210-7e04-48a9-8161-42a6a83dc906",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f291f694-f33b-4082-815d-1553988fd2a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dc53975-d0fa-4993-b1f3-5e91d202e905"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c097f76-e3c0-4aaf-a78f-296907e3f656",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8886ff9-4442-46cc-8357-6d349d1c7d46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1db2bdf3-c8d1-4533-850f-ac92b2a4f2c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e9e7b23-e1e1-4d13-a39f-ed3c143bd72b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5178ea9-771c-458c-ab47-e712baa12657",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "89a4b199-baeb-469b-b60d-70f186830e98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92203945-ea1f-4853-893a-df2047084aa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7eea304-8291-4ae8-95fe-42e64622a17b"
            }
          }
        ]
      },
      {
        "id": "b98ec033-7b43-4765-870c-64b650d0cf5b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eb0a2bb8-313d-4191-af66-a9f5da2b6ef9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7bdaed9-fa69-47f9-937e-2153757cbda0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc07e687-f5ac-415d-8257-48d93b82f071",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00c48f4-2baf-4546-9f22-1151ffd6d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "402d0bad-dc4f-43f6-bde3-ee1a0b81f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4494d3-2e01-439e-9ad7-6399f9e53952",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a45f30-44c2-423c-96ec-4f3baa82bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2555a906-0b37-459b-b859-92367e088f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf86d5e-22c3-434a-a518-e1c774e714f5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da33e8ff-d6aa-45ae-9eaf-e154e5239942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50d80b66-ebad-4143-8cb5-804dc3cbe36f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f857e8cc-9b9a-4947-8768-0ec93b30df09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51912a73-4a7b-4fb8-849d-b5c3c308662a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931891fb-df08-4c54-95bb-3f79fdfdfd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97e93fce-47fe-494c-a263-f6b2b5eeb1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe319fa-b92d-4f8c-be01-79a48f2a652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9077fd03-fc94-4532-acc0-e83d99f66704"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c66cdb74-27bf-416e-9a22-50347c5dde8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27a6cb30-23db-4663-8bbb-8359ce6b7083",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db5d5b98-3df1-407e-bcab-b52f49fcf4ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "779121d9-11c8-4e3e-8176-98f4c093d9df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0f025bd-c42a-424a-af5a-406f16539f7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7fce5a5e-6d5b-4787-85dd-3a7eadcb3f00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22d4cd4f-dcde-45ba-a3d0-f81749262337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f796d06-e756-4488-a01c-570b20614367"
            }
          }
        ]
      },
      {
        "id": "5509bbb0-323b-43aa-8ca0-2d4ab28942a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fe1a2e98-7246-4815-803e-1ff44c8e023a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e6b84df-d6f2-44ab-8fa6-f71af8c318eb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7766ee2b-131a-4c83-a8b2-7e71c7b93455",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b8e02c-f6de-475b-8638-3e92c63372ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e7b82-7820-43df-84c7-dc0f2d7dd89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6064a9a-6953-4eda-a438-089885b4d933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd9651e8-1c90-4033-ad09-d9a7b20aae27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0db406-0883-4581-9b42-dee97dc08ec3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c82fc01-3057-4c75-a4d6-b8ac8c94104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8800b7c0-b781-48ad-8d19-4e8e1f3d70f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4479687-44fd-4a03-ae1a-5ce05f548ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa997fde-2f05-407f-bde6-3ec59bca1081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5febbedb-c71a-495b-954a-0a550ccfa87b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620316e-4477-456c-b54f-b845f6b55b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da538c0-418e-4cc4-a33c-7148c4dd5510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ac83b2-0c2f-4da6-9e85-26a50015ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27777ca3-cb4e-4b9e-ac98-a42fb12af869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043af2f6-85ed-4d09-b18c-32f1dc0a0a5a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd2d4c2-fe90-4ade-8e15-0ab2db1462a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cbd9b9-adb7-4b03-ab31-79b59de36786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3107acb4-20c8-4d3f-8827-3b6032cdf52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc9cbafe-6cb7-4e46-8c11-32b29cbf86d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81144039-1aa2-4485-8fd7-1181614880e3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77935b0f-21ef-42d6-beb5-f66083419cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1d8257-a4a3-4aef-9388-42c2935f491e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a7f35-6042-4c7c-8abc-6f77e359d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9875332b-a2ac-4d2c-9b2c-5755ad2d2176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37b659e-118c-42c0-9cc2-c29dd00b3754",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f9b000-df63-4596-a239-13f9c647e3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6930a8c-1dcc-41d9-93b7-d16c40e08fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8b361-34f4-4b1e-bae3-fadc7276c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acdf8733-16b1-4d42-8ec9-10ed3d737432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ba0a82-953a-4f14-9f6f-8bdde4930238",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd21d351-e58e-466e-a59e-eb6cd9b854ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177f4ac8-b013-42bc-afa8-01602f05aea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8106fe-299e-462c-9878-1f3133bbd779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55e11faa-471a-4068-b325-79a2c46bd2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a356c-768e-4aeb-8966-44effa257886",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca8cce2-1e99-494f-b145-8e0d5a4949f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321c6b8b-ba05-4cc1-980c-76ea5643ec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36efac19-d5fa-495a-b807-ccc808a62009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea93e647-1d82-492c-9930-2514935c3888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a231305-08ec-43ec-b1a8-ed13657b2e3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957ddae-829b-4118-83a4-d1ee55f3b673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ceb012-e8c2-4b75-859a-5297e79b3a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05360272-ad67-4470-9be0-d2c6129ee353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cb6b3f3-c8ce-40a0-9c59-9b2d2f9efb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5160fbb-72ca-4440-98b8-7ac3edf32ced",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2af628-b363-495a-800d-1bf3b8cfdd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7dfff-0486-453f-96c2-1076bc2c1a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcddca88-5514-4e2f-b328-a5649a88db7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f693e51e-dda2-45ff-8271-cbb666d7a2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b150baa-596e-4bca-8e89-73d35c9790df",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a541210-b335-4f0d-b9fe-e284a7024ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb55d8e-d703-4970-99bd-b34f9d1a2a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6bedf2-73a9-4553-a635-b68c5bf519d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c16fb98-7eeb-46d3-9608-3fe393980620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42e605d-dc20-4916-8798-1cf802be87ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac5414d-6011-4b6b-b659-e01a4bded87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7e45bd-43cb-4d01-b7c5-8632f9f44a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1592bdd9-4564-4461-956a-081ad6920b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecd90bdd-21f0-4059-87dc-bedf8ac336ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d8296-6640-428d-b584-d1c91a473956",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f038894-6107-411a-a373-55704c1d07bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2fe49-26e7-4e6f-96af-48da5b975498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b08f1-c121-4acc-9dfa-c63267f0444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e41ed3b1-07e3-4fc0-ac5a-20874adda26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241296a3-8116-432d-b39e-809f2a61edae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20201ef0-55f6-4391-9dde-6704ec41f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da77b2a8-cf9d-448a-ba42-a74f1be372c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d637818-495b-4597-b6a5-7c84dc635522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c7a253-4248-4f2e-9207-17bb5923c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6a0138-3860-4f04-9f13-7de7c8fb9754",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b485b43-650c-4ae4-b63b-ee04944a1be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6651010-c9df-4d27-8453-290bbd2d8f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d1b5a8-795b-4357-896b-c9d114b035dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bc84795-bdce-4a9d-aba8-064693fd2408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31abf7f4-a05c-432e-b5b3-1c3edef1b89b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce9b81c-3cdb-4d21-869a-dfb207255afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852485d4-f365-4e79-b28a-f2bcde26ab02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b0ed28-7d3b-44ff-b6b3-a72e702388a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c363d8e2-4333-4aa6-9352-627ffbd66ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832249c-4380-41bf-ad14-6cd36825ea14",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c950d0de-1280-47db-8acf-dbfb1858ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c0bd9-1e1d-429a-957f-540d8d487766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3e6012-6835-44b3-8e01-3eae68d643b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36f745da-0c00-4a30-9fb3-de5981622b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3be00-7ad9-4a9d-ae0c-873ac6a12f14",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c08f7d9-a419-44c4-a5ed-0539fd9ae767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03d4c8f-e501-4d3f-b301-e79265f2fac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a4f8ad-206e-41ec-90d4-e555f28b1c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c62cb7-4b18-42b2-a454-2ab72518b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48595774-a51a-465c-a6a3-d3cbba35e81e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a40abb3-06a4-49bd-991c-fb7aa575c745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9796b1cb-7b6c-4f2f-a9f2-d4abe04c5ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfdd483-708c-4f18-baaf-d7cd0f64bb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19f489c-4d63-4907-8650-105037c8bcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac52cf39-6cc7-4733-9ef9-0c6a5884de38",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8546d6f9-1d97-42cd-a7f5-ad09115994a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91914d69-7b86-4548-8330-709a712f61a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b0a56-4e6a-46fd-aa7a-5bdadef6bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7b18bb-852a-4393-baf2-a14602e3bee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c4e37c-7ce8-407f-9703-c2c41a665aca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d4d76d-1ee0-4d95-a36e-158a5183f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fe16b8-c7a9-4bfb-9c09-e3380b44ce76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f332644e-589a-4a08-8edc-5f6163ab1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8116ced8-225d-4405-b437-46e5ac05b98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c577781-acc4-4fa1-bae9-9058b9ebe32f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3680b19-e9dc-42ec-9eb6-3a03c41475eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a241d3a0-286a-4379-a6ce-2e2203bd50f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e8d8c2-b862-47b0-b741-6083d24a96de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6b60ce-aaeb-48ad-8a54-e75b071fe920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd3e4ae-5c76-41f0-91bf-0628b534a9f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e086de3b-8ba1-4abc-9b5a-16a76eee8b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e6e4e9-baed-40e4-a5c1-f0b86eedbab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b16937-74cd-4d62-a51a-2489827cf38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f16b738-69ff-4ad8-a0e5-05c91eabe073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2fca65-b843-4e24-8e63-e72bcde89c86",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858beacc-be8d-41b5-aa38-c075ad383b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa10143-fdc5-401a-baad-31c23ab048f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0896092a-ba75-467b-beb0-e037eebbb645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e337f62-a044-4b1f-8b8a-041c3a038c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593418f2-7cdd-4538-a55c-57712eb4b016",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910fa6bc-af8c-4267-be46-ea283673be2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd179382-9e59-4393-b0e6-6f38c3cbe8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b279b-cf90-4878-8f84-53cfdb796056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a810a55-da00-47e6-b5b4-de399fb69432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93350c33-e770-4afc-8039-1263f2f89368",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5e04e9-4759-43f8-a2ec-b4ab36545cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82119dd9-e62c-4f82-8305-a0c1cffb55d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05070687-1798-47db-ac9f-f431322959a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca02762-fd71-4d3a-8878-757d26140334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c4e9c-a63f-4cb2-abb4-689b764370bb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5090e2-02c9-408c-ab8d-67a1f5eaf5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a557c57-f519-4a8f-b1b7-3df87ac7fbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bc0fdd-3177-4857-91a0-cdb48a40ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4238e62-5921-4095-bf7e-efa308c25495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b266ecc-ec72-49e0-8c7e-974f6f944523",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cbca58-4dd8-4755-95f2-ca95e83b6349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2500b5-d43a-42ba-bdca-49bcde0b8a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e14133f-14dc-45b0-9f76-4fc85893fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bdffec-cc0f-4276-8f36-9be3b89d0517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa0675e-bfd6-4b36-8982-4c69af9ebf13",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3736251a-f77b-40e5-a873-5bd124513cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafd8e38-8e54-4d70-9f82-236f6bf4935f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd4704e-6339-4e7f-a2b9-4ee3780efdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f11347b-504c-450a-8673-4226c9313b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1860586b-b76b-4c33-999e-c0ca58e3b03e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dd4177-f075-422e-8752-0600de97d53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea4b535-f377-4b60-9713-1b3d5d093d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2436e1cf-fdd3-4170-a0d4-88c34db7e197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c887645a-4075-4065-a344-3e75776fb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d732c4ab-b4dc-407f-acf2-3a7dd9787319",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c6a16-fb85-475b-98b1-a0ba2f2b95cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7568b09-1c0c-494a-aa24-59a8e050ef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060ccf81-0efa-457a-bc60-5336393a5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "618c766e-c6f5-4831-adb0-b5ab32c46561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cd1eab-7bdc-4c2b-b2ec-d84bf4ec510f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b17ae-7a97-4f8c-acec-8b58df0d60f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7fd799-d43f-4246-99f3-e2415858936f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab56ec0-363a-408d-8932-25ac590f0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0eaa6d-32b7-4f97-8474-61c2667fe915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85caaa26-417a-4d66-8b0f-67881b2ea7c0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b174b0-1616-47ee-bacc-f31d15903ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea32c18b-834b-4699-ba99-f8c5c5c6c5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9833603a-8f9e-4060-8bbc-41d1000343cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16dd7e0-09e6-4eda-b4df-6d25dd9b5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d98dd9-6d0d-4dfa-a2a0-fb3d63cef6fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f1c1f5-b788-42cd-ba2f-10a1552c8660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5035041a-e083-4142-ab5d-6f6351943a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe69aaf-7bf2-4827-9dd0-36237f2f9bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1005998b-21ed-4105-b1e3-62909225020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea52803a-2750-4de6-b0b3-6f738b44aa46",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985cb1ab-88cb-4fe5-8202-04dc06c42923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b04b6c-d9ad-43be-9c98-a6a0fced86df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddfd871-8a80-4812-ab6b-2c88ddc9d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "86106b1e-668b-4980-a73d-e126a2385932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f1206-6a3a-4e70-bde7-919dbdf0e7f2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba94075-224d-4a45-aab5-681ab789c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dcace92-e0a0-4658-a625-540cd410ca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e22022-2f52-4b87-87c0-6711f0da6b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd455d91-deea-464d-980c-8ca6f1ccf2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3a6008-1249-46ff-8faf-248291ecab5d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54e7f85-49bd-472b-8bd8-eb76ddbad804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e065c598-2222-40b1-a924-8b4a5eecc544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c8d149-1705-4096-9b3a-df986f907c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06ab17e4-2406-41a9-9a82-f85c77c974d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817a4a58-2ab6-49dc-88b9-094eea9091a0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05680401-237e-4511-93eb-e539941e99ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18f9aef-48f2-4aab-b392-f066039a3ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a347979-f495-4a60-9c02-4fcf6792f43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88ce922e-4acb-4808-94d5-09ee862164d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90497214-a392-4257-8a9d-6d61b78632d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e83ed-6d9a-4bab-984d-810d93e0e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ea423-52c4-44f5-91eb-518cf6d0194d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d99de7f-0d70-445f-a00c-c96dc60ff1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d95b11-c82b-4ca5-aa2b-2fa2754f4b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a107a14-b372-4519-b11e-8e439a3a385d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3199fa98-901e-40a1-ad4d-8e297bc84a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c64ba12-5f5c-4dd9-a01e-b9af68a8d00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aca4888-3127-46f5-a1a5-7360ccb4284d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcb1260-d2ed-43e1-995b-ab289fadc129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86b90f8-295e-43bc-9107-e9817b584db4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0728aa2f-c91f-42d4-b707-4a11a18141d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0783f3-1b8e-4744-976b-e9c73dc6ef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f0ec9b-9f59-49b6-8a9a-e2a43c55739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "52659903-e1bb-48cd-87db-1025317bf639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a30b628-93a3-4e85-8436-05c6b9abb6fd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55558a76-26db-459b-9213-b6a78df8ea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef84934-8a19-4054-aa76-b76bbc668cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89117532-ac15-4bfb-90c2-9bfde000bd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a15d41-3e04-4f67-b4cb-80ef0298547c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e631cb0-707a-4441-9f3a-57ba5f363e8d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea6f778-547a-4dd6-bfc8-ed3f63adb95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bb4217-7ab8-47ad-b760-197ac8e8b53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3055dd81-bfcb-4f1b-899d-efa583fcbca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82bafa5d-b850-4acd-bef5-a84ccc13df9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac20b08f-7638-4e1c-8b84-6baca676124a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aa697c-9373-4b44-8b81-f02b8456672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5571dc63-4608-47a6-b73d-89cad0926f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1d5a52-c8b7-47ad-8a7e-2f11dd95e090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8316849-753c-41a5-b9f5-b519f5eb1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e8626-1732-4103-950e-a2ed219c344c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3674c85a-11ab-4924-b412-921572c2be21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce8a356-3d69-433d-8e94-5e040f68f53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e3e80d-96a0-45c7-8778-91bb6af6e51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "480885db-931f-430e-aae9-f2c9ed3747fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde77ef-03d5-4f8d-a39c-d3c388dcc966",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d770813c-ffbb-4411-aa7e-e846c82edf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f651b4c-0432-43f8-bb2d-9574a57edd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a368d3-1d27-4042-9e66-f4d9531f3319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed1ed0d-e9c3-4d37-83fb-21271dd3062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f780007d-aa4b-4930-9bd9-01c2ed305e6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9ab190-a7af-4fb2-ae1a-2678fca2b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adc1c3f-df8b-47c7-83f9-4c081603c03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d623e1e0-c0b1-41d4-8538-6a707e369099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59919ee-6a50-438b-be69-4f6a4e388718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5823672f-b794-4e2f-afc8-bab7ac52e9b5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf63c69-d274-417d-b17a-1ca4af7043cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1f3340-9042-4a85-be0b-cdc3402a6c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e904506-a116-47c0-bc23-5bd00fbe1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af796f30-8a5f-4de6-85d7-35be85a6df33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eda799a-7f31-42c5-a7f3-c8ead78170a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55653e9b-228d-4f54-8776-eeff7f1bbdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37581a62-d3d2-4b00-82cf-baf431fcfc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758857a4-6f5e-4a93-8ab8-2ed36bd61946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0532a9-8a06-4abb-a5fd-e58d68969ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b19fa-0c36-4022-b233-f7888c3e809b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a4c95b-fdc7-436e-833d-e15f48875a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586ada45-0d79-4ea6-b395-9853021f030e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec0edc2-0755-404f-8a2a-e7ef0ee4dcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5944a9d-7ca9-4c8b-b42e-0e37258a15e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e05c0db-92d4-4206-bf56-8f1e1fa143b7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417fbbc-0707-46b3-8053-718e14cd1df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7a8dbe-de96-402f-b621-89380bc1cd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e183636a-74e1-443f-b188-7d938a5144ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd96a3f-e772-4c05-b38c-161e4274d97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1225041b-b34f-4622-bf18-da42a14fdcd5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6913d59-48a0-4460-a6a0-319345487534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec67b234-883e-4e9b-8f96-2910f6994157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f51d83-ca88-4444-8150-97164c6f22db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "241fc8ab-bb3b-44fe-bde7-6511dba22fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e1752b-6df6-4615-8bbc-dd493d88dad9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9a9bad-7f5e-4094-85a5-c037f2dbd033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb1a922-6714-47f5-9381-59f292fbbdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411c89b4-16f3-4321-a17e-61118e9773f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d2229a-4d94-485d-a2aa-7f8162e7fa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e655704-2bf3-421d-abb7-d7d35b17a7a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa874bc8-a4a4-440e-8eee-c868dac2d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1339d262-b506-464c-b9cd-2f799780fead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68731679-c7ea-4bae-9469-d5e1ac7f0d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0f2311-8a41-4f4b-a0f9-dc8f25ccf5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6a2399-0fa9-4996-9a9f-b468b34ab26e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf05fda-48ff-4e11-81b6-0217041a124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f179744-4285-4457-b91a-c8e182f188ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5977e6b-473a-44df-be27-92114d97156c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8668fed-7c6e-4fdb-beb7-05098808d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640cf661-46fa-44c1-9fff-7d23148ee62c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8364ce26-5c4a-4d77-9cb2-5b335323dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e056337f-69c9-44a9-b668-2b1d74c491bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec2e55e-9c14-4dde-b8a0-34e1ae41aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "59a8bc2e-4720-4066-a597-34996df1a842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec1a2c3-9f91-44e4-99ab-d4e37b3fae35",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79011e15-f381-4a3e-ad2f-9253d2391371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b0ad6a-a765-4574-8ca0-ddcb3540d61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e112ca02-0f7b-4f7f-973d-c834eda2aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "649a0c45-27ab-4d2c-9f8e-f5ade3de14f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e24c65a-b8b9-4447-957a-c56d119cc64e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0aecb3-bc7c-4eef-963b-980459cabb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c63357e-c716-4db2-a399-b714dcf35149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cebd9e3-9e94-4797-a7b6-de6e35cc5885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e813f73-c9b9-4d63-8a43-4439140c34e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e540fce-d0fa-4117-96da-ec88da7aeeec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861231c5-181d-4c5a-9319-0b5a6a296265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe63b3d-d160-443c-94c6-f88a73d8f481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f730ba13-feae-4399-872d-a13817de1434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed6b726-e96f-42d6-acdd-89a0b1c94905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fdc95f-e297-485e-a68b-4af6ecb76ca2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a15b3f-7ca5-43e0-a4ac-b712c3f7a145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7c27fd-7dcc-433e-a590-b507adcd9aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12059100-5365-4d50-99ff-9ef2b45c397a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8367eb7b-0031-4cac-b242-ad10e70e0a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c230ef-536c-4ae4-8af5-2ad33dbc715a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2dc1c5-c423-409f-a7ca-1dc9b08d297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1830a0-5c82-44f6-8879-c398e684e1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc9f63a-ee4b-4c59-91a4-eb465e0a414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f8f0fc-f6a8-4f0c-b2f0-8d0cccf6da08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b11784-e12c-4d05-a1e6-d45ed070d0ac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c42d3e-cc99-4811-8383-81c1908b7d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5987ab8e-8933-44bb-b5e0-cfd67a45d999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e0028d-c9b3-42d0-9ed7-d7c1a24d9e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "287c0832-78fa-4633-ae7f-63b3f3defe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ebd070-dada-4033-bcfe-fa50c5446037",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dbeb9c-eadb-4cca-a2e6-fb1cd324d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603bfac2-b8ff-4130-928d-08fd5f6d37c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148319cd-8e66-488b-bb6a-60f30ee4e8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4651b750-0b10-454b-be9a-1ada97865d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbeaee5-f329-4f09-9a00-72daacf57288",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceabd20-8da9-489e-9d69-ae4b94e8e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e4266f-2447-4d4f-943d-1c27ab8dde97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c3cd14-a287-46f6-b641-ccc15d1020a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "590bb384-152b-4b55-a471-90ebc68c5391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41333003-0f67-4ec9-9e77-0e8c57be5f17",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8241bc-a1ce-4fab-89b0-d38a180532f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51147ee1-41e4-46e2-89a9-8eff1f198a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72d10db-c65e-44ca-85ab-d56f68c5f6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd6851-b261-4d18-b2c9-75adadee0bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b8f9d2-ebc8-44f0-a515-da7e446b953d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922ed74f-209a-4f83-8dbf-ef8e01d9962d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d691a4-33ed-43fb-b2f3-2301c934adf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c3ffe5-c92e-489d-b18d-3bd7dc013df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "279b0d70-70ab-488b-832e-e4f63860c783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9614b84-449a-4505-8afa-8e59eb659259",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd8c357-4822-4371-ae21-f34d05bb9098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1165f6bf-8e1e-4e54-a003-61f4f18424ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e9525f-7a96-41ae-9021-8ee7766f9409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0f34a6-810a-4521-aae3-f52c46b5abf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1786a25-c40d-4127-938e-79ecd010bb85",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8afd65-beb7-441f-b460-6adef23d0667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c45db2-b3b6-4c7c-8f2f-a3b7cea573ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e855b04-ceac-4b9f-8ca1-bec6e6b711b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e47a2d-7c18-47f5-95c0-7e6abb38d42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6f4af5-2e62-4027-97b0-4e0c98f7ba2d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eef6cd-0220-4379-b271-fb9aff85988b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b5f244-2ca1-4cc3-9d14-b8f3eb72b84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101ef629-fe99-44ea-8f6d-bf9f65ab20b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c1fb04-0911-41a2-8e9d-791d114d8aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42881c1a-e978-488a-8c8a-4119935d6d55",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd0c548-3d31-4bca-9bd2-112b16a648a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e017e3b-c8bc-445b-883b-714bf4ad0f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ff9749-6a3b-4ee1-80be-a02afcf80151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa883303-4f6e-469e-bdcd-079a7c9648d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b66157-5236-4eb7-b872-989ebb417fb6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f6d849-beaf-41e8-a5fe-ada5c28e9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cdb042-0bae-402b-88ef-5631cd49a198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e510d8a-69e7-419a-b31e-38ee7aa1f8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09664671-c416-4de3-a888-6a771cae05ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf425cd7-1e70-4aed-b5df-7eb88eb36414",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152605e8-1c09-426c-8d09-85a666b7b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b81317-b655-481d-89d5-b77919349060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb995d5-4fce-4a63-b7ec-31527feaad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9f8fd7-a7b0-4591-aea4-aa10df9238b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d546e5-ef2a-4b77-92f8-b45d86e885ad",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e35209b-069e-4337-85a1-b4db74c1fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905ac980-7c7e-4e35-a9b0-c8e51bcf7842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b8f1ee-4c5b-4b19-9ecb-d8a7c086bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bd76df-2228-4131-8769-e8ad54a00cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7e1496-3356-46e6-82d2-a71b80a1e99e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ea9059-747e-4905-85a0-65d3e036eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cf0aba-d8f1-4724-b9ee-32a549b75bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1661555-11df-4e13-b4b1-3b72912f5064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d81bd7-7352-4163-a571-6024696a1970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193fc35e-867f-4ab3-9b53-5b7d2112ce48",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ef25d6-9ca3-4791-b49b-4a08e296db2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6cb6a0-c1d0-4ba0-a70d-f4c6be73d746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d105c38f-50cd-469d-94a3-1f928b12d390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe53c2c2-b5c7-4da6-adc5-9d8304839bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebc734c-0aba-4a7c-ba55-86ccb390e253",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb553c-d1ed-4df0-af06-0b37f7ae93ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2b958e-cc26-470a-af8e-cdd4f7653e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c3987e-cfc8-447d-825c-593c2f832065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de34ed36-4039-4869-b14b-a2e4ba93203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f4959-cf83-4b7a-ae52-a273ecd967c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf0bba6-3fbf-4c93-b524-25c346dba332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc9855f-f121-4d88-82e8-4e8634a91444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd1aeb-f6be-4704-bd5c-058def729d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "187e2780-e3e1-40a6-b413-b179c3c74276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568629f9-4d6b-4c05-b61f-6d756bd18cfa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a3f497-7eed-4591-918d-30b8cdaa7467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbdc63e-7913-467c-8b42-2c41173e994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a961aa5a-22eb-4a0a-9751-2b801e7aa930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "319eb356-6b1d-4c43-bf58-02da55874f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1719578-89ad-44ce-8709-a081fc52f11d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29253bc3-8a43-4697-acf7-295a1773f495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37871701-6b83-4dd4-a191-09779606227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ed5d90-b703-4cd9-a899-fa6869aa3f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b07dad31-6541-4b87-9c01-bbb600f212e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363dfaff-c575-4a60-b6bf-cf6dd302694e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b38f550-9d63-4987-9797-b49a99d2e35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee8b413-7721-4c17-bfa7-369cefabfbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4201ac-eab4-453f-baf2-14e4c2d18741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a24cf42-4255-4ef0-9ab4-299a657f1c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f233241e-e2ae-452d-8137-cbb0fa7a2830",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b336f-9325-4247-a362-c07f50a80280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4a9fd4-d831-4d54-a7af-53934c35748c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9f4f61-13f3-4e68-9ef4-5ded2f7322a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0128b10e-039e-429c-a76b-facd1288b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5a3a1-8094-4565-b776-5cfc35e92acc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4484f09e-619c-48ac-abc5-239872f81e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e52915f-44f9-44eb-b878-c4bb792d03bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818885bb-df35-4fd4-8b59-e9c2b2839392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e758989f-815f-45ab-8a6c-8cf8b25628ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d74429-232d-4310-9fc2-72e99a7aa03e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9251e3-2429-4203-9769-b6d7e4250aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9244f1b6-cb5d-4005-bc64-1e49d10b4236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a5e38c-0b59-490b-8706-bee5c5ad8741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "305fca92-9166-4f4c-8838-f6cd1f232c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f35bbb-afb9-470c-9853-41490c6cfce3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52acffc-189e-4884-b297-990714088173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a806e1d-1e69-4f0a-9da3-e0d90abb59b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64345843-44a0-48af-9689-717004cdc234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6805df44-ef59-4222-946f-429b97e42f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca8e27-fb32-4a19-b581-ce2303b35877",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88972aa0-3819-4bfe-a3a6-74cc55bf32c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b9e611-ff01-4a4b-aea0-f7cd613bb62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302867a4-41c9-4bea-ab51-7ab68b463e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "772252cd-a49b-409d-8003-d8d23ae81fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4079559b-706f-44df-83bf-8ea8c96bedf7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795baf8-4a4e-43eb-8a7b-684132c2da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be6f7cc-39ba-4dc6-88e3-7b281da99946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68fd7db-c5b9-47a9-9ad2-d2121ffdbdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "124232e6-cf50-4898-b40c-124956dff3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aef352-4dc4-4654-b81e-765cf535ccd8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38aa596-7c7f-4ece-a17c-131b7e202a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e64f18-5b47-4dca-bff4-93d932dc5f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159df756-9961-4238-befe-a408be50c96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aec0ff38-71f0-463c-8dff-c9ffd16bf486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c882ed-293c-4da3-b332-ac4fabfb850d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9854bba6-4a97-4c74-a565-d45e8cf04e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105fb6b2-54b8-4aad-b445-a1e3ce66f76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd399060-c17d-4050-a121-9a72da5c0da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15cd46c5-cbc6-421e-82c0-5514460a9240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3151b53b-408f-4dd0-95db-234850c5cc5f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f271a5e-f582-4927-9959-1f8373ed984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7dfe7d-f95d-403a-b15e-c1693df04a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fac4e9-bb69-479e-8b2b-ee44aaed4b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60b9da08-a105-4a7c-acad-c91392d6ed60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aca6213-90ee-4d87-ab33-fb284881140e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac018d17-8620-4c96-883e-9c754e299d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8be42d-8a53-44ee-bc14-5782f326609f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b080d6b6-2b23-47c1-82b9-ccae3c7c112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef70743-08b1-452d-8121-6c5a8dd95440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d19a4-3011-418b-8132-e178fc05e064",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc8b14c-8c4c-4ca6-a07b-9488118de3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b241a7e-edc5-4ea2-a8e4-3dafceadfbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2427fe07-8afc-4aa5-b097-b5e3d8f796e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9adfcc4e-dea4-49b5-a48a-dd8bef3ffa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1f66ca-a3ea-4d7b-aa6f-5d0906802395",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b610a0c3-e443-48c8-a505-04ba97c55d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bf9c1d8f-b322-488d-9a77-afdfc45dc6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74f89d3-6bee-4f30-a8dd-833ce1015ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2553d1eb-945e-4a48-90a7-267ebe3872f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad619231-9a59-4f17-b0b4-e820e20ee57e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "939b0a8b-f887-4b8f-a59f-32bbb416b2fb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d67bed-e8cd-4a94-bd71-55293a83f08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9ac06ca-6029-4649-bf74-a8ca510d9bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982f13d4-7d9e-47fb-8013-258539b1715c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6243cc9d-e9fb-4f61-8eab-ea68930250b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b71ba84-16e4-4fb4-ae83-5bc04c8e26d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "325b2504-b17b-4233-805e-6ef71cdf142c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb677c8c-446e-4159-b1c3-37befcf50315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96707581-8d24-44fd-9855-a42cd382b446"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb7604d1-0e28-4425-b2fd-13b7d8ae0ea5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26b4f8d8-9db0-4246-a3df-a9549045a581"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "665582ae-d646-4ff3-854a-b3c01e6b136c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41073e14-79f8-49bc-96ce-eb33b787fca6"
                }
              }
            ]
          },
          {
            "id": "2c1b9519-87bc-437c-81e3-c9e78c1a1e6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6232d5b-a16e-41f1-bf1c-6b05cb88603d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52c6a0ab-9071-4be9-be9a-89e4463976b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b4cbe1a-0f3f-4e51-bce6-52ed9fdf4a57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e5a282c-ef06-44db-9fdb-16626fef061c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37ec0b83-57ad-4084-a30a-d2c4804e865a"
                    }
                  }
                ]
              },
              {
                "id": "1e73a881-5dde-4267-b3a0-1b78ccb31d7d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b23c9c1-8290-45aa-a98e-d8315af55cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e935ecf2-6515-46cf-b5a5-affe9fd57d98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1c63810-6fe3-4546-84bc-e1560932f680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e7b9c88-4d91-4888-938d-f13223cbe1f8"
                    }
                  }
                ]
              },
              {
                "id": "c826ec10-303c-4de2-91bf-3799835e35de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62259b40-2afa-4303-a631-a6cd155f390f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87a888c4-1255-489e-b21d-73b52ee72af8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd41527-2e57-4428-886b-fe61c73cc4da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b843ba1-7953-4954-9dc2-86d473ef2aac"
                    }
                  }
                ]
              },
              {
                "id": "0aac3daf-7686-4809-94a9-24e4394d3f52",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b370f24-45a8-4aca-85b2-1e3c43bfcc46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4991e195-7db8-417c-999b-4151ae3b3ab2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75d9c7c9-45bc-4883-83ab-0753522a01ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9ade2ee7-15fe-45db-8a83-30eec457eb7f"
                    }
                  }
                ]
              },
              {
                "id": "c65fba6b-3158-475d-872f-55f9ef0469c6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0a72a6f-ae6b-48a2-94d7-2647d2f5f0ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd4f6d3e-aeb4-403e-986d-85db2efa8146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6ea9ef8-7808-4c73-8d9a-86064136a184",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e02f3578-dd6d-4299-bbcc-62f853fc416c"
                    }
                  }
                ]
              },
              {
                "id": "fcd085b8-ff12-4365-af48-57b3d2c932b3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9375b955-2a84-4e91-9db4-94a118c6e974",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62533a00-d554-4931-a5df-4cd774ac217a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dfcb099-451f-4d0e-bcd8-0f087161ecd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57d83d30-3b7b-4b58-a1c5-1f698ac2f9f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd5babfe-3c67-4b07-ab83-e182aea7dc2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5855f0e3-f7f4-43f0-8531-9b8af5e14f19"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e5a65f5-925f-4fb8-9819-20e03da4d47a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5052920b-3957-4a41-8828-ea8da0a6f528"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ece54581-4aba-4e3b-9775-c1c09e9efc4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1af05e9a-eaf2-4751-88d7-d8e53fd8982f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f47f5c67-d7b7-484b-9276-be7892bbe981",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf24f66e-8156-4ff7-b016-32a0da47b922"
            }
          }
        ]
      },
      {
        "id": "87cd3d6f-ef1f-4419-bcaf-5f6ac96f34e5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2abdb39e-59a9-45b3-b476-2d1a324cb436",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2a11efd-a707-4eb1-81c2-46853f46b393",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb04f706-0437-4f7a-8eb9-15e232d8a0f1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365205d6-e0bb-4cc5-8726-77799d8dd71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f591c631-00b7-43e3-93e4-f8aa31945133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7b4d51-4a47-4cc4-a929-37d0a6a38a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c0ebde-66be-4d47-a6d0-c7b5edcb43d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee24317-aa83-4080-91ad-de21b4f2064f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73945c3f-2f0d-4094-8798-0489c95e1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4617ef4-93df-41c7-bdf8-3c7c45a7c567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3c5c92-2483-4fb1-b4dd-03870064503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6e9647-777d-4fef-842d-c7c0ec77a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6647c87a-fe53-485b-8c7b-c47359bd1609",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b482e571-cfc6-4128-abb2-d92ec8bb5dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186c2e75-645f-4062-b3f5-4a1abcea783d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9a3b2d-0878-4849-bba0-b278033af359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d7661e-6a97-49b1-9443-b8bb4f161343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a04bbfe-5177-41e4-a1e6-dacfe3d1acde",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cab1ae-95a2-4a31-85c0-3a1634c1f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44f0667-b883-46a2-bd73-517893eba98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2f429c-f24e-46e6-a9c2-c5c7a69acb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab98fd74-2eb5-4f82-935a-319b688244b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9eba2c-17dd-49e7-8fc4-0c42e90d5d26",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15013a1-2bd3-40e1-bca4-180fa513d196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09a3136-3a43-41c5-9df8-f835fda8cbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f7a159-54d6-4362-824b-3c71c6477152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c442a63f-fe4c-4a93-b027-3702d31b29ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fd8c30-4258-4d13-b5d7-d980915b7025",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f92dc9-dbde-4e1d-9ed2-ad55035dfcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552bac68-3673-48ba-b8ba-ed7f568b2679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496eae07-3665-41f6-a931-0b768f18e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06ba23b6-dce2-462e-8523-15c547c062a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909251f-436b-4edd-b67a-1785f6509e17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ec4375-a4ad-42cb-a087-83622f9f2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c751e87c-ec02-41a3-80a3-83427bee05a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b271a1a-d7fe-4f5f-9dfc-a4c98a56f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62d4b87-4fb0-4d94-9585-520e49d01749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1061bf13-fdba-4743-b79b-0ddf8a103cd4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d742c1-e7f8-4175-a7a0-45b88233183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaac35c-0041-4c29-a97f-e01e8e69f278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb2739b-8d68-4504-ba05-0b976befed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13b1d59-3535-43ce-8342-40d58f058a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd037fa-2659-473f-9687-cd9ee9a24da3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2481103-b16b-4f63-8615-5745c13eb51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bed2016-8b11-432d-9a6d-350df2fc3fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d000ee5-5398-49ff-945c-36e8d10d3d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8613f5bb-ef8b-4b1d-a408-34b7024a8239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c841e5e-ebf6-4019-8886-b71c4294a2e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e882bddf-725f-40f3-ab18-b23e80eebcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11695cae-c153-4344-80a2-268e80497bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0130351-2694-4288-bcde-8e3b417c82a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "885e962e-45ae-49ff-b714-0a99642391f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6713f62-6b9d-4d9d-bbc5-bdffedca5149",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8919f3-8838-4491-9d4e-a306386f6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c9d600-f0be-47f8-9091-5ce1ee32161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c409c6-413e-4b27-ab45-c0eaf764b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "608740f7-fb6f-42fd-a243-f2151050f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5775e99e-39ea-46b9-8569-0e7efd218a31",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45a6356-2208-4e3a-beb1-5f0cec0dd0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07143a4-e7ac-47ba-9556-9bd9e2d9131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e777d82-5b2a-4ea2-ab7a-2fd9a2c340e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a04969e6-0831-4cdf-9728-2055f39764c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23448d5-c4f1-47d2-a3a1-1f85cff34878",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b709483-ee44-4e43-904f-28b9b03edb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939fbf2c-1f67-494d-9c2b-02a0cd3e55fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee93dca-a722-49fb-b407-6264cf11d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e002cff5-5516-474a-93b0-09d3fc617558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6aee81-5066-474d-b70a-f449b568f5a8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b2cb1f-5735-42e2-947f-e98f4d7fb826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b2e791-18f8-4b54-b505-97c53d6f988a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434634aa-d4e6-4451-89b7-1bd2aa2e902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eabf9fa-a9e8-4aeb-abbe-4c661525a5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb468b8-a765-4a9e-b543-519a7a1d2036",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0003f5-d6b4-4e17-bda4-7a8793b16565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2cef1b-cf05-4fa3-a23e-5fcf484b28d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11af316-73a3-47df-84f0-8dc0939c5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7844886b-cfe9-4c42-88d7-7ae38a748af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a237c5a-269f-46db-afad-ecdb7d23a8d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfcdc13-3790-4364-9f93-ecb757f580a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba54ae53-0001-4b24-8805-70fa080de7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bebcdd4-ec67-4cba-b787-e016dfd22da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85cc06c2-5b4a-42c5-935a-9efe96dc824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc565de-2dd6-4b62-8002-5fd7a31bcbe1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e62f4e1-f919-4251-b936-00ad0e26792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8350055-d756-4ff5-8afc-89ef64ffa710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c26540-c238-430e-90a7-1444aff0f413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5446535-de6a-469f-a7b9-6b0f36679f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0eedf-a5fb-4017-984f-384c95fc4487",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44210fdc-dfe9-4ad7-b0f2-cb146c7a2733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650b90e2-8611-46b1-8957-583e3808808f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413f5a7f-4f67-4b88-b402-5509a504d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8806990f-ac8c-4401-96d1-7b7e8b85008d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4404d1a0-8b1f-4cbd-9605-45b3ac5781d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1a96cc-937a-42a6-9ce8-a16da5a4de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b5e77a-4fd8-4c6a-bb6e-724d6df50b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65cc282-6e82-47bd-90fd-61c75f158626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e80a8d1-c50d-4eb8-868a-ac9ddd422e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d58e35-186a-4261-a92b-63ce13411c56",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd4225a-9dee-46b5-bc05-f023d2efcc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a904d2a1-a3e6-4a17-905a-211361a44b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc643ac-d046-4700-9904-3d70111dc662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd93985-ac50-4650-9b68-377371284e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e958be5-7e3d-4569-8eeb-6045befb9a23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ad63ff-81fd-46a7-b0cd-b92262c9f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52256c8e-857b-4415-8320-ac3a1e16b887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8bb6cf-fb06-4f8f-ba64-fc63ac4f870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27564c17-eaf7-4786-89ee-181e889e3881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4afba-ef09-494c-9e1e-a870ee771e08",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e612f98-1420-445e-bb21-00622221b912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a1857-a543-4b0f-bf53-95ec7556b6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f9d062-77c4-48b4-a43b-a521a0e77767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bf14aa-6c6d-4864-b6ca-48fb30dd241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bc571b-24f9-4367-818a-fb311706d7a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be4fef8-3ab7-4929-b9fe-c954bf0305ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008a39ae-ab20-432e-813f-77ba31501eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b418a54-f5b4-4e4b-bac5-aaab57314ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "948eeb93-a382-42b2-a1a5-268f71a80bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7406460d-8087-4097-bd48-5f7a6fd35443",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b13f993-7772-4db7-b921-2f649af663a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6329fc-cafb-4c26-ae8a-d1297a980173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee9ae82-0ec8-482a-b333-2c02ef187d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d968cdfa-b987-4d8f-ab92-c4246732e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf0b0b6-043d-4bf0-91b3-59ec032de518",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f59fd58-f5e0-4f20-8e2f-5872eac7ed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9d72bf-c338-49e9-89c9-f5e29dd04370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fa4ac7-ed89-4232-8548-481b179e3d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12efa29f-5203-4d5c-9cff-00e1debf6ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e423c8c-5652-445a-987b-17f7d0d3c2bd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d2e90f-9fbf-4682-be40-786300533398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778a2587-8366-47f4-a35b-98a5d343e54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fd8dc7-95ab-4015-95b7-83d06fd26333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2306a775-009b-4412-89f8-231e50d42c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6e2534-64d6-4655-ac5f-68b36f42ee97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ecd494-b781-4446-b0ab-71791f0d0f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332d1ed6-86af-435c-9019-4fa762e2e965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314bf802-bccf-47ed-b08c-8f2ec116d168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34c1974-1d4a-4997-9a09-de89b8b06f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20313bc6-a463-477c-88b7-9064321b9ace",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a129ec7-8cdf-4d84-953d-079294f91ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9075e7a2-2ef0-4358-bcee-9568f944df51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d7efac-0076-4797-85b7-c462db8a103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54724b19-482f-47c6-ba9e-ed8f92f22bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d41ba2-a069-4c34-a498-7dd9d49f4461",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a696da3-d65b-48c9-8ae3-3e65243cea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfcbf0c-419b-4772-a6ac-f0fd26ece922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d22b812-0023-4765-9cd4-62e89ba13b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e499fb-03e8-4fdb-b959-f645536e19c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd7b512-4ee2-4bdc-9f04-77acba3b1574",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a871f-55ab-468f-b741-dcb6294372fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab3f0c0-2733-43c3-a52f-4c35f55ec56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ef2f0a-d5f3-4995-890a-dbcf9a2a7ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde47af9-789f-4e7e-a497-9e137183d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ad6891-fd7e-40e9-9cb2-23a5561b0200",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccd3db4-497c-4607-bafa-3fb5cd2169b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19b489f-bf78-4260-8247-7a81146f0a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5436f6e1-2232-47d2-b7f1-507f394124b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d773e05-8357-4200-a511-00a13107131c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a68169-7b2a-4f0d-b570-ef2b1d5a5a68",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b777be1e-9c0a-46cd-ba3e-e142bd016f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f74a5a-a695-4bc4-ba9b-0492b2a959e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea58ca7-bf1b-419d-ab5f-70eb3132e55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e81d55d-4c3a-4e23-aafe-71de0251a73a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1620142e-6afa-4868-9efa-f28c973c9ef7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1cd2e21-353a-46b3-bd8c-42489785a7d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a816b498-e16e-4c39-bbd0-2cb1ca94e743",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7a7d55-c74d-43ae-822d-c839e5804e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fccde97-8e74-4df9-94f5-e2a8c374f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f82c037d-59cf-4145-9bdb-c0285c06fd42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "342bb922-a566-4b9b-93e1-5232ff6c8266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c93926f1-5fa0-4c76-a518-3cbd4905858c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64733a58-35e0-46c0-b570-07b3a4f70672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cac4993b-9510-40ef-934c-2a6bad601b4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f30945d-775f-4eb0-8ef1-0e980711ba0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a372b844-9cbc-4de6-8232-eeea3da4e95a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eadc435-bbee-4b16-88d4-21a92b255d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdf6dee6-0da4-41d1-8019-84a45de122e1"
            }
          }
        ]
      },
      {
        "id": "17352e4e-4005-4438-ad71-7baed01b71cd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4cef8bf5-cda6-463b-9d54-8f1ddd7476de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "110fc29a-8814-4d65-aac8-c0b4a5d1b0f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "630841f2-e052-4a7c-89d5-c44af6c55f2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ac04a-7e1c-4578-ab35-525f443108a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cbc964-bec1-43af-8c66-0b226102e5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948e674a-c2fe-42dc-8f1c-0ce950077651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d31298dc-5541-47f2-8c8f-b5c6888e9a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d614187b-a4bc-4156-9dd0-b5bab3db7880",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3a8ef4-dfbc-4586-92d1-5021cef5649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3320765-ed52-49ed-b6c3-dd0cd21c64f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32a3afe-8447-49f0-b859-f33735dd3ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f12ac6d-0f31-4083-b91d-bfe66e871829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93410e7b-0228-4822-9f1d-699ceb3eff90",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94fddaa-f695-48ab-91a5-0eb1bc402064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5670b0-54b6-4014-b0db-6b936ea734a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac49fbf-99d7-48ee-b111-599093d86eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb564e3d-80af-4bbf-ae0d-f764c1d5fe83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d1a0ac-79ea-468a-9fdf-5bf61c7e4a2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6ade6-17a8-4b01-970a-cc45e0c24806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41ee1e3-ef91-4c44-a6a8-470173263b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18184a1f-39c6-4e7b-8ab0-55e85a48f41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a7c515-a34d-4f65-add6-64b410fd865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f770b2-4022-4d92-9818-63cfdbffc6d7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3b23c1-3da5-4e90-b487-96f0f153eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe830f8-5381-49ae-adfa-1da8e6be49e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693827c0-9dee-480c-91ef-38b07cd659bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "110cd4e2-2050-4b6d-8289-c5846400d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3c44ce-6d5c-468d-8297-77f5642b55e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589c0592-14e4-40d7-b6ec-04a4ad13fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee93742d-80eb-4513-a12d-8c024e9afdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce7d229-962d-40fe-bd3d-4fd716a82771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08feb979-58e4-4063-9d34-4c173e448670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3836a991-7156-44ef-9caa-3bb117d8b9fb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bcf350-6f56-4e34-9296-146834da0318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7c605d-316b-4048-b09e-54881c0cee9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef93fd9-b71c-43ed-b068-633dbd9a3b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8658dc0-6ac6-4b97-910b-2fd959631b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbbbe05-750a-42a2-984d-734a930d2af9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d42d3dd-7555-4b46-97e1-4cc896eefa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c3eee5-180e-47f8-8ab6-fd865dda3130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b1f5c9-b4a0-44bf-9d1c-726618447149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe3bbb5-dd98-4aa5-b131-1c142167c9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b59f717-a514-44e0-bc5a-7eaf242a2a16",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a107f1-e4fa-4f4b-affe-4857b823220a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038425f8-ff7e-48e8-9d3c-64bef9d49e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78476395-b9a4-4387-9d0a-6836fc1bd7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2edd09-8f3c-4cec-9529-16b155abeefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0415ce3c-7d44-471d-b19d-3d0bd53890de",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4251c7-b4f8-41f6-9213-c0bdd0c98301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4262b-88fc-44cd-a3ef-b336741aef24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec879adf-b5e8-411e-8be4-99269a5b65e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9f3da0-0867-4b65-a30d-15da4a663668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7615f4-0ba3-4011-b44e-4b166ff02477",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6511d2-2261-49f7-8e72-359ff03b8796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf7e7ed-69b6-4907-8135-c9332dc08e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8ea08-be51-4a35-be77-ea1c1b7e1c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd46844-8fbc-4173-9385-fcd577203caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdf1fd1-9d4a-4a3f-a0bd-b86b0b651428",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdfd633-dda8-4e78-bef0-35be6b8dc5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f48947-2e93-42f0-a16b-c44e6c5cf0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8970584-6467-40d2-9ffb-252acec53ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7976a788-1f58-45e7-bbd5-c76e8b2d4f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61047ffb-d966-4d75-bc80-8d5246de661c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0759c4a5-9cfb-4ced-86e6-2bfe5ba64bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b78672-c96c-4f0c-b6a8-7d54d5c0ba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb9c8a5-0c43-4db8-9adc-05e6d2021d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ce8353-0a34-481c-96bd-0e30da38038b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51eaafa-79d7-4d12-b9e7-31f441e45a50",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a2adf-7525-4278-b386-4e40aea17d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da47527-7aa8-496c-9269-1f5b27b89cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2620c8-1a64-49d3-9578-61fc0a25ee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3b543f-5830-481f-ab97-3a6310b95a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca19a9a-1ec6-491e-b397-329630b3c521",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6bd715-4ad0-4e24-8aff-455e305ae07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7406350-a39d-4b67-beeb-b83450276cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78749f92-bc4a-48e3-8e28-43abb2418e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "afac7857-8671-42a0-8487-962711950be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acf2967-60d8-4319-a0ec-236ec461bac1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d446e9f-2689-4e0d-84cd-8f0af133aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ff19b2-a014-4881-8291-9fd53ad1c3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae51bfc-bdea-4d42-a3b4-d383e1d3718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d085eb97-ae2d-40f0-a3f8-216fb41f3601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce06e2cd-8518-4b58-b295-8132231ef57a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c3666a-49f3-461c-a72d-a3143cd655b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effad0eb-ce5e-40b6-9cb3-3fc9b22356b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59cc02-cf52-48ed-89ff-8e07d007f457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd53d62-7530-4324-94ed-988af464b59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faab88ec-5f46-416b-a275-1791ae734141",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c19d361-c906-4bd9-b091-4295dea78196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e66a8ad-e3ca-4cfa-b8f5-5ca984a0f3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c377dae0-8fcd-4f38-a6ff-aec6c2999f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e886ea-d6f2-4baa-9028-b1b7b94d31e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a75632c-e363-43df-a3c8-e27f09179a43",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bab9d18-9f7b-430c-a787-a2f8ca8eacde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425dd2aa-140e-48ef-9ea6-92b97c710c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4657fad7-9daf-44b9-8892-a88522b0362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "809b063f-4eb1-494d-93ca-168b2cb48bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12987498-b881-419d-9d40-ea932095a2f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd6af06-c6df-4288-b86f-e92fdf7e27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb3f861-5295-41d0-b875-ab1b4655e99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660fc50-af94-4e9d-995d-25048d555761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d2d552-b650-4b2d-8636-8b2fab21d774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe7e11-65b2-419c-9f68-fd0246c9e8f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de4e1c-872e-4488-aee7-03fec1c534ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204b55ac-5a46-457b-96f4-a00c18415106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25608dd4-2ad1-4f6b-af8c-e6ffb69b569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bed0977-c530-4055-bdb5-ad0abe5c6b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d2232-bf2f-46c3-b0f1-e338ac262b1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73850b4a-15ce-4520-a18a-7174f806d676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404a2661-64fd-45d0-a205-91bd530a00c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc39cfb-8814-40d1-8801-3d537b336590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c9a2e3-80b6-4e45-a83e-9347c7c4c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dab8c5-43f7-4dec-a1c4-7653bc08e5dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39de4696-587b-4a89-a6b2-0214533a5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b2c897-6867-4f1c-96ec-981ea304ffd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4208fc6-fc44-42df-b8f1-f8a9451a9156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e47588e-8ac5-4d0f-860c-7487aa8ae430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b712645-f4ea-4f1c-bc49-085259eed4cf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba36629-84fc-4868-b1c2-0257474ba6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d3dec8-5623-4972-b0cf-c5743a05483e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dbcdbd-6351-4d58-99cc-a57c2d07e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "213aa3b4-acb9-406a-91b0-1936543bb33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3af70c-4666-4175-a18b-6d759d87e61a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc69869e-7cc4-48cb-b55d-b7079b63b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f447f5-aee9-45b0-b818-52681e592b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231dc26e-fc7a-49f3-a1a5-266d9cfc0fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "182ee30b-b405-4d9b-82be-635a3b553305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69c6eab-db0f-4821-86ef-057955cf0dac",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce59094f-c6b6-458d-bca2-93d9c21781f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028d2db6-8eeb-41d0-999e-f25be1b8977a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083d8906-693b-4baa-81e5-cd410d96a66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4422eb52-19fc-44b9-9d3a-986f281dc434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c5be5f-b29d-478f-bfd8-7ab56f5f30cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922f9961-cc1c-4fa6-84e3-bcada2157a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a369bab-584c-4268-97e0-29696a12cd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1978a68-bbfc-43f1-813f-7a32bec57efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6c9f0d-32d7-4807-b3c4-a9f9815961fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06337e1-ee91-45c0-9747-ad6d8e240677",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f8fa1d-eb08-45ab-8c87-0c2d856ae4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2649879d-8a79-4f0d-b539-051f0b5dfb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8033a78c-7c56-4a98-ba3c-6ce6b500fc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "741c1129-b0a4-44e6-9512-b2ccab108410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004c015-1d89-4079-a49f-48283d931ee5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c12450-5522-4976-9df6-d282e649d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8620227a-fd89-4f03-9b2c-724d2678f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2a5463-6392-4461-a2cf-57b045ad7c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37afd6c3-a723-436d-b162-3007fdd49d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9000e8-d176-4db1-ba03-8a0874571c02",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed74866-b240-4bad-bf5d-7c0643236c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaac3472-a193-4488-93f9-4ac000e9f03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc906c-0074-44ec-a49b-a93c86fd852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77dcb84-13cc-49ba-b4b2-889b7893fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d109436-f8af-476c-8de2-455e8b625f67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39e80f1-ef8d-4b26-8985-68d084804e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60538e97-25aa-46f5-a9d9-35e999f6edc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020634fb-de00-40dd-8606-6a5012d336f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "960d82ae-40a8-4ed1-8acb-ce72f5795c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c25838f-fc92-49f5-8042-12e74e56ff6a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b35c8-dd06-4df7-9d90-f8e66a419bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834afef7-6b18-47e9-84d1-b04ceb9152ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bccb4d-feca-42c8-90c3-f5b479579c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5a737c-50e8-4a20-923a-e18cb83943dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc86667b-2833-4d85-8709-2bdb90ced545",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f949f2d-41d9-4175-9852-6d1514ed0374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc1c95d-2c2d-4e36-927b-b07dd4747a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aa0888-013a-4f0a-8dbe-15d2d219ff7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c110e8f-ce24-42c6-b0da-38a95f11ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d426ffb7-17b4-44ca-a9c6-8f4ca2620698",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3351cc4-5320-4bd1-9856-14980056d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be26ec50-780b-409f-b578-01a4c60e5f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4247fdd-1215-4dfa-94a0-1201e486841a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14958311-c74f-4ac3-8a7f-e421f1c8e710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082bf9d8-61e8-4981-b4ad-e1d42c0a0686",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed09c414-f966-451d-bd10-35a0f5aadabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a77ddc-01f2-48fd-a161-56b5062f58a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f23a3c-1b27-4936-affc-6e934f88959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb78fda6-86c1-43d3-a0ca-e9a42d4ac148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d51f17-f11b-4be2-bc2e-1997888aeb5f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fa819c-62c4-40b4-afd6-7f5e7fd230bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1875d11d-0aa2-4065-9632-0440d53e5a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adee972-6119-4998-966e-fb480eb96d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec5361d-c1e9-4d2e-b606-1ca6fc9bdaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a5af6-3fb7-4951-9c8c-1c327bd6275c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f178f9-2a0a-4aed-8923-12fb8b095e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe010496-a8cb-45e5-a531-146e9477345b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40fc804-0e60-4dab-8575-d793b1ff59b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53cc6cb-db54-4229-923e-886ab16c9750"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f928a890-4136-42e0-ad93-50b266a62c6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51bdcfd7-94eb-494d-87c9-808d215ee85f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b321b96b-44ce-461f-87d4-16d57fcab025",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "09f1504a-8d33-49d8-9603-e5b20f931942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edeaa88-a9ef-4db4-b355-40345dfc5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fee77063-55d0-46ab-93fc-f0e668894bd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fed9c93a-3848-4b6d-a200-ca27dd3ed51a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca4f96d0-e24c-4ff7-a768-67a855b23d07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90e131ec-899e-440c-b61f-7116fd1f4c76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26f69c18-fea5-4aa3-a4d4-a25baa74268c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af4d3625-08e9-40f6-b8a1-fe3e30cc8283",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "257c05a0-6fcb-486a-ab05-3ebb92eee9d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ce44d0a-1bd4-403a-bd81-9eb34642711a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb38a9b0-1300-4ac3-9c55-1a7356ce2021"
            }
          }
        ]
      },
      {
        "id": "bcaeb518-07b1-40f3-8ba0-a5001724559e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c91d8bd-0c51-406d-868f-f73d2c209530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5ffd231-edb0-40fb-9677-5e280333a209",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49f1686b-d525-4981-8d1c-fbe975073a90",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80e77c-8035-4f7c-b0c7-63e05fcc81a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4950c5-5d98-440a-afef-6253b9e1be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36779e-22ce-4431-8d32-bd46c472112d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3f4783-b723-4317-94c6-156d28b6cb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0160ff3-4078-4b7f-8f70-f5cb335b61c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4fe7fb-0b31-4380-9498-7d5dc8e2e314",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec8e72-49ed-42d2-87c1-030913a8fded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b1e1c3-d1e5-4713-b366-db84e58bbd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdc3d7-f734-40cd-bc9c-18dbb565d14f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7b3e33-3acd-4ca2-bf93-a19f6df1a0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f787ebd-3fe5-447c-8fd6-39e32e0deffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb34bba8-8f86-4554-8f14-b68f7afcb1d7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf832eb4-8ff2-4481-aaab-980a202573e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e11a552-c361-4974-87c2-0f0ab4e64cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a85d48-7f23-4030-b189-668fe65ca334",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1469e7ae-5fe8-4d5d-a416-83934e8d859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ab107f-1e5d-4b4f-9464-ac7f18a478de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960c7d09-6315-46e0-a087-04ed32ffcd6c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415d07a9-62c5-4cae-9204-814f77649a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168bd7b4-c20b-48c6-bf95-e83e597cc604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b68bb7-d8fe-4040-b50f-356bf0953809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59eb99e-b45c-43ee-9493-a98098a5e1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d619f57e-cf57-4133-b458-dcb9d2ab53b1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e929ac0-4e3c-4bca-a071-cea62753a0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc447e06-108c-4d21-bdee-0e2ad7d5af1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3958de2-1907-4aad-96ed-4adde4aa32be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bec6ac4-2e4b-42e0-b8f8-a53da079cd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50e7dc7-c020-4fb9-9bc0-b6a238e45bea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0a622f-72da-4bdb-a36a-bf0559e2265a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f5f8f3-35a8-4753-b520-1c6d28508d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1973d92-d036-43ac-a2bb-c7a7ce7e6278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28343ac0-1b9d-417a-9ca2-0a127fd3e57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548df139-21a5-4f09-9e85-f476ad4b8d04",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d5dde-e184-4e6a-827f-18362cd904b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51af259-ddcc-4859-a210-c242113d2b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef18cd4-8dff-4456-b876-3357c4711ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1190df2e-bdf8-49b7-ac8a-57f679a4326d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a9e60a-d64e-4394-9f2d-504ec767a845",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75311cdb-d3c1-413f-93d3-08b388732142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f36a33-03dc-453a-bf8a-8a1015428670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28c00bc-5b55-470d-afc5-44c3cc44272f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b742dbc4-6fd4-4251-9e0b-ea665c72a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5bc4a3-1960-4e96-8f35-1e4fb024a484",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63ab462-7a58-47a9-a6eb-7993ed3fac07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a201b825-c19c-454e-a4bb-f052dd966105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481e9285-562f-445b-9487-4e9c7e023e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6443b2bc-0cbb-4884-8a8d-24de50324f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffbf29d-6c5b-4efa-8012-8315dfc4024f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7582f5-04d5-42a4-b6db-941d096c80cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e421769e-7868-4422-99a2-76b5c0fb87e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e725e9aa-e481-4101-8a0b-2db2f7deb905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a910c0af-8d8f-41c8-825c-3704ba7a441b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edafba0-f860-472c-825e-b7174e68e9dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3e2bc2-7f88-40b9-b236-1f330fbb9720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c33553b-a703-46ab-bd61-039286c6f881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dfe3e8-3d7d-4031-877a-56aa1f357ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f8c855-8268-4e7e-a882-bb39ed4d04f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e86d226-3156-413b-9501-8b355c96e1ae",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77125858-bf8f-435b-a97a-aed8c877215f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac465891-2d81-492a-9d4a-052b03536ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c99556-6932-4c22-81f4-f9e643a3fe33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905c4133-cd8f-4bb7-a552-891d23a138a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8021d887-81b1-428c-b1c4-95be3cabf262",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b60b1b-3c00-44ac-a97e-a24acbd5e3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfcc0b37-473b-4510-8fff-f54274eb8fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a59709-1f91-483e-9736-2f0d1cbde988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b7f4b8-fe90-4121-8f81-8dc1a7ed6744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133f5354-dcce-48cd-95d9-2a82e87a0003",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1baab62-f3e7-4d46-85c0-d1257f705e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bf5194-68eb-4ea5-bd2b-76a5b893af1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41209d82-02a2-457a-ba9b-5e3de4afb528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6986861-7b47-4d7b-bf9f-32ad3396ca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507ffdc9-d8d3-4563-b200-ee7505d4f86d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6641e9e2-6f5d-48a8-9525-e6637124c08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a75a7-ae97-458c-8041-f2414e4b7abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2fbc40-6b38-457d-9f05-794a021a2f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e955e8-7eb1-445c-a8c9-974194e661f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c388a3b1-0128-4b5e-942f-22942f036adc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90bde5b-3326-48e4-a429-8c2fc0096c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76a77d8-abc0-4219-b37e-eebf2140bdd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e998e-1f3e-4f6a-a9da-bb56f0f1eca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3069df9f-c4a2-4cf2-bf79-6581ed0e02d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf975ed-d032-4c40-bb5c-a68d7f5b1059",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137527e4-43aa-40bd-8760-779a57c1b1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7da614f-eaed-46ec-b15b-2e26b08f3159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc09d7c7-19f8-4155-bc26-fee1d0db4d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6212403-1da4-4259-b8f6-2afcc4a7ace7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24086b34-c1e3-4a18-a873-70056c2247dd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ddefa9-6829-4c05-8339-0702ed5d2225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1468198-e8e4-443e-9449-4a136b8e909e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a712b48-a80f-42e1-9470-b3ad7223db92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e658aa-625e-4f52-9b02-0751d30cf204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ed36c7-7a30-4a76-83e6-5196c9560143",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6df0c-b488-4c57-84bb-f45fb9b0cbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2864b16-6d70-4a4b-b0ee-fc64aa07c563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc872bb0-afd7-4921-b422-d6db974bc19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978195bd-c8c2-461c-a535-eda81cfb4e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d98bc8e-7be4-4789-9cdd-057903c985ab",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68c31f2-1d77-4b98-b41d-51189245ed28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edeb6e3-302b-4fda-9704-c187bf8a8dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677c5f1e-616c-4758-9276-fedea74f6201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a09151c-bf5f-41de-9760-4cc8475ba583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f8b994-cfa3-4233-ad27-fe1932a0e0b7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5800418-574d-4108-99dc-24c9fb1a4c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0bb4c09-ebdf-4a81-a923-e04568057dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b92f9e4-7095-42e6-a678-258c0d3552a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d32bd8-8bbe-4c5f-8dba-b9bbcbfaa4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd23588-dfbd-46fb-8a99-701ed4be1690",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bea51ac-4e44-4e54-8149-726b66d3ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65783596-277d-4bce-b446-7176a72c6e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f4c38e-056c-4ba2-89c3-3d552af8c0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cac2706-0a40-4c89-b17a-1ee827010eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef377a06-c528-49ef-9eec-93c8ec147555",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49f4a1e-3f14-426d-bc18-01077fefe85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de6e473-c122-43e5-8ef9-c0d527739fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485fe91-a558-4f06-b8ad-0bafece2b589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525a31de-d733-48d7-8b12-c89d8d4c27b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad30a4d-cdfc-4026-86c9-bf552f749cfb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5af9fa-9c54-4289-8cd1-62188b8dae11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fc5c59-b2ce-4e48-b904-47db738e1cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f9541-ca5a-4829-9c87-002b663d101c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f0097f-f0f9-4bd9-baef-d983bb2c96ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b89fd6-cec2-47b1-bd5a-7d0f9de75861",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e5503-0def-48fe-9f3f-163183b4a097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafd6a96-99b2-41c6-80a3-78a6354d8455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e3596d-f20f-4b83-915d-d669e5007d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb58554-a0e1-4ec8-8e4f-4478c62fb5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b78a21-15f1-42d9-9f32-164e5f8e4e42",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957231ea-093a-47e1-9a38-121cf90e8e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b6e87b-593c-4b78-be63-19ccfe24ea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ae8278-f495-43be-9823-f00df8b4c1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13aeda94-9563-445b-abe1-235a75181541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98e8147-5c99-4b91-8e7c-1a93bb1da3d6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2edf94-33e4-4ffc-bf3d-be40e4642aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04afbfaa-cbae-4f61-8067-7d01429eb780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9d7839-3b44-44cf-b678-4295cc372af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25932587-e063-4d40-8575-07863b559e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c240bc4-bf87-4a2f-91b6-bdb6bca6e145",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbcb505-a30e-4649-9add-44c97d4de427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c75a2a1-9b29-4394-9bc4-428d8157c50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84f0d78-fbbe-4367-aed6-e4b6daa1c6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e955fa1a-abcb-4456-bbda-0b1fece38545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd5b1d-7701-46a7-828f-7d31e6269632",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019708a8-31f0-4b3e-83fd-ddf4be912ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160f5969-0d39-4d05-bc32-680fe823cf38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcc2199-8b88-4786-b1b6-1a69946bd89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ff69f1-227d-4426-a1c8-5d07edc6d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeb6866-d056-4ca4-8b58-06f851eb4622",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac10540f-0deb-4b53-9679-63157c70c860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7417a26-5c48-4605-97d5-4deb129e64af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f46cfe-3a44-42cc-a9cc-6bf79189de00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a068282-3e2f-4014-a83c-9382e3433fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8f62dc-4f2d-4b53-884a-6a033ca189e4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b9713-511e-484d-baaf-3ee6a4ae69df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e5e167-10bf-447e-94cd-93d6212ab709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bacf849-0630-4584-a484-53527c824e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe27559-a8fe-4e51-8422-21f27d65b997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bbed4e-225d-4b3f-a9cd-c6be18ef7cf8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bc881b-b275-4a02-a555-87aff262f982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80bce42-5a7d-4337-9e3e-394dd654b408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3580e1e-8aff-492a-b19d-832312288d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab11a0b1-63b6-4d8b-9c07-f3bc8e7982cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e39ce6-55d7-4967-bd42-1f07b5a7fdb3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acf14e5-b544-47f5-9354-c07f738d6d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2d25e0-d752-4c47-bef0-804aa916290d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210b9597-07ac-4073-a529-3f6e33777c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf454ba-3f91-4248-84cf-73f1c0907950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a1b22-4496-4df3-bfe9-5b605c14af5e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500478bd-a163-413e-8cf4-8fc15241fea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0336fd-8e07-4ac2-b870-2fda3b05b1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55176011-8807-435a-9cb7-35a79c368c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193d8394-6be5-45ef-9522-f8a39fd0bcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd367205-8eec-4462-9954-4391730c4827",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebccbb9c-ae96-4c46-8385-a7b52937f713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e79ed3-12f0-48c1-b205-f87eb3034b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0438c33-59c6-49f9-9b11-dc20cbd98ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f6ae98-1048-414c-99d5-e1e6ab19beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cddc8a-4269-468a-a8aa-c9591c7df58e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e792f-9d83-4bb7-8f5e-c160190a1819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5dad82-8616-4be0-91af-e4e3a01a3a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2a255d-6d53-4dda-bbca-3c53845a872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0217e66-28b1-4dd4-bb99-d259f1d4c655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e553ab6-9f13-4872-9fb8-66bd7030a297",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37daa73e-8857-4dbe-a5d4-d9038626226f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58361ea-2db1-40a4-ab8b-ee6c993ce15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54748f64-2024-4d1c-9674-3d2a78a363ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba7b038-2f43-46fc-ac7a-96b9855fd5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261ab277-b474-4958-bf93-0dfde7c3a44e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09e0ac-571d-43c6-9593-fd74a443eeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722a5614-8cbe-407c-8f83-80f33a1ff77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2ed475-ea91-46a6-92c0-c182d31fb52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f60c0f5-608f-459a-9399-682d6e268421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd4ffb3-605d-415a-844b-4f7fbf5b1bc3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6474a51-4840-4396-9c29-7ab000b11157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bba775-5f33-44a8-ac76-f75ea58b4cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69df874f-00c8-4c40-97f1-4819a1b71e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4710848e-e93d-4140-b81e-2e327259a6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeef263-a041-48ad-85c8-01d402d81209",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be86293c-4636-4804-94f0-4aa33c57ee51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68056ae-8c00-4b5c-b349-39b2ea720839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ccdb9-dd2e-4026-841c-ccaf472ba35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd1a96b-f06a-4471-be21-d7f466165368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded7b5dc-db5c-439c-b047-9cff7077e058",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5d4b0-2d08-4832-b7fc-effcdea3a845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d311f7-0a7f-4a34-8b47-57a006b3e543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af19a4b7-88e3-49c7-a6c1-80eea46cb1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659f0e3b-3fda-4a24-b12a-6d8bf8d5f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ab985b-ac1c-4b84-9aab-fa433b6246d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1243b483-dea8-44da-8e97-cdb0f785e15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b2ff3d-8379-440c-ad40-736e79e727a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5637bb-6798-4fd9-9b37-ebeed5a85a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a068b5-498f-4e6f-90a9-1876356fb50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f5b581-aa89-4ac1-88d6-972c0837cc88",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559faae3-da11-4a06-be20-756082f92907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762f1525-5324-4b02-9347-5d21fa9e1452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c90a7-79f2-47a5-83a8-00d6088e5c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ebd239-2522-42de-8162-cecbfd520798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6780a7b7-57b7-408a-9057-4ad702c7e422",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bbc404-eff5-4134-bffb-f1e136de7850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f9aa04-d729-44c3-a9b7-888845fd4022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2023a-4631-4e5d-86d4-f13d7f3cc2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981edd43-618e-4421-bcd6-bdb94bdaa277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e8096-d999-45d8-a31f-1dd1f82ec910",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d4afe4-0a25-435c-9409-b909f721edd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20e92cd-06f0-45c1-bf18-a239d058b6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a1c6c5-c7fa-49d0-8c5f-e6ef2142755f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8362e4f7-0b97-4712-82b2-087aca8e86e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89879b0-8c65-4e87-8989-83c862da0536",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74701e1-20ec-401f-a4ac-77977bba1e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101e15e7-2ec5-4318-93ec-96a4cc45b63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9abf709-ca5c-4009-be7b-72f41d7b2350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b867020f-4fab-4cef-9cf2-9897ca8d65b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33acaf-83e2-4a9b-b9f5-8834f9d1c29b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1984d188-eba3-4b58-880d-39cb49c45b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b23306-666b-4f4b-9800-eacadeab2df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afb3031-9db5-49f6-8a4a-ae2c0431240e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bdff13-d98a-4886-8564-25216fe5222e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d28964-da25-4661-ac33-5de732b4984f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd177e3-baa7-4f2d-ab46-b1efef816802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff833e5-76d5-4861-a97f-7aea1514df24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6fe8a8-a50f-4c8f-be8f-c44f435408f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a68066c-840c-4712-8f30-1398d22caf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3ed09-c359-4527-8d91-fcf635f1d9a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72835dc5-d7b0-4187-8b97-666fd4ac4972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2bc973-fd63-4d56-abce-f558156ca83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d8af4a-e40d-4508-ac44-b4218bafe4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba32a788-967d-4e47-a832-b4e9bbbcaeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4319148-ade8-4686-8619-57aea558bfbf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653e1369-b405-4324-a42d-4b91b5cd7740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff22e7f-a878-43b1-a369-8480fb60b586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be196d-a221-4782-8d6e-61732b4ba34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc0da00-ec92-47bd-b1cc-d899fd29ea18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a782db16-b724-4712-a31c-f01b12d55776",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd26dec-8721-458d-b731-e13d534e9daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1a1b1c-71f2-4cd8-8949-fc67eb1a9c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f87a90-4148-4d09-9510-7064c6510308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23007be5-a3ee-4503-ad91-5e320e46352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873c7158-dd90-4a0f-8875-29d17f620ba7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4d7c75-c28e-42dd-a880-8bf1bc491c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050a46e4-4a30-4d64-9e78-35c2b7b12ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81627bdd-b3dd-40da-bd70-cb7ae5a4c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8acc70-5861-4b85-a3f3-05c6d2f4e441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2d1d06-3c5f-451d-918d-ac0e860126d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed43d86-ae6d-460a-b4f4-8a10d4f31f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856c65d5-5c6c-4160-b4f5-d7e16555a955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c3ad25-cc80-4451-bd53-2ed99ab53577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec61c211-d800-4b78-a4a3-c70f1003d0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cadb19-e072-47dc-b147-5322174f94b0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9478be5e-bcfd-49cd-ba5f-188ff45c884a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bebb31-2767-40da-a96c-8d9382c8c145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc9274-5f55-42f5-805f-bb7e5823d959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e247c0-26a5-4722-9d13-cf0f67b57da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f69aa3-e02c-415a-b668-25bc83d49a8d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2f1bb8-dd8c-4cf6-9ed2-169766504c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97ec72f-f278-4bbe-bb48-eec22278133f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338426a-75bc-418c-b5a9-1d3763860741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f92432-a73b-46b1-b0c6-7e2bab172612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71de541d-0c76-446b-a030-86dcfb739c34",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7050612-ce02-4e82-949f-d2fe0f1ea17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834306a5-27d4-4948-93ca-e44bc69102e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d595b6-d863-47ed-af9c-7564cff79de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7255aa2-4adf-476f-ac2d-9723610645af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6014d7-634d-4539-a7cd-137d306fe260",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b2e1b5-e830-4393-a533-b8e5896d4f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954e1a5b-74cb-46b0-8110-f0ceb460beff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a01527-7f72-4ed6-9ef7-3e0bc91887cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7ee814-581d-411a-89c3-0b632f4842ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a453021-8151-40c7-afea-89d16a6922bf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a469758-09b5-4ecb-b26c-6f8810c37769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92ca165-36ba-486c-b0af-8a73565bf8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a58cf4-8ada-400b-9bc4-3fe802cb0317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30db5d1-b2ea-45cf-a021-b976ba36a71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deba081e-f081-484b-882d-ec94bf1ba79d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a523e83-0882-492b-a5d1-68571cccfdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d799b46-2bff-422b-a4e2-500f8c771600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2746976d-16a7-48d5-bee0-7747a2fd01fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba43c94-4c96-4579-9da4-75c02e32286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f12938d-f2db-426d-889e-ea81056a0891",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c14c4b-2516-451c-9c18-e0d7dc39f6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa10c62f-f191-4d99-804f-32d6d0b6b212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a303f4-43a7-4aaf-8052-52ea7db3b433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddc0ba5-ee08-4e85-9e35-5927b708484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8e2199-18f1-4636-b9cd-3031b8cb00dc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8050f-df1d-4acf-8b08-34e981e51cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f0df22-0e6c-40c7-b6e0-9095e4ab8080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18a884-f819-4ff6-ba28-74895b23c043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cdd585-2a65-46ee-9454-c72f16703fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa37a7e-9d68-428b-a48d-78423529141c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c48528-851c-4570-b48d-44819153fec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54906f1c-7495-47a4-adc0-0dc17a354d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1706c433-0208-49af-9f48-000cc04461b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0374952-bd96-4538-b3f1-bff44df57ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e536b-a11b-4a7e-8f2a-da42f904fccd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547e00cb-c95b-4c85-962b-326ae498693b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712e6fd2-88c5-4370-87df-46c6a10217cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f60e5ff-2d0b-49fb-8203-26877d3767b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd1c5f5-b847-423f-b918-dd459ace8809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0aee95-be94-4394-bae6-738797c733bd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645c572a-0393-42cf-99f1-8528e77ceb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e678589-57c5-42f1-b5bb-4c919c6235d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d1fa8c-6e8b-463d-a6a7-63afa499dc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76962487-e8b2-42be-82ac-20af0939f166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13650a6b-c9c3-415e-ab43-bab86dee631f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faeef7a-a78e-4485-b3b3-78248c24c89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff693ee-71df-46ca-b1e7-2c7be389509a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983f1d87-188b-4462-a70e-cc73f548aa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66c8224-9b73-4ac3-aa43-c449bc565c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f74a0e4-6e34-4d6f-aead-54efe5bf9b9e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b248c9b1-3eb6-4d9a-bca5-259352b8442a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfeb3ea0-701d-4a7b-8ac0-c80d0c4e95dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef95c0c-86be-488f-b71f-ccb47bf34830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9fe961-7a64-4267-b464-37f31e475b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea13c1da-fb69-48c2-be0f-abb6ce88e8b2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a38c76f-ee91-4af4-b474-fabbc728f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3d9627-02f4-4aef-abf0-47c0b2ac531f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b3c04-9a64-4d66-b39f-7e599682e4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a65899-270c-42e0-af5b-63f89221b26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4951b223-6d72-4d3a-b099-80696ebf2e0c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc7a36c-9851-4281-bc6b-0861f784a21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd6995bc-5414-4c85-ae08-8a4a998df5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbf3b23-c621-4be7-8cce-d82d82dee521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f207a8c9-a8ec-434f-8fe8-f4338607be4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eb15a5-06ba-4004-87e1-369f55aee9da",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02697a7-bc3d-491b-8ea1-70dccfe482fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af3a5fda-a147-4138-a1c5-d5db1b639b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad59e8ba-3982-44e3-ab82-c5afe9fee597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e3bba7-a583-4382-9285-b7e0815072d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c40a37-5123-4975-a7bb-9c82fe57c9e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851047e-adf1-4cfb-842e-c102d834d42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318b2575-882c-4673-8365-8ebdf3a55ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde32419-9106-49f4-aca3-fe2a7ca6a6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39584ad-6663-4f0c-957b-223be61b9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb68d1df-5056-4a00-8126-0b69c7d89809",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197bc10e-e40a-4ca9-98dd-0e2bf20f66ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17a4018-ea5d-47b6-b627-bfc6d8498adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f2f1ed-29a5-49b0-82cd-d7718232d553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85c4849-8288-4787-b6ed-e4ba2f77f123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9392a529-bf23-4b0c-bba9-61f3247d05bb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57900a5a-2ced-461a-929d-26b2626e2f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58a033f-2d56-4779-bebc-d0a484da41ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aa7098-c93f-4351-a5ea-407a4912148a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a3b2b8-aa10-4819-9f04-5ffd2d36dfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b931a7-0871-4676-9476-f72fcdd73a24",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ea7914-6bf2-421a-b0a4-d89057d00e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84017ee7-c940-438c-a7f2-97614f55d964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b15f59-ca9d-43f8-9d41-d62c22b74ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e25e0f-9aac-44fe-9564-1742c4bc2cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e64a283-a2b6-4b1f-9f5d-23d7545c7dd3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e788f25d-bace-4713-9dd2-648c43ef7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7533dfb9-5e82-4896-b879-24bf8406aebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8260d325-74a6-4c55-a8bf-d86c73fc93e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b7b0e6-b5bc-4483-a817-d431b939149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a554a5b-b391-42ad-bb86-da68a61ab8fb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05503c6-3fab-424a-8a94-51152fda87cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ded4caa-12da-49cf-96bd-dc23303d2900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6abc0d-0936-4ff2-a7d7-fb7cf7ff3bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471d29f9-53f9-4aed-8e4c-0d47cb406580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b41951-65fb-4535-9db9-b479e7b1712e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ada4ac-1265-4766-b888-9c5cf94304e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2258ec6d-7944-4406-adb6-915ca5b97c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6637010-f972-4e5d-90de-c77eac51377a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799890a7-a19e-4bd4-bdb8-834f370fd70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6f36cb-fe69-4493-877b-31a4a0a77e04",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41c7bd8-2d11-4c60-aa8c-fdbd89149463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae67482-c5b8-4ef3-be30-6634291db42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b12d7d2-aa80-43da-9628-2d71216ee609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df3aa95-0f1e-4b03-aed9-45e2a1b2068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b891a773-d727-49e5-94ad-05ea4bd9a681",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab08922-53fd-4955-81e1-41c6afbd3de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c8c548-1dd2-41bc-8bd1-8f4eb1e583f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea79c7dc-664d-42a0-b925-a9a4d54825c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54960815-745f-4f57-b908-028ee5ff3210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6b6eaa-bf14-4cdb-aeb2-c9923a75e65c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa27bd9-f8ef-4700-920f-55776e40ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc7b090-7350-408e-b0f5-f3855b0d5e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b09b1f-5804-4f82-b93a-259f9c6c9273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f685caa-0059-4c87-90cf-44a294dc82ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4abb427-6b95-4371-b491-1ae205f3cf89",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90dc32d-fd70-43a2-992a-0551eb2f63cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636a9a27-283e-4402-b205-567e2c410440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d432411-ce54-4ecb-b005-b2f53b4f32b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd21a97a-8a71-48c2-abf3-4c9e22e62d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad69ade-3328-45a1-b53f-8a4d7859049b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e739dd2b-0433-4dfc-bdd8-575381407c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b83e05c-332b-45fa-93e6-a13f01c27e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bbe979-d22f-423b-9a5f-5861d3302f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e655d7-1b7d-4d16-9886-ad6ee2c8bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1210edb8-ff4b-4ab2-88fa-f66810c77942",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4215801-8e10-465a-9b70-554a85759263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d7db51-8d2b-4f24-b0e5-baad73093789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26af555e-8763-411d-8d78-225da8044ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bc4751-2e06-48ae-b06c-5b674a8284fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524259ba-a247-4b0a-be16-b733608a6907",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa508bd-2b1b-470f-82fa-27cc2162a37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f861076b-4a3d-4727-9c22-402f8e23aeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54628bfc-fdfd-4831-af54-8ef286af66fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997159b2-3684-4a3d-8b4a-15d485207a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c165d-0c43-4836-aeb5-4311ef274282",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62d6f55-d8d7-4581-b3b2-9632af829996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e99c73-6ba7-4f06-966f-f9335d9b5f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e221c26d-f8d5-4193-af53-51ada298b1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4763881b-262a-4d94-859f-157543876638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee31cd56-baa2-4ba4-ab37-8d6ce464e48d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d95f92-89b7-497f-9d77-384f97a8773a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65151862-1ff3-4cc3-ab19-e94d9e30f62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87474bd4-300a-4520-ab3b-c0c8728f32e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394c1664-9e42-4997-b822-cb20a1c5dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6837b830-2f3a-4c06-badf-c2282bd5f49b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe98672-ba1b-480d-a7d2-9f70c38e457e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7a4ef0-b115-43f2-a395-00f6a58a1d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb91e64-617e-451b-bf5a-f7f1823cb75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6d77fb-7bbc-449f-bf3f-d581d4151864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf15942-9859-40ef-a603-a2c0fe70ff67",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd090ab-c0ae-4f6b-b044-9bf021d0dd8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410308e0-ee78-4c7e-9a31-d865a6725548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da812ae-b6b6-47c7-8e58-b8c5165c1259",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ac9737-fd28-483a-862a-616c4924b0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3182b999-aaa5-4696-abb7-95681ff3abf1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918bf182-f357-4162-84bd-43fa17a00507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb8fa86-4dde-46f2-8c06-90c4c86c461d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf571931-4cae-4d5a-994c-b1a78e3e46c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e26999-647c-4519-b66e-974a5a1784e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cab675e-938a-4365-aa1d-a828cd36a1e5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22eb738-4044-4029-b31e-369642989c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2341d631-b58d-4aa1-98ca-d72a64e28e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99964fe2-2973-423c-b20e-9dc1b6a0c796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1a6efd-3c0b-4354-87bd-e689f247b0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147fdf97-8549-4e83-bed7-685eeecdfa74",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8909b2-9722-4a1e-92a0-152037d577b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad98530-5098-423d-b923-c520f62ee5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2010cf55-16eb-458c-a951-597783c6c231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812207ea-5ab0-477d-9245-7a939b03659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c514e0a-e5b3-48c6-9f64-b8ebbb6f07d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57890e2b-25a1-4350-81b9-fede72cb61fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bff5c39-da41-4331-81db-6344b42b9707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c9816c-1667-4234-924b-bba15808e173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893324de-8bb0-47c5-8fc9-58c12a2974af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0170e61-f510-4e9b-8fc6-0f2a58473514",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6443a047-b6f4-4f84-98b6-eed13f8f15a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a045da1-e35a-4acf-ad53-4faee49539c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f80b177-72b5-4590-a607-9f11a6db0e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec8e7df-3c6c-416f-9d58-40b7deef727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590cc079-d27e-45c5-87af-2b5a3b14348f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d384b5-c49a-41e9-a107-39c15378f22d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff10e302-5b23-43ed-924d-0854dbe6596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da2fdfe-fb61-447d-9e4b-33dc591709b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1acd8a-e42c-4868-a916-3fec69c0f9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3b8b0f-53a5-443c-960f-76765f4f8dfa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7accda-0227-4dcd-bfb8-d605c0bba961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de2d501-9521-44dc-a686-b3c4ee8bfd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c953d0-1a0a-4094-a2e3-c2786c4ded07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c6c440-1dc2-4e74-a302-4164f79718fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0a9ccd9-64ad-48e6-a2b9-21d0682d6fc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4f14c57-ef83-421f-82f4-5930997b4847"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "469c6996-bba1-4fc2-a8df-82f707f80903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9eb00dd3-a20f-4960-9154-690aa8e98b40"
                    }
                  }
                ]
              },
              {
                "id": "45bbafbc-784b-48a0-9a7b-a66ff1fa3b9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af75b09a-f6b0-485f-b50a-43bc36c6dcf2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd0e3dc-bccf-4c52-99f6-181d181f82c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c744eaa9-2393-469e-b75e-e6404da6bf2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa2c6b-6eab-412d-bec1-8e6796e84549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "982388f2-eb32-49d6-8d5c-ee4e90452730"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd08668-cfe4-4483-8138-d626db743ada",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "497870a9-2195-4a91-b3bb-ec6da10a0658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d856eb3-f150-4b6a-9195-ed7e1f5a874d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8b7ae8b-5a8a-4186-98e1-856ba76fb4b0"
                    }
                  }
                ]
              },
              {
                "id": "1605c26f-96a7-4441-b334-427ebe78e85d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c0a7a99c-093a-4bca-9cb6-d956f4000888",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fb7480-35e4-4d7c-9fe6-b23291c9cbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2c6a6267-d3e5-4e7d-a928-06690cb628a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd51063-76b2-4e1a-af25-ba59c28e97a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d59572-55b3-4ee8-9fca-48894ed03906"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ec97b4f-80e5-4053-8130-1970e1869a69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6e49789-c9f4-452e-bcd2-bdb31a593aa4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2fb3bc7-992d-4678-b69e-98cbd4f614e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76a694b7-58d6-4a25-82be-750c59d00548"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20622741-4839-44a4-a2bc-9886c3d54b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "583d817f-ca97-4f82-a42c-d4be30a40e84"
                    }
                  }
                ]
              },
              {
                "id": "d9747e84-65a1-43e6-8788-4c2202e2e96c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d37e0f-14f7-42af-9b30-013730345c1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fb472e3-8d2c-4ea7-9b94-7ef37ce3cb3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd333e6c-2d0e-430c-9a65-f7ee844d2bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab8c1add-aeb8-40ca-a7b4-9e1277240b62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c506e58e-8cd2-428a-87d6-8b8cc52d2dc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "de129655-19c4-4b76-8380-3f226c5a0fc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a9ad48d-d97b-4afd-98cf-cb18c8d69529",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1519621-35c6-4a60-925a-1ae45acd7cc6"
            }
          }
        ]
      },
      {
        "id": "e20e0672-16d1-4e7d-b686-7b3ef46e2468",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a192caf8-e179-4e57-9f5e-bbae50880d30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d04744c1-b13e-4d73-b612-597e813556da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed0e8392-e3ee-477d-9ff9-5328eced16e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac106a-d507-4a32-8551-2a86c03820bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bb826b8-95d9-4a78-aaab-c423acaa4cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe97d13-46e7-4ea2-b124-007c28eb780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7179709a-66ff-4145-96e7-f36fe32c50a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "691391c4-a701-4aa6-ac16-a5d98c4daa49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a1b7271-6f47-41ad-969a-2844074eeebc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c039898a-f750-41fe-93a7-7535f926e222",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ff0035-8bc2-41e1-8f83-3635450599c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47dfb11e-f7d7-4909-a9d0-8c5f04b4927d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "726852a6-4aa0-41a7-b485-f4ed9a0fefcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3929241-4481-41ce-9c94-8b1029d16240",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74987099-40ba-4715-aa9c-93a1e1f6cfba"
            }
          }
        ]
      },
      {
        "id": "b0bc4579-05af-4bc7-ae88-28b2a6dfa4ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "08310579-f943-44ce-9dd6-b1ce3c5e043f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe68a57a-011b-48ad-b40e-7264dfb23389",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8409b457-f08a-478d-9324-1a0dbadabd15",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c270519-7ea1-4d2d-be5e-a8d65a246b77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5a0b666-d9b5-407b-adbe-e21541a47a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bcdadd-4dae-436d-b5c0-31d5334dc0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f789552f-2d78-41e3-829f-76e191af0be2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca3c0566-2493-40c6-9b64-d6db59a87f0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e61a80f-a30a-4551-a426-ccf3f62717e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e03b1a86-a4bb-4bbe-85d4-1d59560604d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1daa310c-12aa-4a86-ae74-2a6c53d52658"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c304ed28-fe2f-42bd-894a-7470c7634532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f76f6df1-cfa1-42f0-a63e-0f2d69617741"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0be2af7e-14b2-47be-9633-ffc18079e6c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ac249d6-3f67-473c-8a02-7f0920c74b18"
            }
          }
        ]
      },
      {
        "id": "b30613ae-e319-4aa6-93ad-4a6a3e63aa6a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "19e65bb1-908e-44fb-a7d2-4c18c8f0e8a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e474c97-d72b-4869-950b-af3513ea43e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd3f1fc4-b516-455d-a704-9ab73e3770e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca16e04-3ba0-4a90-9fa2-96bc778c0ce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c633bb0b-2658-4675-936f-6f4061d9a31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d45fdf-054c-462a-ab7f-842ca75e6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "285bc103-6eda-4394-873a-cbf9c7aeeabb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7912aaec-d759-4ec8-8ed5-4e76de4affa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94707761-3bb6-412c-a478-9884f1b016b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf0ad0b0-3a73-4351-ada8-b80cf970a9c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87dff0f9-8271-44d8-aa2a-5dadaf7a2eef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "944d5b4c-9d1d-42f8-b098-afacd95466aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b9ccf3b-40a7-4f2e-b63d-037a39c2f7b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cd33297-3a8f-4111-b4ff-db4b3c6973bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5b28e8c-509c-45cb-8966-bb4bdf7681ab"
            }
          }
        ]
      },
      {
        "id": "e013f0c0-61f7-459c-abb8-d906be5f7585",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca6b3731-e276-4f72-8f75-cf4945010f75",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61733c9f-c36d-4eba-b00c-1aaf01b52f03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "634723b0-fb3c-4da2-b787-689f7328aba7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2da7baa-eda7-42bf-b764-74d979209de4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44e516bf-d678-47d5-8402-7de83172dfaa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 633.8274647887324,
      "responseMin": 15,
      "responseMax": 6446,
      "responseSd": 718.734761126327,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687308122882,
      "completed": 1687308315236
    },
    "executions": [
      {
        "id": "1a7e7a71-d5dd-49c3-8f75-8859d0950a2b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4444071f-5351-4461-a506-342f137cd0f4",
          "httpRequestId": "cf23bd78-abba-4d3a-8b13-c6dab18b9735"
        },
        "item": {
          "id": "1a7e7a71-d5dd-49c3-8f75-8859d0950a2b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0350c1bc-f754-4b85-a1ee-d15ac32ffdab",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "9b1febe1-0760-4516-80ef-ad55737e53ac",
        "cursor": {
          "ref": "4cdc2ab3-0c2e-4087-9e1e-e1bdc909f178",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b46bce62-6e52-441f-b9bf-e3e4453617c7"
        },
        "item": {
          "id": "9b1febe1-0760-4516-80ef-ad55737e53ac",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f54c441d-4653-4c13-9f21-09a5fd63ad71",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "4c2f5210-7e04-48a9-8161-42a6a83dc906",
        "cursor": {
          "ref": "b453c3f2-41fe-427c-ac1c-18472cec93cb",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "69a8352e-698f-43e4-9be6-2128e786f6e3"
        },
        "item": {
          "id": "4c2f5210-7e04-48a9-8161-42a6a83dc906",
          "name": "did_json"
        },
        "response": {
          "id": "35fdcc4f-5704-47cc-ad02-426336f92cb5",
          "status": "OK",
          "code": 200,
          "responseTime": 1210,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07e687-f5ac-415d-8257-48d93b82f071",
        "cursor": {
          "ref": "4417d5a7-5280-451b-a0a2-96d3c721d253",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8407eb2d-2559-4d1a-aa86-646f2bdfb24b"
        },
        "item": {
          "id": "dc07e687-f5ac-415d-8257-48d93b82f071",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2718b2f-f2d8-42cd-a1ff-bcfdf9d19f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07e687-f5ac-415d-8257-48d93b82f071",
        "cursor": {
          "ref": "4417d5a7-5280-451b-a0a2-96d3c721d253",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8407eb2d-2559-4d1a-aa86-646f2bdfb24b"
        },
        "item": {
          "id": "dc07e687-f5ac-415d-8257-48d93b82f071",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2718b2f-f2d8-42cd-a1ff-bcfdf9d19f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4494d3-2e01-439e-9ad7-6399f9e53952",
        "cursor": {
          "ref": "7be49717-eb00-4882-b938-da0904fa767f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a3da02fd-b03b-47d1-ae73-5dd7d7d32563"
        },
        "item": {
          "id": "dc4494d3-2e01-439e-9ad7-6399f9e53952",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d8857aed-c678-48d5-99bc-f254a173a096",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1057,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf86d5e-22c3-434a-a518-e1c774e714f5",
        "cursor": {
          "ref": "5b77d2da-27df-4dda-9faa-433f502fec9f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "21d13be1-b5f9-417d-850c-98947f4e3181"
        },
        "item": {
          "id": "ebf86d5e-22c3-434a-a518-e1c774e714f5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "884980a0-5804-4fa0-b409-45119eba30d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51912a73-4a7b-4fb8-849d-b5c3c308662a",
        "cursor": {
          "ref": "03e017bc-0b8f-4045-80ec-be81cdf67923",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20683aa1-a945-460b-a17e-49c4fe1f6011"
        },
        "item": {
          "id": "51912a73-4a7b-4fb8-849d-b5c3c308662a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db354f41-1ae9-40bf-8f4c-eeaeec5fe651",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a6cb30-23db-4663-8bbb-8359ce6b7083",
        "cursor": {
          "ref": "0bd2716c-b22f-4d65-b157-537592d89e1f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "53d13343-ee50-4ebb-9f3f-5c8119aef765"
        },
        "item": {
          "id": "27a6cb30-23db-4663-8bbb-8359ce6b7083",
          "name": "identifiers"
        },
        "response": {
          "id": "9832e968-2933-4afb-8165-00513cb95221",
          "status": "OK",
          "code": 200,
          "responseTime": 1250,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7766ee2b-131a-4c83-a8b2-7e71c7b93455",
        "cursor": {
          "ref": "3d921fe0-d9ed-4500-8e51-8b3cc9a07265",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d18bec1-76e3-4d1e-baf6-c388bd8bda3f"
        },
        "item": {
          "id": "7766ee2b-131a-4c83-a8b2-7e71c7b93455",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a575c7ad-ca34-45cc-9574-2493f70e873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0db406-0883-4581-9b42-dee97dc08ec3",
        "cursor": {
          "ref": "821fe18d-36c8-4c4b-95ec-5279d65cb8d1",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ba77c98-9b18-482c-af68-3e37cdc16086"
        },
        "item": {
          "id": "ba0db406-0883-4581-9b42-dee97dc08ec3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81789750-abfc-4432-9444-a0819d15e9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5febbedb-c71a-495b-954a-0a550ccfa87b",
        "cursor": {
          "ref": "a2764457-9eb3-4211-9023-8b818cbeedb1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8407567d-1649-462e-b061-b8070b369bc0"
        },
        "item": {
          "id": "5febbedb-c71a-495b-954a-0a550ccfa87b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "372a2b4b-c021-4841-86d1-728678221dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043af2f6-85ed-4d09-b18c-32f1dc0a0a5a",
        "cursor": {
          "ref": "f8c6a2b5-77d1-42d4-96be-34c940800296",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "475d29db-db4d-48de-abae-337413cc7ae1"
        },
        "item": {
          "id": "043af2f6-85ed-4d09-b18c-32f1dc0a0a5a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85fe1736-b9d9-4765-9022-bd679f0f30f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81144039-1aa2-4485-8fd7-1181614880e3",
        "cursor": {
          "ref": "30e551b9-5e65-467a-a835-d379f2a30140",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c591a724-b5d4-4f20-bf36-a34ed086cb6b"
        },
        "item": {
          "id": "81144039-1aa2-4485-8fd7-1181614880e3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9d81606e-6f14-4e9e-9415-d9c9fba71d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37b659e-118c-42c0-9cc2-c29dd00b3754",
        "cursor": {
          "ref": "ce05b6eb-2c57-4a57-bcbe-b7145771d320",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "083509c5-2008-472e-97c0-f7e080bb6478"
        },
        "item": {
          "id": "b37b659e-118c-42c0-9cc2-c29dd00b3754",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7963bae6-e4b5-4055-a9f4-775a937301c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ba0a82-953a-4f14-9f6f-8bdde4930238",
        "cursor": {
          "ref": "6a762f95-b654-47f4-8b9e-7e2c16b4aa42",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ae713512-9b2b-4861-bca1-f33f6444d666"
        },
        "item": {
          "id": "f6ba0a82-953a-4f14-9f6f-8bdde4930238",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db65d663-03c6-4233-83a2-7fbc32abc03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a356c-768e-4aeb-8966-44effa257886",
        "cursor": {
          "ref": "cc9850d6-3d84-4d73-a3af-f1ac63ffac63",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "336bbc58-8ec1-4a7e-a2d9-3aa2785b5ddb"
        },
        "item": {
          "id": "f98a356c-768e-4aeb-8966-44effa257886",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "02821c48-33a1-4b5a-bf88-e4ae072fb514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a231305-08ec-43ec-b1a8-ed13657b2e3c",
        "cursor": {
          "ref": "492d3490-832f-4aba-ac43-3659c3f3a069",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1a4f39ec-96d0-482a-aed6-cd388a620ccc"
        },
        "item": {
          "id": "9a231305-08ec-43ec-b1a8-ed13657b2e3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c833bcbf-d40b-44c1-9aaa-c6af89490d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5160fbb-72ca-4440-98b8-7ac3edf32ced",
        "cursor": {
          "ref": "c55a2957-a797-4f22-be51-6523293876ad",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5df8df06-3771-413e-930b-abb799f6d967"
        },
        "item": {
          "id": "f5160fbb-72ca-4440-98b8-7ac3edf32ced",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e7c92345-d36e-4416-a30f-53e873897f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b150baa-596e-4bca-8e89-73d35c9790df",
        "cursor": {
          "ref": "eb2b35c3-9490-4750-ba7c-5c27df1a4d91",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eadf6bd6-9ba3-4a0f-9703-2f433b33a533"
        },
        "item": {
          "id": "5b150baa-596e-4bca-8e89-73d35c9790df",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9e55d91f-885c-4722-940d-9ce41e91b93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42e605d-dc20-4916-8798-1cf802be87ca",
        "cursor": {
          "ref": "8e6d6ef3-a8a8-4b0c-8b17-931704f2df51",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ba5be7a-88a7-42d3-9ae7-c44b99b19752"
        },
        "item": {
          "id": "c42e605d-dc20-4916-8798-1cf802be87ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e03aece-9d1c-4151-b725-3a5f298dce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d8296-6640-428d-b584-d1c91a473956",
        "cursor": {
          "ref": "13e96f6d-84ca-44b2-9263-5fef43c44a6f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "245c636a-ca98-40df-9615-8c21b71e283d"
        },
        "item": {
          "id": "1b5d8296-6640-428d-b584-d1c91a473956",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5c2924a8-77fc-4e59-b940-946b4ec96775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241296a3-8116-432d-b39e-809f2a61edae",
        "cursor": {
          "ref": "06485ca7-bb22-4c70-873d-57afa53402e6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8574d2d5-d5b8-4a5c-9f6a-92a03f6c4af6"
        },
        "item": {
          "id": "241296a3-8116-432d-b39e-809f2a61edae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "42c06dab-0165-462b-9ebb-46d4204a47fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6a0138-3860-4f04-9f13-7de7c8fb9754",
        "cursor": {
          "ref": "ee4ef79b-b921-4c8f-acf3-01cef32e8739",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "93c9c83b-3cdf-4cf6-b679-61eb594ada2e"
        },
        "item": {
          "id": "eb6a0138-3860-4f04-9f13-7de7c8fb9754",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "58d50f65-aec5-4712-89d3-d144885ee464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31abf7f4-a05c-432e-b5b3-1c3edef1b89b",
        "cursor": {
          "ref": "e82cc0a2-0693-47b0-bc8c-a27d8f24a5b8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d3487fd-a31c-4b33-bc61-c348ac2a86bd"
        },
        "item": {
          "id": "31abf7f4-a05c-432e-b5b3-1c3edef1b89b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a8d4d41-1aac-4a73-972a-83a11bc5cd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832249c-4380-41bf-ad14-6cd36825ea14",
        "cursor": {
          "ref": "7b3bcd7c-2931-4e43-9213-f548ccef05e8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "36191e72-10b7-4334-b8f6-49074375b106"
        },
        "item": {
          "id": "c832249c-4380-41bf-ad14-6cd36825ea14",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3e02105f-384c-4b20-aabb-6b00b60723d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3be00-7ad9-4a9d-ae0c-873ac6a12f14",
        "cursor": {
          "ref": "ec851704-2b33-43cc-833a-ba4b5c67e5a5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "58713a2b-e5bb-4017-bc89-61cb20418b6c"
        },
        "item": {
          "id": "0da3be00-7ad9-4a9d-ae0c-873ac6a12f14",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e240bb02-03c4-48d3-a53d-1841f38ee4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48595774-a51a-465c-a6a3-d3cbba35e81e",
        "cursor": {
          "ref": "0b5f985d-385d-4e1e-9d31-4e5ee947a930",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8130a22a-152d-45a2-8e8e-01d8bff46daa"
        },
        "item": {
          "id": "48595774-a51a-465c-a6a3-d3cbba35e81e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "05e19ddb-5e8f-4566-b826-fce4bd909e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac52cf39-6cc7-4733-9ef9-0c6a5884de38",
        "cursor": {
          "ref": "57d0cb02-6c49-46f9-8a4c-f0a75bfd53ef",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7dc789b8-824a-4552-a3f9-27c6b09908a3"
        },
        "item": {
          "id": "ac52cf39-6cc7-4733-9ef9-0c6a5884de38",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cf5afd42-798e-4f07-a3ff-a718a08b6cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4e37c-7ce8-407f-9703-c2c41a665aca",
        "cursor": {
          "ref": "6231166a-1698-41ac-8d22-0673a1b3ec01",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5213886f-a805-4cc9-a892-15ba1d982672"
        },
        "item": {
          "id": "52c4e37c-7ce8-407f-9703-c2c41a665aca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cc27937c-a6c1-4d4f-b57f-463fc1749220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c577781-acc4-4fa1-bae9-9058b9ebe32f",
        "cursor": {
          "ref": "608c1851-e74b-48a6-b6c2-50013355de2c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "46f0d03d-5680-4fc0-8690-4583a851387d"
        },
        "item": {
          "id": "4c577781-acc4-4fa1-bae9-9058b9ebe32f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aec61ebd-064f-4a45-ab24-ca24fc63fba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd3e4ae-5c76-41f0-91bf-0628b534a9f9",
        "cursor": {
          "ref": "bc88a902-2a46-4577-8a21-d96aadebc8e4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1024b039-ec73-433a-8a19-9f172067ae6c"
        },
        "item": {
          "id": "4dd3e4ae-5c76-41f0-91bf-0628b534a9f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a33f2ce-fd50-4fbd-92af-1d9b0115dd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2fca65-b843-4e24-8e63-e72bcde89c86",
        "cursor": {
          "ref": "8c3b289e-3a44-4464-b6d8-3b3b922431cc",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7dbd34f9-0e17-4cf4-9618-e18cbc10e33b"
        },
        "item": {
          "id": "3e2fca65-b843-4e24-8e63-e72bcde89c86",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ea7548d2-334f-45fb-9e07-a027cd8df903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593418f2-7cdd-4538-a55c-57712eb4b016",
        "cursor": {
          "ref": "db16c930-9bac-437a-b2c6-3d7a24cb74ef",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "488b773b-d332-4583-8ae3-8fe22675f480"
        },
        "item": {
          "id": "593418f2-7cdd-4538-a55c-57712eb4b016",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2df95cae-13ce-45dc-833a-fcd80e5d2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93350c33-e770-4afc-8039-1263f2f89368",
        "cursor": {
          "ref": "023117d5-3e45-4c7f-ae8b-1a81c6ac90b6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f0ce61e-15ec-46e7-b385-c087dedced95"
        },
        "item": {
          "id": "93350c33-e770-4afc-8039-1263f2f89368",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb376f35-c00c-43bc-a7f3-340e8531658b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c4e9c-a63f-4cb2-abb4-689b764370bb",
        "cursor": {
          "ref": "c9aedcb3-59b9-451f-92db-42a674f0557f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a57acfca-5475-445c-9d53-54ac93098540"
        },
        "item": {
          "id": "ed7c4e9c-a63f-4cb2-abb4-689b764370bb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7de6eb59-f574-49eb-941c-dc73fc4aae35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b266ecc-ec72-49e0-8c7e-974f6f944523",
        "cursor": {
          "ref": "764edb58-75ee-4ffa-a66d-61e4d5af5be6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2ed85912-5b51-4730-8f8d-3c32bc09173a"
        },
        "item": {
          "id": "4b266ecc-ec72-49e0-8c7e-974f6f944523",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2514c3ad-d180-4671-a088-f37aa4cc861b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa0675e-bfd6-4b36-8982-4c69af9ebf13",
        "cursor": {
          "ref": "c2a7deb1-d659-4c77-8926-6423a3c7bd4a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "af2bbe9f-79e6-415d-922b-52634aacd3e0"
        },
        "item": {
          "id": "2aa0675e-bfd6-4b36-8982-4c69af9ebf13",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "135ad70b-a5b2-4597-8cd4-da8d27db874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1860586b-b76b-4c33-999e-c0ca58e3b03e",
        "cursor": {
          "ref": "8023252e-4ed8-4273-9e56-6ac4f80def55",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7d57f13c-c318-4bf4-bca2-6ca0c84f3e7a"
        },
        "item": {
          "id": "1860586b-b76b-4c33-999e-c0ca58e3b03e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fbd10895-743b-4a62-a76f-aef3906206db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d732c4ab-b4dc-407f-acf2-3a7dd9787319",
        "cursor": {
          "ref": "0914495b-f823-4757-9fbb-a40368dd0f40",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f2bdf5a-5d4e-4ba6-bb82-9a1811fb5535"
        },
        "item": {
          "id": "d732c4ab-b4dc-407f-acf2-3a7dd9787319",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "41f45cc1-cef7-49b9-b178-b0c0a5e43b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cd1eab-7bdc-4c2b-b2ec-d84bf4ec510f",
        "cursor": {
          "ref": "472a71d3-e313-484a-9887-de131b146653",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2385271b-677a-47c9-b135-f539c54fd6b8"
        },
        "item": {
          "id": "92cd1eab-7bdc-4c2b-b2ec-d84bf4ec510f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4b934467-978c-4438-8c2c-3d86c68bf564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85caaa26-417a-4d66-8b0f-67881b2ea7c0",
        "cursor": {
          "ref": "4cd96e7b-6bc5-406a-ab38-b3cae13c0199",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7379051-4998-4859-955b-77cc3fa45cd2"
        },
        "item": {
          "id": "85caaa26-417a-4d66-8b0f-67881b2ea7c0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4264632a-5791-4d3c-8f92-a9d2b0e104e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d98dd9-6d0d-4dfa-a2a0-fb3d63cef6fd",
        "cursor": {
          "ref": "ad1e6597-a130-4de5-a218-c5814bddfed3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ab512629-a1e0-421f-a051-43dcb2f998d5"
        },
        "item": {
          "id": "93d98dd9-6d0d-4dfa-a2a0-fb3d63cef6fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e7c76e7b-71b0-4c5b-af1d-a9a6c2879358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea52803a-2750-4de6-b0b3-6f738b44aa46",
        "cursor": {
          "ref": "2236bedf-8b3d-465f-b46f-04af99e5f228",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e2b878e-3f53-4fa3-9721-13f01712f4dc"
        },
        "item": {
          "id": "ea52803a-2750-4de6-b0b3-6f738b44aa46",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6761204a-abfd-431b-8d81-1c9f7ca4d1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f1206-6a3a-4e70-bde7-919dbdf0e7f2",
        "cursor": {
          "ref": "2da4517d-c2a4-484f-aee6-9e3c82248e66",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "931a0dc2-6e33-432c-b62d-1b804cf01224"
        },
        "item": {
          "id": "6f2f1206-6a3a-4e70-bde7-919dbdf0e7f2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f65147b0-967b-428b-a53e-142dcc33ae7a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 919,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3a6008-1249-46ff-8faf-248291ecab5d",
        "cursor": {
          "ref": "c4b167c6-eac4-495a-ad4f-f7fab5004b35",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "91c85f51-b133-4b28-87e7-f9b9ad93b7da"
        },
        "item": {
          "id": "1d3a6008-1249-46ff-8faf-248291ecab5d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3eec33da-76d8-44cc-9df5-1d5bc7cfe8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817a4a58-2ab6-49dc-88b9-094eea9091a0",
        "cursor": {
          "ref": "84ae96d5-7722-4282-84c5-36b8c4298676",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "79d6450d-b714-40a7-97fb-c5aba2340ef9"
        },
        "item": {
          "id": "817a4a58-2ab6-49dc-88b9-094eea9091a0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "41de3543-f95f-4249-af77-fa17e18bd153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1465,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90497214-a392-4257-8a9d-6d61b78632d6",
        "cursor": {
          "ref": "1cfafa49-2d87-4dcf-abf3-f7875711531a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b90a2338-2c8f-4f82-acae-398d59517176"
        },
        "item": {
          "id": "90497214-a392-4257-8a9d-6d61b78632d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6dbd042e-0e9b-4225-b070-6e56c3be0596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a107a14-b372-4519-b11e-8e439a3a385d",
        "cursor": {
          "ref": "954e83b0-173c-4952-9a01-ba70ef05050d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20914184-643b-4e5a-b286-4ba9a768bebd"
        },
        "item": {
          "id": "5a107a14-b372-4519-b11e-8e439a3a385d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ab5954c-668a-4105-af7f-040840f0f1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86b90f8-295e-43bc-9107-e9817b584db4",
        "cursor": {
          "ref": "bc170bc3-a23f-4645-9e03-385d3f2ee2c8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e22313fc-2751-4d77-9870-bcb3741425e4"
        },
        "item": {
          "id": "b86b90f8-295e-43bc-9107-e9817b584db4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16986d05-73f3-4080-82b3-8795d482d101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a30b628-93a3-4e85-8436-05c6b9abb6fd",
        "cursor": {
          "ref": "a7a22ddc-8d2e-496b-8587-b76a51ad162a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "98fceadb-4b4b-44e9-9c90-bd5161eb61e4"
        },
        "item": {
          "id": "7a30b628-93a3-4e85-8436-05c6b9abb6fd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "315547bd-1cd6-4460-b280-db1d564a7012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e631cb0-707a-4441-9f3a-57ba5f363e8d",
        "cursor": {
          "ref": "605f14cc-ad9d-426f-8069-c235a1cbafed",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6028fd51-643f-466a-bbba-95556c34e917"
        },
        "item": {
          "id": "0e631cb0-707a-4441-9f3a-57ba5f363e8d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8fb7f0e2-7b5e-48a6-a88d-7bdd2a912a7e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 898,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac20b08f-7638-4e1c-8b84-6baca676124a",
        "cursor": {
          "ref": "714a2b9c-64d5-4901-9924-c041e1fed24e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "770bcd20-7d52-4c11-9853-1d40df22d07a"
        },
        "item": {
          "id": "ac20b08f-7638-4e1c-8b84-6baca676124a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "790c2765-8c75-4b57-92af-bfe2312f0add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e8626-1732-4103-950e-a2ed219c344c",
        "cursor": {
          "ref": "995c45c3-1104-46f3-91bf-0e14695d365c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "285aa153-1a62-4b01-b624-9d0e7908d78c"
        },
        "item": {
          "id": "423e8626-1732-4103-950e-a2ed219c344c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d02d5680-74a0-4529-af57-b01f384f88c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde77ef-03d5-4f8d-a39c-d3c388dcc966",
        "cursor": {
          "ref": "85f4b555-1732-4ac8-8cd5-ffb8a97139c0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8492aaaf-c5e5-4c2d-8505-e59f351ec4dc"
        },
        "item": {
          "id": "4dde77ef-03d5-4f8d-a39c-d3c388dcc966",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9b951045-e31e-4496-a8dc-f8579f31b5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f780007d-aa4b-4930-9bd9-01c2ed305e6c",
        "cursor": {
          "ref": "96bb6035-2e12-4357-804d-d7de92edec81",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a9813beb-d1c4-4905-8917-946522399903"
        },
        "item": {
          "id": "f780007d-aa4b-4930-9bd9-01c2ed305e6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f56e21e-fd83-4184-9785-2471b6114ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5823672f-b794-4e2f-afc8-bab7ac52e9b5",
        "cursor": {
          "ref": "9dcc1fa3-4a31-4b8e-8fdb-12aec1bd29c3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b6f2670-4af2-41ad-857b-1f5348e30d2a"
        },
        "item": {
          "id": "5823672f-b794-4e2f-afc8-bab7ac52e9b5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fe79e051-2215-429c-93e6-422bc7e62199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eda799a-7f31-42c5-a7f3-c8ead78170a9",
        "cursor": {
          "ref": "e0d43fc6-cd03-4133-9d34-142f2474dd56",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "22670049-6b9f-42cc-973c-beedbe0ad3d6"
        },
        "item": {
          "id": "5eda799a-7f31-42c5-a7f3-c8ead78170a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21fab1af-b5e5-4dc4-9e09-924f72723795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b19fa-0c36-4022-b233-f7888c3e809b",
        "cursor": {
          "ref": "34d77985-f604-435d-8335-70af9f5778b7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "06b588e8-f26c-475a-8481-4555b53b249f"
        },
        "item": {
          "id": "999b19fa-0c36-4022-b233-f7888c3e809b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "35f77653-6775-4d3c-b74d-81f7ce06e6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e05c0db-92d4-4206-bf56-8f1e1fa143b7",
        "cursor": {
          "ref": "661d2e79-7727-4edb-825e-22b651be96c3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97dfa3a4-7961-44dc-a88c-d1800259ecbc"
        },
        "item": {
          "id": "8e05c0db-92d4-4206-bf56-8f1e1fa143b7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd1918e3-a2c9-47ef-94fe-8154f35025cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1225041b-b34f-4622-bf18-da42a14fdcd5",
        "cursor": {
          "ref": "2637e078-98c1-40bc-8013-ebb747762ea2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cd751650-4ed2-4161-b716-825cebe3da05"
        },
        "item": {
          "id": "1225041b-b34f-4622-bf18-da42a14fdcd5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "103dad50-f319-48e2-a73f-dcc4d79312a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e1752b-6df6-4615-8bbc-dd493d88dad9",
        "cursor": {
          "ref": "99d0d242-9f24-4946-889a-a2e66b51a841",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dc12d0f7-9491-4b95-af46-5b944685e6f5"
        },
        "item": {
          "id": "61e1752b-6df6-4615-8bbc-dd493d88dad9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee5f7b72-1e44-47a2-b5a4-fda68c228159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e655704-2bf3-421d-abb7-d7d35b17a7a3",
        "cursor": {
          "ref": "2c677797-f78e-445b-8765-dbcc9960f2e3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1051428b-3218-4e6d-8dfb-4df0e86db28f"
        },
        "item": {
          "id": "5e655704-2bf3-421d-abb7-d7d35b17a7a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8bf0508c-e5c3-4662-b216-295f0fb2a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6a2399-0fa9-4996-9a9f-b468b34ab26e",
        "cursor": {
          "ref": "71784104-a9c3-4ca0-bfbc-08c62e67816e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6d29998-c7d2-4782-83b9-0a7bdb77d53f"
        },
        "item": {
          "id": "9d6a2399-0fa9-4996-9a9f-b468b34ab26e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e0bd5bb9-6762-4dbf-892a-7af854169aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640cf661-46fa-44c1-9fff-7d23148ee62c",
        "cursor": {
          "ref": "b33a1a9e-3e63-4270-9d6a-3851e62036b0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4249d388-f90f-4855-9e0d-8893a0be0d4f"
        },
        "item": {
          "id": "640cf661-46fa-44c1-9fff-7d23148ee62c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6925f657-917b-4455-a02a-e2e049554277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec1a2c3-9f91-44e4-99ab-d4e37b3fae35",
        "cursor": {
          "ref": "aa772c0b-ba8d-43be-bb65-65043978bc7f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "030c8819-0240-439a-993c-bdb927c1977d"
        },
        "item": {
          "id": "0ec1a2c3-9f91-44e4-99ab-d4e37b3fae35",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1ad120ad-c038-4fba-acb1-bf8644e5e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e24c65a-b8b9-4447-957a-c56d119cc64e",
        "cursor": {
          "ref": "26565baa-6830-4538-9359-d16a6c35c0e1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a36e39f1-07e6-484a-bd5e-6601d9bdc5fe"
        },
        "item": {
          "id": "0e24c65a-b8b9-4447-957a-c56d119cc64e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d0a254e4-63f9-4a53-935a-5f6855df34f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e540fce-d0fa-4117-96da-ec88da7aeeec",
        "cursor": {
          "ref": "dd3227b0-48c8-45ca-8cb4-bfaf4f98a28e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90755fc2-6e91-41d0-bd7e-34bdddfaf274"
        },
        "item": {
          "id": "0e540fce-d0fa-4117-96da-ec88da7aeeec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "acddbb0e-dd59-4985-82dc-a0a7188c4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fdc95f-e297-485e-a68b-4af6ecb76ca2",
        "cursor": {
          "ref": "567a78c9-7e40-4867-b13d-8c62d232ece3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8a8a5dc1-78e5-4d24-a283-945fbcceada8"
        },
        "item": {
          "id": "e9fdc95f-e297-485e-a68b-4af6ecb76ca2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a7af201-ce1c-4582-9155-4829d2aacdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c230ef-536c-4ae4-8af5-2ad33dbc715a",
        "cursor": {
          "ref": "931b2714-5af6-4a87-80c4-befa0e76755e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "41ffa780-97e0-4889-a6c7-4365b33a78dd"
        },
        "item": {
          "id": "39c230ef-536c-4ae4-8af5-2ad33dbc715a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e6119aad-8daf-4038-a69b-7888d11d46a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b11784-e12c-4d05-a1e6-d45ed070d0ac",
        "cursor": {
          "ref": "7fd89529-f958-4ee5-b82b-4ee08f753265",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a58638b1-2739-4ad4-be1c-4d096bfbfab1"
        },
        "item": {
          "id": "59b11784-e12c-4d05-a1e6-d45ed070d0ac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "312cfd72-8d15-4833-b943-8a96df31534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ebd070-dada-4033-bcfe-fa50c5446037",
        "cursor": {
          "ref": "04c2d19c-5d07-482a-98e4-321bd3af40f6",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "081be943-e788-428c-8ebe-f63541f6354b"
        },
        "item": {
          "id": "c6ebd070-dada-4033-bcfe-fa50c5446037",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "08da4f81-cf3f-4230-80bc-cf1ec5346772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbeaee5-f329-4f09-9a00-72daacf57288",
        "cursor": {
          "ref": "a29d05a5-cfd2-473e-9c47-1f63120fc79d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d07b4cf6-f2f9-4fba-870f-08030487e3ab"
        },
        "item": {
          "id": "dcbeaee5-f329-4f09-9a00-72daacf57288",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "92e06b56-8eea-4e3b-b480-2c7740b2e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41333003-0f67-4ec9-9e77-0e8c57be5f17",
        "cursor": {
          "ref": "59b23f7c-b7e1-49d8-8531-838949d79ba0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "49a5694a-0fed-4433-9ece-80f6bb12efe5"
        },
        "item": {
          "id": "41333003-0f67-4ec9-9e77-0e8c57be5f17",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe065814-0112-49a3-b17e-5dcba872da4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b8f9d2-ebc8-44f0-a515-da7e446b953d",
        "cursor": {
          "ref": "76d4bcab-e7d5-4cc6-8adb-21bcb6c061b3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8bb2208-6fd5-43f3-8b6c-df19810d8d65"
        },
        "item": {
          "id": "81b8f9d2-ebc8-44f0-a515-da7e446b953d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "31ee42cc-c6f3-4347-9842-6a3b70ac5438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9614b84-449a-4505-8afa-8e59eb659259",
        "cursor": {
          "ref": "1292e458-8943-44a1-b85d-1bc90f74564e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ebeba341-9d58-4e4f-b492-d736b6d60002"
        },
        "item": {
          "id": "b9614b84-449a-4505-8afa-8e59eb659259",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4c35aa5-2c74-49c6-b123-70006873e26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1786a25-c40d-4127-938e-79ecd010bb85",
        "cursor": {
          "ref": "0f7f490f-4034-4aa3-8b6d-e8e65244986a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "87fa6a00-af9e-42c2-95ab-29de742e3fad"
        },
        "item": {
          "id": "a1786a25-c40d-4127-938e-79ecd010bb85",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "37f2978d-68dd-49f6-8f7d-d6674dac37aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6f4af5-2e62-4027-97b0-4e0c98f7ba2d",
        "cursor": {
          "ref": "476559f1-7e3d-4f24-a3d8-868897c7873e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e6c673df-ece5-4561-99fd-0735402ca8cb"
        },
        "item": {
          "id": "9e6f4af5-2e62-4027-97b0-4e0c98f7ba2d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a8f9683f-960e-48e7-8e48-33cd629fd508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42881c1a-e978-488a-8c8a-4119935d6d55",
        "cursor": {
          "ref": "22cf43aa-8707-4cc5-a9fe-edf6bc8f86e6",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d322d667-d1ad-4987-845c-47ca7ce387bd"
        },
        "item": {
          "id": "42881c1a-e978-488a-8c8a-4119935d6d55",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3b7a8a13-ed30-4097-8d5c-015d9a6c3703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b66157-5236-4eb7-b872-989ebb417fb6",
        "cursor": {
          "ref": "f6132266-c77e-44bb-8a79-72f1b4115609",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "635ce213-b0e5-423f-9686-2f111fe05a4d"
        },
        "item": {
          "id": "d0b66157-5236-4eb7-b872-989ebb417fb6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad2d146f-79c7-4f88-b55e-a1f82a69943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf425cd7-1e70-4aed-b5df-7eb88eb36414",
        "cursor": {
          "ref": "0971ca38-8751-461c-abfd-41b880bb60d7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c549278-5272-4a77-8c9e-26bf747e9dcb"
        },
        "item": {
          "id": "cf425cd7-1e70-4aed-b5df-7eb88eb36414",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ddabf29-3e9a-49c6-ad43-b06c41176192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d546e5-ef2a-4b77-92f8-b45d86e885ad",
        "cursor": {
          "ref": "945b7318-c6f0-43a7-a446-382c111f33bc",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "39a81eec-d375-4929-9208-d07a2966cf29"
        },
        "item": {
          "id": "82d546e5-ef2a-4b77-92f8-b45d86e885ad",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9d1e3dbf-5619-419d-8dfa-a78c4a36bdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7e1496-3356-46e6-82d2-a71b80a1e99e",
        "cursor": {
          "ref": "dabd8d48-fc74-40b8-a5ce-ba8e9ee4501d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "63de1b06-dd0d-4d0e-ba00-a9906b6f474a"
        },
        "item": {
          "id": "8f7e1496-3356-46e6-82d2-a71b80a1e99e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9eb903d-705e-4952-992a-4f6437640bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193fc35e-867f-4ab3-9b53-5b7d2112ce48",
        "cursor": {
          "ref": "ba499c4f-3a8e-4cfc-82b5-fccc1d4f0534",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5bf0eec9-3df5-46ae-a75f-09076ecaf6a2"
        },
        "item": {
          "id": "193fc35e-867f-4ab3-9b53-5b7d2112ce48",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ce32fd5-57bc-4dd6-a5eb-418bc206eff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebc734c-0aba-4a7c-ba55-86ccb390e253",
        "cursor": {
          "ref": "502845d0-2633-46bb-bb65-1d12f61a80a5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f3eb616b-e06a-4cfe-8a4e-4c606eb679e0"
        },
        "item": {
          "id": "aebc734c-0aba-4a7c-ba55-86ccb390e253",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3c301681-16bf-4206-8da8-74e5a2a2d552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f4959-cf83-4b7a-ae52-a273ecd967c8",
        "cursor": {
          "ref": "bdd3f98d-dc22-40e0-bd0a-08faa7010d48",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dcdb2817-a4e3-4abc-810b-463c1b3064b3"
        },
        "item": {
          "id": "b27f4959-cf83-4b7a-ae52-a273ecd967c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eb4c0c9f-0798-4d0f-8f1b-56f82cd6b505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568629f9-4d6b-4c05-b61f-6d756bd18cfa",
        "cursor": {
          "ref": "606d432c-cbc5-4efa-bc1e-565ac22e0b23",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a24fc53b-1600-4a92-969e-9016c3a35136"
        },
        "item": {
          "id": "568629f9-4d6b-4c05-b61f-6d756bd18cfa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f5d5321-bdf4-4996-8d5c-401d3eb384e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1719578-89ad-44ce-8709-a081fc52f11d",
        "cursor": {
          "ref": "4e2b5dc6-9d45-4827-bfbf-1919cbf450a7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f5cd9d93-2db7-41cd-a9af-032a2cdc5337"
        },
        "item": {
          "id": "f1719578-89ad-44ce-8709-a081fc52f11d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dc09f3ea-b0b6-406f-8d59-baee89d97a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363dfaff-c575-4a60-b6bf-cf6dd302694e",
        "cursor": {
          "ref": "d2aeb85d-99c8-484e-857f-48b7dd14279b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21ea1262-ca8b-450d-9ac1-7fdf018a5889"
        },
        "item": {
          "id": "363dfaff-c575-4a60-b6bf-cf6dd302694e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4538aadb-2739-4ee8-bcd2-098c8f46c3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f233241e-e2ae-452d-8137-cbb0fa7a2830",
        "cursor": {
          "ref": "ec9d4a52-2601-4a54-bd83-b5fd5a89615a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9039078c-6c04-47f3-9e17-8b49aae42eac"
        },
        "item": {
          "id": "f233241e-e2ae-452d-8137-cbb0fa7a2830",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "012604df-b885-42ff-9291-e1080f98cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5a3a1-8094-4565-b776-5cfc35e92acc",
        "cursor": {
          "ref": "30ce68c6-a340-4795-b003-cce3c47b853a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92e14844-9f2d-4cfc-9de9-491f17e48d58"
        },
        "item": {
          "id": "b8d5a3a1-8094-4565-b776-5cfc35e92acc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ed116420-8b26-45a8-8540-dc125c23ca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d74429-232d-4310-9fc2-72e99a7aa03e",
        "cursor": {
          "ref": "ab39ff70-c3d7-4831-888c-45781b1a450d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7753c059-de97-46d4-9e95-e8aba52a8ff0"
        },
        "item": {
          "id": "13d74429-232d-4310-9fc2-72e99a7aa03e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3466dcea-c048-4349-a219-6f8319417603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f35bbb-afb9-470c-9853-41490c6cfce3",
        "cursor": {
          "ref": "51d90471-5a7e-447c-910c-eef5b318859b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4f0b207-6e3c-436c-9444-0a6f60256d9a"
        },
        "item": {
          "id": "35f35bbb-afb9-470c-9853-41490c6cfce3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6e6d5db5-d7cf-4441-9b87-ddb44c699add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca8e27-fb32-4a19-b581-ce2303b35877",
        "cursor": {
          "ref": "4857692d-baeb-425f-bcd4-07febf458f50",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9333c153-2345-4efa-94c8-8529a6d451ae"
        },
        "item": {
          "id": "b0ca8e27-fb32-4a19-b581-ce2303b35877",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "397cf0f4-796d-4d11-aa77-444b678c42ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4079559b-706f-44df-83bf-8ea8c96bedf7",
        "cursor": {
          "ref": "aef5108a-52d0-47ea-9299-f1ae2087ff4d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "add35c7c-87b8-4cbc-a854-74b1df4c6a38"
        },
        "item": {
          "id": "4079559b-706f-44df-83bf-8ea8c96bedf7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3faa2ac7-e354-4762-9ba1-5983883092ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aef352-4dc4-4654-b81e-765cf535ccd8",
        "cursor": {
          "ref": "e3d7b530-b81e-403a-ba25-38112a1fdd65",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e919281e-9852-490f-96bd-d37982f6f500"
        },
        "item": {
          "id": "43aef352-4dc4-4654-b81e-765cf535ccd8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "212d28c4-d7f4-4215-88b9-5c10043c45c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c882ed-293c-4da3-b332-ac4fabfb850d",
        "cursor": {
          "ref": "ccf101a9-fd53-4068-adea-64c8ee615f9d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a1c94f9d-8782-488e-8c08-92416d413830"
        },
        "item": {
          "id": "77c882ed-293c-4da3-b332-ac4fabfb850d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e39de139-e515-4d85-b9f4-148a7175290c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3151b53b-408f-4dd0-95db-234850c5cc5f",
        "cursor": {
          "ref": "d942ca4e-50c0-4ad6-aa15-7766c078f668",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "087f686e-94a4-48ed-9f08-6f92f85564e7"
        },
        "item": {
          "id": "3151b53b-408f-4dd0-95db-234850c5cc5f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "85ba211e-da6e-4321-953d-f69209cdfc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aca6213-90ee-4d87-ab33-fb284881140e",
        "cursor": {
          "ref": "8efa4bef-4cbc-483a-9443-13df3d0a9d20",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b12ce7c7-f612-4f4e-89a8-51ea5fa5bc0c"
        },
        "item": {
          "id": "8aca6213-90ee-4d87-ab33-fb284881140e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c6c3b8c5-4538-48eb-92ce-1e1a89d97e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d19a4-3011-418b-8132-e178fc05e064",
        "cursor": {
          "ref": "8e1f1e8a-36b7-4ce1-813e-b90ff66181c2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0d20ed6d-35cd-48cf-8e50-128b5fe918e1"
        },
        "item": {
          "id": "6b1d19a4-3011-418b-8132-e178fc05e064",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "97970141-9951-4f28-b797-164c1ef488a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1f66ca-a3ea-4d7b-aa6f-5d0906802395",
        "cursor": {
          "ref": "65d23929-5084-406d-800c-463379e6e8ad",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e2836fe5-e3af-42a8-abb2-bdf544ce26bb"
        },
        "item": {
          "id": "1f1f66ca-a3ea-4d7b-aa6f-5d0906802395",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8e73a701-fa6f-4b16-86bb-2592763a9ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939b0a8b-f887-4b8f-a59f-32bbb416b2fb",
        "cursor": {
          "ref": "34e52d71-395f-4462-9134-7e549c76ca39",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "db2aef42-fb40-47fb-8b22-fdc252700ccb"
        },
        "item": {
          "id": "939b0a8b-f887-4b8f-a59f-32bbb416b2fb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "26cbc167-de34-42f4-9d14-69be51e4735a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6232d5b-a16e-41f1-bf1c-6b05cb88603d",
        "cursor": {
          "ref": "301767e5-dd3a-46d6-9761-9dccdc4db188",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ee98612f-c9ff-43e2-96ff-28d6b1f60c8a"
        },
        "item": {
          "id": "c6232d5b-a16e-41f1-bf1c-6b05cb88603d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ef77c717-81dd-4ced-8fe7-a0d74e24be3a",
          "status": "Created",
          "code": 201,
          "responseTime": 6162,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e73a881-5dde-4267-b3a0-1b78ccb31d7d",
        "cursor": {
          "ref": "b288b1a9-b01c-4ad0-b836-0a37420e65a6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3ffa2d89-735b-4058-ac03-d040f9566acd"
        },
        "item": {
          "id": "1e73a881-5dde-4267-b3a0-1b78ccb31d7d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cb0938e3-ef81-4250-b36e-cfcf4d1a1f7b",
          "status": "Created",
          "code": 201,
          "responseTime": 5541,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c826ec10-303c-4de2-91bf-3799835e35de",
        "cursor": {
          "ref": "83b0bab4-f18b-4659-8384-551d0c6084c6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "affc5952-c783-49df-9886-75c9995aa9a5"
        },
        "item": {
          "id": "c826ec10-303c-4de2-91bf-3799835e35de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "239a8af9-b72f-4e3a-a4bb-d3af882f9015",
          "status": "Created",
          "code": 201,
          "responseTime": 5225,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aac3daf-7686-4809-94a9-24e4394d3f52",
        "cursor": {
          "ref": "e1588d3a-2be1-4690-b8d5-8c691f2c65da",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccd5db2e-82fe-47e2-ab0a-6fca20296511"
        },
        "item": {
          "id": "0aac3daf-7686-4809-94a9-24e4394d3f52",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a165b4ac-f08d-4f3e-9397-29c5a4e35c2b",
          "status": "Created",
          "code": 201,
          "responseTime": 6446,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65fba6b-3158-475d-872f-55f9ef0469c6",
        "cursor": {
          "ref": "cdec5f5b-87fc-4729-94ec-2d86c2516fb8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1f69bdce-f978-45ca-8fbb-cfc2c82f7b43"
        },
        "item": {
          "id": "c65fba6b-3158-475d-872f-55f9ef0469c6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "96fcc479-2b93-4d97-a152-df0cf3585ba6",
          "status": "Created",
          "code": 201,
          "responseTime": 5424,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd085b8-ff12-4365-af48-57b3d2c932b3",
        "cursor": {
          "ref": "7a6acf03-36a1-41a5-ab39-9aece6da2ae5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "97139886-66b0-419f-ae00-b663e46a620a"
        },
        "item": {
          "id": "fcd085b8-ff12-4365-af48-57b3d2c932b3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9d43120a-d924-4a32-9c14-7fc2e03ed0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "bb04f706-0437-4f7a-8eb9-15e232d8a0f1",
        "cursor": {
          "ref": "f311c095-e78a-4623-be91-a1c19332f9f0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "377677e4-3277-4bba-be3c-f25cded03553"
        },
        "item": {
          "id": "bb04f706-0437-4f7a-8eb9-15e232d8a0f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f4ff6678-34cd-4816-9177-bbb9db5b11da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee24317-aa83-4080-91ad-de21b4f2064f",
        "cursor": {
          "ref": "b4e6b9ba-fcae-4b32-937f-873f3b0f0077",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "656d9314-f2f4-4cd2-8a8a-0d53ff374d2b"
        },
        "item": {
          "id": "8ee24317-aa83-4080-91ad-de21b4f2064f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ddcc9f0-e49c-4d76-99df-388d3a8c5085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6647c87a-fe53-485b-8c7b-c47359bd1609",
        "cursor": {
          "ref": "f456c6a1-f475-4698-b5b5-e0b64d7ebc3a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "227e66c6-57f4-469f-8932-22ad37e3051b"
        },
        "item": {
          "id": "6647c87a-fe53-485b-8c7b-c47359bd1609",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5a190dd-5589-43c3-9d5f-368ec62e9ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a04bbfe-5177-41e4-a1e6-dacfe3d1acde",
        "cursor": {
          "ref": "14f01246-ec4c-439b-9852-761d3395a989",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f6d31093-38d2-40f8-887e-13fb55013f7a"
        },
        "item": {
          "id": "7a04bbfe-5177-41e4-a1e6-dacfe3d1acde",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce267662-a77f-40fc-9e84-68003d16da22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9eba2c-17dd-49e7-8fc4-0c42e90d5d26",
        "cursor": {
          "ref": "532f5ec5-292d-472b-9dd7-82b69c410a88",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "460c057d-4873-4e32-88a9-cd664c1bbb0f"
        },
        "item": {
          "id": "3b9eba2c-17dd-49e7-8fc4-0c42e90d5d26",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8da9809e-011d-4671-ba37-af7040ad4665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fd8c30-4258-4d13-b5d7-d980915b7025",
        "cursor": {
          "ref": "59c048c2-ec34-4264-9743-9c0e067e2a71",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "471c8159-4945-4035-909a-e22b0fd40b6c"
        },
        "item": {
          "id": "26fd8c30-4258-4d13-b5d7-d980915b7025",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "894f72e2-7a99-4d01-a94c-77b7f1bd928c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909251f-436b-4edd-b67a-1785f6509e17",
        "cursor": {
          "ref": "012db49a-7ec6-46a5-81be-46078b0696b7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c2eff3e6-52fa-4d2d-abcb-c62f08730fdb"
        },
        "item": {
          "id": "e909251f-436b-4edd-b67a-1785f6509e17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9197c77-20bb-41f4-af53-777b97d3d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1061bf13-fdba-4743-b79b-0ddf8a103cd4",
        "cursor": {
          "ref": "97a6efb7-2f13-48f8-adf9-97e3b6058dda",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ef105a62-0574-445c-8211-54966d7c676b"
        },
        "item": {
          "id": "1061bf13-fdba-4743-b79b-0ddf8a103cd4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5647fb75-5ca1-4cde-b533-17b3ffa286cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd037fa-2659-473f-9687-cd9ee9a24da3",
        "cursor": {
          "ref": "ced68f60-2423-47c7-bced-b8005edbf20d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "01da05d7-26a0-4fce-b204-39dc24bbd47e"
        },
        "item": {
          "id": "1dd037fa-2659-473f-9687-cd9ee9a24da3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e65c2290-588e-4256-9bf2-9119f4f3fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c841e5e-ebf6-4019-8886-b71c4294a2e7",
        "cursor": {
          "ref": "826064c2-940b-4284-b618-68bf15a5777f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7c7acca8-2959-4633-8561-67d370537386"
        },
        "item": {
          "id": "5c841e5e-ebf6-4019-8886-b71c4294a2e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2dfc0717-6329-4c55-982f-cac190427b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6713f62-6b9d-4d9d-bbc5-bdffedca5149",
        "cursor": {
          "ref": "a0e04e3a-0298-4485-b6ff-ec2f61ac3e4d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22063c9b-58bb-4106-959e-c740ac76c06c"
        },
        "item": {
          "id": "b6713f62-6b9d-4d9d-bbc5-bdffedca5149",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d92de686-1d76-4d54-b9a2-76b9c161f2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5775e99e-39ea-46b9-8569-0e7efd218a31",
        "cursor": {
          "ref": "1377aa93-6e67-40c5-a112-90d0b65f9810",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "79437d2b-18b6-449a-a1e4-d6ebc9459aca"
        },
        "item": {
          "id": "5775e99e-39ea-46b9-8569-0e7efd218a31",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5d54a27-a356-4ff2-b8bb-e82c2f1754f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23448d5-c4f1-47d2-a3a1-1f85cff34878",
        "cursor": {
          "ref": "8d2c511a-8a09-4ed9-9a00-d55e88142664",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46e55209-f2eb-4897-b130-81601c8a615e"
        },
        "item": {
          "id": "b23448d5-c4f1-47d2-a3a1-1f85cff34878",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c5bc70da-22fa-4703-872c-63a433c259de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6aee81-5066-474d-b70a-f449b568f5a8",
        "cursor": {
          "ref": "72b7dba8-8af9-4e81-8cde-73674dd5e23b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "033eedbb-b41a-48a2-a0d1-4944a940376b"
        },
        "item": {
          "id": "5b6aee81-5066-474d-b70a-f449b568f5a8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8e9c0c0-a7a8-44e4-be8e-fe39dc3bc1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb468b8-a765-4a9e-b543-519a7a1d2036",
        "cursor": {
          "ref": "67284e56-11f1-4ee2-9857-538ff7eca378",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35be2bd9-760c-463a-8f74-be73e63f6686"
        },
        "item": {
          "id": "7bb468b8-a765-4a9e-b543-519a7a1d2036",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "db6080fa-3d53-4186-8e7d-f9ec7ba39f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a237c5a-269f-46db-afad-ecdb7d23a8d8",
        "cursor": {
          "ref": "eb0a9c4a-18ee-457c-aede-495d10cc9476",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3e160b8b-dd4b-4cb5-8d7b-72a705bec84d"
        },
        "item": {
          "id": "5a237c5a-269f-46db-afad-ecdb7d23a8d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eaafec5b-ac56-4acf-8d86-3e0feca7e8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc565de-2dd6-4b62-8002-5fd7a31bcbe1",
        "cursor": {
          "ref": "692b6da2-97fd-4737-879f-c6365fe8505f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27aa5e21-221c-4e38-81d8-dc627dea7d3d"
        },
        "item": {
          "id": "bfc565de-2dd6-4b62-8002-5fd7a31bcbe1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c0eb120a-63e9-4e29-87da-a75e9f9efab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0eedf-a5fb-4017-984f-384c95fc4487",
        "cursor": {
          "ref": "0bc66a1c-5ad2-4b08-9669-9683730a1d1b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aa77574e-422b-46c8-bdcb-f1b61a066b4e"
        },
        "item": {
          "id": "d4b0eedf-a5fb-4017-984f-384c95fc4487",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf18dc11-f242-40ad-bd01-584951629099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4404d1a0-8b1f-4cbd-9605-45b3ac5781d0",
        "cursor": {
          "ref": "97265c12-716c-481f-bcb7-e58b1c7f793f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "27ab2b75-1889-4d43-84c9-de711728fd49"
        },
        "item": {
          "id": "4404d1a0-8b1f-4cbd-9605-45b3ac5781d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "26188d3c-f3c9-4823-82f6-d0d55e3ccac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d58e35-186a-4261-a92b-63ce13411c56",
        "cursor": {
          "ref": "7288dda2-6783-43f0-8c94-cb843ae5ad77",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "068009f8-43a7-45a7-8466-59238c3ee64e"
        },
        "item": {
          "id": "b7d58e35-186a-4261-a92b-63ce13411c56",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd11f719-24c8-4363-815b-3c41a80e6f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e958be5-7e3d-4569-8eeb-6045befb9a23",
        "cursor": {
          "ref": "d2c0facd-bce0-4dfc-9db5-1407a9ce73c6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e65cc97-ab53-4538-a8e8-82f4b27075c8"
        },
        "item": {
          "id": "9e958be5-7e3d-4569-8eeb-6045befb9a23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05f993f0-ded4-4473-9516-6bb68585192b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4afba-ef09-494c-9e1e-a870ee771e08",
        "cursor": {
          "ref": "535cfd81-5a63-4f36-a3c1-6bac676273db",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6c889f3b-b4fc-4cc0-9412-f830db07b7dd"
        },
        "item": {
          "id": "0fe4afba-ef09-494c-9e1e-a870ee771e08",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4284bb76-0e4e-4108-8305-90368ec3519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bc571b-24f9-4367-818a-fb311706d7a7",
        "cursor": {
          "ref": "1fc0b906-8ccd-40aa-ada4-1981c98321db",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bf8a0baf-8f49-4e1a-aaed-8aa9c64a39a4"
        },
        "item": {
          "id": "e4bc571b-24f9-4367-818a-fb311706d7a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2b5fdbf9-1561-4344-b1a4-c97becf73e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7406460d-8087-4097-bd48-5f7a6fd35443",
        "cursor": {
          "ref": "4085d855-cd21-4dcf-aa05-3a368fc98bc1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "db413456-cb48-4cff-ada7-bef7b86fb058"
        },
        "item": {
          "id": "7406460d-8087-4097-bd48-5f7a6fd35443",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60434c91-024e-49f2-8c24-81b108a8c86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf0b0b6-043d-4bf0-91b3-59ec032de518",
        "cursor": {
          "ref": "5b78c029-fbf4-4ed9-b35f-0d71296c1565",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9bceb978-6a74-4b82-9389-81e14d191cb6"
        },
        "item": {
          "id": "fdf0b0b6-043d-4bf0-91b3-59ec032de518",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fc2f69ad-4a87-4b6d-a158-8cc9cc53b172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e423c8c-5652-445a-987b-17f7d0d3c2bd",
        "cursor": {
          "ref": "a9339907-9f1e-48a1-a3c5-b1413b0c7ad2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54d432ab-d6f6-4038-b376-f3c1f528e427"
        },
        "item": {
          "id": "4e423c8c-5652-445a-987b-17f7d0d3c2bd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d989d748-69c6-4b4a-9a00-26f29cd79dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6e2534-64d6-4655-ac5f-68b36f42ee97",
        "cursor": {
          "ref": "d7d4156a-896e-4def-a18f-efd97f6b8032",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "af761fad-ef12-4a39-aa00-c7bd50151a27"
        },
        "item": {
          "id": "cf6e2534-64d6-4655-ac5f-68b36f42ee97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b5b8ef7c-7bbc-4929-aed2-0f56113de745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20313bc6-a463-477c-88b7-9064321b9ace",
        "cursor": {
          "ref": "68a73c25-940c-4f8f-85da-62c0986b4785",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ec976a81-504d-45e8-a5de-9599ef656cb2"
        },
        "item": {
          "id": "20313bc6-a463-477c-88b7-9064321b9ace",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8455ba15-c10e-4d37-ac2d-59a7f869f39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d41ba2-a069-4c34-a498-7dd9d49f4461",
        "cursor": {
          "ref": "b5776929-c869-4b6c-856d-aa8959846b23",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d564b09-8a5c-415f-933e-f823a97a4435"
        },
        "item": {
          "id": "89d41ba2-a069-4c34-a498-7dd9d49f4461",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "90e00fbd-1be7-48dd-b36d-a21683c9b744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd7b512-4ee2-4bdc-9f04-77acba3b1574",
        "cursor": {
          "ref": "06ad4fea-f1ee-4061-863e-c24954104761",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26d3ae12-fafb-42f7-8b7f-a1ce345d708c"
        },
        "item": {
          "id": "6fd7b512-4ee2-4bdc-9f04-77acba3b1574",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e113fd13-d771-4aff-90c0-6997b01e6b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ad6891-fd7e-40e9-9cb2-23a5561b0200",
        "cursor": {
          "ref": "f075edd8-7696-4f0f-a8ef-46fe0e30189e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f1ccf895-4126-4a42-9ac4-c4654a47faa5"
        },
        "item": {
          "id": "23ad6891-fd7e-40e9-9cb2-23a5561b0200",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "680ffa4e-0334-43e2-9792-13d0fc09d3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a68169-7b2a-4f0d-b570-ef2b1d5a5a68",
        "cursor": {
          "ref": "fe0b55d8-eebc-4abb-bbcc-e87dd4d31f25",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fbb90a8e-c50b-4fd9-9dde-77a436202d91"
        },
        "item": {
          "id": "43a68169-7b2a-4f0d-b570-ef2b1d5a5a68",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0645bd63-f0f5-488c-ba1b-37e91b5820a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cd2e21-353a-46b3-bd8c-42489785a7d9",
        "cursor": {
          "ref": "b3900780-cd2d-40a7-a012-e0bd57538e0b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b50914ad-648e-44e4-bf39-14b4500915f1"
        },
        "item": {
          "id": "c1cd2e21-353a-46b3-bd8c-42489785a7d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4bab7588-ec32-46b2-b129-7ef2e0d7e7b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630841f2-e052-4a7c-89d5-c44af6c55f2f",
        "cursor": {
          "ref": "73245021-7419-4b4c-8008-1084914c478d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50b2a083-e059-4905-8214-8740ede258b6"
        },
        "item": {
          "id": "630841f2-e052-4a7c-89d5-c44af6c55f2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67f05322-fb2a-433a-a788-f3759b5c0448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d614187b-a4bc-4156-9dd0-b5bab3db7880",
        "cursor": {
          "ref": "73c63f7c-82e5-44c1-9f3a-06dfc007f80c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b7a24688-b4d9-4fe9-a697-90703e023001"
        },
        "item": {
          "id": "d614187b-a4bc-4156-9dd0-b5bab3db7880",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6fa4c6d7-38e3-48d3-aca2-263e8bbe6afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93410e7b-0228-4822-9f1d-699ceb3eff90",
        "cursor": {
          "ref": "088d9ee5-4874-4af2-a69f-c624d8deee23",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a123881f-1638-456a-a860-eda9aec1c962"
        },
        "item": {
          "id": "93410e7b-0228-4822-9f1d-699ceb3eff90",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7dc7c442-0412-4d9a-8930-829939500622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d1a0ac-79ea-468a-9fdf-5bf61c7e4a2b",
        "cursor": {
          "ref": "949b22d8-7984-41be-96ec-4f4b0c03249b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c236da49-7580-4621-a3a5-835ab695897d"
        },
        "item": {
          "id": "96d1a0ac-79ea-468a-9fdf-5bf61c7e4a2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3246118-84ea-41b8-923e-03b1f5ef8fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f770b2-4022-4d92-9818-63cfdbffc6d7",
        "cursor": {
          "ref": "5873d427-2c51-4b08-8ee2-536f7ec167c5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "75edb8f7-4a07-4e3d-854f-491360a8881a"
        },
        "item": {
          "id": "a1f770b2-4022-4d92-9818-63cfdbffc6d7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b85446f-0d0c-4cd0-ab28-5a2282a25fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3c44ce-6d5c-468d-8297-77f5642b55e9",
        "cursor": {
          "ref": "361766dc-5138-4155-aa13-b51d399cde85",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f5386f77-028b-4891-ba65-e450f14978d7"
        },
        "item": {
          "id": "fd3c44ce-6d5c-468d-8297-77f5642b55e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44e1d274-14c1-4288-a38b-d6b3b82e14d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3836a991-7156-44ef-9caa-3bb117d8b9fb",
        "cursor": {
          "ref": "47d4b165-f452-4e47-8283-631c68fda05e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "655a9237-fc68-4f41-a087-af22b549cff9"
        },
        "item": {
          "id": "3836a991-7156-44ef-9caa-3bb117d8b9fb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "38146c3d-ab46-403b-90dd-df42f918c487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbbbe05-750a-42a2-984d-734a930d2af9",
        "cursor": {
          "ref": "af870df2-9382-4438-a324-6c208913d5f0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "93751abc-ece2-47b2-a380-6a0f1ffdf945"
        },
        "item": {
          "id": "fbbbbe05-750a-42a2-984d-734a930d2af9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d96de2cb-dde8-49b5-8645-c623384bb0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b59f717-a514-44e0-bc5a-7eaf242a2a16",
        "cursor": {
          "ref": "f355eddd-9a0f-402c-8889-4c2400f52db0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "94d7d2e5-f14b-46eb-87d5-85493b935bd6"
        },
        "item": {
          "id": "8b59f717-a514-44e0-bc5a-7eaf242a2a16",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "880d7674-021c-4cf2-968f-b70a1ff15b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0415ce3c-7d44-471d-b19d-3d0bd53890de",
        "cursor": {
          "ref": "0c405bbb-7b1a-4a33-bf42-22ac5c0f7732",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7e5ede0b-5e3a-4295-9a9f-1ff1f186f365"
        },
        "item": {
          "id": "0415ce3c-7d44-471d-b19d-3d0bd53890de",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5558bf52-401e-4433-b3c0-9ad13b3550c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7615f4-0ba3-4011-b44e-4b166ff02477",
        "cursor": {
          "ref": "b813be95-db0f-4720-91db-e6780ae90101",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f283c3e3-678d-441b-bf78-8d5c584eee15"
        },
        "item": {
          "id": "2b7615f4-0ba3-4011-b44e-4b166ff02477",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a8a395f5-298f-4aca-b597-b99c1048ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf1fd1-9d4a-4a3f-a0bd-b86b0b651428",
        "cursor": {
          "ref": "4c1e3f6e-e4c1-4ecd-8a5c-80f2a5c53a46",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f6be876a-c60f-43e9-99fa-fc428568304c"
        },
        "item": {
          "id": "4bdf1fd1-9d4a-4a3f-a0bd-b86b0b651428",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60d2458c-235c-478a-8487-64e3c4f899f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61047ffb-d966-4d75-bc80-8d5246de661c",
        "cursor": {
          "ref": "b3f68843-de3c-4d79-9b91-1c77578d59d2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1e563c68-da76-4470-a106-817a1c439ba6"
        },
        "item": {
          "id": "61047ffb-d966-4d75-bc80-8d5246de661c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7633bb7-f659-479c-9935-8f8f2f4f3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51eaafa-79d7-4d12-b9e7-31f441e45a50",
        "cursor": {
          "ref": "30a7cb98-b59d-4838-bb04-b38afaf6e188",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b90587d3-9ec9-435f-aaf0-c3369576f365"
        },
        "item": {
          "id": "a51eaafa-79d7-4d12-b9e7-31f441e45a50",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7edb3a41-85fa-4bef-a43c-8c97240b1385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca19a9a-1ec6-491e-b397-329630b3c521",
        "cursor": {
          "ref": "933a37c1-6327-479b-98ab-dfa571f9c00c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b3bce27d-17e1-4f10-ad82-3df9f5cadd00"
        },
        "item": {
          "id": "2ca19a9a-1ec6-491e-b397-329630b3c521",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2d02456-03ed-4b26-8f2f-58da48e23846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acf2967-60d8-4319-a0ec-236ec461bac1",
        "cursor": {
          "ref": "c2da3af0-d1bf-49bf-9926-febe752b5314",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bbe10edf-f957-4cd4-9a59-b7cbc92c0619"
        },
        "item": {
          "id": "7acf2967-60d8-4319-a0ec-236ec461bac1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b48eb21f-862e-40c0-ad79-1e54ae54cf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce06e2cd-8518-4b58-b295-8132231ef57a",
        "cursor": {
          "ref": "fd9682df-2bc5-4340-9f78-14286137333b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c090e300-37b2-4baf-8371-1c75e435c470"
        },
        "item": {
          "id": "ce06e2cd-8518-4b58-b295-8132231ef57a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c790591b-857d-435d-8fd5-4cda0b9855ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faab88ec-5f46-416b-a275-1791ae734141",
        "cursor": {
          "ref": "62093dea-2fa5-4ed9-aedf-22a2cad9dd2d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9bf1c774-1585-43f3-baae-5d3828fad38b"
        },
        "item": {
          "id": "faab88ec-5f46-416b-a275-1791ae734141",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b4e1c9c-3133-4028-894a-a976ba104971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a75632c-e363-43df-a3c8-e27f09179a43",
        "cursor": {
          "ref": "3f5e7418-fed4-4bf0-a72b-ce61d9fa7264",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cd01bb86-9046-426e-98a8-75cc30fbe91c"
        },
        "item": {
          "id": "7a75632c-e363-43df-a3c8-e27f09179a43",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28ba96e3-a3b6-49b4-8b26-a1c5acd5a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12987498-b881-419d-9d40-ea932095a2f1",
        "cursor": {
          "ref": "704069a2-032f-4c1a-9161-93543038d653",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ea155ff-a4c4-4ae2-aee2-c64e078aba17"
        },
        "item": {
          "id": "12987498-b881-419d-9d40-ea932095a2f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce34fde1-7279-4d8b-aac0-d35dbdf69a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe7e11-65b2-419c-9f68-fd0246c9e8f7",
        "cursor": {
          "ref": "5168aa3a-075e-4726-ac0d-ad32ec3bc661",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7d7e4cb4-a043-4165-85bb-4ce36a9eb791"
        },
        "item": {
          "id": "46fe7e11-65b2-419c-9f68-fd0246c9e8f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef834849-1d9f-414a-a9c8-3de1038849e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d2232-bf2f-46c3-b0f1-e338ac262b1f",
        "cursor": {
          "ref": "390ca07e-974c-420e-84e8-ccd5fc999f51",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ca0606f-8417-477e-8ef7-fb41b2770fab"
        },
        "item": {
          "id": "aa5d2232-bf2f-46c3-b0f1-e338ac262b1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07af40fa-5eac-4100-9ad3-f15098b0ef99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dab8c5-43f7-4dec-a1c4-7653bc08e5dd",
        "cursor": {
          "ref": "b4a8f327-e27d-43ed-8663-f041318112f4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "339b5349-ec83-4401-a05d-05d2c54d4b8a"
        },
        "item": {
          "id": "00dab8c5-43f7-4dec-a1c4-7653bc08e5dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0021b16d-8b3d-4cfd-bd42-56bac3842ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b712645-f4ea-4f1c-bc49-085259eed4cf",
        "cursor": {
          "ref": "afa6c1d5-04b4-4108-8b3b-904c93e544a8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "abb950ab-bdc1-4593-a653-7aca65ba818a"
        },
        "item": {
          "id": "0b712645-f4ea-4f1c-bc49-085259eed4cf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "323096a0-3fa9-4979-8317-fc54889118a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3af70c-4666-4175-a18b-6d759d87e61a",
        "cursor": {
          "ref": "b35e228b-424e-4d67-8a5a-c268618f2aaf",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "49b52f58-e081-4db6-9f08-38b80eafd974"
        },
        "item": {
          "id": "be3af70c-4666-4175-a18b-6d759d87e61a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3cbe1cb2-3a6e-4c12-8e92-1c0601679b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69c6eab-db0f-4821-86ef-057955cf0dac",
        "cursor": {
          "ref": "9a1c0c63-35c3-4ffe-9923-8dd175a91c5f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "133a4182-2e43-4526-a51b-f787c981abe0"
        },
        "item": {
          "id": "b69c6eab-db0f-4821-86ef-057955cf0dac",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "475f9c43-10e3-408b-836e-0cd426e2a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c5be5f-b29d-478f-bfd8-7ab56f5f30cd",
        "cursor": {
          "ref": "3da61890-ebe5-45f5-8698-f51d0accfb3a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "164f96f8-8385-4ea0-b84e-f8aa7a706d11"
        },
        "item": {
          "id": "e8c5be5f-b29d-478f-bfd8-7ab56f5f30cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "794f7aa9-2bbb-42c7-abb8-973817c00e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06337e1-ee91-45c0-9747-ad6d8e240677",
        "cursor": {
          "ref": "5f6c45c6-0d2c-4371-bb1f-47d0c6357f73",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f95d56b-a3f0-4d3b-a4e3-7ae491df9a94"
        },
        "item": {
          "id": "c06337e1-ee91-45c0-9747-ad6d8e240677",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8e4c96d0-be80-4c22-9884-e28dc8d92248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004c015-1d89-4079-a49f-48283d931ee5",
        "cursor": {
          "ref": "db6ab1ff-ab84-445a-8d7a-31a0a40af3f7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "086c89c8-93ee-4a61-a9ac-4e07c6e396ca"
        },
        "item": {
          "id": "7004c015-1d89-4079-a49f-48283d931ee5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "45c425ee-8b32-481e-b270-1d07cfa24d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9000e8-d176-4db1-ba03-8a0874571c02",
        "cursor": {
          "ref": "0a6dc82f-fb84-49f0-aee7-ed0e7d4385c2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf9ca48a-adcd-48e6-b368-efd5aa7aa4fc"
        },
        "item": {
          "id": "3d9000e8-d176-4db1-ba03-8a0874571c02",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9f65683-2bd1-43b2-bb4e-37957e2e50ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d109436-f8af-476c-8de2-455e8b625f67",
        "cursor": {
          "ref": "69671d60-fdac-469a-a1c7-768a1c3eed99",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f30f4004-32d2-4a0c-b10c-79f6184a29e7"
        },
        "item": {
          "id": "5d109436-f8af-476c-8de2-455e8b625f67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16503a37-0ab2-45cd-bb45-aa40db16752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c25838f-fc92-49f5-8042-12e74e56ff6a",
        "cursor": {
          "ref": "d2678e7f-a63e-4ff4-813e-ed5bf231951d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e570bfd-fa63-42df-93e7-0ff558eb2c68"
        },
        "item": {
          "id": "4c25838f-fc92-49f5-8042-12e74e56ff6a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da1a4d26-fb20-4e8a-b632-4d6a666b872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc86667b-2833-4d85-8709-2bdb90ced545",
        "cursor": {
          "ref": "94068f88-eafc-4ca8-952d-a1fdec249d12",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "08134838-5fca-4eac-9997-2ee5d2ba47ba"
        },
        "item": {
          "id": "bc86667b-2833-4d85-8709-2bdb90ced545",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d89cd4c8-c3ab-40a8-85b0-4f30c8d73908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d426ffb7-17b4-44ca-a9c6-8f4ca2620698",
        "cursor": {
          "ref": "a5119460-4261-42df-ba5c-c17c84ee3e0b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1dcf6d85-f57c-4b81-8755-875738be610f"
        },
        "item": {
          "id": "d426ffb7-17b4-44ca-a9c6-8f4ca2620698",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "35cf29a6-db7f-4b71-9a01-d978ed467f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082bf9d8-61e8-4981-b4ad-e1d42c0a0686",
        "cursor": {
          "ref": "dd00a100-4bd7-4c6e-89aa-0ecfde45a56d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e399f918-41e0-4452-b3ea-1fc6256d87da"
        },
        "item": {
          "id": "082bf9d8-61e8-4981-b4ad-e1d42c0a0686",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "df12e90c-d298-4967-b8ef-8f8362f7a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d51f17-f11b-4be2-bc2e-1997888aeb5f",
        "cursor": {
          "ref": "0c39d54d-a02f-45cd-9ab7-6226e6411d00",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9cb1b6b-367b-4353-bf83-d880d6b74c6b"
        },
        "item": {
          "id": "04d51f17-f11b-4be2-bc2e-1997888aeb5f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9a21e270-7206-46ac-a1c7-3b81dd1848dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a5af6-3fb7-4951-9c8c-1c327bd6275c",
        "cursor": {
          "ref": "c596c618-6070-4aac-81ad-b85cf3494c3d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "47c7fa42-920e-4a18-bbab-7d551ff9fa43"
        },
        "item": {
          "id": "072a5af6-3fb7-4951-9c8c-1c327bd6275c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22b4f9fb-1974-47ef-9405-fb6efbd9eb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bdcfd7-94eb-494d-87c9-808d215ee85f",
        "cursor": {
          "ref": "24120c06-c433-4d48-bb07-fd49ea154328",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5649a0a0-8be4-4757-8e8e-b431ad6df8b9"
        },
        "item": {
          "id": "51bdcfd7-94eb-494d-87c9-808d215ee85f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98c184f5-b5b4-44f1-831f-856005449533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f1686b-d525-4981-8d1c-fbe975073a90",
        "cursor": {
          "ref": "92be5baf-7f6f-4d61-874a-f83e1902405b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "af2dc622-4b94-445d-9c57-198f1e0a2278"
        },
        "item": {
          "id": "49f1686b-d525-4981-8d1c-fbe975073a90",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a0d8a956-ba01-4d6b-ba21-95704041511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36779e-22ce-4431-8d32-bd46c472112d",
        "cursor": {
          "ref": "3a245bb6-02f8-4d5d-8b3b-4215db4e1e4e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "efc48aff-49f7-4262-90b2-3a07adc813b3"
        },
        "item": {
          "id": "ba36779e-22ce-4431-8d32-bd46c472112d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e0f308dc-a938-4189-a43f-302bb009ae04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4fe7fb-0b31-4380-9498-7d5dc8e2e314",
        "cursor": {
          "ref": "03a2688e-82f6-4eba-b258-1539ae0628a6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d5882c60-2964-41cd-8878-0ebbae1880db"
        },
        "item": {
          "id": "ab4fe7fb-0b31-4380-9498-7d5dc8e2e314",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0fe96c6e-32f0-47bc-918c-0a732dcd6373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdc3d7-f734-40cd-bc9c-18dbb565d14f",
        "cursor": {
          "ref": "3b3c0e5f-ad99-426e-af58-4ddb27e1c589",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b9b1bbdc-01d5-4630-9686-070889b54179"
        },
        "item": {
          "id": "56bdc3d7-f734-40cd-bc9c-18dbb565d14f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc303ec6-029c-4790-8007-977a343874b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb34bba8-8f86-4554-8f14-b68f7afcb1d7",
        "cursor": {
          "ref": "995ae6a5-db43-497e-8d1e-a7d443ab8498",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60768e6c-c27a-4626-a673-0d06c75da053"
        },
        "item": {
          "id": "bb34bba8-8f86-4554-8f14-b68f7afcb1d7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8d31070d-6a21-4af5-bb04-ba8ae2bad07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a85d48-7f23-4030-b189-668fe65ca334",
        "cursor": {
          "ref": "32f60f28-dc71-4d12-8767-cfd4313ef0fd",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d841da97-1f99-4e2f-9379-28ee53f501f0"
        },
        "item": {
          "id": "f1a85d48-7f23-4030-b189-668fe65ca334",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7e3a74b-ff3e-423e-938f-676008875a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960c7d09-6315-46e0-a087-04ed32ffcd6c",
        "cursor": {
          "ref": "94fbfe92-b90a-4e26-8a60-5f791c15424d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dfbdcea2-19a2-4379-9582-74c8da681a3d"
        },
        "item": {
          "id": "960c7d09-6315-46e0-a087-04ed32ffcd6c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "10f28c1b-d2df-4dcb-83be-a65f77435d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d619f57e-cf57-4133-b458-dcb9d2ab53b1",
        "cursor": {
          "ref": "f5082aef-f2b0-4da6-801c-b4d1774d41eb",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "384fe9aa-0fb4-48d9-a609-b6cecf0f5a0a"
        },
        "item": {
          "id": "d619f57e-cf57-4133-b458-dcb9d2ab53b1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "50cd7a21-4181-43f8-96b4-9d2bfef347b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50e7dc7-c020-4fb9-9bc0-b6a238e45bea",
        "cursor": {
          "ref": "c25167a4-9798-4da8-8991-ca94bd42b474",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "60b67514-de0b-4d74-9de4-3a80a3b10d08"
        },
        "item": {
          "id": "d50e7dc7-c020-4fb9-9bc0-b6a238e45bea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3ea3ac72-ecf7-4ed6-a84e-c0cafaa14bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548df139-21a5-4f09-9e85-f476ad4b8d04",
        "cursor": {
          "ref": "c8ba11d4-8786-4448-af82-bafdfceeceb4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "759a7d5f-bdda-4589-9041-06b2d163e2c4"
        },
        "item": {
          "id": "548df139-21a5-4f09-9e85-f476ad4b8d04",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b9e9ee35-03b2-45d5-bf3b-02d1d789b976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a9e60a-d64e-4394-9f2d-504ec767a845",
        "cursor": {
          "ref": "ea82151c-286a-4d4c-8029-330a8df1f54c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7849dbdb-d15c-4050-bbde-cc6ca0b08a14"
        },
        "item": {
          "id": "23a9e60a-d64e-4394-9f2d-504ec767a845",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bcd5ffec-4e64-45d8-b70e-00e2b48fa31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5bc4a3-1960-4e96-8f35-1e4fb024a484",
        "cursor": {
          "ref": "a10ae426-81fc-4e7a-804f-6adb372674a6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1d510886-911b-43fe-9a73-4320d469b876"
        },
        "item": {
          "id": "ce5bc4a3-1960-4e96-8f35-1e4fb024a484",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f93e4c6e-fe2f-413c-b2eb-678646ae2854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffbf29d-6c5b-4efa-8012-8315dfc4024f",
        "cursor": {
          "ref": "190bfbd9-a312-4ea5-8109-0f4fb4f4448b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dd000277-5f76-48d3-a444-3118395825c3"
        },
        "item": {
          "id": "6ffbf29d-6c5b-4efa-8012-8315dfc4024f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ba8c815-36ba-4f59-9317-9503c738fea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edafba0-f860-472c-825e-b7174e68e9dc",
        "cursor": {
          "ref": "be644e68-fd1f-452b-acf7-ff41df5426b8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cf5546d7-d261-4dfb-881a-ad653c7c7ac1"
        },
        "item": {
          "id": "0edafba0-f860-472c-825e-b7174e68e9dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a19bf8e5-7e99-4734-b506-c69b810e1ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e86d226-3156-413b-9501-8b355c96e1ae",
        "cursor": {
          "ref": "6fc01145-f6c2-4b15-9eaf-88ca81eb5d2c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7fec2d4-d2aa-400b-a292-bcbcd188bc16"
        },
        "item": {
          "id": "6e86d226-3156-413b-9501-8b355c96e1ae",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c3e82c0-c233-4839-8ffa-57fbf9318ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8021d887-81b1-428c-b1c4-95be3cabf262",
        "cursor": {
          "ref": "825ef95c-7cd1-420a-8e6a-291efba27290",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "94112950-0c7b-4c7a-8cc7-c9ef7b332889"
        },
        "item": {
          "id": "8021d887-81b1-428c-b1c4-95be3cabf262",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "199ebae8-ce4c-40ad-b624-830dafc759fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133f5354-dcce-48cd-95d9-2a82e87a0003",
        "cursor": {
          "ref": "92e44035-9edb-427c-8379-fe200ae87764",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "340b6d99-c400-47e2-97fd-05da9479eb8f"
        },
        "item": {
          "id": "133f5354-dcce-48cd-95d9-2a82e87a0003",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0203ec1b-28ff-4903-8c2a-da8e6b8ac0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ffdc9-d8d3-4563-b200-ee7505d4f86d",
        "cursor": {
          "ref": "4324c57d-b424-44c2-b424-33f3a2c82dec",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "850e3b2b-f186-451f-8abf-adbe2433fb2b"
        },
        "item": {
          "id": "507ffdc9-d8d3-4563-b200-ee7505d4f86d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "265c9f3d-321a-460a-a2a2-52b2cc9f1f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c388a3b1-0128-4b5e-942f-22942f036adc",
        "cursor": {
          "ref": "c1db9e8e-a180-4f8a-98a1-5d024b1e0cd2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e7f596d5-4213-434f-bff7-f381bdcac6ef"
        },
        "item": {
          "id": "c388a3b1-0128-4b5e-942f-22942f036adc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5eec2688-caf5-4d6c-82bd-ffc9413dd05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf975ed-d032-4c40-bb5c-a68d7f5b1059",
        "cursor": {
          "ref": "956c418f-36b3-4473-81b1-aec2ca58e956",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b527f2d9-4a8a-4a74-af21-d05204de88f4"
        },
        "item": {
          "id": "6bf975ed-d032-4c40-bb5c-a68d7f5b1059",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "868eada4-cf92-4d96-8847-00984313d44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24086b34-c1e3-4a18-a873-70056c2247dd",
        "cursor": {
          "ref": "acf65980-614b-4a50-b093-72fbb30e49cb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "08e76d22-1542-4692-ad55-cc106ec2e207"
        },
        "item": {
          "id": "24086b34-c1e3-4a18-a873-70056c2247dd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6b8b01d-23d7-47fb-b43b-5823b189fcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ed36c7-7a30-4a76-83e6-5196c9560143",
        "cursor": {
          "ref": "32dce924-b1e6-46b1-a9e3-a6ff85244aa3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7913c064-5044-41dd-99b5-0ec83d925233"
        },
        "item": {
          "id": "e3ed36c7-7a30-4a76-83e6-5196c9560143",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "408a931d-4514-4855-b221-50ce828d7443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d98bc8e-7be4-4789-9cdd-057903c985ab",
        "cursor": {
          "ref": "5cdd7827-197e-47e6-bef6-3ab079ea1baa",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b96a4883-f10a-4e13-9dcf-d7333d038851"
        },
        "item": {
          "id": "6d98bc8e-7be4-4789-9cdd-057903c985ab",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "97980afc-d0cb-475a-960d-d3ed0b335246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f8b994-cfa3-4233-ad27-fe1932a0e0b7",
        "cursor": {
          "ref": "d3cde3ab-ff7b-41aa-86be-1b81d7e478a2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "80fb7dba-78ab-4304-83f9-c7b66367649a"
        },
        "item": {
          "id": "62f8b994-cfa3-4233-ad27-fe1932a0e0b7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eded83be-f654-4e80-8198-f3332093699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd23588-dfbd-46fb-8a99-701ed4be1690",
        "cursor": {
          "ref": "9fff4497-1132-4848-84bf-4d353b7c5a9b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c8d8d148-e1de-4035-97f1-153125d16897"
        },
        "item": {
          "id": "5dd23588-dfbd-46fb-8a99-701ed4be1690",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a82401ed-b30f-462c-b59e-05f4bfc893f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef377a06-c528-49ef-9eec-93c8ec147555",
        "cursor": {
          "ref": "0c425f3a-c18c-4473-b9e4-1d5545a7a989",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2adc0b38-0c8e-495b-9941-f41f656183f1"
        },
        "item": {
          "id": "ef377a06-c528-49ef-9eec-93c8ec147555",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0ba27575-cd67-4399-b675-b2649ff4d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad30a4d-cdfc-4026-86c9-bf552f749cfb",
        "cursor": {
          "ref": "f153c952-2f61-4089-ae35-dad4683f3c84",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3c791fe-ac26-4c52-a9d3-f5162b11d613"
        },
        "item": {
          "id": "aad30a4d-cdfc-4026-86c9-bf552f749cfb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3a3f5de9-0af8-4146-8300-e49feedcc452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b89fd6-cec2-47b1-bd5a-7d0f9de75861",
        "cursor": {
          "ref": "1e810190-afc2-4bc3-8140-dc187834e7d8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4320647e-1fc5-45b6-aede-11299aa20311"
        },
        "item": {
          "id": "98b89fd6-cec2-47b1-bd5a-7d0f9de75861",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b9d89f98-37a3-4566-8351-7a8025b95479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b78a21-15f1-42d9-9f32-164e5f8e4e42",
        "cursor": {
          "ref": "27a6a833-5fbe-4e2a-99ec-09d5432e687d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5cd73acb-0782-4cfa-a732-955c8dc22dac"
        },
        "item": {
          "id": "36b78a21-15f1-42d9-9f32-164e5f8e4e42",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a9ddc03-d158-4cc2-bfb7-ae4b360abe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98e8147-5c99-4b91-8e7c-1a93bb1da3d6",
        "cursor": {
          "ref": "85553946-07e6-4935-95da-3cbbbd9d5d97",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "47907a67-406a-4636-b17c-24a31fc83f1f"
        },
        "item": {
          "id": "a98e8147-5c99-4b91-8e7c-1a93bb1da3d6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9d0d3b4d-1691-47d3-a4d3-2be1503173ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c240bc4-bf87-4a2f-91b6-bdb6bca6e145",
        "cursor": {
          "ref": "f92a1267-db51-4681-9cf6-e0d887f9a3c9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fcd452e3-e50b-4fd7-80cc-29f3ae5b6c4e"
        },
        "item": {
          "id": "2c240bc4-bf87-4a2f-91b6-bdb6bca6e145",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9a875cf7-6931-4867-939d-415b08453dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd5b1d-7701-46a7-828f-7d31e6269632",
        "cursor": {
          "ref": "35e07f97-ad85-4aa9-92b9-433a381be149",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d8c3826-c937-4a52-846a-aa354e7387aa"
        },
        "item": {
          "id": "74bd5b1d-7701-46a7-828f-7d31e6269632",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "36743cb9-a950-4f86-9393-9a3bed477e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeb6866-d056-4ca4-8b58-06f851eb4622",
        "cursor": {
          "ref": "c03deadc-36f2-4391-9ab9-d5bcf01b2253",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1032cffc-dba5-454e-8d35-cca9155c6faf"
        },
        "item": {
          "id": "5eeb6866-d056-4ca4-8b58-06f851eb4622",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "023c6655-f3ba-45dd-8342-1e0c5f0be520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8f62dc-4f2d-4b53-884a-6a033ca189e4",
        "cursor": {
          "ref": "89cf6275-a55d-49da-b6b3-bb64de1a411c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "33c60abf-b3a5-4d79-a562-12e65ee913b6"
        },
        "item": {
          "id": "df8f62dc-4f2d-4b53-884a-6a033ca189e4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eeef5ca9-d998-4ec1-b3a5-45515b9db3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bbed4e-225d-4b3f-a9cd-c6be18ef7cf8",
        "cursor": {
          "ref": "2fd5ca38-6b41-4a39-b53c-661a452638ba",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ccd6a666-2231-4260-ab87-e2858a9a3304"
        },
        "item": {
          "id": "d8bbed4e-225d-4b3f-a9cd-c6be18ef7cf8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87c8043c-3219-41c8-a4a4-81902b284dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e39ce6-55d7-4967-bd42-1f07b5a7fdb3",
        "cursor": {
          "ref": "7d0002d8-1b37-4377-8e0c-ec125a55c734",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8fb1db46-e8f0-42d1-989b-f011b487410d"
        },
        "item": {
          "id": "00e39ce6-55d7-4967-bd42-1f07b5a7fdb3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9a7d14c3-8e45-4499-9b28-19a81afdb84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a1b22-4496-4df3-bfe9-5b605c14af5e",
        "cursor": {
          "ref": "95dd989a-142f-41e8-9f70-131523346eed",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c62aea5a-bcda-4a1d-a159-f1d1b368e8ea"
        },
        "item": {
          "id": "736a1b22-4496-4df3-bfe9-5b605c14af5e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5bf5ef35-6f53-4419-af19-50ebaeb4c435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd367205-8eec-4462-9954-4391730c4827",
        "cursor": {
          "ref": "a5ff4862-2390-47a3-a336-9228a399776f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2cf906ed-7261-4316-b6b7-40940e67f89c"
        },
        "item": {
          "id": "fd367205-8eec-4462-9954-4391730c4827",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "39617826-311f-46c2-8a0e-8af894b6a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cddc8a-4269-468a-a8aa-c9591c7df58e",
        "cursor": {
          "ref": "968f881f-8b0c-48e8-9155-68c64cc523f7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "726ca725-c0bd-46b5-8852-3a39960bd410"
        },
        "item": {
          "id": "14cddc8a-4269-468a-a8aa-c9591c7df58e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8330d1a9-1618-4f6b-be0b-1d5588a0a9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e553ab6-9f13-4872-9fb8-66bd7030a297",
        "cursor": {
          "ref": "42c1bac5-f458-4262-a391-0fc2d9b719c2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6529d626-5522-4b27-8804-b4b4134660ac"
        },
        "item": {
          "id": "5e553ab6-9f13-4872-9fb8-66bd7030a297",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e4609400-8592-450a-a7ec-e4628b786d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261ab277-b474-4958-bf93-0dfde7c3a44e",
        "cursor": {
          "ref": "2e4df1f2-8507-4db7-93c3-588a42d647c6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "32cdc656-0a3b-4a27-9ea8-e634e2e51a91"
        },
        "item": {
          "id": "261ab277-b474-4958-bf93-0dfde7c3a44e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "84d6ffb4-8f76-4832-a8d9-30b2806d109e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4ffb3-605d-415a-844b-4f7fbf5b1bc3",
        "cursor": {
          "ref": "e7081e6f-5b6e-4f99-9237-88063dde628e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6cb7d31b-7345-4627-9382-9e12482fcc55"
        },
        "item": {
          "id": "9dd4ffb3-605d-415a-844b-4f7fbf5b1bc3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df7b23bc-3de2-4865-a161-45119ec4f67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeef263-a041-48ad-85c8-01d402d81209",
        "cursor": {
          "ref": "fccd0246-3e24-4813-83e1-a3d1582fa56a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f62130cf-c369-4318-9610-af50999124f5"
        },
        "item": {
          "id": "8aeef263-a041-48ad-85c8-01d402d81209",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "23d23b4a-4553-4983-9e2e-e79bf148d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded7b5dc-db5c-439c-b047-9cff7077e058",
        "cursor": {
          "ref": "d595c7c1-2740-4357-97f1-590d02bf8773",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b5b5ae06-380f-48df-8e3c-cc0e153d5cd6"
        },
        "item": {
          "id": "ded7b5dc-db5c-439c-b047-9cff7077e058",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fb6e44af-2584-44e3-8efa-e47a3fdafff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ab985b-ac1c-4b84-9aab-fa433b6246d7",
        "cursor": {
          "ref": "09509418-ec0d-4356-ac0d-81733bf5f46d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fc8c9cb7-c4d0-4137-aed3-23b9a3e839f7"
        },
        "item": {
          "id": "35ab985b-ac1c-4b84-9aab-fa433b6246d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f038eaf6-af66-4212-b1be-36f082c75e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f5b581-aa89-4ac1-88d6-972c0837cc88",
        "cursor": {
          "ref": "99e99354-2b17-431c-b45a-5fc003550d98",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "563603b4-9274-4e1a-87ca-1a0d685f40d6"
        },
        "item": {
          "id": "a2f5b581-aa89-4ac1-88d6-972c0837cc88",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0644997c-3fbb-45e3-97b2-de9ca7970ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6780a7b7-57b7-408a-9057-4ad702c7e422",
        "cursor": {
          "ref": "e9bedb99-22ec-499d-b6dd-3ed6a8532817",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d4a8986c-59e1-4a5e-adda-3d4090168baf"
        },
        "item": {
          "id": "6780a7b7-57b7-408a-9057-4ad702c7e422",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b18e6299-68bf-4ae5-98b2-a5f3863a4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e8096-d999-45d8-a31f-1dd1f82ec910",
        "cursor": {
          "ref": "db3a09fb-bd19-4b5e-9088-e4b8afae719a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7161a336-1cb9-4a82-9388-4b1689e62f20"
        },
        "item": {
          "id": "ad5e8096-d999-45d8-a31f-1dd1f82ec910",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b17b0f36-d561-4f18-890f-b1a5c856f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89879b0-8c65-4e87-8989-83c862da0536",
        "cursor": {
          "ref": "88678828-cce4-4976-b5bd-c4a7fd05ead9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d775ba11-ef3a-482c-8306-37caa5165321"
        },
        "item": {
          "id": "f89879b0-8c65-4e87-8989-83c862da0536",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c51ab5ce-0479-4f74-afb1-4e2fba25e3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33acaf-83e2-4a9b-b9f5-8834f9d1c29b",
        "cursor": {
          "ref": "617a5771-d5dc-4105-8aa0-695fd946e2e4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b90139fb-a175-402a-a2c8-afdc0666d083"
        },
        "item": {
          "id": "db33acaf-83e2-4a9b-b9f5-8834f9d1c29b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1b7f51c1-8ec4-466b-918e-8bfe6520e934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d28964-da25-4661-ac33-5de732b4984f",
        "cursor": {
          "ref": "5596967f-7d9d-41e2-8451-d0b12a868467",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "11c25808-ed52-4e3a-a1de-40b786af243b"
        },
        "item": {
          "id": "c1d28964-da25-4661-ac33-5de732b4984f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66285364-ebc5-454d-91d4-2f4ff850aa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3ed09-c359-4527-8d91-fcf635f1d9a9",
        "cursor": {
          "ref": "f7d1dcb9-b8f7-4489-bd36-4cf7034fc37e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a64c9fa1-e20d-41f7-ae09-27cdd227bee2"
        },
        "item": {
          "id": "78f3ed09-c359-4527-8d91-fcf635f1d9a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "809bd5c2-8bf1-497d-9791-d82074887df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4319148-ade8-4686-8619-57aea558bfbf",
        "cursor": {
          "ref": "ce65ba71-cede-4062-b13b-b06032914d1d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a60f0839-148e-460b-b0c9-314699a68594"
        },
        "item": {
          "id": "e4319148-ade8-4686-8619-57aea558bfbf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "afbb203d-f091-432f-847d-e4e3c35517b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782db16-b724-4712-a31c-f01b12d55776",
        "cursor": {
          "ref": "6ed91d41-1263-4859-a907-50f2f42cecae",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4fa94528-54b1-4364-bce6-2a68f2bd982a"
        },
        "item": {
          "id": "a782db16-b724-4712-a31c-f01b12d55776",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0b5e40fd-a7bc-4deb-abcd-71a5bc1ca750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873c7158-dd90-4a0f-8875-29d17f620ba7",
        "cursor": {
          "ref": "0c454fd6-60ab-4e34-b89d-180c2e12687f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "deef0f47-696b-4d75-adfe-521f1a19d7d0"
        },
        "item": {
          "id": "873c7158-dd90-4a0f-8875-29d17f620ba7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cb45ad4f-0c02-4967-b9cd-9ad303386a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2d1d06-3c5f-451d-918d-ac0e860126d7",
        "cursor": {
          "ref": "9d274026-f557-4bc7-9fa9-99a0d2dd4165",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "52031d61-3a2e-402a-b4c6-c0ca1ca8c1a9"
        },
        "item": {
          "id": "6e2d1d06-3c5f-451d-918d-ac0e860126d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d6e79b63-acd4-4401-b39e-111399e43841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cadb19-e072-47dc-b147-5322174f94b0",
        "cursor": {
          "ref": "1efdac4d-81d8-4bde-9629-deb5a34dc6f2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "014916e5-2ac6-4e87-b604-2dc03bf30de4"
        },
        "item": {
          "id": "03cadb19-e072-47dc-b147-5322174f94b0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ee7f6115-2e0c-4c43-8559-e729007fc854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f69aa3-e02c-415a-b668-25bc83d49a8d",
        "cursor": {
          "ref": "9ba77b01-9389-4e42-80f0-1dc17d4df882",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ba867c15-70af-46d6-abaa-0b4976b82637"
        },
        "item": {
          "id": "c9f69aa3-e02c-415a-b668-25bc83d49a8d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d1e560e1-12d0-4cf2-9f43-a43d24e216cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71de541d-0c76-446b-a030-86dcfb739c34",
        "cursor": {
          "ref": "e0dec2fa-08bb-41e1-a0f3-09d6d2d6dcf1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fda0ba30-1b1a-49f9-88b1-0ac337fb4247"
        },
        "item": {
          "id": "71de541d-0c76-446b-a030-86dcfb739c34",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2126624e-0dab-45a8-9e14-886203193cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6014d7-634d-4539-a7cd-137d306fe260",
        "cursor": {
          "ref": "10da17cc-b1a7-40cd-b86c-323692e8952f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9156c4b4-2221-48b0-b5aa-c2297deecb67"
        },
        "item": {
          "id": "ae6014d7-634d-4539-a7cd-137d306fe260",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ee763023-d331-4091-8a76-1657709a44bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a453021-8151-40c7-afea-89d16a6922bf",
        "cursor": {
          "ref": "57787a57-e28d-48a9-b319-990928b1920a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ea530a6f-a9b1-4e51-aacf-cc5c7eae888f"
        },
        "item": {
          "id": "1a453021-8151-40c7-afea-89d16a6922bf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e6e3bde1-7ee9-47d5-b17d-09eed8686882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba081e-f081-484b-882d-ec94bf1ba79d",
        "cursor": {
          "ref": "013d987e-b6e3-4e76-aa06-7a1976fbdfaa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1d4c77d0-1721-460f-8f21-bfec50cc4b83"
        },
        "item": {
          "id": "deba081e-f081-484b-882d-ec94bf1ba79d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "44f914e1-b9d0-40df-a326-120d8e365795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f12938d-f2db-426d-889e-ea81056a0891",
        "cursor": {
          "ref": "f3661280-c1f3-4f0a-94cd-8dece8a75a44",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "515de19c-0eb7-4ce1-aaf9-01956ad0f6ef"
        },
        "item": {
          "id": "8f12938d-f2db-426d-889e-ea81056a0891",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4cdd3c15-f3b4-4a0c-8d4a-b4d8b7ad37cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8e2199-18f1-4636-b9cd-3031b8cb00dc",
        "cursor": {
          "ref": "5d1d85b1-a61f-4aa2-96fe-8fe497bf89a3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "97cc1613-7907-4c17-8d09-78b0882f888e"
        },
        "item": {
          "id": "be8e2199-18f1-4636-b9cd-3031b8cb00dc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b2cc2b3e-7f45-423d-bb76-4ce3fb87c31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa37a7e-9d68-428b-a48d-78423529141c",
        "cursor": {
          "ref": "4f6953ad-ea8a-48ba-9d1a-21159431d580",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4c8a91e-f081-4936-bc24-66c7e94aabb6"
        },
        "item": {
          "id": "4fa37a7e-9d68-428b-a48d-78423529141c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "84132ae4-9dda-4c4a-86b8-8216960dd467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e536b-a11b-4a7e-8f2a-da42f904fccd",
        "cursor": {
          "ref": "0bc2196b-d654-435c-aadb-f5113f99e9a0",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cb762cdc-258f-47ac-a116-06a532f99f4b"
        },
        "item": {
          "id": "880e536b-a11b-4a7e-8f2a-da42f904fccd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2cd8b63-60d3-4a46-9555-1993bb39a84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0aee95-be94-4394-bae6-738797c733bd",
        "cursor": {
          "ref": "afd941e5-6c88-4f5f-a099-30282f0436c8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cf376f82-2c8e-4f87-ab29-6da7cb37ce8f"
        },
        "item": {
          "id": "5f0aee95-be94-4394-bae6-738797c733bd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5d6ef543-6f85-4570-94b7-b72973020b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13650a6b-c9c3-415e-ab43-bab86dee631f",
        "cursor": {
          "ref": "8e59db6a-29db-425a-b07d-40d0974ca817",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fbf20fbd-fc63-434e-b830-07b27ff98331"
        },
        "item": {
          "id": "13650a6b-c9c3-415e-ab43-bab86dee631f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2f55efbb-882f-4a99-88e0-0ad9fa464c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74a0e4-6e34-4d6f-aead-54efe5bf9b9e",
        "cursor": {
          "ref": "5202da7c-93ef-40e0-a3c2-928128bf5097",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "35689809-c59f-41c6-8ce6-f1cdfac45064"
        },
        "item": {
          "id": "8f74a0e4-6e34-4d6f-aead-54efe5bf9b9e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "31542b72-c044-4d79-9a23-d3efdece8ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea13c1da-fb69-48c2-be0f-abb6ce88e8b2",
        "cursor": {
          "ref": "7f5b50f7-1608-46b9-b5df-ca82d074dabb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7789ae3-a6ed-490b-beec-511b2dc48a03"
        },
        "item": {
          "id": "ea13c1da-fb69-48c2-be0f-abb6ce88e8b2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4a1d3fec-2f33-4749-9c03-f70d24e2fabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4951b223-6d72-4d3a-b099-80696ebf2e0c",
        "cursor": {
          "ref": "615b9137-f456-4cdc-9109-247b763ae292",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26c0c658-22c2-4a0a-b765-e735d16c3bbb"
        },
        "item": {
          "id": "4951b223-6d72-4d3a-b099-80696ebf2e0c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b5390dbb-726e-4d2a-9371-94c76b965539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eb15a5-06ba-4004-87e1-369f55aee9da",
        "cursor": {
          "ref": "ba4d42ff-4fb7-4b77-891b-217d69c4d023",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d267b610-754d-453e-93a1-77921de7079e"
        },
        "item": {
          "id": "69eb15a5-06ba-4004-87e1-369f55aee9da",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b495d63f-cf01-4973-8815-6970bbd801e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c40a37-5123-4975-a7bb-9c82fe57c9e1",
        "cursor": {
          "ref": "60c50a34-98ff-4d54-ac80-ad619d1d984a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "594e582c-3307-473b-995f-416cf87e6a5f"
        },
        "item": {
          "id": "07c40a37-5123-4975-a7bb-9c82fe57c9e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "55061c68-17aa-45db-87cb-80e09b503f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb68d1df-5056-4a00-8126-0b69c7d89809",
        "cursor": {
          "ref": "627ccd09-27f2-41a8-9507-663e7ae86256",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "afdf05e0-04e9-4617-8787-3f07fce92d56"
        },
        "item": {
          "id": "cb68d1df-5056-4a00-8126-0b69c7d89809",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "589c634b-1e13-425c-9cdd-7b45f2ed92b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9392a529-bf23-4b0c-bba9-61f3247d05bb",
        "cursor": {
          "ref": "d5f062cb-733e-4453-859d-5f9b33b758c5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9f52d862-7a6a-4de0-86ff-bf285a396444"
        },
        "item": {
          "id": "9392a529-bf23-4b0c-bba9-61f3247d05bb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "468bd5ac-3cf9-455f-a92d-8ba632b4e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b931a7-0871-4676-9476-f72fcdd73a24",
        "cursor": {
          "ref": "27c97fe9-c2f1-4732-a214-f6b3973eb076",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "60dbd378-e343-47f4-b948-c1343401d070"
        },
        "item": {
          "id": "80b931a7-0871-4676-9476-f72fcdd73a24",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1cfd81b9-644e-49c2-8ac9-eb440a2fee1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e64a283-a2b6-4b1f-9f5d-23d7545c7dd3",
        "cursor": {
          "ref": "ff546e46-4e39-457d-8a2a-ed7a7bae0023",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "649a3fd0-cf44-4b3f-a3a6-389f82aee72f"
        },
        "item": {
          "id": "6e64a283-a2b6-4b1f-9f5d-23d7545c7dd3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8440be0b-2314-426c-8232-2909db06ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a554a5b-b391-42ad-bb86-da68a61ab8fb",
        "cursor": {
          "ref": "0ad0878c-4901-456b-a01a-4fba8cc2fe80",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "61850da9-7866-4f99-8931-3662c674d884"
        },
        "item": {
          "id": "7a554a5b-b391-42ad-bb86-da68a61ab8fb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1cb9f7d8-2457-4a58-8872-ef4344760355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b41951-65fb-4535-9db9-b479e7b1712e",
        "cursor": {
          "ref": "aebc00f1-83f3-4905-8b90-b5bdb57d8d68",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "938fdf6c-d4eb-4c43-9b84-2358f333debc"
        },
        "item": {
          "id": "43b41951-65fb-4535-9db9-b479e7b1712e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a684cd83-4e4d-4139-a7c6-726fb612d0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6f36cb-fe69-4493-877b-31a4a0a77e04",
        "cursor": {
          "ref": "fdda213c-4a6b-45e9-914f-d80847d1c4ae",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "135f5584-37d4-4fe7-b721-91c90b90cf26"
        },
        "item": {
          "id": "fc6f36cb-fe69-4493-877b-31a4a0a77e04",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9a59933d-3a73-4c68-911b-0c9729c5ca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b891a773-d727-49e5-94ad-05ea4bd9a681",
        "cursor": {
          "ref": "a5216b03-877b-420f-9a5b-96785a0f8170",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "dcc55fac-abc8-4016-b60a-b58b8a3b74a2"
        },
        "item": {
          "id": "b891a773-d727-49e5-94ad-05ea4bd9a681",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "01288657-a177-4f04-bae7-dbad0c034e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6b6eaa-bf14-4cdb-aeb2-c9923a75e65c",
        "cursor": {
          "ref": "e76e5c2e-79f7-4c96-8b78-b532943716c1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9484cb7e-f2c4-4d3d-a477-1d788a2bca79"
        },
        "item": {
          "id": "9c6b6eaa-bf14-4cdb-aeb2-c9923a75e65c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e1d0b18-c886-444a-bff2-0f20c4c42180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4abb427-6b95-4371-b491-1ae205f3cf89",
        "cursor": {
          "ref": "238572e7-5b16-4d35-83f6-3542f5c98cfd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fb67e31d-a9af-485d-89e5-12a68b9c7607"
        },
        "item": {
          "id": "c4abb427-6b95-4371-b491-1ae205f3cf89",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b3bf5152-21d0-4daa-82dc-8def4be79b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad69ade-3328-45a1-b53f-8a4d7859049b",
        "cursor": {
          "ref": "97de2469-b73c-4960-8422-d7895d093478",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "89018705-5848-46e0-9989-ff4544fbe53b"
        },
        "item": {
          "id": "fad69ade-3328-45a1-b53f-8a4d7859049b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cbb3cd01-137e-40ab-9e69-01fbd60c0d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1210edb8-ff4b-4ab2-88fa-f66810c77942",
        "cursor": {
          "ref": "ab997d7b-8492-4db2-b56c-4b34b4bf5e1e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "64aff7f5-fee6-4e36-991d-d96532f17e1a"
        },
        "item": {
          "id": "1210edb8-ff4b-4ab2-88fa-f66810c77942",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "42a79bba-0e50-4008-a6f5-35b9d60a9e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524259ba-a247-4b0a-be16-b733608a6907",
        "cursor": {
          "ref": "a0f56dda-66a1-483a-90b6-af6362884ca8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f1cc01fa-5fef-4108-ae62-c423868087fd"
        },
        "item": {
          "id": "524259ba-a247-4b0a-be16-b733608a6907",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dd9f3582-bc86-44a8-8c45-d858c2b9dcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c165d-0c43-4836-aeb5-4311ef274282",
        "cursor": {
          "ref": "e30d5ef9-caff-47b5-b1df-9d4f36f64ba5",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a107179c-ef65-4e6e-a32a-35d4a2f894c8"
        },
        "item": {
          "id": "d43c165d-0c43-4836-aeb5-4311ef274282",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e72f6cd7-28ae-4351-a43e-c999d66bd141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee31cd56-baa2-4ba4-ab37-8d6ce464e48d",
        "cursor": {
          "ref": "27fc7e2d-3dbc-492f-9439-fcc6c769481c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "95648faf-8006-4b16-b1f9-188f277ca019"
        },
        "item": {
          "id": "ee31cd56-baa2-4ba4-ab37-8d6ce464e48d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "34eb0f24-bfe4-44c3-afe3-c54f1f7ac9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6837b830-2f3a-4c06-badf-c2282bd5f49b",
        "cursor": {
          "ref": "6ec86be1-dad9-48ce-810f-7de971639ae6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5a75bd49-8040-4648-978f-dde3fe2d15a0"
        },
        "item": {
          "id": "6837b830-2f3a-4c06-badf-c2282bd5f49b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df05f847-ac33-451b-83f0-2f989e5db2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf15942-9859-40ef-a603-a2c0fe70ff67",
        "cursor": {
          "ref": "b171979a-3457-4933-9fcd-a9bc5fb892c1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b9f225c9-e4fc-4b2b-a856-6c9604526f8e"
        },
        "item": {
          "id": "ccf15942-9859-40ef-a603-a2c0fe70ff67",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9639d1a5-e100-4e23-beb6-bd01a85aceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3182b999-aaa5-4696-abb7-95681ff3abf1",
        "cursor": {
          "ref": "bc99216f-7c12-46b3-ad72-6310513f9958",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c071fb91-4734-414b-af55-81a685139694"
        },
        "item": {
          "id": "3182b999-aaa5-4696-abb7-95681ff3abf1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8f606ec0-c55b-4b18-a1b8-f46d1d86113b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cab675e-938a-4365-aa1d-a828cd36a1e5",
        "cursor": {
          "ref": "25ea8aa0-8886-4738-ada6-dabc5ebf3752",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "034357e0-7fd9-46c9-bdaa-b3037fa85d7a"
        },
        "item": {
          "id": "3cab675e-938a-4365-aa1d-a828cd36a1e5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0e1e6ddb-e8c3-4a0b-ada6-b4c4799d33d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147fdf97-8549-4e83-bed7-685eeecdfa74",
        "cursor": {
          "ref": "47286044-c57c-4111-b9c2-b499e6be43ef",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4c7fb889-5fe7-4817-b0be-d1619a4c11cb"
        },
        "item": {
          "id": "147fdf97-8549-4e83-bed7-685eeecdfa74",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7599086f-a01c-49eb-85ed-522d1a2879e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c514e0a-e5b3-48c6-9f64-b8ebbb6f07d6",
        "cursor": {
          "ref": "1b740682-0570-4135-bf0d-08bbf6967921",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4e2a52d2-8048-4fac-a991-5e62b22c4aa2"
        },
        "item": {
          "id": "7c514e0a-e5b3-48c6-9f64-b8ebbb6f07d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e991b20b-17d9-4071-9d1e-d81d6cfd5c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0170e61-f510-4e9b-8fc6-0f2a58473514",
        "cursor": {
          "ref": "146b560f-76ff-4c29-90e0-b00a0283ae8f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "90c0b918-e002-4079-ae8b-229619ccf9a6"
        },
        "item": {
          "id": "c0170e61-f510-4e9b-8fc6-0f2a58473514",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "517f9356-4a52-4a63-a9ec-0d3f540a54e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590cc079-d27e-45c5-87af-2b5a3b14348f",
        "cursor": {
          "ref": "cb13062b-c61a-45ad-8338-42d10ca93274",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "81356b98-668b-44aa-bbba-5f9f3f405301"
        },
        "item": {
          "id": "590cc079-d27e-45c5-87af-2b5a3b14348f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "03151fc0-3198-4326-be00-2338621e3239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3b8b0f-53a5-443c-960f-76765f4f8dfa",
        "cursor": {
          "ref": "d1467ad2-20d8-4bb3-8bc4-d00747ba0cdf",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8cd9a536-2fa3-46e6-95f2-e154b1be2512"
        },
        "item": {
          "id": "7c3b8b0f-53a5-443c-960f-76765f4f8dfa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ac3d0359-f9b1-40c3-b899-bf53c88c9399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af75b09a-f6b0-485f-b50a-43bc36c6dcf2",
        "cursor": {
          "ref": "2afb600b-5635-4cef-9825-f33613fe723d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cea94e53-e633-42b7-a540-1a71f9df3d1e"
        },
        "item": {
          "id": "af75b09a-f6b0-485f-b50a-43bc36c6dcf2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eeb0c0e0-597f-4b6d-bf0a-840360d76caa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7a99c-093a-4bca-9cb6-d956f4000888",
        "cursor": {
          "ref": "28cd6db8-1a3f-4753-a7a8-1be48a95b291",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "efcdadf6-2797-4078-a727-a36ee406ab7c"
        },
        "item": {
          "id": "c0a7a99c-093a-4bca-9cb6-d956f4000888",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "26cab015-5b7f-477d-8a7e-404f7b434045",
          "status": "OK",
          "code": 200,
          "responseTime": 539,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e49789-c9f4-452e-bcd2-bdb31a593aa4",
        "cursor": {
          "ref": "1f0544d2-cc7b-4e7c-85de-1d5835a34469",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d07742c2-5a61-40a0-b58e-242acba8575b"
        },
        "item": {
          "id": "a6e49789-c9f4-452e-bcd2-bdb31a593aa4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2baaa4f2-22bf-4a2e-9a0a-eade2883bf38",
          "status": "OK",
          "code": 200,
          "responseTime": 1693,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9747e84-65a1-43e6-8788-4c2202e2e96c",
        "cursor": {
          "ref": "20c36255-b484-4545-bf8c-8ec8a01e676e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "93b044a3-34c8-4037-8cda-ecd4648246fa"
        },
        "item": {
          "id": "d9747e84-65a1-43e6-8788-4c2202e2e96c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6018b3e1-6444-4c68-a40c-5c342c513915",
          "status": "OK",
          "code": 200,
          "responseTime": 1387,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e8392-e3ee-477d-9ff9-5328eced16e7",
        "cursor": {
          "ref": "3f101af0-cee0-4fa1-b638-23086b0cf12c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e0f259f7-514c-4bb7-86fa-d0a2881c4328"
        },
        "item": {
          "id": "ed0e8392-e3ee-477d-9ff9-5328eced16e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "13d13d4f-a462-4129-87cf-5a72b7a78029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e8392-e3ee-477d-9ff9-5328eced16e7",
        "cursor": {
          "ref": "3f101af0-cee0-4fa1-b638-23086b0cf12c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e0f259f7-514c-4bb7-86fa-d0a2881c4328"
        },
        "item": {
          "id": "ed0e8392-e3ee-477d-9ff9-5328eced16e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "13d13d4f-a462-4129-87cf-5a72b7a78029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8409b457-f08a-478d-9324-1a0dbadabd15",
        "cursor": {
          "ref": "bdb2de58-060d-40b7-bdbb-d6e3857ede48",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6139c679-317b-4afd-8ec0-92e9743b5074"
        },
        "item": {
          "id": "8409b457-f08a-478d-9324-1a0dbadabd15",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa9fd597-6cd8-488e-a686-af9cc8b449ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3f1fc4-b516-455d-a704-9ab73e3770e9",
        "cursor": {
          "ref": "56248f53-9a82-4d52-8ec9-c7e1ea06144a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c20b48a2-2bc5-45a4-a2a0-5691a5bdd207"
        },
        "item": {
          "id": "fd3f1fc4-b516-455d-a704-9ab73e3770e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a3ce5a3-1f9c-4aa0-a200-205fa597a1a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}