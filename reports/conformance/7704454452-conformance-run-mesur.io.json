{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc886b45-4f92-4101-bc2a-f8468ffc130e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "06647824-b144-4454-9fd9-387bba9c92be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6700200e-c907-4ed5-9362-9807da7adf82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95b10773-9603-4053-a8a3-e7698201fe54"
                }
              }
            ]
          },
          {
            "id": "c482f2f8-e7e6-422c-9ae5-11cfcb0b15c5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5a0ddd1-4f23-4939-9768-9588eaa1b028",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a6bbd37-cbe6-43c4-bbea-95577dc828e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "28f9c602-d68b-453b-837d-7bc393021e43",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "606ada1f-3b8e-4446-9e9c-3dcc8bac819b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29ea9b17-944e-481a-bfe3-b0504b665c30",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e764569f-d44e-427c-8214-05917755b583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6509ee9-27de-4879-930d-743d38807d58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ddb36a9-d4a6-40bc-a42c-beb735693237",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f63b7adf-c6b8-44dc-8966-ff5f16ecf968"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b74ba7a3-e792-441d-9801-bba317284097",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b10f3e2-e60b-4b5a-89e7-dd003aa755aa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abea755a-990d-48f7-ace7-6697e842bf50",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ea03cba0-0671-4067-814b-9b0e3f347ae0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "784907f9-3d9d-4f9a-96e7-eb13d3ab5b76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31d61865-21d1-43fc-bc00-03ad466a10b4"
            }
          }
        ]
      },
      {
        "id": "11666077-46de-41af-8c13-148f8f0743f7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b089bc00-1f97-466d-9d28-28fb4f0ed2d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a78dba62-d648-4a30-8472-d2163b8ea9cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bdcaf22a-8d63-44d1-b284-ed526a7a41b6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94610a0-c189-456e-8e76-fd896b4b1eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4348e1a-e476-4471-b488-56f6b5ac89f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0692dfb4-019b-42bd-a9f9-c7eb32de2181",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2acd0b-0fc9-4413-9c02-1e8b0a93be91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53e28a2c-e025-4df1-b9b6-b452bf92167e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8874a7e5-ed61-4004-b9a8-fc1ecdf19d24",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0e1487-e9f4-4805-88c3-d54272ecd4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22577633-9d02-4879-aaac-db7d3ffd4c1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "783e8d1d-329d-4529-b339-69e5d45c9c14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10bdfac2-0ce9-446b-9da4-f6fc9a161ea7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ad710-566d-4a96-b531-5e56facb8fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de167f09-91c7-42c9-b872-31c65e1f1932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150fe5fd-0200-4d0e-8121-2ba922f11e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc45cb45-65dc-465d-b679-4b50ec548426"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9225b260-e52e-4743-8a0f-0cf2a3ee0e03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "479c5e90-fc79-402d-96be-b12f664d487b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "650ee5b6-a265-4b8a-8b58-7bfec5569a0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d76a188-fbd6-4f0f-b0d3-2ee45a9a24b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92df048c-bb0d-42b1-99c1-f3af85f77bb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ded4349f-7ed4-475d-be53-be61c498444a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e37ca369-57f1-45c2-829a-23b6d299ba68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e36e3d2d-09ad-473a-a75c-aa79a0249405"
            }
          }
        ]
      },
      {
        "id": "08d63553-e268-4640-84ee-e260f926781a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "93a9878a-4831-4da7-82d5-cf302a7b9189",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe17081a-251c-4548-8b65-4f2c2b67027a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1efe5033-788a-41b8-98cd-4b3a45e49291",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a711c6-79d4-41bc-b28a-48925c9499f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b8670e-3006-436e-8927-cc906f8a113d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32df437a-5dcc-47ef-8809-839373c1a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42263b02-2ce0-495b-ae8b-aad1ae9eaf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48e0d5-2d83-4b25-8b52-60bab215b6b2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba20833c-60d4-4334-9cf2-d5f25e352d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee55345e-fc64-4e15-a221-b69e004db71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41d0798-48b4-4cd4-b565-dfd538d05105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ecb65e-abcf-41b1-b05e-321aaf90826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e2284-e4e7-4353-bfdd-52fd6a925b74",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac80c06-66f1-413c-b128-2f94abed594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d825a39b-f132-4749-a693-66e1540aa58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde1c6ac-1aa9-4384-8b33-3e162ae30daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8912bf76-3a89-4019-ac7e-c7336abc4dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09b6998-dd27-438e-aa01-e20e9379c8bd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daa88a8-87b0-4c93-a252-6e057fb7b315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c30623f-5fad-45e6-ade0-1336f269b302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14428e0-55ea-4300-8ac3-7327c0b324fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e30cf29e-cf1f-4b3d-8464-b2d15e168020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575f1c6e-ddcf-4c01-8ba6-6829fa94880b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695b1546-94d0-4658-b84f-824e54953578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eb5bad-87fd-4bcc-a233-cbfa1b2d9c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c335164b-6d56-41a3-badb-41d10b7685fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce5901b-b71d-4d8e-9b40-17a0379f2715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536b0ce3-4a64-4c8f-8835-a61e17d0f87b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586cad12-ae92-4fbf-a641-15ac9465c948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f767929a-d303-4417-b8f8-e5e3e68935c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aead57-073b-4df2-8bc5-81c4f1b4e775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31b8e8b5-c512-4c31-b43d-890e17d5379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8349130-9259-4eaa-9ca5-5fd55804b598",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ae5fdd-3479-4996-9fa9-a48c4050ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a8ed4e-0640-4e47-8385-3c918553628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09333ef-a3c7-4548-aaa9-0988ff399f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffdaa029-3923-469a-87ae-0b3da395ee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9538cd0c-1ec6-4597-b41d-51413b9e24f2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a5289-8dc3-4cfd-83fd-9d92e58cd9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23589c1b-87d7-4862-8938-8abb375fe785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b26334e-7a8b-433f-bb2e-c2ef0d03a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b722263e-512f-4a74-bc0b-7cdff27ab4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7ad9c2-90d5-4c7c-af02-21c528ec713f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a81978-807c-42e8-8541-c85b181587fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66c7564-5d99-497e-9776-6384513f4bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731ffee5-f08f-4540-ae98-0d89ab1f1d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d9c967-2cbf-49e5-bdbd-0ab484eefd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3b2d32-e082-481b-8b94-4a9faaca8204",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e100403-c0be-43e7-a903-46b40816101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaeb791-9b13-4b51-b0b5-2c483bab99c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbae781-b38f-4a81-a9fe-3528d4326beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd07d21-b10d-44f2-9e7e-ebe63c471498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3846c583-73f6-460c-ac68-b52c06e7370f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12565aec-c501-4754-9493-d47e4f69eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6de8b0-55ed-4b16-8e23-d80ced4fcfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9183b769-453f-4ee0-a655-192fe52a96bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7fdcf3-44ef-4dc9-a70c-32e6259324bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1194032b-0885-43ce-9b2b-117d20522bc6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0e884-6369-4c28-bcbd-b5188bc1ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67512a8d-ad5a-4845-9c19-ec68c46d56ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f4f972-62dd-4afc-9fec-ef2c3ab95633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ab82039-26cd-44e1-bd5b-ce40f0e5387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6c7b78-d6ea-43c9-bafc-9d5f8d8a9982",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed23912-750f-4879-ae8a-733a1c4b3710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac43b0bc-237d-4065-bcbf-e37900605707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce27fd06-76ed-4da4-a924-eac619370c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9350099-d04f-4543-88b2-7b0ba6d60d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7307195-b8bb-4f49-bed2-a0ac8baa2b8d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a0fabc-be3e-4c32-911d-89b0ef05ebdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c36eb13-3501-4db8-92f7-16b89ba9821d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b9828-85c3-47cb-a6a0-fbaea6cb73cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4855e6f7-571d-45fb-b57b-e7cdfb38eb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f8b67a-11a0-436f-8285-f92a950d9480",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d785d12-ec77-4a90-8fd9-b6a8658e425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a37d26-43ec-4841-b572-f8743f214e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab28501b-e265-4b18-8430-ed37266c919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91433867-a64d-4773-af87-bbd781c7db97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63535616-8e5f-4e2c-b83a-d154f655255d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2493a8-4543-4977-bffe-ca0c5cde8035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1263a5d6-4163-4af7-a767-98735fca0391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46673708-945d-4986-b36c-abca3c892563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a28234-b172-4eb6-b647-07e45be53dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd587a5-02a8-4ff3-8635-d277de46a300",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967f55d-27dc-4558-9af8-3e38ba50de14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e7bf8a-50e1-4e94-a5a3-3261761a92e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12660b-0fa3-4feb-873b-85dded35add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb92f02-14f5-409f-87bd-c73da5b97e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d178f6-1bea-4a76-9ec1-fe9e43310351",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5634ff67-54fb-4693-ab68-f35b3bb65c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b85aa3-83c8-4685-bc06-3c55a302c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d581e7a-8015-433e-bbdd-0a2c532a82af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8dcb96-babb-47b4-b7ea-9f452185e81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b241d89-04d3-4503-baf4-c770d40eba99",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a011c3-87b4-438f-904f-1ac3ac12d327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6b2bed-9dd2-430c-ae52-e3af9d925592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaed9cc4-b1f4-4a8a-9557-70e83d8ecd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bce2690-4126-4d93-8bea-6f096efe9fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2821247a-4c60-4750-8657-fea7435fa49d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4667013d-eef3-436d-b523-d1904a547c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c49c037-aa11-4e0f-9cdc-7885b68bcae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9420738f-8913-4b55-b8d6-b7818a5f49d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fe3164-88af-4bb3-b3b4-c3334c868e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f40aa89-40a0-4427-b080-9c210b97a097",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c32ffd7-0027-4fba-9ca4-06aa0f34bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf718832-fc20-4c8f-9789-385ce4cd9221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872c5414-0a99-4ef6-996b-93b0e87fd178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c85f49-76bb-4bfe-b25b-b86ce70626be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d7b169-b7b8-4c68-8b33-29407e00d774",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f21488-3009-4d62-9e7b-a21a14649f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b13802f-3eea-4411-8f2a-1918545de406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a820f162-4c65-4bd2-b04e-258378983799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f66e3c-4acc-43c3-8397-768df55a4de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306bec6e-796b-4108-81cf-17d7b67c1678",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf0d2d6-607c-48ce-9756-d926c2a60610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b43b577-a34a-4c25-8ea0-249aec7a3f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8822765-0323-4367-9eb7-b26692052526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dda233c9-6a12-4b70-a5ae-3911c66b84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7176311d-c563-46f2-856b-72eb480836a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5829246e-1726-47ab-acb3-cd7e67b65f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0a2d2c-42c0-4117-ad6d-2e1629021077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef7daae-1028-43cf-bbc7-4173ca3851c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "439b2b90-67b0-47b3-9163-138c45b0f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059eeb2d-b759-4e21-9276-2c0a1f938c9f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa161c-a46f-4718-ab28-ceddb110b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7fb855-031f-486e-acd6-0532ead35c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcec75f-22e8-4dca-b9cb-b5cbb63d2331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e9de3a-818d-4877-ba8c-7203c5b722e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b7315a-46d7-4e27-80a6-d13b65ff8ef5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e600df90-9f54-442e-ac85-e22f156ebcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ce0fb1-390b-45e0-b7f8-0e56d133e348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8afe2-8689-4383-b5ff-e7d5df5b21af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c077f60f-7081-4456-9598-29901440472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb66e527-8c0c-49a6-b20e-056fffe7fd69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347ddfa-03ee-4d2f-ab23-e0f482d7f185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec0e182-d124-4b1f-be40-dc1c334fcfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4ead5a-3b87-409b-a34b-f20e303cd516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "225cf672-574d-4c7f-a6fa-07060a231fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de34f9f-58be-4dfd-b910-0133de513a3e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb396b6-d22c-4dbf-8d11-a4a59abc0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02180fd-16f4-4431-a3d2-49e948ded7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92df69c-fbfc-45a2-bea5-de24516a96d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23d822d-8b21-48e5-b788-0d36896ff852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70add68a-6fdb-4f1e-8c5a-c02b087a0533",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f4a455-093f-4313-af9a-7d067319c325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18768f1-d8a4-4ff0-828e-47c7bb91eaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdd454a-56e7-47ae-941d-07fa888991e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a914d4-2ac6-41a4-96b3-79464c7aad1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07efd3a0-701f-465f-86f1-fd7f7b3fa1f5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aef6799-b016-4d98-95dd-d60cc673c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cfb5f0-2d1d-4049-8e2c-a4b13230b07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d4f57f-22eb-47d6-b9a3-9b66ff0e5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "45be79a8-f46d-4080-9b5e-f194d4eb413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5664b5-1fcb-4f19-a327-6057ae0631ca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef996b99-7d42-4b2a-92b6-a2d9cd6d709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f965725-fc74-4037-bcfe-aa79d60d6399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531b709-a6d9-4b83-88f8-fcc6cbc1d501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0807c74d-019a-4c35-8f12-1397d0e01384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff412c76-9c52-48a2-a231-b70875475544",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ead137f-6f9e-4f3a-a1f2-73746e1febdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015dd462-f59a-43e4-832a-ec15572c295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b897d768-7442-41aa-bfd7-ef14e7288115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b78173-2b90-48c2-9a6b-1324e164fca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998e6da6-602c-491a-9b59-ca883a072f15",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454eebbd-c36d-4886-a76f-6ba8bd1f0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11ea7f9-b1f5-4d64-91ec-6c72427b3be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3efc9c-fc80-4790-979e-b413b4de0d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "945462e6-b402-45f4-9559-85b21407261a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceff421f-3283-4315-ad5b-a48d7e6aa54f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3fdc4-4d0b-4d5a-9479-fe5a25aa6624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038b443d-e042-42db-9672-354eb6f1d21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c9a6b0-10de-4219-a49c-ce8a1d5cf492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1819019-aa87-475c-b11e-a9dddc8a4982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c741d46-4918-4d44-8a5d-9a5c6c555050",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cd4424-77b8-4ba1-b085-96f940acf0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c591d7e-3e1f-4bec-925a-65198f6f39bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13005ae-a1b9-4c2d-ac98-4f168424a4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b58e354-2523-425d-ab83-674e2cd63e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d092305-a563-453b-93a1-ebacead3230e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce843483-0869-418b-820a-ed35eebe63db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a27c780-ad51-4227-9c92-911d6029aa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2005855a-93b4-4891-ac5d-bc46ffb5d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15145529-54af-4310-925f-6de22a718ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398b7637-680a-484e-82da-40626445c8f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a631fef7-6c97-4737-8462-ec6fb1021d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28721a3a-a089-4bdb-bae6-51b70484c374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcc0a7d-6505-4009-aa51-3c30bfc16336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6893319-0178-4b6a-8435-b50283a2a7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660b61b-cfec-40c8-9959-1f1f82164ffb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eeeb42-f897-4f7e-bec8-17da7604b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62499e86-bca1-47ac-bd46-81f1dcaf10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f088d7-5825-43da-b661-bf678546be9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "899e6ac4-3061-44f7-bccf-b011a93463ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4e861-2e9d-4530-8ff4-2d28a61208c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c27f43-33a6-4988-a4b5-16c90c71cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13ddb63-4628-4736-9aa0-7b5b997901c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ff5a1-13af-41b7-bf03-f9182aa413a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "048e98a5-2143-4943-8635-b1f32582bd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33d2a3d-8b2c-4485-96aa-acd27a30ac3e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4dd9fa-0856-4a13-954c-0f8859600f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7494811-2f1d-41ae-a9a0-9e6d18202ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d16fca7-f0a6-42c7-8c7e-4b1e7398df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1359255d-6343-49dd-a611-8fa77e1db833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dff62be-5cc1-454b-b109-0f3d8327ecc7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87712331-256c-4cc9-9617-06be3af53973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814cb7ed-a855-4d3d-ba52-682746a6609a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18655c1-273d-4af4-bcf9-66d89d292bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1709fe74-f50b-403a-85ad-655cd60ebb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4242554-2131-4da5-853b-0ca7b7028dd0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be42cdd-d14d-4b99-b136-d58a097d9426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b9d824-8adf-4a52-889a-c2845c734b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cc9411-c486-454d-80db-009c5e1d9def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "160f2742-93eb-4515-b1dc-f483368b41e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f11de4-80bb-48d0-aa37-7e7052c58f7a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86adcfc5-f75e-4c09-94ef-424604c296ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1acc2d5-b6f6-41e2-ad9d-1aa9a457cde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0244e003-859f-40de-b9b1-b88b985190c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efed0f3-d1ec-45c6-915f-8c379cab6226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd41f119-5204-4364-85ac-c18107ab2d26",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df2a139-306e-4b24-be31-c0f8cef1429d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4100569-e441-45da-8288-32095a7bf7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4ab052-baac-46f8-bf0c-c7f66324bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8179a7d8-18d7-41d9-bd93-255d0b4f7b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4aac5f-af85-4501-bea9-71820fcaaacf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d020ca-bb6f-4fba-818b-c3cddab64759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c708be16-5c00-472a-a57f-93f4e7c8046d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7307d187-5ee3-4443-9a06-29f7550bb8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21659e3d-6ea7-42cc-88de-cc483d9d8841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112b3448-a043-42d5-8f5c-f968aab26be0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad6617-e1c7-46bc-ac1e-39eb234f647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dba50b9-6b75-4e05-9657-ab7bb7bd2030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdcace-39ac-4d73-a9f4-f4109bd2f75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8376744-6aec-4b78-b500-c1d0de7600a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6606ee46-3acf-4bb2-9786-0162228d8666",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a8c1af-f3eb-4088-b0ec-14b5253d72f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865b334f-4c4f-4292-aed4-6ae40e884f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1d2f67-9ba8-4475-8f08-624e5cb920a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45aeb964-70a7-47bf-a510-e86a0c188233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91265b5e-2c77-4063-83a2-190eb41fbb63",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63650a09-5d4d-4074-a057-972665bf520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5d3b33-9e5f-49a6-a923-4dc542f1be03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1382c46f-e9b8-4b62-a889-4ef0d4e336a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71db43de-e603-4129-9794-0fa5fcca684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fb8f05-c673-41d2-8dce-93d2ae9fa7f9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a41458-8e59-4da6-b2e3-d6b45c8217d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b520a926-a047-442e-95e3-cf02eb256d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dbbd35-1ea8-4f76-a063-8ffc2f0e1675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3523b8-342b-4dce-84f2-0118764e6be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b78397-981a-4eab-b3dc-24ca97c54c53",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5788036e-6d52-46ec-bfc4-2fb783aff24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bca65a5-7a4e-473f-baaf-dad08b29b62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88906422-79ad-4e1a-b1db-40ae4051d9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10a5ca78-7945-4572-b9aa-73c8d67508c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024207cf-ad19-402a-afa3-6a01051566cd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32f7b46-3c61-41ed-8a73-423626a71ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d779c2-1ae3-4443-9384-e4dfca0292d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b80c00-7585-43b7-b820-b1787e9d0191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26962655-b674-4dca-933a-2e4052339d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c4e367-b121-467b-8564-bd196a061ade",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e66194-1f9e-4c22-8860-50219c182036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5657d05-2896-47ac-b2a3-8a5f62f98d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34b8d55-d1c4-4529-a159-d90a8a19cf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce90a7e-8f68-4092-8ab6-6429a3522b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4519d5d6-f643-4378-b1e4-80c37f692463",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2591de9-9c25-4e03-b2bd-b31c580691ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337582e-a7d5-4661-983f-40a567223cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa9e9fb-79c6-4518-a174-c1cf980f63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b265101-e753-45c7-a4aa-892f942c8e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32cf56c-d1d8-4d06-b694-80cefb62819a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdebeae-20a7-40a7-851a-6fb1b3ed57be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7428894-ab01-4a8f-9d3a-06d166f82dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5350a25-9955-47fb-89fe-2d4e40f5de81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d5066d-521b-484c-9bb5-75a3f3393de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2353be-4235-41c8-acb6-97551445ded2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa0f7df-c441-424f-835e-dd52f1cdeec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b449a5-2569-4be0-8a7c-05167ad7767b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186889f1-dc9a-4447-b3da-c6c3e90a3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c1eb62-3c84-4009-9275-85c9d416d115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899f1493-894a-4346-a635-8a80ea5fd5e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7461f1-9b86-423a-99ca-cb90350ecaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9a6a9b-9d83-403c-ac73-392b9641e724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd78844-7e4b-454b-a825-a8d53aecc713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "82e0b665-1c76-4427-8150-0f74eac40737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c02bf-4799-4b01-a084-f67eab3ab194",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f532d6-c83a-4b77-a053-257385bb117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71af2dbf-9f27-4c9a-8f73-b1f012f1bf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b05719-5d08-4564-a661-3b0bd3a9a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93e693d-37ef-4546-8722-b36a5c8237a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e3f1bf-5477-4181-93e1-f72f3c72bac3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37badef-fec7-4762-bdea-291efc7682c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a360fe9-15b1-4921-9d2e-926fbf18b203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb3dd6b-5d15-433a-851d-ace60a3fa2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c3e5b7-e37e-4e81-a726-4b8891b93800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e60024-9c26-4922-929d-02bbdb0b3648",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ef652-21f4-4c65-81cb-fc15e285a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2436f1-b10a-4f24-8dea-4be7d38dbae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8b3ef-2987-46df-b295-2bac8e142a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf16ca23-2be2-400b-8240-2bbcd0fcf6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa92a75-69d1-4087-b2fc-cae5ccf4c867",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fab5de-ded6-45ff-889a-8df8a841dac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de3896-c212-4adc-a4dd-925df312e6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f5fe6-a210-4c42-9134-a09e40261e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56620ff2-495b-4f3d-9899-a20d390dfbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a8334-08e5-4c84-b987-f6e226e05d4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6f2839-5863-4cc9-a919-9aee82be007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d237c5a1-54ba-48d6-a7e2-7adbd7f8acc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e365bb-898a-4410-a1fd-5cda5668780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4e5cc8-1e89-447e-8677-cd0b5de6b647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c760f17-b5ee-4eaa-950d-b195a13a3f0f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5738f6be-bc67-4564-9927-81e403b7d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b870fd80-0355-43a8-bdc0-37db290ae23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a26c770-27e1-4c51-84ae-0e2d987d0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "978d5f7b-605f-45c6-9e24-e59719a9abc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129d013c-d64f-44b5-8910-e2f7c3a55622",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47387ee-7749-4581-b467-de2354490360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4948a4d7-e84c-4dd0-9c50-197044dd0532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074907a-d6bd-4ac1-bfaf-2ec29570fd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a638fca0-c631-4919-b8c4-3cb29021caa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8275b91d-dac3-42c5-b8c5-b2d81c28c5e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70620eeb-04a7-4775-8fa4-73484b5f11c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b3ea49-ce7a-4999-a498-fb417e689a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65c51d-6bb1-4b68-8446-dafef7cdf2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0b139-b608-45b6-bc0e-e58855a35eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a704522b-4915-42fe-bac9-4b5a1366907a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c3c7c-52ad-4fc5-bca0-e3f9831d4737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab304c15-454d-4694-b703-ec52ce5d0773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10e6189-53a5-44dc-a58d-176d4247e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ea3e0c-830c-4581-bdf7-04926608fd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1816b12a-9f75-4734-86c0-c307e4dfcf4e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e08573-6bfb-485c-8316-c13703d64b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ead509-2133-4337-bf7d-69d0cff386e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12effa27-bdb7-4c9e-ab90-5d1472505554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e508916-400a-446a-9188-62ebcdb461d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f41b15-cac4-4418-ab83-959528c4e040",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fb7c89-16de-4a45-84f4-8ea745ec9de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb944259-c227-4a73-860e-29cb947a7a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eb8932-dc63-4c3d-8fa0-3ed7cea91b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e55a0140-c696-4e74-af26-6c5fabf01120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0af3d02-2b62-4649-ba0b-3952f6b10de9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35971d1b-4ebc-4f32-9519-6377860fbedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afc2d73-5cf8-4ec6-8917-3d29a89cb79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5efdbc0-2b75-41ee-9ca2-541a33850e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf0cf97-5c69-4706-a51c-190a5eaf5966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00114933-c038-428c-bccf-b957bd869379",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f030d2d4-e75b-4dbf-8e1b-09cad5510b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6fcdbe-3287-4510-ae41-46005a5d8710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0802c8f-4a98-48a6-baa3-23300239c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82755e5-bf38-4d2d-8c06-26d709db2c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98afd2f2-de1c-445d-b195-24030bd2fae2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6addf5-1372-4104-9898-690930445323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8f220b-edd9-4f3e-bd83-758d08ef2e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded8f243-0a63-4799-8bef-5797c93473b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bfc0af-11d3-4368-8c28-c75e3bf082d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721867a-e685-4e47-b582-b6bc1fc3e539",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7eb3db-4775-44f2-9f0d-a614de679cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9337bb-48f5-49c6-8150-851fb1fabc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741a81ef-2a89-483b-bb09-759a249b905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8770838-f954-46ce-8c6f-2d4897bf46d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9810bb6-f923-48f0-a6d2-2689c4b4749f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff2812-d86c-4ca7-b7c7-8b6296cda957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00329e2d-e7fc-4542-af1c-94d582369146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35837d7-b88d-4ee3-bff1-36608f0d3377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9fb7c0-5330-4e51-8d9d-4a7df17f5292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f444ed6d-8093-4260-a3bd-f3c2ed124cde",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5865f75-087d-4b17-ac22-44ea1fd68436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd0a5ec-c12a-4813-ae68-090f7d06f69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5a013c-90c0-41e6-947f-6d364bdd79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd76507-7508-4d10-9e6c-85948c9b41b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9d199d-0517-4b31-b5cb-9ca0e332d399",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d97726-eb1d-441f-a944-157cc509fb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9f9446-cf2b-49dd-8848-e85a5f03269c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687f476b-3ae5-4061-8a70-2e35ab7ec9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d67f620d-d515-4c66-b01f-11ec7dfd4b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bdc395-190e-450e-92e4-bc66d2859722",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded26e64-85a4-456a-9971-3b191ac1e8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79051d8f-a1df-4b19-b52b-c818b5d2d36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766cfe8-95f7-429a-a756-2f27bbd8214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7cec4-2024-4972-a7ba-e0490b969e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cf616c-d18b-4d61-8174-439c0dfd8192",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875a40ee-d616-4097-b4b6-8799ccf5fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0706cb28-32f7-4277-a60e-dd791895a4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1241c8ba-b8b0-4e93-8094-08afc25b7700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df06cc17-3e0d-491b-b283-a2a719e3dbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3e029d-a191-41b3-b1a1-5af8924df53e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f5468f-abf6-4e0d-8ccb-5fbfbde9305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534e964a-309f-4a2b-b9c8-1261ac3f9024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e284bc0-ff45-4f96-ae31-81e979144a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfe9783-5d89-4657-a684-10ef41de6bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5c8406-b1b7-4dc8-b63d-0eb5c854d2d0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c2ab7e-c2ef-4a4f-8a06-09a4bbc33313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eaf419-bf65-4607-8efd-c7e5f48a73a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa04a21-6776-4de6-9d36-d1ca440040bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca42b6c-7b4c-4903-852e-1ebe0bd7fa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5999749-6d51-41b2-abff-d4925b171144",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77c3713-6525-4208-8740-d4b254b13cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610a8b57-afad-40ed-9380-7dfc4ed4db8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5805875-5c16-406f-9360-31f80f28541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84500b4f-679f-4fd4-b518-73015dc91a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68affcf7-5396-4ca7-8c21-2cd85a8ca943",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6cc27a-0ed3-409f-ab8b-67e889fbd9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cc66aa-ca67-4485-bfdc-2f16404332e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868d6b5e-7cb7-4cc9-9bf1-5b2b58bb3f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ce10bf-b755-4765-8d58-a46fd783d7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8326348-f8e8-4dfc-b15c-5931ab06d101",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff82262-b51e-4609-925f-a1b3489a7ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447a02fe-65de-421c-b718-60da7fe69edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65de319a-4d01-46cf-ab8d-5ec5bc716f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f3c206-9ba1-4d9d-b67e-59ab2a1517d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e778a-be42-4e66-a300-fdf90c465e96",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e078a367-f342-4704-ba28-2b264b8916e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a7d05a-5092-4a21-b347-2e27889bee3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d4d241-faef-4dea-a466-57c9898d91e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a0414d-92e5-4965-9ed3-56841caa0365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aca8ea-e51a-4982-87a6-1665c28e0bfa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46284f24-3b61-4dbf-a2f1-cecaef2010fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230afa81-e3f4-4486-b74c-b05d13b2b064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5fce1f-5ec7-454f-9053-f736b7149486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5885e74a-e2a7-4f13-97b4-b1c5ebd58b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05e5482-41a4-4d10-baf7-c8b063363762",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728ddfbb-632a-4bbe-a867-4ef336e72d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6a4a3d-887a-4019-87a5-03472ce593c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d16983-081c-4646-9771-dd6d45ce3a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f68d8a4-12c3-4521-88ad-9275a3c89f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44273acd-9311-41df-88d9-f6cf46990ab8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c196b5-40f2-4fa3-8e4a-c387837069ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35d5b77-5ad3-4df3-9d89-88e824f6430a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef9814-157b-4c0c-b95d-37c51d8b38f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0178a6da-0cae-4c78-ab67-f74d425cb560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf03852e-93f9-4faf-bc1b-d7c3263b6228",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310d4f5-b5dd-46d9-b2ab-d006a14e8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d61a82-b64d-43f4-b892-9166d9bfaf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e605150b-5818-4ca7-a59f-6373fe2e582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1817e4a2-9710-4427-8e0f-bf46e02cedb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a81b4-8abc-48dc-8c6b-f9f82a82d832",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8458e2f3-8711-4a07-ae62-54e8e48d5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2041b1b0-53b9-4a89-bc66-f873e0d3f026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3885340-e6e0-4a06-86bc-08b48a03ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a44fc72b-7d98-4e1b-b915-f56d60be5f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f789e0-94a3-48ec-a5f7-801602c4982d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722ca89d-ceb3-4827-860f-cbfba1d28a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5726052c-5af3-4523-bbcb-52e4992ce7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9eb9d-4320-4950-9f58-60e6586de920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0f1dc9-2241-46a2-a902-7da4f52a40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e34ed5d-c3db-4601-9b4e-87fdf3bae174",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73521749-0f4c-4bb8-9592-04d8bdcb2bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c27edf6-ab2b-4ce6-959c-b662d60483b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b670710-6500-4592-9cf5-eda22db874c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19b78e3-f823-4dab-8009-6b3be4e512ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9a5598-9e1d-4afe-9c67-573c53855be8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132d5f52-f4e1-4165-95e6-6e719217c11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c858f010-a86d-4656-8016-9df10499f32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b78a8d-52a0-4261-9947-f68b8a1fa8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3f8040-4e97-469b-8fb5-a8e4cc68eea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72aad9f-0837-4b7c-a520-9a74b7b01600",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99791636-4f96-4660-89be-3d74339bb2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f73c40a-f7cb-40ae-8e3d-f44c0e6ebbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbb7a60-f424-4bc7-b2b1-9e390c640e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75343e8-f736-4d0b-84ea-6493ee167ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc79898-e845-46c8-9fcb-4f299faa6217",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a74f281-7af4-4868-9344-79efb6c9c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "79769d88-8628-4a53-9e9f-26a6b193b5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2bd05d-7073-4162-8667-751c6db6ccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1981a9-ea99-435b-a280-4607c6d730e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2019148b-7780-4ffc-bb46-a5dd76a002f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49cbd24a-60b3-4142-ad46-1e392e1f1618",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b5fb13-2444-4ab7-b5f3-bfa216b1ab49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caffa261-9bc7-4338-a0dd-e85bca945e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b6c451-fdac-410f-b450-c56a3df07b65",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04e5c686-1c14-485e-8c05-3f45c6c91441"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54f93ea3-d40f-434f-bb5d-d02145656d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b5331b9-9040-4b8a-b8db-ebb753a64100"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3060d518-f240-49ea-8559-2eb5e6c84618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15095a97-17a6-475e-a85a-5f1141957451"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc08993c-e60b-41e0-b28f-9ece1df8a87f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9e6ba1d-a125-494b-a94b-0ab5e090bb4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2054788-fcb6-4afa-87ec-1db281566e24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8872cb04-896a-4696-88ac-648fb34d5366"
                }
              }
            ]
          },
          {
            "id": "4eabd042-bd1f-43fc-9fb5-4847a4004937",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb1a8a8a-cf5b-491d-9e48-5b7c6f78721c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c2f45ee8-cd5c-47a1-a97b-3769f8fcf152",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0959e575-37ad-4494-9b80-e41e688b1e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83932c48-a40c-414e-91ac-c3e1c3f09b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea1b067-4eb9-4469-86eb-049f392b5f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77ab2d8-45ab-462d-9b80-3e48f7ac970c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64e5e60c-08be-4815-8a14-5589f9c8d9a4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3beeb765-de27-42aa-8ea9-c6bd4ae2485f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb64bc07-fb35-46d3-b1c2-78c48315bd48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51627969-d7ad-4dd0-92f0-7707e137363f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47d81c7c-2e04-4c97-9909-70379c3d235a"
                    }
                  }
                ]
              },
              {
                "id": "9e3db13f-cf75-4cce-84d4-b281a26799d3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a74e472b-cfef-4e9d-91c1-d477cce6958b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86302474-ac52-4890-874a-1cdece419a5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ff9d8ea-d9ee-4c33-b81e-e47b0b21cfd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b46cadf-c634-43f3-a035-dbca8ed7865d"
                    }
                  }
                ]
              },
              {
                "id": "23367818-6b30-483d-a762-74e1f0775024",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37224bd2-791b-4fa1-bd1e-a07d38e49c1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7596006-7ccf-4626-a4bd-dd16621ff440"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2999d063-b674-4622-9545-11a9baa0186d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b93d4e2-967d-4ae7-82cb-e0646daf2a1f"
                    }
                  }
                ]
              },
              {
                "id": "785bf617-bf7a-4944-9a61-60d5fde632e8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d90afe71-9571-4768-a43f-49c9c24d96b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bda3705-bc6d-4afc-84c4-0246c1093c52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baafbfae-8afe-4fcc-940f-e7847ae6092b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "98b9cab1-e6b4-400a-b677-7b28d4e9caac"
                    }
                  }
                ]
              },
              {
                "id": "f530fdbf-9265-4a0a-9643-8ffcf272e2ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15c31f56-4a36-42dc-850b-af4ebfcaa2b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "683337cc-1df2-428b-821c-79e64f8ead47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cef46f0-392e-4f92-93ef-ebe8b5688fd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6b319488-4201-401d-93d2-02d7afe685e5"
                    }
                  }
                ]
              },
              {
                "id": "7a28907e-2e24-4c6e-af42-3b80e248c48a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3658d6bc-c91e-4b8e-84bf-80922a477d44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c03ccee1-0335-48d3-b666-5b346bd0ea7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e810351-912c-45d9-9e72-69a183e35493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1eac9804-343a-4d3c-bcc6-9a5b265ac053"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ffab3d6-2a53-484f-949f-64bc0f75e701",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb50b8d3-3f3a-4d37-9e25-8a5a5efd7e64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7941d2f1-e985-43db-b3ad-c2a889e36d84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2338828-01ea-4a4e-99b3-5385de77b8e4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1adb383a-f4f1-4c46-a2a8-48eaa4f83e28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5ada9182-3587-49f9-9332-b4c10637d5f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "719b3670-290e-4d24-a7a3-54ca78fc0843",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96b36c3f-8c08-4fef-adea-9b3689f9350e"
            }
          }
        ]
      },
      {
        "id": "4bdb36cb-452b-4a99-8ec7-1800d7ee5d79",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "27adb1a8-42cf-4954-b984-bc9cfd870a92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00927017-64cd-4f4e-899a-fe4fb140c376",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f172487f-ce9e-40e5-830f-1d1f7c76b405",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f59f7f4-4c66-4fcb-bf7d-524f2eba1310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faac1ba6-bbee-4d3e-8490-010ef52c421c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3da1437-b4a0-4d40-b694-6160943be1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b33488-6f20-4575-b1d2-93a8d88ea735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbe7677-bedf-46e3-9875-0fc26d134f44",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbb8a33-b270-44c7-8098-752219e4a563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a749235f-86cc-4c8a-aa69-095798d0d79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02142f0-1a87-4edf-84f4-2d3984185f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93fdfbd5-1785-45e6-8db3-df099a909ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62975144-3e45-4725-9bc1-775253197be6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e464b3-5fa0-4817-97e2-a5dc397bf39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9658f16-2806-4801-9842-5d1ea1a1a914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716aca87-7084-4a06-b81d-57d8b25ff774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f82be90-6e2e-4e6d-a540-4265aa73d8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471940a3-7165-4c04-86e4-a80ddece9e64",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0dd2bd-f028-4604-8a89-c3836baadaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cde4842-6944-40d3-984a-0af4ad232a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4a7d6e-b382-40af-bbb7-a3b156e1552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94a6585-8d63-43f1-8702-62adf210a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87b5c11-ae45-45e6-9398-52da5f157974",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb3da5-df02-4b38-ad88-fe5c47b785e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fdf78e-be98-4671-8afd-6c8ffadef2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213987b7-bcea-4095-b8f5-e37dd2e44f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cde2833-aba5-49ea-a745-49953836db6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab6d1e-861f-4905-9357-b9630b69795c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9233278a-a644-4c6c-8956-0d74b36e5d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3739e7-d1da-447d-a403-c7ac97d7ca56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05ab379-3a5b-4a38-8c92-5258ee15bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0d160-9e40-4b59-a7f8-26606233c88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6380e138-a96a-404c-a059-e2420b3d8865",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37345e7-8233-4cb6-9cdb-de35f856405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48667f5-afdb-4f8a-b77d-60c5892e7e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed7fbb-512b-4321-aafe-357a36a00a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1438c7-11b8-4e39-be40-a0cd0e8805f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85034b82-2869-4349-93e1-e093cd6aedb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f696214a-6a35-452a-bb64-a638374e1c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8ac85a-c1dd-4dca-a7b3-f114129b61a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf19505f-efd8-444e-82b8-b30434d5609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf8d3c9-c667-490b-929c-f381c9a71c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c55dce-11e5-4f1c-8541-6e70c7198730",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8044acee-09ee-4b3a-87bd-ae15fb270539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0552b0a-722b-4d6b-87b8-6de8675797ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c0816-9e3c-4b3f-9856-695bbf46c68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c74c75e-413a-48e5-a25e-77310d43646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55324a90-2c4b-4ad9-b2bb-8a0097f539e0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687e96da-72d7-4175-bcf5-1cf5bdca8094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccad97e6-cc14-4c23-b056-259ca7aa753d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35428d01-4d0c-4fff-9202-8c92b764c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2eabb3-41dd-4774-bfb4-47212b8dd57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44d2e2b-a024-4a2a-8619-babf5cf96713",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2fb571-ebba-4d60-9a74-52d0dec515ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528324d1-6053-497d-b278-43a13bc3c144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163aa724-0494-4fc4-b9e9-2c40e9e1b552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "68314b8a-ce8d-4372-bf3c-b8209fe83963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc7a59-00d4-4031-b71c-17886dc165d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549953ce-573a-4107-906a-6b3eb75862ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1898e3d6-3875-4a55-9b01-6329295d30c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7dd26d-ac09-4369-979d-94ed3aa94863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a52b33d7-d0c6-4f05-a5af-b289062e4d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa2c47f-b9b2-493b-900a-a970464bc599",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b6f988-3257-4944-9aa5-eed1c95499fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c11661-9ee3-43bd-a65d-f209e1e7ce82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af155926-f4a4-41b0-82e5-35f0e82cb993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71937ec6-1410-4259-9328-0652b4c19b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e5c2de-16a1-4088-bcd2-13f3c53eac26",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03fea17-7d36-4367-9c85-334f7b6924c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7744f7-1423-4c48-954d-f8d2c0458abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eea40ac-73d8-4364-9503-14740687787e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "113d75cd-f779-496b-97d2-8c0455ec9aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaa03a0-acd7-4790-b105-d70292b65e54",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f0ade-f8fa-4903-9575-d15b6b9cd5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e336d59-b0da-4c33-b9c0-c052b1a3136a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7588618a-7b9e-4f54-a9cc-3b482e93f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c000acd-9083-4fff-825a-d7da104c716d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de36ab08-3d78-4ff0-809a-ccfda606b49a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcfe3f3-b1bd-442a-a384-11999a100144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4bd4d2-22c7-4f6a-8e73-f6cc8dafd50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4966be2b-2376-4350-ad11-fbc82cfe5404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbba51ae-b692-46e0-b02b-59b4e98d1c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0e1a13-942f-460c-bbe7-0ae669d66893",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed68ebc-3888-4de9-a252-720697b04d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e387a20-6360-41f2-83e5-c431c58e6582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2435ef91-d3c8-4c84-92c8-7d20550eb6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bdb971-6a9f-423d-804a-5e076e269e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e1ac13-8d96-4eb7-93e5-98998f1605f6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcab8ae-8760-4a35-8333-45ad4fb81da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad87189-c285-4536-ba9c-6813942f1302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77859d6d-a499-4070-a762-a36f1069e040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c64ac20-30ab-42cf-ae02-d63512475e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b57443-2740-4efb-b202-721a8b687da2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfb5bb1-3549-4f2a-9b8e-9c8ff09f0a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69df5b3-046f-408e-836e-fcffc3a26ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a001548a-6d49-44a9-9735-ce6a20c31e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7241d66-a775-4875-a089-4ce68c7940d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a18ba-04a7-44a2-986c-8c59b2826513",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62caf4c8-3bac-4989-9525-d930db7eb6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1631bb63-1146-423a-9520-0bc258f831ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea9fb78-c48b-4ad2-ae0c-6a02980a17d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b46117-f17d-40cb-a378-da1f3c1ac8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e97b98-2364-47c4-a078-621be68d325a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb48451-f85f-4e08-b09b-1f66e804b17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d853580-bd4f-40b9-979d-9e374c873406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84369375-eca9-41d4-a73a-6e60545ccc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecca7699-7159-472d-8df7-6e737abd075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b76368-4b0f-4045-8061-3bbfb982812b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62c6b61-16b9-4059-a655-c909f166e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce478ad-a4a8-4c70-b6bc-c952b30814fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9dad2b-49fa-4cea-8635-d1feebcb84ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f895004-0fe1-4c91-ad63-298cfd626f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b53f46d-4fd2-4361-abc5-ca4b48e2ecc2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1967c7bf-1ef6-44a9-ab90-10e279b44084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bace56bb-db90-4747-b1c6-b05e655f7f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2127521-7376-47e1-8206-d81ef847ad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862cadad-d82d-444c-84f9-2e35ce9dc43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bba8bdc-0439-44bf-a62c-1c494292b0d8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c90f95a-8360-4621-aa91-3f93af4e391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b18ba91-49d0-4132-b261-bbe81d595749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23ab896-1d0c-456e-a648-e97464aa9811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c402ac6b-16a4-47aa-9725-0ca4c1a59be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b595f0-f5e7-473a-92a8-9f2bcca3e61f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871be261-e261-4422-96ca-c5030aa7af84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e9681-a8ed-4a1c-89ed-38e7b36114dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fa2712-d5a1-4386-8f1b-f1f73f31c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7722a2-a932-46b0-a936-907a843fa0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300cd3b1-f0e7-4f08-b470-f1c56d82471e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3aa24b-e431-4cd2-8123-886a10090bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36bdce0-b1e0-482d-8f96-e5e6ccff233e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b4856-c0f7-436a-a4a4-7fdcab8fad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f361ed-eb28-479d-8bbd-f94a30d2e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe2344a-f132-4e2b-a1ce-f86e224e4814",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2cfc93-f68b-4a91-8999-30b8447f96ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2148e3ca-f341-492f-9d11-224f51292b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff858466-48f3-4ca9-b21a-275469832532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "750cfcae-e5fe-4f17-814f-09a56fba77b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828a9e8a-0139-4315-adcb-60ba0be95ae0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6796e8-d007-4b32-80d8-e18dcc1dc009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8575a14a-5a57-4c59-9939-6352582318a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea22683-4c5a-4ad7-80fd-dc991821bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155c0cfb-3aa1-42e4-a37a-7569bcdd8b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363ac163-019d-4a2d-a071-e18a6f49eb92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b239d3-9bf2-4687-9db5-9d782b5df971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d74def-e17b-4904-b108-f58154c32178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d542cc-c9ac-43ae-96ef-95d805aea574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4db8eef-5a04-4051-a1a2-50cd4e4a0017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3c8270-3d2e-4b98-bb1a-c04bf0d0c04e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d33581-5437-4db0-bd9a-f8eaa0fbab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5218be35-0755-4697-a63b-137a27574435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d5529b-df81-43b7-ae65-0f4954fb4ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6689e642-061e-4063-b025-37b27771d784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5bf46a-7dd4-4366-8601-01f1cfd708b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6096ed70-6f0e-4391-a5ec-8d4dd0552ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ac51de-8c73-4000-ab59-12116f65c241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7acfdb-fd17-4177-b243-80e8fedcb1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d13212-e2c3-4490-b507-dc4443455422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9528d-220b-4d27-a8e8-1143a841680d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6471ea34-b784-40ad-b467-a5d811386e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19c5254-c816-4986-b24e-6a82a1f383c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d428c39e-af6b-4ff1-86a2-75f7fad3bdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f41398-d46e-47c4-8048-b5da9d0dd885"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb4c89df-6ab9-453c-ac9e-2af4c8fb9dd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76efeb95-bd40-4343-8630-e01ff59bd7a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef15fbc-0958-4885-8a7a-dc8006e7d8be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b46bdb60-18e3-41f5-a963-bd7d0d756fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa468a0-b824-49be-882a-ee1d16577345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b4c479-8b95-4687-8c9f-2e8c77aa60ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd62d7c5-7efe-4a14-be2c-14a3f8710857",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e43873-2d1c-4daf-a078-e2d4c35cca32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f4f7553-42c4-45f9-bfc1-29a30b48dc93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89cb5aa7-4a70-4b99-8813-21c07726791b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b99a331-5a27-4a32-9015-002ad5e4bf3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e053b55-93d0-4e9d-b3d1-08e26f667182"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0658bf1d-6078-4ad4-b28a-3655333cebae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be00781d-976a-45d0-8b15-1c6efa12e934"
            }
          }
        ]
      },
      {
        "id": "b4b9cbbe-dc09-4d8e-b8a0-a46e4a8e5665",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "56e2634d-8b3b-45f1-819e-ab7fa481dad3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb4b7462-c310-44db-a2bd-cf67d5eef642",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "699b5bb9-0cd7-49a0-9518-2abfbafcbbf1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa3d9eb-c292-4d35-8ba2-c2563db0133c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024d1d7f-dbaf-4f7b-b295-c20336301cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588ab85-768d-4efb-aa6c-9b2615e767c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e024aa90-9986-4877-9ca6-40e66ff443f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04e02c0-74e6-4bc1-ae3f-2e519ae16742",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a3bd3-f433-40e3-a41c-fa449bcbd0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee21846-4fef-464d-89e9-02bb86aa778d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dead8f-1a95-4192-8d0a-7ba38357a6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9918cf-cdfd-4b1f-b87e-f470eb4dfe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586523fd-b3f9-47d5-a45c-503160a29e8e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb465d1-2701-4d1b-8543-82705eee542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b2e776-44c8-4926-b307-ee532ad9c665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd5841d-d72b-48c5-8e9c-4d765ba83120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f62a1f6-c2ba-450a-abd3-c09fa03fc23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065dc29-c338-4761-a894-f5456799e500",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c141f33-0786-4c91-8f86-857df6d3d823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0129a44d-879c-400e-92fa-15d0ec6ae796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bdc1e9-cdee-48c3-a73e-81c2ab4bc27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da7e930-2509-4fcc-8173-41d98596f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be78bf9-9385-4a02-8bbb-0be4ef76eca2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c80eae8-0e4c-45ba-8bee-87c99c4bea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d159f563-baf6-415a-a9b3-d1295c964a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1513d06b-8df2-46d4-8e49-b7726585f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0ef26b-7063-4f4f-b846-1b0ac272e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcd573a-f45f-4ee6-8b67-a8bfb7f1885c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aef18a8-2d9d-45ef-9bcb-d74ee65e713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32006e66-a5ef-420f-a43e-ff8ed775cbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec907fc-0900-4959-8990-aed794194ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc8b1f-6e6b-4d0a-9da3-af98365c3f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf23fe-b389-485c-8c6a-761ec7d556c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046bb814-6de1-4c3a-9b81-f68126936a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e38a9f-fc58-4ba3-97cc-8555d9156ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabab4ff-1e20-475c-8b71-7d4dddcb839a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c691123-bcce-4c66-820c-060beb139707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec2ace-125e-4e99-9850-44a37ba40d34",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1febb14-670a-4182-b15c-99ddbcb21958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15629e1e-94e9-4f76-95d4-07ea184129e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1601fb-f92e-4e94-9c38-a4750c514534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abee80f8-200e-4c1a-a98e-819112d09e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2fd8a5-aa98-4842-8ae2-db6e26915fd7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf3c01-7b56-4e0f-ad6e-2699c4294e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0936dc-4e12-490c-8801-e0986d3f7eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd63c05-b591-4653-a5e0-ed81ace99406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0843f4-066c-45e2-a6da-0df0d3693496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e5ab1a-b505-469d-923d-fcf966a52964",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb72e575-2a39-450e-b348-82b5d1fa0e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d958b50-e7c8-48c5-b1c1-c02377839d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7860cca-d103-40cf-9e50-0f4d26df7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d91dee-82ff-4d9e-93cc-9b8497b976de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4544c1c2-66e3-414f-a5a4-04cfc6290037",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25f3149-cab5-4c32-947b-9066fbf6a77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb2be0e-1114-407c-8354-cb73301b3495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befad5a4-bed7-4cad-8518-119b59aefb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccf3686-2051-4222-ab01-f9601bc7d132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c793664a-24e0-44e2-925f-2ab17cad690e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dd059b-d384-4c4d-b0a4-d186efdb7e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde38fdd-1722-46b0-91fb-4e6170202b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ada74-c6b6-49e2-832d-3c03618e8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa69664-c876-4726-821b-ee54affcd8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae79a8f-7068-4c4a-a46a-89208018e15e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04d26e-f95e-4487-8360-b76229b26b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b86b92-2160-4029-8cb1-5459f9160ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8c4127-51c5-4312-897a-6d34ea5b4bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43cdc6a-703c-4378-800c-05d4936aa4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509fa11f-e6c7-4b60-88cc-ff40643fbd37",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e84576-3a09-42a3-9040-0fbbce42d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22199145-bf90-4556-a186-05b7f2e50f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c679abb-9df5-40c9-b64f-dd563b2a1f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d54360c-1de4-4da5-83cb-717059901ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc0c913-88ab-410a-88f0-f50b9b42a079",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501b3dae-1921-4ce7-9591-9efd6aa75757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2300bb99-ffc1-4b01-9641-ecdf38f161af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e743045b-db84-4000-88ef-b1e5760e14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a52fc57-492a-4ade-9dce-9453e582d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884cdfba-7ab7-4c79-999b-22bebb663920",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6636e79-1458-468e-b689-1524d879fab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e3814f-0a50-40f7-8784-b470a75c4ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e435f203-0b5e-48de-ba45-81f96fc0fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97e8218-73ca-47c8-b9e9-ccd9a1a1db33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8520ab1c-2262-4b8e-9719-bcf983d6fb93",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ff17f8-ba78-4246-9d77-a5c86dde587c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4932a8c7-3102-4e04-9bef-38320dece24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17903f3b-cda4-4e70-9688-cc94bdac10d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e0c4c5-94fc-4c17-9726-d8acc1509a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695558f0-524f-4eca-9431-e3eae5c79f6e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478dbec9-7bce-4b1a-b247-1ae5af362649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f7b596-8c07-47a0-a7a6-264eb5f44b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16018980-1db7-409a-b1a9-cd6878ec4983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3184208d-d383-4299-b017-789fae506d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae505a-9d26-4719-8979-d896586f1016",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abaff25-fdcd-49d3-a600-c17c19816518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca53852-d0aa-4c7f-a416-1e75bbd929e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676f3a4c-aa49-403b-8665-bf1c3dc10d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de2fd27-2024-4872-aefd-eaba1b88a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143a569c-4c6b-48b3-8920-ce9be7fb7e11",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2d92e3-87e4-4e59-bf95-111b9cd2afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d284a3-2bf6-4d3e-855e-489737dba209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1b0a27-4aa9-4a83-ada3-b495466eae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf437e03-ba44-4edd-9e48-232173c6f15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913fc3c1-a730-4f12-8a55-359fdb62dec3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f3b20-e28f-41e7-ba4a-ccb44c620bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524e057e-a973-4f41-b256-561f0248e908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cf9b3b-668e-4cff-904d-da31d17ed896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f4f98f-5052-45a7-bd18-2e8d5291183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292204a1-4d0c-4252-b892-0fc460259f73",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7896cc0-c8f1-4d82-8b34-2455bde77f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3691d052-5545-4977-9cee-c81f428b9217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe1f051-a339-4b4b-8b7d-d50496e2b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdda237-42fa-4346-ae05-4ce93bde3235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81db4204-9f8b-4203-ba89-ffdc04cff8c2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fab45e-040a-4e03-b020-86af1fda4107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de13a406-9492-4e63-88a7-447a19ac5060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc671dd8-1499-43e6-ba6c-0d94720673b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ac2e03-7b12-4eb4-92ab-5a333506e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4f9fdc-f7d8-488b-92cc-c9a24b318786",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73359b00-97cf-45cf-9e95-f719d554a0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b19c7-2fe6-4d2d-985a-6a97894f59f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fd73bf-619b-4c65-a98d-beadb39f5dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3519f52c-b051-42d9-95c1-cb81e8832763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04f469c-f595-43f5-ac47-4a87d83122f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4356a497-0e28-4739-a3b6-f0af50c2f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ebee55-d841-4575-b8df-60208a7d72bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa5bbfb-850b-4dcc-8555-c46ba544d244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1259681c-bc88-44f6-a064-7bda24a2df44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba2a6ba-ac90-4b58-97a3-98c5177cd667",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207acc2b-f9ef-4f10-aba3-bba5a4d8e41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2185f37-94f2-46c5-82e3-86b9e723f757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15332051-8428-4478-ba76-3dfd99a3a1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0552b7f7-2f71-4b57-85d1-454d581ad287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c484919a-21d5-4982-806f-d9cb94ad3d38",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ac0681-e498-4c9b-a8d6-4ec052770a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4938e8e4-0dad-4067-a228-b1cf394ff51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06798a2-7d97-4f55-ae17-caa2fff463e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b26393-7c2a-438a-98f7-710af2406fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591bc658-ee38-4a81-9d2b-52a7a036d0db",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ba03d8-9f9b-49f6-88ec-d53fff067243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a8d465-4498-41da-bc9f-4955cbefee3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240e783e-27a2-4d8b-a80c-d98768dae72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4008fe-f74c-4808-91ae-b6aedb9a2209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc12f5f-1e93-4baf-abf1-02bb8d640950",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e11ed2-fbb4-4536-b2c8-523d85cf2cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a57b8b-f670-48dc-824b-bff9cb4069f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e075714-41ba-4f2d-aae5-8f3aa298bec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e5ef8-77fa-4b87-a497-d0948c397512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93473e39-514e-4a28-a8b2-911d1c10d849",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c67cae3-3355-45a1-835f-04324ffecf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c691d2-477d-4417-b88b-67997a8898eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c46aa0a-1788-41e8-8939-5ce496b21549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6622508f-dbd0-4aac-8d7e-6cb1970413ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b71615d-6699-4450-875c-256e4a02789a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff3ab46-a20d-4767-a3ae-6fb7952cea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2433cf15-1aad-48a5-9f7f-fded7f1f5dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8c7c5a-3831-4bd2-9296-30f7f249b50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47a52e8-3447-40da-9305-4c15248a5274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d3f99d-5eb9-434c-8bdc-47e33f22b778",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3761174-806a-4e11-80d2-3ab032546242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5da7e7f-ccb3-4c0c-8a8d-0c055b43a5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24da6cab-36a5-487c-bcc7-518167d9df60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89044caf-7e6b-494a-8962-72501b3bd9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8c1749-4c35-4acb-8de3-14497869d0cd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb20ec1-7399-49dc-8045-4e8699bbcdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80669dd-fc15-4da3-8716-0736890cf988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd46a9b-b846-458c-bf93-448f146d31f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f53abf-f42f-420a-9735-ecacba75b182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf6502f-7796-45a9-979a-49616fb23d9f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f58ee9-5cea-469a-9f3b-c40ff7cf3708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1282498-1299-4444-9cc8-8769f109f948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ef0958-d4c1-4cf5-bde2-4331a6cb816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6eec25-21f3-4271-a891-e16813208a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f38df70-abf6-4a0a-bee5-719da71c998f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550fa615-d6c5-4778-b3df-e92752b8558c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f225d98a-696e-451a-9351-015f8e71feef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f42c425-c06f-4953-aad3-ec6bdbb2c903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1695027-18ed-4a22-a7a9-2b2ec1e0d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9e29fd-5107-48cc-a177-f568f4bdccba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602f70bf-82fd-43cf-a577-6e9737662a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6bec02-58cb-46fa-a22c-321fe95a5c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d3d3fe-a8a6-4620-8d3e-07c6aff497b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0805e71-b70f-4827-bd3d-b5561a3a38dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45c0997-9396-4c45-8ad2-686a72640f08",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75cda49-cb5d-438e-b00c-5e5663ac0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e9a48a-4529-4355-86ce-9df837b35eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0dbcf9-4a6c-4afb-ae59-38dae5d9c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad84993a-45c1-441d-abae-57ca3823a880"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b4730d5-6362-49f7-b61d-fa23dcf35cd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6df2773d-a079-4504-9359-c2e714f911f4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0464b1-db42-4671-8f63-ca2a28ed8985",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0b4aa8-c6a4-4d59-abb9-2822cd107953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c7cb8-f0bf-4b5e-a14d-78f826ff0060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66495f83-5d5f-4fc5-9406-f66ec1f8181b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fb51e71-14e9-4384-83cf-8b0b2068bb89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30893be3-af30-40ef-887c-e8256675e1e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "556d8b58-fb92-4665-be7a-4a1fa1ca8b8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166f6ee6-0709-4c71-b942-ae7336d0dc00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a79e8da-dfe8-40f4-9e21-bb6261d79636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "998fc046-f806-4258-93fb-8529df229a89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0db61016-95c6-42e7-b7b2-59b9ed67cd55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b35c5e0-e590-40d8-8167-206baadbd19e"
            }
          }
        ]
      },
      {
        "id": "eac5f746-f148-4baf-835a-c7bc18f58710",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "63aee3bc-5ffb-4afa-a862-5d3b7005ea34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5430410a-c341-40a1-8d41-e427f3586453",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13578eba-443a-44da-92ac-e4da403c6187",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c925867-54a2-48f1-910c-12125a070908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805c84c6-9bec-4ecd-b528-eda3cb0a3c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba0bfd3-03f1-46ce-a552-ac13a400dcea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2e15c8-448d-4330-869b-23d86d9468f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c01585-7c62-4ecc-9fcc-7c0497bf56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c98953-ac45-4e7a-b5df-491624cb6c9e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f41681-6d58-4049-bac4-c8202ab898bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da541545-2c06-4c4e-81fa-ec39706336ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc106e2e-af82-4857-b85e-632927d89c74",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b9fc9d-32ab-41ad-acae-efb8a65e059b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642f2a24-ce75-4c4a-83a7-dea1785ccbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6478fa6a-3c75-4132-afb0-9395160d3e0b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0336ac2-df0a-458d-8964-b91da9fe2cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66987c33-9fe6-423b-b686-7026c81144c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef85921-a6ea-4834-99eb-db3f61078cce",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc94c3a-c1b6-4884-86ea-4a82f1c69b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afdb958-6472-43a3-844f-5b7456e3475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc44d0-5b65-4316-afa3-2be19841fd1f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e39cff-23c2-4cee-b272-e9f5bc5b7f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe69709b-3a74-4e0b-9f4a-c501cc682037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2b81c4-fd8d-4b47-9f8d-7ccf5a270b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7241c9-7e23-463f-bd57-bbd7a48e7c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7b3d58-a8fa-4c8a-ab2c-a1a1ea315269",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3861ad-b1a0-48f5-a937-1ade4e8f7753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62520e9-7637-4f02-be50-9015b8acee27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a203c067-62b4-40f9-8e49-a154c7c3f8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5d0a56-1728-432a-a6e7-6f1431265090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da531680-1cd8-4816-89c5-fb065bab3669",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e702b43-f6f5-4bce-9723-3362a6718b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acff7fd0-7d9e-401f-9bae-324a636437df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e395258-e991-44e6-9e81-ee9be4abd55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90e6874-4bc1-4462-8b82-07d26d679748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915c07c-1287-4fa4-9f49-2ff3737e670e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100fb87e-5c16-4c1d-925f-b49623e06b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b81bb29-d0a7-4c98-9cae-8ede5947abea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4a7299-4282-44dd-8e0a-e16052ba4e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1fc0fa-9f00-44ec-a569-4004e3f3c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867fb62f-1329-45b2-ad0c-49346d5cf583",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8a6793-221a-4262-ab1e-359ccdd5d3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d19210-46d4-408d-8823-74e68cc2f770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4567d896-309b-42c8-9873-d5f3b47927d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca62e27-73b6-4022-b349-00807433bd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740452ab-b25b-49bf-b2ee-a65c9e3598d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af190ce5-e0c6-44c3-9b67-b0337d7ea4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9d9916-4fa5-4d8f-903c-af05a0f1a29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd10121-2340-462d-ab1c-bc4542e8face",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114ea150-a77a-48e7-ba13-51a16ef005b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d4678c-b970-472d-ad5d-a138f6303a52",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd68f34f-277b-4f8e-bc7b-bdccebf30461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce06f0e-a364-4895-b207-b0f2568c4058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a22900-fb6b-499f-b170-af0626750873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055cb8eb-79a9-4ede-a07d-6bc9f9e34932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa38891-d1f9-4374-b6cc-9be03672e70f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b02cc55-6c5c-4b8b-9377-cdb849ca6ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a009df-7b30-4884-b0e7-3932224f82df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a8f82-9b8f-4a19-ba28-89885a06bdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d284e1-628b-4e5d-9849-6d823d76d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1473ed43-8abd-4cfc-b51d-05e654e76ba3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68060fc-3f45-4470-bec2-21bb0c3eb91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e4d20f-1bf5-4529-b12f-e75fc2463838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71329ef8-a8e7-4818-a427-35e0ad191991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f25ff7b-8681-44b6-a208-a3412fd03727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e2497-1fd6-4d24-a788-d53bcc02c10b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff1bf42-91d1-4477-ac2b-839a6a18397e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f717363a-d37c-4b93-bc10-c4a18bb45c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8f49a-478d-4ff5-9d34-7179fd7975dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8379c5-cdba-4f4e-b7da-849451a43dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ee6b3-2e1c-4f1f-8aef-ad985f034604",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8056657-ce33-49f6-af5b-9a89b52bc7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3314c381-31eb-4e61-a0ad-555037060e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeea07a-c2a1-413f-ae12-ca423e98b42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d467cd3-0680-4710-9d07-a3f2460d5176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d887d67-f226-4fd3-8f43-34d2fbd0b966",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26260f79-a0e8-4ca4-a054-6c2bd42dd1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c390f9-b5df-47f4-ae2f-af73dea89157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2153c4-f2d0-484b-ab9e-7a3508b08308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12b9999-c2dd-4e7d-af58-0df6520047ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99fd8c5-cc1d-48bc-a89e-e5da0db86587",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db522ee5-707b-4148-9e0a-d57bfc6b0048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e56fa0-846d-45ed-bce4-b2fc261bdd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab82b0-66a9-4ed1-9017-b60ef7625541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cbe4b5-4bfd-453f-aeb9-ccd015635a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b3e6a-05c1-4b8d-8f78-89b4f8549ab6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa73da9d-3251-4160-b4fd-bf058d54ffde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322ff265-c12f-449f-b9f8-1f89fdd6dfda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b944e-a98a-4171-b277-30aba1b7c3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890d379b-9583-4648-a229-eed8f6c43462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4076a7-3bff-4c92-a9ba-d47f8f74cf9e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee27048-b831-4780-9742-40b6cea13904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aea957-c7cf-4b2d-b29f-d94cd483fbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c125d9-5e3f-4973-b81f-56da90c78951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2855ff-3897-4666-9398-ef116fb255e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35bae58-505a-4ceb-bb0f-6c804beb85c1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc23190f-1d67-440c-a676-29f67c0ecc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14555e65-80e4-432e-8486-ce0de59de935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f03c138-9545-4ba6-ba78-df2515c5f0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb74780e-23c3-4c88-b4a4-2ecd7eb419aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd512236-b91c-450d-ae87-00c796b5f714",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcf4e94-055e-46e4-98d2-e3d20bfe4e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a60dd51-3866-45e2-8b1e-d272ef79e024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3372c825-1a5f-42f6-987e-54f1a655f138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8a72a-f4ef-44fa-9931-3655a4cccfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29b5007-dca8-4be1-be94-41bc8aca1b91",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f5b3e0-57c7-4a86-a5a0-4e7680a3ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4764412b-7824-4b91-a9dc-1e5618d77709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b786c86-a16b-4c71-8896-88045a3aa5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43afed37-b725-4bfe-9087-886c60c71242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db404a44-436c-4b4b-add6-cef07c7a464e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8ee276-0e0f-4724-a468-9d82df5a3301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf6b56f-baa4-4d80-9d97-468e86a124de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb60c0f-d060-4528-954f-1bd139dc6f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e5a3f5-3868-40d5-ab74-9392ae7ad266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a01ab2-fe22-4393-871c-e12436a3793b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e57cd-e6df-4bef-afe2-7ab0ffabb259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ef64fc-fb43-471e-9942-0df02eec498e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b63557-1880-4935-a3ef-decfea4af650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3629f9-68f4-42b1-82a0-e31855f66188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6d406e-daf3-4966-af87-17c0c44fcc7a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e891b4-5a9f-4b60-a302-2fcb2f553b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b179a4b-3378-4ed2-8269-840e4bab4341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dec7f9-5826-4b43-8a11-7daefa3c5265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d169e34-d555-40b9-9bd1-7529b361ebb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8521d968-2fc1-47a7-9e3e-63b6ef93ee2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ecf9a6-66ec-445f-b925-853551fffb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898cf022-4374-479d-949b-b7ed24857d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b695bc-9534-49fc-b3bc-469b7140757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef0fe6c-2356-4425-bf01-49eaa41ec6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de8f904-7d39-4295-836e-6f4bb003beef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b85775-869f-47d5-973c-3bd40486a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255552a0-7c9c-4c2e-a481-04749bb4693e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22f8a3f-edc5-455f-a50a-c32c7521c365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738f593e-03bf-4215-819f-856c86052e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db5996-26eb-45af-9242-b9b69ec2c600",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eba3bd9-079f-43ec-b6b3-db9b9c0c73f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c22b33-626c-421a-8dd4-3279d5f721c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e634684c-b38e-4e37-b083-bbbbd9f30317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e713503-185e-47f5-ba98-dcd1dd67dae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488ce21e-7c3f-4dbb-8d85-b7b05fd3af6e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46860431-fe8f-4f09-a708-764ef73a5842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa6867e-f5b7-4b3a-97e4-532bbee0a74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d5efd1-1fba-4707-85da-967e40904530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c14ca00-29fe-4145-bc66-e5916d6471bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e066c3d-5cec-4edf-944f-76382378e218",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7304f093-74d0-40b6-b905-c2f38da865b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9f2628-bb3f-4b56-9308-0c38dff1735b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4651d73d-36e3-4ffd-b584-1a712372d4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92191844-f64f-4f6e-9576-81687615265a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a5411e-a6d2-4131-884e-c10b505b2768",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f300ba-56c3-4bfc-8c03-69d986ce9f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96d9b90b-b9ad-4cce-a265-dbf1b267be02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888d7cf9-c6ac-401b-98dc-05cfeee431c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c992a389-779a-4b12-833e-69d5753b8f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af544b7-ec0e-49e5-bf5f-6ef528860265",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb98c57-fa05-429c-ba7b-d039fbfc1567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35480b9c-e7e4-4fef-acda-f75c3572286c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d3e354-3ec6-4ca3-8828-d4ac17053d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c209ae7b-d619-4473-afc3-0012b7994791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692aa23-10ec-46f9-a6a4-2ff173660a42",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bfd77f-7ef9-49ab-b666-f457833f88b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249b9186-4cff-4198-8eee-2c9b53fd947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2e39e3-d1ac-4c95-a18f-b4ce5cce65ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea71060f-2c1e-43be-b131-d93d9f9421c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a1cc8f-b4c9-40f0-8399-d05e61db4c6a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2fd15f-a7d5-40fb-a3f4-3ed87a14c9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c491f784-e6ee-4139-8476-269666843c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ef8290-404b-4997-8216-bef2d13398f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38426879-cedc-4c3d-a642-8ba3b4d186d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62b4f6e-b71f-45e2-9937-9fd68ab81f39",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d29b71-9a47-4b02-9229-a29479108df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca9c5f4-2c0c-47e5-8771-b85a6ee74212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d589c4-03ff-4594-be41-56bc4e8172b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a780f60c-18fa-484a-9ec7-dc6b7aeed085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9657dbd-0dd5-41f4-9f58-a80ad4e25be6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e54c29b-3f85-4b89-9739-5e0cdffdfdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3179e763-015e-4c43-8bea-4722334ae2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39de45d4-4496-4e4b-937d-811a02acec24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c1266f-91fa-4dbf-a2a0-125461c72270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff611f64-2a19-4a8c-88c2-1ebe8332c7ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07990369-0890-422c-becb-06561296500f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d729cf-84b9-4427-adbb-092b030dd85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e21095-ebf5-4ff1-bfef-3ff0154813d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58b129b-01a5-4d55-92d8-3f5867e8db37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a135ce66-c300-413a-b732-8f9b5caa3127",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb21696-5c59-41a2-87d0-b9479c54e63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928d7bbd-2c98-4889-a4d6-21f936d739cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377d9019-cf58-479a-8215-8de265a6dba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde3dc0-68e7-4e7a-8227-96119ad4dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5959b9-50d7-4ec7-a989-bb4116f6015f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989a97ec-1ae5-41dd-9b7d-92598340282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194cfab1-04f0-43bd-a3ce-92a31d4c0821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f440388-4090-4060-97c1-ec0a1730e855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68d7c76-673d-45d2-856c-b25059aa87cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d58c41c-539d-4179-b59e-8fe732dddbde",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d58050-8b93-4574-b78a-045d846884ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7815af9e-a45e-4737-940b-fb9cfc9c27fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91efe44-3158-47b2-86ca-62fcb2ac2a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bf17d4-2715-4765-b180-e6239692a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2641af-f995-4282-b49e-64c01b5ffbfe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674b7966-d6c9-40a0-9ff4-7b1c8e3d2ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e17cda-b625-4637-ba06-2d93f89c1e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60568f13-05ce-4a24-8c7e-880c9591ff25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaf1328-e6cb-459e-b370-af2a4cc20d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af105f0c-bb40-4919-a84c-52fd0f306b38",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16d397-aa94-424f-8b27-1851db25c75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2b20d1-c880-4465-9551-bf27881ff750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e55587-3dff-4ffb-91c3-2b55e27830cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59d9c44-c7c9-451f-93c6-e24647bcb0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8575c186-765a-48ab-8d5b-e22130923072",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e2c5b5-718d-4edd-a90e-ff0e7a00ad11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c774ff-8c01-449c-9f1e-dfdd56a55805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca889866-e7a7-4993-aaea-a80d8851badf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28ba293-df9b-4d3f-8ef0-b30c2ff505cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170e48e2-a67d-4790-ac67-94a0ab70f933",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e298e-fd29-4d4f-8b22-f60879bf85bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59b3946-6fa3-4f1c-97fa-6bb1a97b777f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ebe3d-e824-414e-887c-38d2867f4980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15da0609-a28b-41e5-ac3e-a9daa1711578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e54444-1eb7-4682-8d98-54fb53e87bbf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d6022a-da73-4592-b1c3-f5a43132dd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9684b6c7-7bec-4a66-95c5-935dd886fea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be8a400-432e-4691-8784-cb5c42b511c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b36428a-780e-4ef8-ad6d-2832b05ecd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a045b8b-9fb3-48f9-9da8-38d6d8a6b8e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce09844-501c-4500-aec3-967f99d1349b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e63b84-1bcd-4b5c-be8f-cc77889aa60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161597db-1871-4539-83ac-3e74c15d6399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9d522b-7e02-4132-8dd6-c716a00b5039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c205cfb7-fb85-499a-a25e-294f7a8e04ca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13306a75-c569-49b9-a1fa-24edcd8f85fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551d50aa-aea6-4e40-9200-b85e741151ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb1f9db-a95e-4ad3-a08c-0a4ad7ff77f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5470e61-ae4e-44b4-88d7-742dd9032254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d94fb02-1f76-40ce-8d2d-80709fba7c48",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c624772a-947e-437c-9174-c8fbe5491b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2a1416-6716-4b88-8df2-7f32a48836fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ecba3-4f99-40a8-8b8d-790ad4ef1c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb06bbe0-bef9-466a-bd5d-79e84847bf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af23932-c56a-45b8-91ee-54ed68921b6c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3498f73-bf99-4097-a3c3-38964acaca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e71755-61b4-4235-af3f-1914d4795390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3586702f-372c-4904-b5e6-39d613898006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cde7525-4134-4a57-8eb1-92b6fc7d6ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8624e6c5-2e1c-43ec-8998-8a7ada2d8ac4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc8ea3a-9ba0-4110-9e0c-c65ec589995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ba923-a84a-45e3-9bc2-2cd1eafbfb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea28d9d9-c8a6-48ee-9d96-3fbdcae15f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4838b2-12ed-4b40-878f-4e5f9e5b68e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b71417-c4c8-4116-89eb-a4f0292c2cf8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e182559b-e775-4354-ba1f-3096ca45563b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2768716-0bc3-4773-9383-842fffec0eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acbba0e-6b34-4e41-82c3-9980e1d2ce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53506401-048b-4287-95f2-cd6252027a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aec195-3b46-41d8-ba01-ff2d7fec4cfa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f68702-8eee-415f-9874-a3fe3d9ee6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1660c5f-d7dc-4ddb-a442-f1564c0090f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d2f070-d34f-4752-b0ad-f5003a945d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2f6c95-daa6-41ee-b18a-64b47f525bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c1cf94-8423-4373-afc1-b862eede81ba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd81e7-cac7-44f4-bfa0-5bbe0bc3bbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea57676-3e84-42ab-811a-56e94fc9edb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbae151e-8a63-49e9-82d9-a764981ed813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59f93d1-7530-4cdf-80ea-25d210c4ccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeff410-8265-4880-8d53-5cbffc3bbd32",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca111f9-734c-4d31-99fe-3d360ed81348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71201d2-43fa-420d-b8b8-061ecd729d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42d880-ce96-4c1d-898c-e4c055b08781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f83d1e1-61be-4b83-a8ae-2c541d55d6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389923f7-9f5a-4d6a-acf4-4bbf40f4d79c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c370035b-6bf3-4d08-8418-db95d207dff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dde858-9a01-4403-a8f8-09948b20f578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc33226-d24c-49d4-9d6b-80bab9700d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cf015b-b8a1-4322-8690-45a3d02538a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f54beb-3564-4628-977b-7ed8cd7b82ca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17491f0d-9985-42ac-9e53-84b7628c25c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ebc51f-7204-4d8f-be1c-6834c73a47c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c60c0f-4cbe-498c-9e9b-be4cd12fb846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb103ff-8cb5-46dc-8cc8-91c45e9f2dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801813a-cfcb-4649-8745-f3ec1063a086",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e29bab-7338-47db-a581-955df534afa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259a6f37-0588-47e5-939b-5105f0a4a041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77887755-c685-4308-8664-43b32ef6e2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ab18c6-de59-4bd3-a61e-422ea9abc5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431e0be8-342a-48da-97f8-bd58fdaffa8b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a021a0-f459-448b-8ccc-6e53beb78ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392bad19-2bf0-4c81-bfac-9482eab2d5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3585a848-a848-40dc-a2b3-cd473a4f07a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4409147e-1aa2-41a1-bf1a-34da0698fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49e541b-6f4f-4833-959c-c9908b122976",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d421e0-99a2-411e-bc81-82dffa0b12d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058f09f1-ead7-40c0-8ae2-b6540edab4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651eab9b-e36b-4f9d-89b3-df3f8bc19d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477da33b-42f3-46ba-a2a4-a2081d1b27ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcae124-5b29-43e9-9cd2-61ef3b0d899c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e943b-f653-476b-9ce5-a4285c5636d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce6b398-5136-4147-8cfe-705f135c5d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d77035-fff0-48b0-8251-f9dc8f41d853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d8d2c1-25ae-477e-a7ff-695138d711a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9becfb-0cb6-4e50-8943-3acfa73fc777",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a7639f-8c94-45bc-b982-21038791ed07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956f0b4b-c42b-4f99-9e69-08ec573e8b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82411c01-65f9-4df1-b8bb-76b536352207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fb79aa-686b-4dab-85d8-e08009f3bf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2657c89-94a1-4fd8-b940-c7994fca5190",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1192612d-1301-40ab-a6c2-e2dddb79059a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a0038a-76ab-4c1b-b015-cc68f11b7c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6bbdcc-cf55-4cda-a6ca-55f8d6b87cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f54731-f95d-47ad-8a15-97bc11b0ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7413a73a-1772-4a45-bc0e-15f2ce243744",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea7eeb-c417-4473-ba4b-3bd743a5e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c2fd8e-57dd-44a7-942f-866a7bafdd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae43aa01-6562-4c94-b783-d1ed818a5abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fbb3f4-b92a-4026-95c4-51e1fedfa6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0677cbf-05df-441a-9f40-a41c54ace91f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5aa1f-bb8f-4d59-a6c8-242e2a74c0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e55347-c53d-4daf-9df0-55f6b1889e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc684983-5bda-4027-ab5b-8d03dec0dc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd25028-a7cd-4855-8399-3ec4f4f82cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a53ea-4095-4915-b498-3cd8608eba32",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945ac87f-ecd5-4179-808f-4cf49f222ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d01e32f-8ce1-4027-b7a1-70eed29a3b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad58ff8f-e958-408c-8896-a8c9a59d44a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3def78-3a34-4afa-a4bc-d0f80ea79d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe175bd3-df46-4405-9f2f-f2aabee8399c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a885a9d7-13c2-4b87-b369-b1150ac84e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0225f4ac-66f8-4f93-905e-763304aaf4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04936615-a939-47f7-bcd7-55a0896d8712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aef5017-34af-46d8-8de3-acfa1c765067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae77cb-b687-4e4c-bbda-917302374aab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed67b484-eb09-41a6-9321-d0933347550c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb46f16b-764c-4cac-9028-bbe40f8084b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d0cb01-c040-4ae9-9a81-2b3e554b8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c1b440-74ea-47a3-a507-4013cd0dc3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02087ebf-89ee-4289-b8f6-a99729169e2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20c0a2f-2173-4e18-8efa-5cb46bec80fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2d9bf3-a51d-42a7-b978-76aced82f459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f240ae32-d76c-4242-af34-01e59ecb5c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4cb124-e6b6-4eb0-bb48-76bf2d469eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cb4781-a910-4add-b40d-67a58475b03a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0feb924-68a7-47c3-9f69-8d89c11e3687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01931f6-4ed5-4128-964b-bcf7d71f2b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79271ad-8fcd-48d3-a526-3c2ee20d71c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67452371-aad3-4741-93c0-bd39f91a69e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5702f-d5da-433a-a905-1cf60b562e41",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aafa9b8-0c06-43ad-95a5-7b4c7285a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fca4ab-2a00-4aeb-b84c-3fec3912555e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542cef58-48be-41b5-aed4-e542f03438bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3f892e-6791-4a4f-af04-2d649d989d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab526aa8-e14e-46be-87e0-51dd8c7df3e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff889b6-9fd8-40c1-aaf5-ed961e3fe235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a777f226-43ea-4872-9a63-6ddc47a468e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d87072-4352-4938-9fa8-87f2e43dff89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837fceae-0242-4d95-bacd-ef2cf18ed2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17921e1a-86df-4e56-973d-34e191d98837",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183cea1f-5630-4c49-ac1d-bca0e701b4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5491e8-c0ae-4f28-a2b2-dd1a881fc258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce0ca79-11bf-4c29-a9eb-3550160ed5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105e3c4d-98a9-4ffd-ac42-a4dc366bd898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477c1e7c-6ad6-4dfa-8a3c-8c791c5afdb2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6e9f15-126a-4afc-a8a1-de7df7ca4632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57089dc8-e09f-4b11-b64c-4a858b53344c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f944e1e-1eb9-4b5c-8fd0-c708c00b2ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f0732-ccf8-4ab3-b54a-c81e4fe3a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee8a228-2178-45fb-8ac0-a4e40df58fda",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b6fee-4dcb-4cb9-abda-3905e3411d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45676d42-1680-4955-adf4-c8357d01bc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8677c12f-ac1d-4824-9424-803d2e60f7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c0e7e4-6cfc-4e87-acce-bae5bad54875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f430982b-2b08-45ac-bc80-89147a91066e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71045599-a49d-48d3-98b5-bcb86648b724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf9b22a-80dd-4206-8ea2-e73b52ebce7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df51d04-2471-4918-bb1f-b3aba47f17e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5db2656-a381-4f40-9625-63401e92bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fba27a2-229b-4b18-a36a-bc9985c39195",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc855e7-c524-4dbd-8a45-e614bb579607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84aa92e-1859-4d47-91c9-ccb856ffb615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f491c90-6379-4c97-861c-eb8482129f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af19c43-96f1-457a-ae48-bafe019deafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6b01bb-6347-4bb3-9831-d07091ff2b83",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae538b6f-58a1-4f11-9ef3-15777a4d7f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc0ae5c-791d-4639-8882-aee9e9a06da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16c4e00-8292-48d7-8c22-6795cf14a878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b676cbd4-520a-4cf8-a63b-e196448b067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ac94e4-af39-45b4-8e92-f9c5753f446c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ee8a6-d2e8-4e41-9da2-b7848ebc4ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f04b406-ed24-4058-95b7-889bd7679cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577bfb16-43ce-4d4f-99d1-c8646fb36e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5ae0f8-fdce-44cc-9f20-2515533dab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e8ba2-6d94-49b0-8e50-230d064c385d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb8e54f-25f7-483f-8d4e-71e00876fd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002b4d61-fba1-4388-b4a9-d6b0e654417a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ba1352-e899-43c8-ae15-eba5250835c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f164ff2-c67f-41b6-918d-b9a25c5a2134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934c2bc8-0590-436f-a043-b02a1e3f6f0e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e488877-bd7c-4a40-9339-f1c6f323660e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef73881-0514-4c67-a42c-5066740b1bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89218c9-5c53-4263-8db7-50bcc4defa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99332160-17ee-40c1-9582-1bb66f0139f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10c4bd3-7f2b-4238-8ff7-4bb2b70e28bb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3d31da-357f-4c60-8a25-d1c28b5fc767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b1bbe8-fa34-4fdb-89e5-aad7f9ddb220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f5304-01f0-4e33-ad4a-2410de0b8858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f4434-ec94-4803-897d-0f0884735cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3d19ec-0751-4d13-bcb4-e8f1dd735ddb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1564bc40-b9bf-4715-b18e-8193fdb7ecbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3291884a-1771-4c2a-9836-888bd99c5f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b759d511-f32b-4cb8-84ad-9d30b14cb3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00a0f09-50f0-4f62-b798-ffb6eac2a315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cabbb3-7654-49d0-9c24-1d557681df50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340f1a3e-be92-470b-991c-11f077d459b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c51fb1-4194-42a2-880e-69a568a66a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4c4c11-0753-4b3e-a15c-e4b9d8acb18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f43c04-7393-44df-b0f7-e4b99d27047d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfae08a0-87bf-4aad-ba3e-d0af0ae53e79",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e44d4-4fe0-4f20-8f71-598bcc094705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "294aae1d-7bb6-40fc-9eb1-af82b0f8efde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a83835-9b51-410c-8c4b-9060ce2f2cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89736100-990a-4511-9d67-4dc42f12efff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2aad34-6aea-45fd-b26f-a365cda29b85",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a5ffc5-52ba-4ca4-a638-73c7905e92ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30d6efb-9932-4fbe-9483-aa0f36ae0f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24aa4ae-5efe-4286-8a16-aa46db038069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43d5438-56d9-4111-b977-3c50c6c26579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee4f7f-f54b-45bf-8b71-9b8f724919ce",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a329bb-f979-4c6e-bdeb-001809429af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22a03ad-9f62-4e7f-95f2-7bd79d3142e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ffea65-9953-4464-a20d-d007be0b8380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213d7632-1371-4767-bcf7-f139bb437555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033dd24a-b2e2-41c5-ad8d-fcc77273c4b3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8551d-baeb-4698-af59-e531e782dad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5cc6b90-7a18-4c20-b8c0-1a0bac579174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b3f24-5b6a-4f03-a6eb-847100bb8cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bac0a1-f2fe-409d-baa5-4704db5b3677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee816431-465a-4b63-8321-4c955c07326c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c42739-e30a-44ee-990f-ad12fd1069fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07582b65-4362-4d3a-b28c-a78c2e279700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998bb45f-125a-4d90-b67b-d93a9ac913cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59980485-1fba-407d-be3d-c3ad1e70201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce525345-41ae-41db-a735-017c67dc7d77",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e199ce6-9ae0-4429-bdcb-71320d4d3be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37277c04-4df2-4b62-88cf-ac8077ed8fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727bdad4-4a0c-4550-bf47-e0baf17fd5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed1dc46-cdf3-420f-8719-d24b5b5a7e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed8873-a01e-475f-ad78-c7828b666c7c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727dc841-beb9-463a-b045-75576747dd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b15d601-d5cf-422e-9069-c21d84cd799b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9913e6ad-898d-4de1-b31a-692ef048af66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28af7e2-f5a7-4312-b56a-087a5c333f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebed800-af36-4ed9-9d29-4fa17f4c5a70",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b5c035-67c3-4663-bc29-5c11add8c809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a299f9-5613-4d55-b74e-20ddf0385ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4006401-0f2a-4a78-933f-8113980598f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c3f4a0-ccb7-4b8d-a6a2-e3186deab843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480dd408-bc53-407e-b453-17d00328bbea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01949a79-31ba-4efe-937c-421138136cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bb4d38-e07e-4dd6-a35f-5dfe3b42715c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cfb7cf-caf7-46ac-8ba8-fca0a44a9b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc1a34-ebf5-42a0-b1b5-76b27a50212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa59ece-d1f2-4d58-b7a8-a76ea02d9209",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158c0888-f9e6-461f-99c8-941309f32d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c4364f-b43b-4537-9ffd-48dd11f50c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef9d61-0f66-4bad-b968-eb26056c52bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5162fe3e-a9eb-4506-b513-0d173aa1a512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58372c4d-553c-4d6b-943f-cfa15d1fb22f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0aa77d-fa54-453c-998e-a12b65e9a707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a7f552-712b-453b-b187-ae8c038b7dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b766b5-8691-4c6a-bc57-8b93ed45ddb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cd9978-ea33-47d1-9ec5-7a27a2a228d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaffa92-742c-41b2-9ce3-1bf1dd9fded8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f76a61-d3fa-4cab-a88a-e356b602ebef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c4247f-3640-494a-955b-534acc3901ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56445e09-4ca2-4174-ad43-1657cb92d452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38aeb2ce-52ae-4e27-af43-9740e7a3589b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07f0e800-0828-43ce-8071-0fca63a6505f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdc62dd7-f9f1-4957-b586-954eca495451"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22bc3d6b-e2e8-4c1e-98c1-d2bf79076130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5205eba8-0749-4609-a93d-6e61bec45b1f"
                    }
                  }
                ]
              },
              {
                "id": "67115fe4-b49a-4dad-ac13-2454c6fd5cf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9ac351e-310e-44ae-83f6-08c58d26c042",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a31135f-a661-4dea-9108-389dd93f5198",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "63f4c043-2c44-4614-8cda-7d5ecb25b219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaccdffc-ba79-4e5f-addc-ab13cdd035cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32c2405f-757e-43c6-a968-331aa647160f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddc2d85-569d-4925-8db9-e00d141f9f97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9583fe96-e2ea-49bc-9955-d6097ca31203"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98f26c59-7001-4fe0-b6b1-96dfaf38e511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8cbdeb5-c137-4998-a99f-88f6dc48f52f"
                    }
                  }
                ]
              },
              {
                "id": "1458f6af-fe48-4a0a-a6be-919c3b58668e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08cfe681-142d-46da-841a-3cc3a334faa0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e7297-f467-4207-9035-5e5e3c96758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "52dae95e-2c06-4df6-b92c-dcca57bdac84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e69b223-946e-4f03-8e13-e87345f6dab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e56fb5b-b1f8-4f0d-b25f-76184008f602"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "403d8067-3fe5-45a7-900f-9b1965b68061",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73eaa1ac-9c29-4ba4-bb48-2f68cfbcfdab",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b15b8c-44cc-4152-98b0-04ec73483853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a59c9ba-7889-414d-bb94-647619a83cd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66ff791b-e913-4f18-8c5c-71c07ec296d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3daf8d25-14b1-44ae-bf55-e495178df937"
                    }
                  }
                ]
              },
              {
                "id": "725ed48e-ef37-4cbe-a5ba-c45370499737",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31191cf6-2fbe-47b0-a305-49ef92c661b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4158cc7-6c04-4111-96db-ff618053906a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb633ad-ce64-47c3-94e0-3956cbea220f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85b8731f-d32e-41d5-b4a5-421d872506eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffdb7063-b858-4137-8722-66a4c566a9a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa3bf114-0eec-43b2-9fe8-431a58ae9e12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69b968dc-c1c2-47a7-8a8e-ea7324501680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e0f6457-eae7-46c7-9044-26f4643e4869"
            }
          }
        ]
      },
      {
        "id": "a7782be1-40d3-457e-8ec7-0cbbbb8bff33",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e111423-4fc9-4467-a091-30fd6a5b5ac1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0bb5ddc-6753-4d80-bdf2-d46702877352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac05380b-a8f7-4df4-9433-9870806ff3d3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08bd0ed-a378-4d57-876b-7a17c3b8e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "608406a1-7501-4d08-acd7-b93e8f44be0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa5faa7-2ffb-4f41-bec7-bae0c461dd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd3ff46-b1dc-4d21-9eca-59467d97b9c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c906281f-13d9-4d0c-946a-25a8ef272260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5206fbeb-8d40-4ae8-a418-ecaf25eab514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81af8bd2-5a96-497f-b9f4-627492f2d48f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c72248e-a7d0-4f86-b28c-219017307410"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f960506-f30a-4415-83ec-45275340328e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63ed87d6-947c-4716-aec4-61429e935e3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d03b4ec-1069-4dee-b3ba-6224a16227cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78c88fd8-ed3e-448e-a7cd-81bb1a75fd55"
            }
          }
        ]
      },
      {
        "id": "4e61d020-a293-44b0-ad02-c854de84ec87",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2a605075-0eca-4716-9dd2-56dc8f112856",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fa4f468-43a6-41bd-bd6d-9acc81d5ff25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fded8af3-ab69-48c2-aabd-b11b6cffcfef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6de929-b7e0-47f3-9f52-4dd5cacf7e86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe20ec1a-29f1-4b37-9c2d-b68487992de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ce4986-7c1d-4786-b186-abce14f503ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b165585-33b6-4a35-8475-0d7808057687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2dc1710-53d4-4a67-ab34-569efccf48bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a7b293-0737-466e-9c2c-54d1a085737b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6112312d-b04c-491d-accd-9d69a147d3ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f66c39-2014-4991-a2d0-ec281a9a413a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18826255-5a83-42d2-a76c-1fcf85fe600c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "705994f1-1ad6-46c1-8faa-f7bcb6bb1c15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d61a0bd5-f1e2-4190-bb77-9434c1b92dcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da24b48d-6b2e-485c-8240-30ab9d1c1e08"
            }
          }
        ]
      },
      {
        "id": "66d1a128-628c-40bd-bf01-82dd8774ad1c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9602816d-1ef9-4312-ae84-887c083852e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3dfe580a-2903-4492-9f20-3f9ceec268c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e3a62a5-0628-49fd-8a70-ca7eadee7743",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48029b0-cc06-4a45-a5c5-1eb4dd868db1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa522db4-5685-413e-9e18-8e5fd9b3cb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b91e5f-d89b-4e01-8648-64e9d1e9ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54b25148-dfd6-4be5-b937-a8d3115956be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f8cd78c-79a1-48e9-b55a-76d26bae7b7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a7732e3-7bba-4df4-874f-143b737319c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bf17bfc-b3cf-4a9a-8943-3d4287c4c005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe5a415e-65e2-4406-844b-f4e5ea7b5069"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0c1ec91-20d0-4ee7-a755-88337071f27b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "961e1939-e50b-43c0-bce7-94969749a7b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571b6a5f-2d13-4950-8013-37d1defac27c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25d624df-814e-4dec-934a-8b7b18598481"
            }
          }
        ]
      },
      {
        "id": "20a3837b-91ec-4380-b306-c0ea89b5561d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f89d0493-bfee-46ee-87eb-6cfd06ca3d51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df7ca26c-3793-46c3-878c-a59b6190ee04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c5299c08-3519-4eb2-97d7-42a959a437cc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7785c919-6819-446d-8262-ad392acc8dc2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "674ab65c-be14-4679-a382-e64a67442ac1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.29824561403509,
      "responseMin": 20,
      "responseMax": 415,
      "responseSd": 26.1567239433467,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706574849280,
      "completed": 1706574874548
    },
    "executions": [
      {
        "id": "06647824-b144-4454-9fd9-387bba9c92be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30d70f5f-886c-4012-93cb-b5c3cd0e97e8",
          "httpRequestId": "4e9c2daf-e529-480d-a9ec-a3697f48151e"
        },
        "item": {
          "id": "06647824-b144-4454-9fd9-387bba9c92be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7f7121b7-9bff-445c-b8fa-8df8a3a4d3ef",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "c482f2f8-e7e6-422c-9ae5-11cfcb0b15c5",
        "cursor": {
          "ref": "3286f3d8-942b-41a1-b558-36ff46e54003",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2871720f-81ec-4f09-a23d-249888684d85"
        },
        "item": {
          "id": "c482f2f8-e7e6-422c-9ae5-11cfcb0b15c5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ddfe09d8-65bf-4904-9bc7-a42d098ebddc",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "29ea9b17-944e-481a-bfe3-b0504b665c30",
        "cursor": {
          "ref": "da023a24-455c-42f6-9da3-6f1884e3dca9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd611428-ec7c-4871-83fd-80ae76de9ff4"
        },
        "item": {
          "id": "29ea9b17-944e-481a-bfe3-b0504b665c30",
          "name": "did_json"
        },
        "response": {
          "id": "96940421-911e-43d9-863a-b8f24d7df641",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcaf22a-8d63-44d1-b284-ed526a7a41b6",
        "cursor": {
          "ref": "24862c19-6d3b-4370-adbb-b4b6a35883e0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c50ff86-906f-491d-91cd-03afc4336771"
        },
        "item": {
          "id": "bdcaf22a-8d63-44d1-b284-ed526a7a41b6",
          "name": "did:invalid"
        },
        "response": {
          "id": "87c830f7-d7bd-4370-bba4-90792c8b90f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcaf22a-8d63-44d1-b284-ed526a7a41b6",
        "cursor": {
          "ref": "24862c19-6d3b-4370-adbb-b4b6a35883e0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c50ff86-906f-491d-91cd-03afc4336771"
        },
        "item": {
          "id": "bdcaf22a-8d63-44d1-b284-ed526a7a41b6",
          "name": "did:invalid"
        },
        "response": {
          "id": "87c830f7-d7bd-4370-bba4-90792c8b90f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0692dfb4-019b-42bd-a9f9-c7eb32de2181",
        "cursor": {
          "ref": "2ed0a73e-871a-4b8e-85cb-5da6b2f497f7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4ca068c3-d21d-4cbb-acc9-3f4d5a53ee30"
        },
        "item": {
          "id": "0692dfb4-019b-42bd-a9f9-c7eb32de2181",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fbcd255b-c796-4f78-a435-3265b466883d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 98,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8874a7e5-ed61-4004-b9a8-fc1ecdf19d24",
        "cursor": {
          "ref": "bf5078b0-f77e-49e3-b14e-12dbce14a35c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "df52a367-ebba-476e-8860-2857e3f476a8"
        },
        "item": {
          "id": "8874a7e5-ed61-4004-b9a8-fc1ecdf19d24",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "52c6ee48-2b83-46a0-b4d6-c4bca5ecd4f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bdfac2-0ce9-446b-9da4-f6fc9a161ea7",
        "cursor": {
          "ref": "39d8e073-7b7b-4f17-9a3d-a821405a0407",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b0a4d2f1-b40e-47f3-84d3-0698bc6f44ee"
        },
        "item": {
          "id": "10bdfac2-0ce9-446b-9da4-f6fc9a161ea7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ba706b13-541d-41dc-9f42-3ad98fcdc3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479c5e90-fc79-402d-96be-b12f664d487b",
        "cursor": {
          "ref": "a8e73cb9-5f6d-461f-b34d-c1c0add2419e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f3e106d1-ffe5-41ea-8250-4f882cb5b81a"
        },
        "item": {
          "id": "479c5e90-fc79-402d-96be-b12f664d487b",
          "name": "identifiers"
        },
        "response": {
          "id": "3f11fcd1-7838-429a-a2f2-384587739ce8",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe5033-788a-41b8-98cd-4b3a45e49291",
        "cursor": {
          "ref": "c8e392a4-3280-4a7d-b537-13610b1d6c51",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "decf4680-a478-4d78-949b-4ea9cfa8f22d"
        },
        "item": {
          "id": "1efe5033-788a-41b8-98cd-4b3a45e49291",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "455b2df4-a372-486a-945d-433d337446b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48e0d5-2d83-4b25-8b52-60bab215b6b2",
        "cursor": {
          "ref": "c3999390-fd4e-4e9c-bf34-b952df43bead",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b8fbc0be-2d4a-4125-a541-2d0c0c16e907"
        },
        "item": {
          "id": "3d48e0d5-2d83-4b25-8b52-60bab215b6b2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4719b33f-7776-416f-9a9b-91dc06e9fb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e2284-e4e7-4353-bfdd-52fd6a925b74",
        "cursor": {
          "ref": "ffdea46c-1d81-445b-a746-dfe688e02efe",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "040c8deb-803c-4611-94e6-5f91b260c877"
        },
        "item": {
          "id": "223e2284-e4e7-4353-bfdd-52fd6a925b74",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f000339c-f95c-4a9b-9ce3-29ef83aa5dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09b6998-dd27-438e-aa01-e20e9379c8bd",
        "cursor": {
          "ref": "b92adbea-05a3-4ca0-a9bc-adad8c48fd0f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec06c366-a7c5-43a3-a3dc-d875c6bc16d7"
        },
        "item": {
          "id": "d09b6998-dd27-438e-aa01-e20e9379c8bd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "801bef67-2bec-4800-93da-0d2962239a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575f1c6e-ddcf-4c01-8ba6-6829fa94880b",
        "cursor": {
          "ref": "500c1a92-9cd3-4e93-8396-e3f376739ed0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "190a8080-6744-49ee-b40e-aacad238d226"
        },
        "item": {
          "id": "575f1c6e-ddcf-4c01-8ba6-6829fa94880b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f9ead14-3f0d-4c3c-8ada-d789fa1f20ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536b0ce3-4a64-4c8f-8835-a61e17d0f87b",
        "cursor": {
          "ref": "c03ca0c1-c53d-4cc4-b406-09ac8be61708",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7461ede4-b568-41f6-a183-52cde02e88e7"
        },
        "item": {
          "id": "536b0ce3-4a64-4c8f-8835-a61e17d0f87b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a34b884d-d7df-414c-8c1f-cf66e389b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8349130-9259-4eaa-9ca5-5fd55804b598",
        "cursor": {
          "ref": "ad60c810-3167-4c8a-a597-e7df2178ab2a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "feae036a-45ef-4843-985d-d09efd608a3c"
        },
        "item": {
          "id": "d8349130-9259-4eaa-9ca5-5fd55804b598",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0d95f7e5-67df-4999-8140-4809151a754b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9538cd0c-1ec6-4597-b41d-51413b9e24f2",
        "cursor": {
          "ref": "0e462627-8203-403c-83d2-fffd00cfec11",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "baa876dc-500d-4ec9-bb5b-01667bd741d4"
        },
        "item": {
          "id": "9538cd0c-1ec6-4597-b41d-51413b9e24f2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a6011a4b-456c-4e00-9a96-ee498d308310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7ad9c2-90d5-4c7c-af02-21c528ec713f",
        "cursor": {
          "ref": "90b0e704-dfd3-4fe9-a6dc-99493e4392a8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1e9c998-9be9-4e7a-98c3-d3b865077ec2"
        },
        "item": {
          "id": "1c7ad9c2-90d5-4c7c-af02-21c528ec713f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7de7a0bd-2daf-4d2c-bc7d-d74ab8f384d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3b2d32-e082-481b-8b94-4a9faaca8204",
        "cursor": {
          "ref": "8bbbef32-dba6-433b-930c-cc477e74230e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92ce5ae3-3840-4793-a5f5-c031022720f7"
        },
        "item": {
          "id": "dc3b2d32-e082-481b-8b94-4a9faaca8204",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1d5a587a-0964-47d7-8335-b5a19e7b5884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846c583-73f6-460c-ac68-b52c06e7370f",
        "cursor": {
          "ref": "cf996042-4fe6-42f1-98bf-1357f4e70b19",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e8c0383f-26ec-4a9b-8bef-8a538a8e34bd"
        },
        "item": {
          "id": "3846c583-73f6-460c-ac68-b52c06e7370f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "204cf786-a8c3-44d8-adf0-4555ca1810fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1194032b-0885-43ce-9b2b-117d20522bc6",
        "cursor": {
          "ref": "75cbcdde-3198-4bb3-9e2d-27560be00ca6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b62075b8-e1bf-4cc8-a432-09be4d663bba"
        },
        "item": {
          "id": "1194032b-0885-43ce-9b2b-117d20522bc6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0505c343-0359-440a-9466-3a24c5a387a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6c7b78-d6ea-43c9-bafc-9d5f8d8a9982",
        "cursor": {
          "ref": "aea8d703-e430-4a35-8e28-4ff23d5951ed",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c27b0b04-e654-4ff0-83cf-246a03b13809"
        },
        "item": {
          "id": "0f6c7b78-d6ea-43c9-bafc-9d5f8d8a9982",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bc9b6870-8225-4d34-bad7-6dbeddd46476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7307195-b8bb-4f49-bed2-a0ac8baa2b8d",
        "cursor": {
          "ref": "15ea89c1-c7b8-4919-9aa8-9b7c011c18c0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ec5fa56-d03d-44fc-9b65-b8f53a8a7c9e"
        },
        "item": {
          "id": "c7307195-b8bb-4f49-bed2-a0ac8baa2b8d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6f5b2d97-5dd9-4a2d-931d-48aa4886cbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f8b67a-11a0-436f-8285-f92a950d9480",
        "cursor": {
          "ref": "942abd03-cfd0-4b84-98e3-0383553b93ad",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5b36e808-e8c0-4d3e-b5a2-f4da517b39ba"
        },
        "item": {
          "id": "21f8b67a-11a0-436f-8285-f92a950d9480",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a6a4171a-c634-4986-9147-e91e326a2a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63535616-8e5f-4e2c-b83a-d154f655255d",
        "cursor": {
          "ref": "6bf22b1f-2753-4ebc-bbd1-8143e26a539b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "45f2d56c-e2bf-45b9-bd83-d78f7176f8fe"
        },
        "item": {
          "id": "63535616-8e5f-4e2c-b83a-d154f655255d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2070e993-5e27-400a-b0ec-76d56ee8df2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd587a5-02a8-4ff3-8635-d277de46a300",
        "cursor": {
          "ref": "ba67857a-1c85-4ab3-8519-ff9e3ac48b74",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2dd9272c-0e2d-4d91-9ac3-a028e1a21cf1"
        },
        "item": {
          "id": "dbd587a5-02a8-4ff3-8635-d277de46a300",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b0b46bdb-40fa-4a23-a58c-2b0c994320ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d178f6-1bea-4a76-9ec1-fe9e43310351",
        "cursor": {
          "ref": "81b7ad8c-2194-4109-9e7b-06d676e1f7dd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "105077b9-81b0-41ad-8e8d-a8d683e321bc"
        },
        "item": {
          "id": "e6d178f6-1bea-4a76-9ec1-fe9e43310351",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe90173e-bc88-4699-b9e0-d9fe3134b1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b241d89-04d3-4503-baf4-c770d40eba99",
        "cursor": {
          "ref": "393dfd5d-93cb-44b9-a4f3-b3d71e53ec6e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2bf825ee-804e-4242-9583-450b00fb5b74"
        },
        "item": {
          "id": "3b241d89-04d3-4503-baf4-c770d40eba99",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "46809194-97d8-4e78-8f0c-17c4670a778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2821247a-4c60-4750-8657-fea7435fa49d",
        "cursor": {
          "ref": "35a8b297-9e62-4942-b045-0e1fe88cf514",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7586f709-29a6-4bd1-8926-73cafece3470"
        },
        "item": {
          "id": "2821247a-4c60-4750-8657-fea7435fa49d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c33f66f4-0897-492f-8bd0-1bafba306d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f40aa89-40a0-4427-b080-9c210b97a097",
        "cursor": {
          "ref": "96c269bd-ecd3-4481-bb92-efcac74b57a7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cee5aa1e-e5fe-4cbb-9493-93251b351bad"
        },
        "item": {
          "id": "7f40aa89-40a0-4427-b080-9c210b97a097",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c07ab65-5cca-4a3b-b498-fbad968b1967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d7b169-b7b8-4c68-8b33-29407e00d774",
        "cursor": {
          "ref": "af095aaa-9a31-4625-b44a-05ee000d8bf3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f42bb4a-0b05-4970-bcc2-c80e387964b7"
        },
        "item": {
          "id": "a0d7b169-b7b8-4c68-8b33-29407e00d774",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65b19307-603b-4d5f-a059-8bf1e3c53fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306bec6e-796b-4108-81cf-17d7b67c1678",
        "cursor": {
          "ref": "450cdff2-693d-42fc-8267-05ddb019e6a7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15baf2ef-9647-4c9e-9d1c-f45a08d22716"
        },
        "item": {
          "id": "306bec6e-796b-4108-81cf-17d7b67c1678",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ace2f1af-5c06-442a-9546-3417d25c68e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7176311d-c563-46f2-856b-72eb480836a6",
        "cursor": {
          "ref": "d2e93d73-f15c-4b3a-b559-636d84a12d82",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f09bd7cc-efee-42ff-8516-35c6cb397525"
        },
        "item": {
          "id": "7176311d-c563-46f2-856b-72eb480836a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "912a2460-1257-408a-889a-1eeb1b1ef9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059eeb2d-b759-4e21-9276-2c0a1f938c9f",
        "cursor": {
          "ref": "3a89e5b0-53a7-4db0-bf50-6e2f94fb170b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "59224fad-af44-4ecc-b906-3ec62b5ceb01"
        },
        "item": {
          "id": "059eeb2d-b759-4e21-9276-2c0a1f938c9f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "48b08095-b0be-46c4-9dd1-e7e5a2af3b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b7315a-46d7-4e27-80a6-d13b65ff8ef5",
        "cursor": {
          "ref": "d26bb002-0d44-4e3b-877d-76f2ff48fc92",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5e809211-df4d-4455-ac27-e899a490bda7"
        },
        "item": {
          "id": "f8b7315a-46d7-4e27-80a6-d13b65ff8ef5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38929e27-d094-432a-8c8b-6a4b294c9c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb66e527-8c0c-49a6-b20e-056fffe7fd69",
        "cursor": {
          "ref": "021c545c-d4c8-4918-b83d-54a13137f4d5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f025de4e-996b-4c3c-8f7d-1ebd22e8aa47"
        },
        "item": {
          "id": "cb66e527-8c0c-49a6-b20e-056fffe7fd69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c47e20c-a8d8-49f7-b5d2-834ad02ff372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de34f9f-58be-4dfd-b910-0133de513a3e",
        "cursor": {
          "ref": "569c01a3-4b15-4e4e-a3e1-bb74804403fa",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06dab7e8-4e17-4765-8971-dc1b138d10a0"
        },
        "item": {
          "id": "0de34f9f-58be-4dfd-b910-0133de513a3e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5778ca97-2cbc-40c0-a0c0-df2e23d62908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70add68a-6fdb-4f1e-8c5a-c02b087a0533",
        "cursor": {
          "ref": "5468dd1b-e3ab-467a-850b-4039645a3404",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6480f39-c523-4562-9118-16baa1d2442f"
        },
        "item": {
          "id": "70add68a-6fdb-4f1e-8c5a-c02b087a0533",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6e10423f-df16-4c8b-a331-8f165e3c56c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07efd3a0-701f-465f-86f1-fd7f7b3fa1f5",
        "cursor": {
          "ref": "734560b3-356a-458f-ae05-e49a54116f4c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "43c12adc-2ff7-4676-81ad-df2169aa9dea"
        },
        "item": {
          "id": "07efd3a0-701f-465f-86f1-fd7f7b3fa1f5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c5a49589-9f86-4d81-9f43-e67827da2d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5664b5-1fcb-4f19-a327-6057ae0631ca",
        "cursor": {
          "ref": "f11b59e8-2e89-46a4-b398-dd459e86f8c7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "826da02c-927c-4e90-9aee-d0f3389381fb"
        },
        "item": {
          "id": "4c5664b5-1fcb-4f19-a327-6057ae0631ca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "366c14f4-d496-467b-a691-2eaf89858518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff412c76-9c52-48a2-a231-b70875475544",
        "cursor": {
          "ref": "77055dc7-0a41-40a3-ac9d-7ac1212642bc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5b21916f-4015-4b27-b30b-babd21e7a724"
        },
        "item": {
          "id": "ff412c76-9c52-48a2-a231-b70875475544",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1417be76-e8fa-49ef-b306-004e302a7568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998e6da6-602c-491a-9b59-ca883a072f15",
        "cursor": {
          "ref": "9cbe32c8-520f-49ab-874b-43b9bbd4d66d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "af788916-8b72-45af-bd78-3df039d69e0d"
        },
        "item": {
          "id": "998e6da6-602c-491a-9b59-ca883a072f15",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "118d2653-e09d-4fef-a92f-20cb019aa4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff421f-3283-4315-ad5b-a48d7e6aa54f",
        "cursor": {
          "ref": "caa566e0-3819-45c3-998e-335a0a3e5b8e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09e8082f-50f2-4826-8dfa-450576942503"
        },
        "item": {
          "id": "ceff421f-3283-4315-ad5b-a48d7e6aa54f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7bec7556-01de-4626-9f16-04f9e45f9183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c741d46-4918-4d44-8a5d-9a5c6c555050",
        "cursor": {
          "ref": "ede29f50-cce0-4223-bab4-08c184fe3ccf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cd07b3c2-63c2-42c8-93b4-0a15dc63887e"
        },
        "item": {
          "id": "5c741d46-4918-4d44-8a5d-9a5c6c555050",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3adaaa09-1cd3-4c10-8f67-d85be24b7191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d092305-a563-453b-93a1-ebacead3230e",
        "cursor": {
          "ref": "fa3c8482-0ae5-4e66-aec0-d678f38ed020",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "615c8fb2-7c0c-4e1f-a16d-43b4342c8dce"
        },
        "item": {
          "id": "8d092305-a563-453b-93a1-ebacead3230e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2524e9d0-046b-484d-9d6d-7bf950a25616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398b7637-680a-484e-82da-40626445c8f5",
        "cursor": {
          "ref": "88c0bcd3-a0b2-4533-be16-4d31a5ff1c5a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "69f0530f-5a7b-4c41-ae6d-3e35d7fa0ccc"
        },
        "item": {
          "id": "398b7637-680a-484e-82da-40626445c8f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47d2da6e-e05d-4d2c-9236-fce302df975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660b61b-cfec-40c8-9959-1f1f82164ffb",
        "cursor": {
          "ref": "ed614e9d-e1e1-4718-aaf4-d3878a846816",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "def1a6e5-39e0-4e15-b871-a9b35d69f3cd"
        },
        "item": {
          "id": "5660b61b-cfec-40c8-9959-1f1f82164ffb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "77dfa970-8483-4629-8953-7cb06d1c16e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4e861-2e9d-4530-8ff4-2d28a61208c6",
        "cursor": {
          "ref": "b9a7b81f-ee41-4555-a784-3295ca3013a4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b4175ed-7b10-4c91-a45f-768312cd5d17"
        },
        "item": {
          "id": "f7b4e861-2e9d-4530-8ff4-2d28a61208c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77d1b58b-5706-4f39-b9ab-cb4210c5c1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33d2a3d-8b2c-4485-96aa-acd27a30ac3e",
        "cursor": {
          "ref": "ce262e39-87e9-463d-bbf2-1859bcdc1b3f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9da1c1a2-954e-4dbf-8722-557ab81590d5"
        },
        "item": {
          "id": "d33d2a3d-8b2c-4485-96aa-acd27a30ac3e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "94688608-b4fc-4f4a-a41b-60723afc64da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dff62be-5cc1-454b-b109-0f3d8327ecc7",
        "cursor": {
          "ref": "350583ef-b703-49f6-894c-c9e7ea72ca80",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "347191d6-5ca3-4fe7-8601-6c3be874686c"
        },
        "item": {
          "id": "7dff62be-5cc1-454b-b109-0f3d8327ecc7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8f4377f2-88ea-46ee-9352-284053ef166a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4242554-2131-4da5-853b-0ca7b7028dd0",
        "cursor": {
          "ref": "3135b325-b132-4484-a4a3-c1c5f80fcd71",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2de1d5af-f02f-432e-9668-09343dfb592e"
        },
        "item": {
          "id": "f4242554-2131-4da5-853b-0ca7b7028dd0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e6019a9-bd14-4eba-84ca-3b411da5c490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f11de4-80bb-48d0-aa37-7e7052c58f7a",
        "cursor": {
          "ref": "e1673b72-bc7f-498e-9ab5-d4be63cd57ea",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6ebec979-01ab-415e-82fa-35d2154e9296"
        },
        "item": {
          "id": "12f11de4-80bb-48d0-aa37-7e7052c58f7a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "110f8b26-69af-4768-8388-9c34e2a8774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd41f119-5204-4364-85ac-c18107ab2d26",
        "cursor": {
          "ref": "1c6a9670-517e-424f-b182-26a2e09c2f98",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bcf26687-eab3-4663-ae9a-70639d4ff86d"
        },
        "item": {
          "id": "bd41f119-5204-4364-85ac-c18107ab2d26",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "89cb904e-a3c6-4ea1-a35c-f12316ac000c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4aac5f-af85-4501-bea9-71820fcaaacf",
        "cursor": {
          "ref": "bf0f9581-055d-4815-b396-bf4fc3ffb206",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8955b076-fa88-44d3-b58e-723c728c00ce"
        },
        "item": {
          "id": "bb4aac5f-af85-4501-bea9-71820fcaaacf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0219bee6-ee62-46e5-b1b4-d6640cd23a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112b3448-a043-42d5-8f5c-f968aab26be0",
        "cursor": {
          "ref": "771adb72-db83-45df-be4d-9f8c7fc87a09",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8b9208a5-6538-4d00-bfea-b047d4672dbb"
        },
        "item": {
          "id": "112b3448-a043-42d5-8f5c-f968aab26be0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1af22081-eb91-466c-906e-3241086a42c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6606ee46-3acf-4bb2-9786-0162228d8666",
        "cursor": {
          "ref": "c3e6de9f-c25a-4adb-ae0c-0ecaea6c581a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6a778fb0-1833-4a63-a985-522322bd6822"
        },
        "item": {
          "id": "6606ee46-3acf-4bb2-9786-0162228d8666",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c95333c-a1c9-4356-8079-af2e5642305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91265b5e-2c77-4063-83a2-190eb41fbb63",
        "cursor": {
          "ref": "878abccc-56a3-4faf-a2fe-fd4bc386b0fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0acfc801-b54f-4b12-9d9b-3cea37729d75"
        },
        "item": {
          "id": "91265b5e-2c77-4063-83a2-190eb41fbb63",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f1493381-9974-485a-8b39-c55971ef2d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb8f05-c673-41d2-8dce-93d2ae9fa7f9",
        "cursor": {
          "ref": "31fed362-8201-49c5-b38b-9e0082cb284f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "264debf2-6d79-43cc-b9bd-a1f6f2d5e98e"
        },
        "item": {
          "id": "99fb8f05-c673-41d2-8dce-93d2ae9fa7f9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c8f0f54d-9801-462e-977b-460efef63705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b78397-981a-4eab-b3dc-24ca97c54c53",
        "cursor": {
          "ref": "3c563528-b1c0-41e2-b83f-4885eed27393",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "73736576-f1d0-4e41-b61b-4ffb074662e4"
        },
        "item": {
          "id": "81b78397-981a-4eab-b3dc-24ca97c54c53",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2b8db62a-dcbe-4523-a89f-c7e011bb8a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024207cf-ad19-402a-afa3-6a01051566cd",
        "cursor": {
          "ref": "1a24528b-f6d1-49c2-992e-eff1ceae050b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c3748bf7-6b41-4515-9116-d79786395199"
        },
        "item": {
          "id": "024207cf-ad19-402a-afa3-6a01051566cd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b14b6984-1ccd-4108-a929-3e0df1f461da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c4e367-b121-467b-8564-bd196a061ade",
        "cursor": {
          "ref": "c08eb794-93ca-4642-b603-fd73a2b1370f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "981763b5-70db-41f8-8606-3c48347723c8"
        },
        "item": {
          "id": "f2c4e367-b121-467b-8564-bd196a061ade",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "30440f28-c23d-46ed-b9e7-5d0d955fe986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519d5d6-f643-4378-b1e4-80c37f692463",
        "cursor": {
          "ref": "0139b279-b8fb-49c0-918f-fe5e395be929",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "14ff24ad-5355-4bd4-9cce-0188412af517"
        },
        "item": {
          "id": "4519d5d6-f643-4378-b1e4-80c37f692463",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "96da916e-827b-4334-9b99-734b0d7c4cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32cf56c-d1d8-4d06-b694-80cefb62819a",
        "cursor": {
          "ref": "20f63864-88a5-4c2e-a9fb-b606c4e47ddc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e6389560-455c-43fd-b53c-68c628fb54c2"
        },
        "item": {
          "id": "c32cf56c-d1d8-4d06-b694-80cefb62819a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2fe40a03-8295-409a-ac2e-6a7256686ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2353be-4235-41c8-acb6-97551445ded2",
        "cursor": {
          "ref": "6e8ec0d7-738c-4ea4-89f6-e6b64ba5b8be",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8aa5a5dd-15f3-42a3-9924-2b6e493a0fd3"
        },
        "item": {
          "id": "8e2353be-4235-41c8-acb6-97551445ded2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cffee7e1-c3c1-4884-a2a8-8485824e5904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899f1493-894a-4346-a635-8a80ea5fd5e2",
        "cursor": {
          "ref": "cdc05aae-0279-4d37-b0ce-5eb64a4976a3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "87826384-f3bf-482d-a8c4-83f7d6d95c06"
        },
        "item": {
          "id": "899f1493-894a-4346-a635-8a80ea5fd5e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9aa65d38-f49b-48eb-87ab-c5a991d9b5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c02bf-4799-4b01-a084-f67eab3ab194",
        "cursor": {
          "ref": "be8df65e-ed25-4d7e-aaba-8bbc60c0cd77",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cdcbdd4d-b1be-4fe1-863e-ce011abea6b8"
        },
        "item": {
          "id": "945c02bf-4799-4b01-a084-f67eab3ab194",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24df58a7-cb06-4f10-8939-c1483c74ce00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e3f1bf-5477-4181-93e1-f72f3c72bac3",
        "cursor": {
          "ref": "fe5136a2-b068-41a5-9d9b-4654f36efc1a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d022020a-c38a-4fe1-b23c-92c7c94db966"
        },
        "item": {
          "id": "40e3f1bf-5477-4181-93e1-f72f3c72bac3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "65465af6-280b-4b77-9385-e7fdaefa576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e60024-9c26-4922-929d-02bbdb0b3648",
        "cursor": {
          "ref": "528ebfd7-bb94-447a-be32-715aabb5b18c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "72aeb4c7-08bb-436e-a058-550309e8883c"
        },
        "item": {
          "id": "28e60024-9c26-4922-929d-02bbdb0b3648",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a4641ac3-11fe-4a2d-87bd-e825a34b97e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa92a75-69d1-4087-b2fc-cae5ccf4c867",
        "cursor": {
          "ref": "c6949530-78e8-4115-83e4-d245921193aa",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5605cb99-f85f-4f8d-b0a5-14e4f132f1e7"
        },
        "item": {
          "id": "1fa92a75-69d1-4087-b2fc-cae5ccf4c867",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c7c10a86-723b-439b-85ed-d4e7585a08bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a8334-08e5-4c84-b987-f6e226e05d4e",
        "cursor": {
          "ref": "914dce64-aa91-457a-bc2c-5c69361463f5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c35e79e-a73d-44a3-8bb9-b2a82185bffc"
        },
        "item": {
          "id": "468a8334-08e5-4c84-b987-f6e226e05d4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "86203c78-fd21-45ca-9225-97e71f852d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c760f17-b5ee-4eaa-950d-b195a13a3f0f",
        "cursor": {
          "ref": "f03eb12b-35f3-426e-af8a-efb7d5ceb86e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0074cd94-b27d-405c-b296-934b0ca03c59"
        },
        "item": {
          "id": "6c760f17-b5ee-4eaa-950d-b195a13a3f0f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "eb64b28e-a217-45af-8f18-9c3a177f56f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129d013c-d64f-44b5-8910-e2f7c3a55622",
        "cursor": {
          "ref": "c135d919-3e23-4a44-8fca-2eb9157aeb63",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "67b5cb14-ac3e-455a-93bc-4f03d7c1a980"
        },
        "item": {
          "id": "129d013c-d64f-44b5-8910-e2f7c3a55622",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a8c7821d-ac7c-46d8-b1f4-206187792648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8275b91d-dac3-42c5-b8c5-b2d81c28c5e0",
        "cursor": {
          "ref": "9156f305-2bf7-43fe-bcdd-1dbfee0b4314",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "27f897f0-d361-44c0-af9f-108717440d8f"
        },
        "item": {
          "id": "8275b91d-dac3-42c5-b8c5-b2d81c28c5e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6a311b58-16d9-4785-b901-9dbf1f3daf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a704522b-4915-42fe-bac9-4b5a1366907a",
        "cursor": {
          "ref": "e5b00ea4-191b-40c2-a75b-d1542562c105",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d98d32e6-2a4b-44a6-af4d-575ee2bc77bf"
        },
        "item": {
          "id": "a704522b-4915-42fe-bac9-4b5a1366907a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6df13906-5922-456d-b5ff-03e1ee318dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1816b12a-9f75-4734-86c0-c307e4dfcf4e",
        "cursor": {
          "ref": "a8cf381f-910b-4a29-a727-8ae8c03502bb",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7dba6fb0-f339-4eae-9cbf-2ec19622ec35"
        },
        "item": {
          "id": "1816b12a-9f75-4734-86c0-c307e4dfcf4e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e0e3546a-9fad-4ca7-822a-bafc02a6bce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f41b15-cac4-4418-ab83-959528c4e040",
        "cursor": {
          "ref": "e7e3d459-1d78-4853-9b18-b795cbb8b34b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25fc6238-bfaf-40a7-b22f-60a1308c2257"
        },
        "item": {
          "id": "e5f41b15-cac4-4418-ab83-959528c4e040",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4a7c5008-1253-4073-93d7-cd90fddabdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0af3d02-2b62-4649-ba0b-3952f6b10de9",
        "cursor": {
          "ref": "c41cf261-f811-4772-a1c5-5544803b7113",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0802ca20-a9f5-46da-90f1-bdfcbfc695b4"
        },
        "item": {
          "id": "a0af3d02-2b62-4649-ba0b-3952f6b10de9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ea7e0a6-4bf8-4000-8df5-2ca293276d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00114933-c038-428c-bccf-b957bd869379",
        "cursor": {
          "ref": "66fd0f87-d9b3-435a-ad1b-5dc01635c11f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "867336b6-fa1d-47aa-aa0c-afc5c2e059bb"
        },
        "item": {
          "id": "00114933-c038-428c-bccf-b957bd869379",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "958ea0a0-b0a9-4ce0-8dfb-715b77e21c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98afd2f2-de1c-445d-b195-24030bd2fae2",
        "cursor": {
          "ref": "1574f446-96d5-4022-aaa8-c2aaf4e4933e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5106fa45-e4eb-441a-9c19-55627577f70b"
        },
        "item": {
          "id": "98afd2f2-de1c-445d-b195-24030bd2fae2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4f4f3f92-4425-46f3-9b89-25dc6f39b020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721867a-e685-4e47-b582-b6bc1fc3e539",
        "cursor": {
          "ref": "4fbf44b3-8074-49c5-aa30-4a0677b551ec",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f6c0ad94-77f4-4aa6-9a59-08e941e362f7"
        },
        "item": {
          "id": "5721867a-e685-4e47-b582-b6bc1fc3e539",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e81a56f3-fc9a-4b6f-bb14-574437a98363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9810bb6-f923-48f0-a6d2-2689c4b4749f",
        "cursor": {
          "ref": "eb3b9b68-f465-4ede-be20-4a233dd9b74e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8565e1ce-e613-4f89-bb2a-33e7a261e786"
        },
        "item": {
          "id": "c9810bb6-f923-48f0-a6d2-2689c4b4749f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2a08cc76-f9b8-41a1-b077-997e081b3f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f444ed6d-8093-4260-a3bd-f3c2ed124cde",
        "cursor": {
          "ref": "b472600d-dad2-40d6-bbaa-359cc53a68e3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e64f52df-166e-43a7-91f1-d57f2ec25eef"
        },
        "item": {
          "id": "f444ed6d-8093-4260-a3bd-f3c2ed124cde",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d955a588-1451-41af-8c11-41eb385afec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9d199d-0517-4b31-b5cb-9ca0e332d399",
        "cursor": {
          "ref": "a7dbe924-e4d2-4e57-97f5-54f0c4752637",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bedf8536-7e43-445d-bed0-c2f09afe3817"
        },
        "item": {
          "id": "9a9d199d-0517-4b31-b5cb-9ca0e332d399",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "26107fbb-a9af-4861-ba19-d43cb78bc1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bdc395-190e-450e-92e4-bc66d2859722",
        "cursor": {
          "ref": "ca4110f9-350c-4b12-9783-231e66c9644f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "07c4833c-2cde-402d-a124-47742a9d8907"
        },
        "item": {
          "id": "f3bdc395-190e-450e-92e4-bc66d2859722",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5d34b5ff-5318-4ad8-803f-1699e0546955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cf616c-d18b-4d61-8174-439c0dfd8192",
        "cursor": {
          "ref": "85eac74c-9d87-4817-abef-b733b8aa6a1f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4b1b702d-d93e-4a03-85d0-a1d69913ddb6"
        },
        "item": {
          "id": "47cf616c-d18b-4d61-8174-439c0dfd8192",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "918ed7d5-0b7e-4e4b-b09b-8bdfba70f1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3e029d-a191-41b3-b1a1-5af8924df53e",
        "cursor": {
          "ref": "1a002e5c-d087-4ab9-8bde-31a56cacc20f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3f4e29ab-35f0-4f3e-b83e-e1b972186470"
        },
        "item": {
          "id": "2f3e029d-a191-41b3-b1a1-5af8924df53e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "94bdea19-0d40-45b8-aa98-f90ef39f30d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5c8406-b1b7-4dc8-b63d-0eb5c854d2d0",
        "cursor": {
          "ref": "c1a11749-d3aa-4e4d-b8d4-fe045bfbdd86",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8a056f9-0a9a-47c5-8b01-dabf30b71f89"
        },
        "item": {
          "id": "fc5c8406-b1b7-4dc8-b63d-0eb5c854d2d0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "91b01ccb-c50d-4b98-a341-09dcb2c02944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5999749-6d51-41b2-abff-d4925b171144",
        "cursor": {
          "ref": "fe23683d-fe8f-45d8-88c2-c3cbf7eb1819",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cdf695ed-7827-4088-ba09-e73db8d8939d"
        },
        "item": {
          "id": "e5999749-6d51-41b2-abff-d4925b171144",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "37b49d26-6534-4e80-8ec8-aa562c1c29cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68affcf7-5396-4ca7-8c21-2cd85a8ca943",
        "cursor": {
          "ref": "b56b0f1f-0661-4b57-a6d4-dc72dd0a19d2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b09ef416-3c61-4425-a9e2-624f5df76529"
        },
        "item": {
          "id": "68affcf7-5396-4ca7-8c21-2cd85a8ca943",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5e7c27be-946c-4946-915f-8ff75fa82b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8326348-f8e8-4dfc-b15c-5931ab06d101",
        "cursor": {
          "ref": "d96f8f3d-9a3c-4e59-a1b2-71e6ee34aae6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f994f6ca-5a4e-4143-af5b-0b69dc36e552"
        },
        "item": {
          "id": "b8326348-f8e8-4dfc-b15c-5931ab06d101",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66e56d84-c147-4ad4-bff5-bf4982b4db9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e778a-be42-4e66-a300-fdf90c465e96",
        "cursor": {
          "ref": "28af8a3b-3772-417b-b08d-b906aa3a23e7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b26391ee-166b-463c-8ef7-490761fc5f01"
        },
        "item": {
          "id": "2e5e778a-be42-4e66-a300-fdf90c465e96",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d0e0c0ab-d2a5-42fd-a032-9e2f4bf4cdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aca8ea-e51a-4982-87a6-1665c28e0bfa",
        "cursor": {
          "ref": "5845c35f-b3d9-4e65-a099-c6b735a16d2e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "af81b17b-b553-42ca-8ef7-c6b5f90832ad"
        },
        "item": {
          "id": "e8aca8ea-e51a-4982-87a6-1665c28e0bfa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "779178a3-09b0-4362-ad67-edf8fc781182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05e5482-41a4-4d10-baf7-c8b063363762",
        "cursor": {
          "ref": "bbe6f85a-e471-429e-9d35-191e183fd9aa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "00f152dd-87cc-4d6d-b4da-ffe0871c8e5e"
        },
        "item": {
          "id": "f05e5482-41a4-4d10-baf7-c8b063363762",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9753657f-b6e0-4790-882f-1be7d20451cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44273acd-9311-41df-88d9-f6cf46990ab8",
        "cursor": {
          "ref": "ed2fb158-bc83-4b42-8a3f-8180216becae",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "edcd23fd-f57c-4c76-859a-0e8e3db082ee"
        },
        "item": {
          "id": "44273acd-9311-41df-88d9-f6cf46990ab8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8f1c04d-5f43-4e91-9466-b34d74111fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf03852e-93f9-4faf-bc1b-d7c3263b6228",
        "cursor": {
          "ref": "5bf22c8d-bec6-4e7d-8193-55cd1a344e81",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "55e80940-6112-430f-8866-b0e88852b867"
        },
        "item": {
          "id": "cf03852e-93f9-4faf-bc1b-d7c3263b6228",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "33c4cfe8-0798-4691-b52a-2da1e8d71dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a81b4-8abc-48dc-8c6b-f9f82a82d832",
        "cursor": {
          "ref": "495c34d9-0065-44a1-acaa-0a330f78de89",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7367f366-c897-4c01-9c83-18cfaedaecdb"
        },
        "item": {
          "id": "a11a81b4-8abc-48dc-8c6b-f9f82a82d832",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "932e2636-d1ec-44df-a6e3-cf5ba49a8633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f789e0-94a3-48ec-a5f7-801602c4982d",
        "cursor": {
          "ref": "2c4ec3f3-a841-4fab-9104-e1521f64588d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8dd963e3-4ffe-46c2-8bb8-0386287f5abf"
        },
        "item": {
          "id": "04f789e0-94a3-48ec-a5f7-801602c4982d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "58a5c01e-8f0f-4e81-a20e-be52c86e82fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e34ed5d-c3db-4601-9b4e-87fdf3bae174",
        "cursor": {
          "ref": "d3b2a3db-f8c9-45a8-8513-3dfec9bc45b5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a48ea06e-d3d3-4463-824c-6e2ced085738"
        },
        "item": {
          "id": "7e34ed5d-c3db-4601-9b4e-87fdf3bae174",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d44f1bd-6663-4795-ad37-960cf7168808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9a5598-9e1d-4afe-9c67-573c53855be8",
        "cursor": {
          "ref": "4ccec616-1d3c-47c9-aac1-4f28b757e269",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "88159794-3631-4b4d-a845-53796562e7e9"
        },
        "item": {
          "id": "cf9a5598-9e1d-4afe-9c67-573c53855be8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "54d50ec4-9389-4f77-8385-8e356cd51daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72aad9f-0837-4b7c-a520-9a74b7b01600",
        "cursor": {
          "ref": "30231e94-f8ba-4d85-b7a9-8243f51e4ac8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b5d7d754-2cbd-46e1-893d-75088de0e054"
        },
        "item": {
          "id": "f72aad9f-0837-4b7c-a520-9a74b7b01600",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "656ad3e4-9c23-40f3-95b3-522cc23ba4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc79898-e845-46c8-9fcb-4f299faa6217",
        "cursor": {
          "ref": "7db6e293-0c8e-4820-ad63-63304d12731f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4004bb5d-e7bc-4158-9512-81c044a77966"
        },
        "item": {
          "id": "fdc79898-e845-46c8-9fcb-4f299faa6217",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "211b8844-f6ff-4abd-ae48-dfbdef5af593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cbd24a-60b3-4142-ad46-1e392e1f1618",
        "cursor": {
          "ref": "a2809303-c5bf-48de-9f4a-a97c3108d6c2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "76638fbb-bd33-48f8-869b-5903970075ae"
        },
        "item": {
          "id": "49cbd24a-60b3-4142-ad46-1e392e1f1618",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "593cb009-1e3b-4b13-b05f-1b40c38668e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f45ee8-cd5c-47a1-a97b-3769f8fcf152",
        "cursor": {
          "ref": "80ad2157-9d83-4f5e-a3b2-3c791291d7d2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4beb9e74-ff6f-4ed4-897e-511357859536"
        },
        "item": {
          "id": "c2f45ee8-cd5c-47a1-a97b-3769f8fcf152",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2116c214-8c77-4011-9974-127b8c5d5284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "64e5e60c-08be-4815-8a14-5589f9c8d9a4",
        "cursor": {
          "ref": "481d19a8-607c-43bc-9fbe-a8e230018a69",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b11765d-32ac-4f01-8738-faa7e8c80211"
        },
        "item": {
          "id": "64e5e60c-08be-4815-8a14-5589f9c8d9a4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "225d951e-faff-48fe-9edb-5cca3647eff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9e3db13f-cf75-4cce-84d4-b281a26799d3",
        "cursor": {
          "ref": "728f05b1-2660-430f-b0ae-5b173761e657",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef6e9042-cf2d-4a43-891a-9b35ffd5f50a"
        },
        "item": {
          "id": "9e3db13f-cf75-4cce-84d4-b281a26799d3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6408bfc7-c936-4cdf-9b25-8f5c24fc36eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "23367818-6b30-483d-a762-74e1f0775024",
        "cursor": {
          "ref": "15b7169d-f862-44e2-8fcf-a01498406931",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "44bca3d1-865d-487f-946c-812dfd2b6496"
        },
        "item": {
          "id": "23367818-6b30-483d-a762-74e1f0775024",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6f032e2b-8853-41b3-800d-7db432c9946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "785bf617-bf7a-4944-9a61-60d5fde632e8",
        "cursor": {
          "ref": "559490f7-58e6-44f3-bd88-e816683febe4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7568dc2e-d38a-4122-bc02-0385021e8792"
        },
        "item": {
          "id": "785bf617-bf7a-4944-9a61-60d5fde632e8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "43d870f5-8880-4ad1-b838-0ec6faeb8471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f530fdbf-9265-4a0a-9643-8ffcf272e2ce",
        "cursor": {
          "ref": "8fb4adce-8bea-4cbf-864c-1e17c533f705",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a03aea8b-de33-4575-bc5e-4be375fe8dda"
        },
        "item": {
          "id": "f530fdbf-9265-4a0a-9643-8ffcf272e2ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c5e85a4c-f19b-464c-9cbb-5e89eb933f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7a28907e-2e24-4c6e-af42-3b80e248c48a",
        "cursor": {
          "ref": "c80248df-796c-471f-bab8-486f448a67b5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cba57b41-2654-43a3-b99e-2b7e72eb3a23"
        },
        "item": {
          "id": "7a28907e-2e24-4c6e-af42-3b80e248c48a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d34026e0-3fae-4a09-bd6b-7602ca10940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f172487f-ce9e-40e5-830f-1d1f7c76b405",
        "cursor": {
          "ref": "43f16fec-b2fb-4523-806e-5ca0d5b209e5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c8ecc4bd-3180-4bac-8fd9-cb845f8f3744"
        },
        "item": {
          "id": "f172487f-ce9e-40e5-830f-1d1f7c76b405",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f8476af-7452-4c0e-9a56-bd78012e0c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbe7677-bedf-46e3-9875-0fc26d134f44",
        "cursor": {
          "ref": "34fc9c5a-4975-4640-8e02-cabb8150c96c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ae88b39a-12d1-4215-92bc-88201a240aff"
        },
        "item": {
          "id": "7cbe7677-bedf-46e3-9875-0fc26d134f44",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "304c2615-7963-4936-a578-816faa241024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62975144-3e45-4725-9bc1-775253197be6",
        "cursor": {
          "ref": "79fa7557-591b-43ed-aa4a-f7fc3e5fe2eb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa4401fe-afe2-460d-83b3-2b6f9627f8d9"
        },
        "item": {
          "id": "62975144-3e45-4725-9bc1-775253197be6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0faf428c-ffa9-48fd-a7f3-46ef51f36f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471940a3-7165-4c04-86e4-a80ddece9e64",
        "cursor": {
          "ref": "afa057b7-fcac-4446-8c88-e538e3093392",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c7dcc7d6-3f0a-4ce1-85cc-316793accaa9"
        },
        "item": {
          "id": "471940a3-7165-4c04-86e4-a80ddece9e64",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dd12851d-4966-43cf-b881-24bac9cc28ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b5c11-ae45-45e6-9398-52da5f157974",
        "cursor": {
          "ref": "cde56bd5-3d67-4c63-a02f-e1eff42070d0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ac13474-a86b-4e3a-8125-80b08c0cbe44"
        },
        "item": {
          "id": "f87b5c11-ae45-45e6-9398-52da5f157974",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4c45c03-83bf-40cd-8695-78e31cba515d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab6d1e-861f-4905-9357-b9630b69795c",
        "cursor": {
          "ref": "e19daffc-fe45-4575-8ed5-187fe281b222",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e9a7ac1b-ce3a-4df3-bd54-15f9a4e08458"
        },
        "item": {
          "id": "f6ab6d1e-861f-4905-9357-b9630b69795c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35dced36-8c4e-4755-b050-6858134d46ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6380e138-a96a-404c-a059-e2420b3d8865",
        "cursor": {
          "ref": "9b48c562-9903-475a-8692-4fecbe2d28e4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c6eb03f5-33b1-4b13-a60d-e110e78eb521"
        },
        "item": {
          "id": "6380e138-a96a-404c-a059-e2420b3d8865",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f0cf76eb-262d-4c81-a421-69ee80ef1bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85034b82-2869-4349-93e1-e093cd6aedb0",
        "cursor": {
          "ref": "3827e647-86d9-43d5-91b5-1765bb1acff0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d711dc59-bbe6-4efd-8645-7236b8719fe8"
        },
        "item": {
          "id": "85034b82-2869-4349-93e1-e093cd6aedb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55faea19-07e9-4a46-b49a-ab1b0d18c8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c55dce-11e5-4f1c-8541-6e70c7198730",
        "cursor": {
          "ref": "8eefcd50-bc50-4777-a972-8a9139549c54",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b86623f-aa6e-41dd-863d-b960da96b7ed"
        },
        "item": {
          "id": "92c55dce-11e5-4f1c-8541-6e70c7198730",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "579c6ded-b8b5-43b8-b07b-8af9cfe6dceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55324a90-2c4b-4ad9-b2bb-8a0097f539e0",
        "cursor": {
          "ref": "bf399f09-141a-46aa-ac6e-00c225221402",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c85dea76-6563-4949-9473-0b44543d4fb9"
        },
        "item": {
          "id": "55324a90-2c4b-4ad9-b2bb-8a0097f539e0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c064039c-2299-4627-bf5a-937a9f7523f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44d2e2b-a024-4a2a-8619-babf5cf96713",
        "cursor": {
          "ref": "a4a84a9b-d03e-4cec-90fd-ecfd1a5d7931",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "14df6de6-4db2-4907-885b-21443a7ac776"
        },
        "item": {
          "id": "d44d2e2b-a024-4a2a-8619-babf5cf96713",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "894d5354-19d1-4081-bede-618a2303a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc7a59-00d4-4031-b71c-17886dc165d3",
        "cursor": {
          "ref": "1d091b38-e2c5-4e22-ab13-dbc33b673a20",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3efcf15c-c308-49f1-b80e-97ac45f75345"
        },
        "item": {
          "id": "e1cc7a59-00d4-4031-b71c-17886dc165d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "04e0f8e1-ce1b-4304-becd-35d298b37f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa2c47f-b9b2-493b-900a-a970464bc599",
        "cursor": {
          "ref": "757fc376-e65f-4392-962e-a2de3cf5c23f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cd593e42-9542-41f2-9eaf-6e8a7b84fabb"
        },
        "item": {
          "id": "7aa2c47f-b9b2-493b-900a-a970464bc599",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "756fd4ac-dd1f-4782-86fd-5740f37c608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e5c2de-16a1-4088-bcd2-13f3c53eac26",
        "cursor": {
          "ref": "7accb04a-8ba1-4e09-8b3c-5dbb9fd228c5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "204c621e-9353-4398-bdff-0763d0ca1da0"
        },
        "item": {
          "id": "c0e5c2de-16a1-4088-bcd2-13f3c53eac26",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7f2e9b5d-0a6e-4044-b42d-221eb1a6aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaa03a0-acd7-4790-b105-d70292b65e54",
        "cursor": {
          "ref": "91e2dfa3-8288-451f-aa35-e5d0726ed103",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b39ca0a1-9c6e-4141-baa4-92517c124b3e"
        },
        "item": {
          "id": "bcaa03a0-acd7-4790-b105-d70292b65e54",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19a136aa-fc2f-421d-822a-a3cf876f4cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de36ab08-3d78-4ff0-809a-ccfda606b49a",
        "cursor": {
          "ref": "f90a22a6-be88-4043-8436-925be1b3ae97",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "64a45939-c23a-4996-ab03-120b3d863db8"
        },
        "item": {
          "id": "de36ab08-3d78-4ff0-809a-ccfda606b49a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f14f118d-6e86-4075-8c2e-d725481b0f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0e1a13-942f-460c-bbe7-0ae669d66893",
        "cursor": {
          "ref": "b2cd70ed-f741-4307-94e0-688e0f7f0e22",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "38965751-fd96-4c93-8e3d-78d6b94e971a"
        },
        "item": {
          "id": "5d0e1a13-942f-460c-bbe7-0ae669d66893",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6221bb8d-0618-462b-aa81-4ff73de145a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e1ac13-8d96-4eb7-93e5-98998f1605f6",
        "cursor": {
          "ref": "1a6f675f-4395-4e25-ba30-c06368b9ea19",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5d8581b-c2c1-407e-a638-f0c0e4e99d9a"
        },
        "item": {
          "id": "57e1ac13-8d96-4eb7-93e5-98998f1605f6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0746ee85-36ab-4334-a34d-45855dcff431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b57443-2740-4efb-b202-721a8b687da2",
        "cursor": {
          "ref": "6322998b-d8d0-4d06-849f-0ea93f2712ae",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "db239e8a-b927-4c6b-bec7-34c361ea7966"
        },
        "item": {
          "id": "32b57443-2740-4efb-b202-721a8b687da2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a95f3333-2557-4f01-b056-4bfd29ed02e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a18ba-04a7-44a2-986c-8c59b2826513",
        "cursor": {
          "ref": "82e31f6f-2b85-48ec-93e1-b2dccf03eeb3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "544b754d-efb8-4b5e-a998-33493371b24e"
        },
        "item": {
          "id": "a04a18ba-04a7-44a2-986c-8c59b2826513",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f4d7dee3-f1a4-4d3b-a277-e76b1e39476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e97b98-2364-47c4-a078-621be68d325a",
        "cursor": {
          "ref": "87156b2f-88ec-4973-8281-5274b0b6b573",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0c0baeb6-037e-47dc-b6e6-e0d743a1da51"
        },
        "item": {
          "id": "57e97b98-2364-47c4-a078-621be68d325a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "467fcdf9-92a4-4026-9900-ebf3ffa421a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b76368-4b0f-4045-8061-3bbfb982812b",
        "cursor": {
          "ref": "56d7714f-cae6-4560-a22d-a58a273630c8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "70e74796-954c-4684-b3d5-6a4e7f9569b5"
        },
        "item": {
          "id": "57b76368-4b0f-4045-8061-3bbfb982812b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "29707c22-b147-442f-8e33-9c355773b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b53f46d-4fd2-4361-abc5-ca4b48e2ecc2",
        "cursor": {
          "ref": "0e13e950-ce42-45e7-9029-1daf24e1213a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e8899190-0856-4963-9d80-a24ae0687a02"
        },
        "item": {
          "id": "5b53f46d-4fd2-4361-abc5-ca4b48e2ecc2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a53ba50-3744-4ee4-8b06-5ae54cc26ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bba8bdc-0439-44bf-a62c-1c494292b0d8",
        "cursor": {
          "ref": "00cf4da0-950c-4018-862e-b25493a020c2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e02d3f8d-354c-427d-8017-38e2316ad74a"
        },
        "item": {
          "id": "6bba8bdc-0439-44bf-a62c-1c494292b0d8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8455322-a8f5-40c7-b00d-e5090c374cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b595f0-f5e7-473a-92a8-9f2bcca3e61f",
        "cursor": {
          "ref": "a70d2afc-7ebd-427c-a65c-aabb7d5408ce",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99b7bf37-6a12-40fc-b2e8-d912df58a700"
        },
        "item": {
          "id": "19b595f0-f5e7-473a-92a8-9f2bcca3e61f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fca719a9-167b-4371-9ad9-30e256690d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300cd3b1-f0e7-4f08-b470-f1c56d82471e",
        "cursor": {
          "ref": "dc60fe71-744f-44cc-96e7-479163d7fb54",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e79bc760-51b5-43f4-8839-843aef393e2b"
        },
        "item": {
          "id": "300cd3b1-f0e7-4f08-b470-f1c56d82471e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "689e7c57-b095-472c-b3a9-057036b229a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2344a-f132-4e2b-a1ce-f86e224e4814",
        "cursor": {
          "ref": "cbe58d43-d20d-4c3f-8bb1-b133ec005bf9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6004ca53-73aa-458c-b6cf-4e4edc30dd46"
        },
        "item": {
          "id": "3fe2344a-f132-4e2b-a1ce-f86e224e4814",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ee69e0d-5a27-49ea-a611-9bd16b3ca3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828a9e8a-0139-4315-adcb-60ba0be95ae0",
        "cursor": {
          "ref": "96e0dadd-8e40-4c69-8790-361f2369664f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d5d9cc55-910b-4883-89f9-00bf081c8e44"
        },
        "item": {
          "id": "828a9e8a-0139-4315-adcb-60ba0be95ae0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "85a154bc-c106-4af1-99cd-38f979a0c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363ac163-019d-4a2d-a071-e18a6f49eb92",
        "cursor": {
          "ref": "f3205d69-258f-4466-ac7e-f67e7dd075a8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "06213eb8-6a54-475e-83be-3db0f3451a03"
        },
        "item": {
          "id": "363ac163-019d-4a2d-a071-e18a6f49eb92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57b0e7be-f8b0-4421-8a92-cb4e3baa4fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3c8270-3d2e-4b98-bb1a-c04bf0d0c04e",
        "cursor": {
          "ref": "2abe0704-107a-46f5-84cb-523c76f85a8f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "11bb9f51-4017-4f69-a73e-bba16c6e52dd"
        },
        "item": {
          "id": "8d3c8270-3d2e-4b98-bb1a-c04bf0d0c04e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7eb5a62b-1b14-4494-b88d-05098ff45110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5bf46a-7dd4-4366-8601-01f1cfd708b2",
        "cursor": {
          "ref": "31ddfbf5-31af-4ebd-82ab-5accf0ec7f68",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "812fc48f-92f0-4fa7-915a-07d5fcdc3815"
        },
        "item": {
          "id": "cb5bf46a-7dd4-4366-8601-01f1cfd708b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "085199af-a7fd-4ec7-8f70-7d80cd9e6c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9528d-220b-4d27-a8e8-1143a841680d",
        "cursor": {
          "ref": "d732e0bb-7d40-407e-b4e7-b570ab4694d1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "54fb32b7-f17f-4f8f-baba-0aabc1bf0930"
        },
        "item": {
          "id": "d2e9528d-220b-4d27-a8e8-1143a841680d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "25bfc84d-c04e-4515-99ac-7b88989ec87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76efeb95-bd40-4343-8630-e01ff59bd7a9",
        "cursor": {
          "ref": "bad24627-a326-4c78-8093-e90cd22032d0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "317e1527-f83a-4236-a2e0-3d455ca90f98"
        },
        "item": {
          "id": "76efeb95-bd40-4343-8630-e01ff59bd7a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed2acd3e-72d6-455c-8333-d820a12639f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b5bb9-0cd7-49a0-9518-2abfbafcbbf1",
        "cursor": {
          "ref": "77f4de72-7fad-4880-b512-74c0b2e277e7",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "337bffae-d600-4532-b326-d939e450abd4"
        },
        "item": {
          "id": "699b5bb9-0cd7-49a0-9518-2abfbafcbbf1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "32b4818d-c437-4d8e-87b5-2c2cb02177d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04e02c0-74e6-4bc1-ae3f-2e519ae16742",
        "cursor": {
          "ref": "5b14d760-4b53-4ec2-a37b-2fd382219242",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "710ac9f2-4661-434d-8fc3-f99359cba590"
        },
        "item": {
          "id": "a04e02c0-74e6-4bc1-ae3f-2e519ae16742",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "71bb502f-5d1a-427b-8e11-30024c157640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586523fd-b3f9-47d5-a45c-503160a29e8e",
        "cursor": {
          "ref": "2267a185-a151-4989-9955-9c9377a4d6e3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e97f5193-9eb8-4293-b4fa-36571e8d7499"
        },
        "item": {
          "id": "586523fd-b3f9-47d5-a45c-503160a29e8e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1453a8ec-e718-4b8c-b127-f12b1b2cea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065dc29-c338-4761-a894-f5456799e500",
        "cursor": {
          "ref": "81af229e-b860-42c4-b895-066f74b8699e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2fbfcec0-1c2a-485a-a89c-8c7441858abe"
        },
        "item": {
          "id": "2065dc29-c338-4761-a894-f5456799e500",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "778e3ae3-0aa9-43a7-a582-668a89f15e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be78bf9-9385-4a02-8bbb-0be4ef76eca2",
        "cursor": {
          "ref": "02061854-f654-4bcc-a3e0-15e8da5abffe",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a20cfab6-e078-4b1a-bfef-de9fb170fb04"
        },
        "item": {
          "id": "9be78bf9-9385-4a02-8bbb-0be4ef76eca2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d9f75ee2-99d1-4301-98d1-1acfeb87a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcd573a-f45f-4ee6-8b67-a8bfb7f1885c",
        "cursor": {
          "ref": "921e7d98-0787-4aa6-8b3a-b149e65fe532",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "264dab33-360a-4262-8655-c8b7aafb9dc4"
        },
        "item": {
          "id": "8fcd573a-f45f-4ee6-8b67-a8bfb7f1885c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "58227331-9c1d-4a42-a308-17f9bd486bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf23fe-b389-485c-8c6a-761ec7d556c0",
        "cursor": {
          "ref": "4ac0053f-c6d5-4cb6-b0fc-80e979bbb017",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0a1e710-39cb-4544-8bca-bad53343d57b"
        },
        "item": {
          "id": "f8bf23fe-b389-485c-8c6a-761ec7d556c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "55c89650-94e1-4ad6-8ed4-4bdd09407af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec2ace-125e-4e99-9850-44a37ba40d34",
        "cursor": {
          "ref": "7ab01e24-13dc-4a6d-89db-c0c31a1c37f6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "875bbf05-f9f1-4029-8460-ac35a0990ae4"
        },
        "item": {
          "id": "ffec2ace-125e-4e99-9850-44a37ba40d34",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "611f53f4-e1dd-4492-8d8e-873819dc5544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2fd8a5-aa98-4842-8ae2-db6e26915fd7",
        "cursor": {
          "ref": "4a5dcd33-8d95-491b-8617-7b59c00c5398",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "972347f7-5538-41bf-922c-b84936ee9108"
        },
        "item": {
          "id": "ff2fd8a5-aa98-4842-8ae2-db6e26915fd7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fd95a89b-50ef-4ade-aedf-d496dcb57c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e5ab1a-b505-469d-923d-fcf966a52964",
        "cursor": {
          "ref": "92e976e6-1336-4a3c-a892-759d82937aa8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b4b604c7-b444-49cf-a680-103dce2ca5ea"
        },
        "item": {
          "id": "81e5ab1a-b505-469d-923d-fcf966a52964",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f205a89b-0def-47f8-a981-6ed851698ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4544c1c2-66e3-414f-a5a4-04cfc6290037",
        "cursor": {
          "ref": "1bc73a5e-2589-4fa4-858a-4de3e0751f70",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8db8512b-d565-4ab5-9ee0-5f6b582d1fd2"
        },
        "item": {
          "id": "4544c1c2-66e3-414f-a5a4-04cfc6290037",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3c8799e-098a-4b4d-af4f-ed48c8ac1e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c793664a-24e0-44e2-925f-2ab17cad690e",
        "cursor": {
          "ref": "ce2234e8-1c5a-4b0b-9116-8809552b4f80",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6f48e804-20c8-4e44-a6e3-d8fe25bb1c2c"
        },
        "item": {
          "id": "c793664a-24e0-44e2-925f-2ab17cad690e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "502bba87-bd55-4578-b666-9228f4caed41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae79a8f-7068-4c4a-a46a-89208018e15e",
        "cursor": {
          "ref": "25502877-1194-4518-b540-ec6262c6d1fe",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b3aa474b-f670-4e59-858f-b105a50fa7f9"
        },
        "item": {
          "id": "8ae79a8f-7068-4c4a-a46a-89208018e15e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c914d2ef-c2bd-486c-8c45-63a9d89d4120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509fa11f-e6c7-4b60-88cc-ff40643fbd37",
        "cursor": {
          "ref": "912cd017-60de-4b5c-afb9-6862cbd2a2bf",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c756f2fe-fb51-45b8-98b5-e9c061005a34"
        },
        "item": {
          "id": "509fa11f-e6c7-4b60-88cc-ff40643fbd37",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea8833a4-f807-4e73-b90d-fb79830c02ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc0c913-88ab-410a-88f0-f50b9b42a079",
        "cursor": {
          "ref": "90cffd17-ae28-4451-af19-bea6ddceec2e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7148400-05dc-4363-bd07-67dd2f2cb8d8"
        },
        "item": {
          "id": "2bc0c913-88ab-410a-88f0-f50b9b42a079",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "788aed6c-f7fb-4215-bc51-b278713782d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884cdfba-7ab7-4c79-999b-22bebb663920",
        "cursor": {
          "ref": "4decc0bf-d02e-4b89-b641-0e9b81d53bc7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "091d5e7a-4226-439b-8f8f-009c39140760"
        },
        "item": {
          "id": "884cdfba-7ab7-4c79-999b-22bebb663920",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d73eb95-b007-4cdb-9e6f-9f45207932fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8520ab1c-2262-4b8e-9719-bcf983d6fb93",
        "cursor": {
          "ref": "d6c6e963-c292-4d6b-af66-1cf18e984aac",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8d178499-676a-44a2-b161-31a79b040b6e"
        },
        "item": {
          "id": "8520ab1c-2262-4b8e-9719-bcf983d6fb93",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "51c94439-2d5d-45c4-8e77-e320d0458813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695558f0-524f-4eca-9431-e3eae5c79f6e",
        "cursor": {
          "ref": "ccb47548-f380-4c94-a2a8-c389df34edda",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2d940cae-ada1-4b15-a75c-2e53ac69c3b6"
        },
        "item": {
          "id": "695558f0-524f-4eca-9431-e3eae5c79f6e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a9087ee-8686-41f6-a2e6-551d30dd757b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae505a-9d26-4719-8979-d896586f1016",
        "cursor": {
          "ref": "d11b4417-1a33-4178-ba42-50e5dd9686b0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4de45d18-dd9e-4af0-a7c4-593c97ae5fd3"
        },
        "item": {
          "id": "c3ae505a-9d26-4719-8979-d896586f1016",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c1480c6a-b514-469e-88cf-fcf248cdb351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143a569c-4c6b-48b3-8920-ce9be7fb7e11",
        "cursor": {
          "ref": "5de2c145-1ef7-44c8-9097-3d8cd7951df3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b99c9c1f-b0b1-4a0e-b978-c8cf5e982c38"
        },
        "item": {
          "id": "143a569c-4c6b-48b3-8920-ce9be7fb7e11",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2cc70a37-d155-4d44-881f-29471249330b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913fc3c1-a730-4f12-8a55-359fdb62dec3",
        "cursor": {
          "ref": "24f94cc9-04f3-4177-8899-22999c00e7ec",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "83a154b0-ec4a-47fd-a0f7-5a005cd25c7d"
        },
        "item": {
          "id": "913fc3c1-a730-4f12-8a55-359fdb62dec3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c2e875aa-5b93-4cd3-8f09-23c3c2406e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292204a1-4d0c-4252-b892-0fc460259f73",
        "cursor": {
          "ref": "3a7994df-cd28-43cc-b574-6c8e967b1294",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f0c8e9a7-46ce-4f4b-a97d-d40748a5113b"
        },
        "item": {
          "id": "292204a1-4d0c-4252-b892-0fc460259f73",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bf43c7c4-05c1-409f-a976-f17f2688f68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81db4204-9f8b-4203-ba89-ffdc04cff8c2",
        "cursor": {
          "ref": "9fad897a-d431-4a1c-81f7-34f6da0822bb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "257d8a68-dabc-4f33-a9e9-343bdf882410"
        },
        "item": {
          "id": "81db4204-9f8b-4203-ba89-ffdc04cff8c2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "943d8dc7-ccfd-443c-9a97-855cd6c3fa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4f9fdc-f7d8-488b-92cc-c9a24b318786",
        "cursor": {
          "ref": "ba031396-f748-4a61-820e-b8605c3598f6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8542643c-9d73-44f6-a24c-91025b5a3462"
        },
        "item": {
          "id": "fa4f9fdc-f7d8-488b-92cc-c9a24b318786",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43fdb5e5-f077-4477-be6a-ad2fe1b1fe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04f469c-f595-43f5-ac47-4a87d83122f5",
        "cursor": {
          "ref": "22a747ca-7564-4caf-85d1-57bfc1674211",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05763c59-e24a-4949-9f8d-7bdaf10f6a78"
        },
        "item": {
          "id": "e04f469c-f595-43f5-ac47-4a87d83122f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0039fc30-e1c6-4aca-b185-3ca0f06357af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba2a6ba-ac90-4b58-97a3-98c5177cd667",
        "cursor": {
          "ref": "908c20d0-8d08-498f-afe7-61950d52ac17",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c7b103b-cf34-4ae5-a6ee-ea1b832e3a64"
        },
        "item": {
          "id": "9ba2a6ba-ac90-4b58-97a3-98c5177cd667",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b35ac3e-077a-4b12-90b6-c012150db3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c484919a-21d5-4982-806f-d9cb94ad3d38",
        "cursor": {
          "ref": "27df6c9c-7492-4959-a4a4-fec01b7b06f9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5b845520-5413-4fb8-9b18-34aa8cc4a9f9"
        },
        "item": {
          "id": "c484919a-21d5-4982-806f-d9cb94ad3d38",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "035d6a2b-2eaa-4495-ad53-8b9523fb6670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591bc658-ee38-4a81-9d2b-52a7a036d0db",
        "cursor": {
          "ref": "8217ad9a-5b03-4438-a7c7-ffeacaf8a77f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b628ea87-ba9f-449a-a6c3-d04c86c98d9a"
        },
        "item": {
          "id": "591bc658-ee38-4a81-9d2b-52a7a036d0db",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7ebac300-37ee-4ff2-942d-9564783507d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc12f5f-1e93-4baf-abf1-02bb8d640950",
        "cursor": {
          "ref": "41b884bb-fce8-420d-8a60-7256c45ddbc7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e19eeb3c-3b30-44c0-a723-5461d4c8f870"
        },
        "item": {
          "id": "5fc12f5f-1e93-4baf-abf1-02bb8d640950",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dfe35879-4a2f-4cfa-83d3-7264385e9c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93473e39-514e-4a28-a8b2-911d1c10d849",
        "cursor": {
          "ref": "3bc547d7-db9b-4328-aa85-2e1f67f44143",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b524ddd9-8e0f-47cf-8534-b4f38c5efd15"
        },
        "item": {
          "id": "93473e39-514e-4a28-a8b2-911d1c10d849",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84b7a99b-7635-43ee-8ee9-0f2c922434d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b71615d-6699-4450-875c-256e4a02789a",
        "cursor": {
          "ref": "6f7f538d-69d5-4472-9d55-85f373cb9d99",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2fd320bf-7aee-45d5-b016-39c511b9dd69"
        },
        "item": {
          "id": "9b71615d-6699-4450-875c-256e4a02789a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b63e2bed-073d-49e3-ac01-f618f4cb80f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d3f99d-5eb9-434c-8bdc-47e33f22b778",
        "cursor": {
          "ref": "e4f160c0-ea94-4167-8bb8-86714c70373d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0efaa848-8853-48e1-b180-05ea5f0bfa0f"
        },
        "item": {
          "id": "b1d3f99d-5eb9-434c-8bdc-47e33f22b778",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "550bd458-0739-48ac-b17b-bf3fbd5b84d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8c1749-4c35-4acb-8de3-14497869d0cd",
        "cursor": {
          "ref": "a8d246a1-164f-40ca-b04c-b2e994b350f4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2b93aec0-7ff9-4d37-929b-aff2d9c49051"
        },
        "item": {
          "id": "db8c1749-4c35-4acb-8de3-14497869d0cd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "19553af3-4740-467d-b728-036713bde84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf6502f-7796-45a9-979a-49616fb23d9f",
        "cursor": {
          "ref": "2a29ef5a-8ab5-4e0b-9727-f62d2e2b87ca",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e884f74-feba-4f29-970d-29237fd8f5a5"
        },
        "item": {
          "id": "3cf6502f-7796-45a9-979a-49616fb23d9f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d8aca8d3-d58c-4a84-8c7c-392e744afbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f38df70-abf6-4a0a-bee5-719da71c998f",
        "cursor": {
          "ref": "b43f0e16-5f1e-4b38-852d-65e9b2b3fa71",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ee49664f-d461-4d7f-b003-a4986c86e32a"
        },
        "item": {
          "id": "1f38df70-abf6-4a0a-bee5-719da71c998f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5a90880e-34e8-439b-ad7b-685ef42f8cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9e29fd-5107-48cc-a177-f568f4bdccba",
        "cursor": {
          "ref": "3334834b-4923-4da7-9219-257800a0aad7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f1b567d2-2a9f-4f17-9079-6d7e647f9b6f"
        },
        "item": {
          "id": "ea9e29fd-5107-48cc-a177-f568f4bdccba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d7ec5452-bfd2-42ae-831c-6f779f69ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45c0997-9396-4c45-8ad2-686a72640f08",
        "cursor": {
          "ref": "c47a023e-057d-48b2-8e2d-bd23b9088ca4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f137f4da-79be-44ae-9c69-7443573daa3a"
        },
        "item": {
          "id": "e45c0997-9396-4c45-8ad2-686a72640f08",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5af6a071-8f5b-4fcd-bafb-7245c29072f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df2773d-a079-4504-9359-c2e714f911f4",
        "cursor": {
          "ref": "0b4ee660-ab95-43c9-b3b8-10b36124ce2e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b93bf61f-82d4-428e-ab53-f15740042aff"
        },
        "item": {
          "id": "6df2773d-a079-4504-9359-c2e714f911f4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "68979978-1d1a-43a8-b916-8a3c3ba873e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13578eba-443a-44da-92ac-e4da403c6187",
        "cursor": {
          "ref": "d3f15844-4887-4b9f-a8c7-7507aa097f66",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6c4cbe67-3081-45bd-962d-502e9610e9e4"
        },
        "item": {
          "id": "13578eba-443a-44da-92ac-e4da403c6187",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f57a9a49-24c2-428f-819c-a5dac9b123a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba0bfd3-03f1-46ce-a552-ac13a400dcea",
        "cursor": {
          "ref": "fceeeacb-d5a0-4299-9096-0f46eff18b82",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "040ce011-4e0c-4498-80b3-225fa740a4bf"
        },
        "item": {
          "id": "cba0bfd3-03f1-46ce-a552-ac13a400dcea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6437af20-1908-4901-ae5d-26c1f99ee008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c98953-ac45-4e7a-b5df-491624cb6c9e",
        "cursor": {
          "ref": "c3cb7236-2541-4ca2-8425-b2caef9eceed",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95b737ff-9b53-4178-9737-2439d0b4d4d8"
        },
        "item": {
          "id": "34c98953-ac45-4e7a-b5df-491624cb6c9e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e191973c-5a23-44a6-b32b-bf1b3ebb775c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc106e2e-af82-4857-b85e-632927d89c74",
        "cursor": {
          "ref": "8471c274-a1bc-4990-8cf3-ed672bce00e9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8eaefaf5-670f-4651-adb1-6d355ec4e73e"
        },
        "item": {
          "id": "dc106e2e-af82-4857-b85e-632927d89c74",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1f8e0773-2133-417f-831b-2b890f606252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6478fa6a-3c75-4132-afb0-9395160d3e0b",
        "cursor": {
          "ref": "8238067f-cf17-4f2f-a22a-5758e5b66460",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7360b9a5-5fbb-4df2-a828-39846a60d107"
        },
        "item": {
          "id": "6478fa6a-3c75-4132-afb0-9395160d3e0b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c0f4255-cddc-4a34-8500-a77abfdf237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef85921-a6ea-4834-99eb-db3f61078cce",
        "cursor": {
          "ref": "2cb9c11a-7ccf-4e74-bde0-8c294a7f122b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "26de744d-a5e1-489f-a10b-d169628da0a4"
        },
        "item": {
          "id": "eef85921-a6ea-4834-99eb-db3f61078cce",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce099796-5b9f-4aa8-8d6c-ca622cf7a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc44d0-5b65-4316-afa3-2be19841fd1f",
        "cursor": {
          "ref": "ce07b9aa-06ba-4fe6-9423-ad503181d802",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2ed27e31-622e-48ca-9601-859d176018b2"
        },
        "item": {
          "id": "9bfc44d0-5b65-4316-afa3-2be19841fd1f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "beadac8f-081d-4d6f-9611-5145b25a7e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7b3d58-a8fa-4c8a-ab2c-a1a1ea315269",
        "cursor": {
          "ref": "8fe25d6f-dfb3-4ff7-bcb3-62003fe9a387",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8f4bf6f-3382-4912-b2db-7f222ee6feae"
        },
        "item": {
          "id": "fe7b3d58-a8fa-4c8a-ab2c-a1a1ea315269",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a0ac65ea-5c9c-485c-9758-83b20521973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da531680-1cd8-4816-89c5-fb065bab3669",
        "cursor": {
          "ref": "0f4de807-4392-48cd-8ec4-84b270eefd36",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9ec88b1b-ae07-4ca1-8bb6-6bc06f01d627"
        },
        "item": {
          "id": "da531680-1cd8-4816-89c5-fb065bab3669",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1e0e145c-42b4-4ef8-9edb-a43298d20728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915c07c-1287-4fa4-9f49-2ff3737e670e",
        "cursor": {
          "ref": "5eb6407b-8a32-4bb7-8daa-735d47430928",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90f77e31-2b0e-4e98-95a7-c49a20bc68f3"
        },
        "item": {
          "id": "3915c07c-1287-4fa4-9f49-2ff3737e670e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4325a867-624a-499f-9a81-35f42706b53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867fb62f-1329-45b2-ad0c-49346d5cf583",
        "cursor": {
          "ref": "b0c60ef7-4189-430c-bc70-75108afe77a4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "289fb1db-e4eb-4bff-acb9-ee79d2d82250"
        },
        "item": {
          "id": "867fb62f-1329-45b2-ad0c-49346d5cf583",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8ecc6aca-4417-445f-9c62-249ab7e66524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740452ab-b25b-49bf-b2ee-a65c9e3598d7",
        "cursor": {
          "ref": "93eaeefe-e106-4873-9e4a-e2c2e7f25d7f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "12688775-ce43-446a-8fd2-617a6341863a"
        },
        "item": {
          "id": "740452ab-b25b-49bf-b2ee-a65c9e3598d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08c46092-6ff3-4177-90c4-2cd957d833c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d4678c-b970-472d-ad5d-a138f6303a52",
        "cursor": {
          "ref": "1e467516-f146-494f-960b-44876b8c6df4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7dc487fe-b774-4f03-bdaf-f35e2da9f8f5"
        },
        "item": {
          "id": "a2d4678c-b970-472d-ad5d-a138f6303a52",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "943e526a-c30e-451a-af62-0756214bceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa38891-d1f9-4374-b6cc-9be03672e70f",
        "cursor": {
          "ref": "d51d4f31-d53d-4e55-a431-c28409e14137",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0c75131f-ffcf-4e72-bb24-fec277d9e476"
        },
        "item": {
          "id": "bfa38891-d1f9-4374-b6cc-9be03672e70f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "644ee8e2-aa0b-42eb-b2ec-c236f599d828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1473ed43-8abd-4cfc-b51d-05e654e76ba3",
        "cursor": {
          "ref": "9d843a93-04d8-4e05-a122-c942d0d78af1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cede9471-9be8-4b31-af8c-67d32dee9e1c"
        },
        "item": {
          "id": "1473ed43-8abd-4cfc-b51d-05e654e76ba3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "77134a2a-03b6-4c62-a708-b9f961a040b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e2497-1fd6-4d24-a788-d53bcc02c10b",
        "cursor": {
          "ref": "59b19c74-13fa-4a7f-bdda-3fb6248a0537",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0bc2fbb1-f042-4cf9-a243-bd7a9be8e42f"
        },
        "item": {
          "id": "2a2e2497-1fd6-4d24-a788-d53bcc02c10b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73122d59-9649-4c64-8f64-f46c492bec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ee6b3-2e1c-4f1f-8aef-ad985f034604",
        "cursor": {
          "ref": "a76bba10-ad4f-45b5-a512-f5a7254d4101",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b5d36853-d3b6-494c-8e9b-6e73c7421407"
        },
        "item": {
          "id": "629ee6b3-2e1c-4f1f-8aef-ad985f034604",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1b2f3a76-8175-4222-a741-65f8924df262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d887d67-f226-4fd3-8f43-34d2fbd0b966",
        "cursor": {
          "ref": "7106b93a-08d8-4fcb-8822-0f5e11f328dc",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "872c0aa4-e6cb-43fb-9fd2-193dc10bdcf6"
        },
        "item": {
          "id": "5d887d67-f226-4fd3-8f43-34d2fbd0b966",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e7005186-ebdc-48be-ad3b-733dde2a3ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99fd8c5-cc1d-48bc-a89e-e5da0db86587",
        "cursor": {
          "ref": "bb2e5021-9d7d-4e15-bb86-16173f7f4c1c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2b906b7e-6605-4f65-ab10-c230a9cccf8e"
        },
        "item": {
          "id": "b99fd8c5-cc1d-48bc-a89e-e5da0db86587",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aab224e7-2c04-499e-94c2-49d8aec13537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b3e6a-05c1-4b8d-8f78-89b4f8549ab6",
        "cursor": {
          "ref": "98b8699f-4614-404c-8094-b5241958ae72",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2e2b42a0-90b8-4c5f-8a08-b11824745e49"
        },
        "item": {
          "id": "ed1b3e6a-05c1-4b8d-8f78-89b4f8549ab6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44f8a995-8680-47e9-a267-4d856b2430a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4076a7-3bff-4c92-a9ba-d47f8f74cf9e",
        "cursor": {
          "ref": "d5a77eb7-11cd-4f64-a76a-0f52593ca712",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d42849ba-d105-4b00-9eb9-f23962fce430"
        },
        "item": {
          "id": "cd4076a7-3bff-4c92-a9ba-d47f8f74cf9e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "207c5711-d0e2-4093-91b7-d342900265b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35bae58-505a-4ceb-bb0f-6c804beb85c1",
        "cursor": {
          "ref": "37f69ef0-6bc9-46b1-927e-54ed9c2cdd45",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8cc12e00-b09d-4e57-9604-beb8afcc33ac"
        },
        "item": {
          "id": "c35bae58-505a-4ceb-bb0f-6c804beb85c1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b085e66a-536d-47b1-8794-8f47f6431269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd512236-b91c-450d-ae87-00c796b5f714",
        "cursor": {
          "ref": "de40ed9c-7fdb-4511-992d-d67a2cbe2b4c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38ffd77b-682e-4df0-9484-8f107559fff9"
        },
        "item": {
          "id": "fd512236-b91c-450d-ae87-00c796b5f714",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8c36b39b-ff24-4e47-aab7-49df2f1d9e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29b5007-dca8-4be1-be94-41bc8aca1b91",
        "cursor": {
          "ref": "9acfa695-3aa0-4a8a-a98e-d2078795ad2c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e610d532-d4c8-401f-80ef-b9493912e4be"
        },
        "item": {
          "id": "f29b5007-dca8-4be1-be94-41bc8aca1b91",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d3673a94-fd0b-42c9-a321-163e2c75eee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db404a44-436c-4b4b-add6-cef07c7a464e",
        "cursor": {
          "ref": "62a32f4f-4dca-49a7-be77-b9bfcd908ac0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ce34d59-b232-4064-bf95-73e5cc062b1b"
        },
        "item": {
          "id": "db404a44-436c-4b4b-add6-cef07c7a464e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "85af4c3c-cdf2-4724-833a-d28b37748c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a01ab2-fe22-4393-871c-e12436a3793b",
        "cursor": {
          "ref": "bb011668-fd0a-43da-bbca-9a95c871cf02",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ff1a4c37-84cb-421c-909b-f1c2c249f32d"
        },
        "item": {
          "id": "e9a01ab2-fe22-4393-871c-e12436a3793b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "96850a78-848f-43c5-86a9-965d7df1b01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6d406e-daf3-4966-af87-17c0c44fcc7a",
        "cursor": {
          "ref": "b38b2b09-81b7-4492-8894-9ff6d9e3bd70",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d4944fe9-8645-46de-a1a0-93dea329e16d"
        },
        "item": {
          "id": "1c6d406e-daf3-4966-af87-17c0c44fcc7a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1e6872f-3130-4872-88ef-851185e27f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8521d968-2fc1-47a7-9e3e-63b6ef93ee2e",
        "cursor": {
          "ref": "80c48b4a-4546-43c9-8cff-0bd48568e5a8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5d3833ef-4e52-4329-b84c-eafee05429a1"
        },
        "item": {
          "id": "8521d968-2fc1-47a7-9e3e-63b6ef93ee2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3703d050-2f74-4a14-a3d6-7f2f61985d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de8f904-7d39-4295-836e-6f4bb003beef",
        "cursor": {
          "ref": "c2e6b61c-26dd-45a8-a9f0-ee38b38436d1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bca88781-95dc-406c-ad0a-a03bc91d649e"
        },
        "item": {
          "id": "8de8f904-7d39-4295-836e-6f4bb003beef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0307b3ac-7fd3-463d-8baf-cb8c6ded6ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db5996-26eb-45af-9242-b9b69ec2c600",
        "cursor": {
          "ref": "11d43d8b-8a3d-42b7-a66a-73ba7b4064d7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4607e35d-dd08-41f1-8b31-c4c449f2da0c"
        },
        "item": {
          "id": "40db5996-26eb-45af-9242-b9b69ec2c600",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9b6abb5e-bf98-4dc5-83a9-e4ac78d0e94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488ce21e-7c3f-4dbb-8d85-b7b05fd3af6e",
        "cursor": {
          "ref": "afb1862b-b883-41fd-af0d-856106bb3ca8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d4982841-1f1d-4873-b4d3-9eeb9a6d069d"
        },
        "item": {
          "id": "488ce21e-7c3f-4dbb-8d85-b7b05fd3af6e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "356c853e-19d3-4141-9d1b-10b7a693b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e066c3d-5cec-4edf-944f-76382378e218",
        "cursor": {
          "ref": "3a9797d9-191c-4f6d-896d-ff0a2da3d4f3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d3325ae2-95c3-4556-86ff-704889b602d6"
        },
        "item": {
          "id": "3e066c3d-5cec-4edf-944f-76382378e218",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a9dd538c-42f7-4a67-aa05-4e2dcb2d2796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a5411e-a6d2-4131-884e-c10b505b2768",
        "cursor": {
          "ref": "bfab1015-c5f2-4b73-8d06-d1e4aaa58c66",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "63efeb1b-e81e-4634-98f8-f9ec79551e43"
        },
        "item": {
          "id": "59a5411e-a6d2-4131-884e-c10b505b2768",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7bd110de-8da2-47b4-b535-77bd1ab9465e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af544b7-ec0e-49e5-bf5f-6ef528860265",
        "cursor": {
          "ref": "35914ff9-4758-4239-a178-3a23b0cb0d04",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "73061102-d029-4b84-9d0f-d0701c8585fb"
        },
        "item": {
          "id": "4af544b7-ec0e-49e5-bf5f-6ef528860265",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "46c5e70a-0ca5-4648-b731-f4b5f72d4f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692aa23-10ec-46f9-a6a4-2ff173660a42",
        "cursor": {
          "ref": "160f0bbc-8fb8-4c57-b278-939fa14375a6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "03254b2b-7c66-4eb0-9357-c679381660cf"
        },
        "item": {
          "id": "9692aa23-10ec-46f9-a6a4-2ff173660a42",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f70fa58-360e-4365-b0a4-a072a9d14af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a1cc8f-b4c9-40f0-8399-d05e61db4c6a",
        "cursor": {
          "ref": "304ef09c-bb0e-4919-be92-c56cacf16247",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43fd59b3-ad39-4998-a68b-3b820df8391b"
        },
        "item": {
          "id": "19a1cc8f-b4c9-40f0-8399-d05e61db4c6a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5b1b6bc-9ad5-4bdb-86f3-ce83289a5130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62b4f6e-b71f-45e2-9937-9fd68ab81f39",
        "cursor": {
          "ref": "a2cf388f-ce68-4841-9eb9-d025d785e069",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e63ae65b-ba60-4843-8d96-a7e6a3296b55"
        },
        "item": {
          "id": "e62b4f6e-b71f-45e2-9937-9fd68ab81f39",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "07e62cde-c266-40fd-8332-5fa43cf68d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9657dbd-0dd5-41f4-9f58-a80ad4e25be6",
        "cursor": {
          "ref": "1356afc4-d420-4dba-bb99-51fe4d5479c1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cdbd731e-d41b-4881-b737-d48cfa1cb319"
        },
        "item": {
          "id": "d9657dbd-0dd5-41f4-9f58-a80ad4e25be6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1c77a23d-eacb-4d43-a88c-b2ef03becf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff611f64-2a19-4a8c-88c2-1ebe8332c7ff",
        "cursor": {
          "ref": "9c056016-fe4f-4816-94f8-9faae8d215b0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "222557b1-d4c7-41c8-aaf1-8b0b87752b81"
        },
        "item": {
          "id": "ff611f64-2a19-4a8c-88c2-1ebe8332c7ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4710f8db-9f8b-475f-bec1-57f374b12dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a135ce66-c300-413a-b732-8f9b5caa3127",
        "cursor": {
          "ref": "e86294ae-95ff-46ab-98b6-fad6248df898",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cf30219b-e288-429d-a6e7-6e9f484cc33e"
        },
        "item": {
          "id": "a135ce66-c300-413a-b732-8f9b5caa3127",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1ef1612e-9f1f-4752-a4cb-a1c3fc3ee850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5959b9-50d7-4ec7-a989-bb4116f6015f",
        "cursor": {
          "ref": "0e8e767a-7d99-4781-b31a-7d480032ab9f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4006eea4-5c49-43f0-84c8-1f12c06b9a1e"
        },
        "item": {
          "id": "9a5959b9-50d7-4ec7-a989-bb4116f6015f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a1364208-cf62-4dbd-8c4f-0e6a981333bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58c41c-539d-4179-b59e-8fe732dddbde",
        "cursor": {
          "ref": "c93d1b8e-ad43-4b09-918c-9bf60746e6a1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9f4f1d31-abb2-4605-a7d9-bb811d59ed2f"
        },
        "item": {
          "id": "7d58c41c-539d-4179-b59e-8fe732dddbde",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8afd6c1c-39fc-486b-8f1e-16b0e5fda2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2641af-f995-4282-b49e-64c01b5ffbfe",
        "cursor": {
          "ref": "1e3a00ea-8f80-48e5-bc95-d719b22cc37b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2a5ad3d3-079c-43e3-a541-2751803d983c"
        },
        "item": {
          "id": "0c2641af-f995-4282-b49e-64c01b5ffbfe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ecbb005-8193-4b55-96f5-1653a0ba03f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af105f0c-bb40-4919-a84c-52fd0f306b38",
        "cursor": {
          "ref": "5f6f8809-576b-410a-887d-25e76ece3c3a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0062c5b7-ae0f-4667-bf48-4671a81a137f"
        },
        "item": {
          "id": "af105f0c-bb40-4919-a84c-52fd0f306b38",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3bfc5c1-67d5-4479-b020-ccf437b3e69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8575c186-765a-48ab-8d5b-e22130923072",
        "cursor": {
          "ref": "56901bd8-df2b-46a4-8a55-7e934f408a6a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8f1af210-e9df-4b6a-91a4-067cbd983638"
        },
        "item": {
          "id": "8575c186-765a-48ab-8d5b-e22130923072",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72f8cd7e-ad4e-4b1b-9134-f07cf0990472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170e48e2-a67d-4790-ac67-94a0ab70f933",
        "cursor": {
          "ref": "bc552035-8baa-48aa-a367-a345d2ebeb44",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16341be7-de88-41be-b5df-af60b38261db"
        },
        "item": {
          "id": "170e48e2-a67d-4790-ac67-94a0ab70f933",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cbd5299b-86d4-4efd-8ab4-8f8cd181e8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e54444-1eb7-4682-8d98-54fb53e87bbf",
        "cursor": {
          "ref": "92da32cb-38db-487b-b89c-3906471de5b4",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dea1813e-ded6-4236-ab50-25242fbca43b"
        },
        "item": {
          "id": "56e54444-1eb7-4682-8d98-54fb53e87bbf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "432c4742-1c78-44c6-81bd-c81aa21fe75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a045b8b-9fb3-48f9-9da8-38d6d8a6b8e8",
        "cursor": {
          "ref": "41db497c-64a9-4a64-a65c-f8e4b2a458e8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1dead10d-5f8d-459e-aaf5-00ff9c5e2026"
        },
        "item": {
          "id": "5a045b8b-9fb3-48f9-9da8-38d6d8a6b8e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "68265f2b-7914-4305-a9b5-02733634624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c205cfb7-fb85-499a-a25e-294f7a8e04ca",
        "cursor": {
          "ref": "7fe1b180-5b2d-4263-bd95-83756d0298de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "155276ff-dff4-4b90-8572-c24ca1310856"
        },
        "item": {
          "id": "c205cfb7-fb85-499a-a25e-294f7a8e04ca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "79f8d96f-af86-4622-a0b7-b7958595276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d94fb02-1f76-40ce-8d2d-80709fba7c48",
        "cursor": {
          "ref": "b1f88cd0-645a-4c84-bff0-d193690bacbd",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1f6dff44-b638-41f6-bf15-0b31f0eb2fef"
        },
        "item": {
          "id": "8d94fb02-1f76-40ce-8d2d-80709fba7c48",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "89151902-bbf8-488e-90c8-d919c0ff37a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af23932-c56a-45b8-91ee-54ed68921b6c",
        "cursor": {
          "ref": "92afdbd6-3c31-4461-83c5-88dfa1e58dba",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1498c18b-a8c9-4e6c-9200-a10782688240"
        },
        "item": {
          "id": "3af23932-c56a-45b8-91ee-54ed68921b6c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9faf9e76-3fe1-4187-9159-68f90486f346",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "8624e6c5-2e1c-43ec-8998-8a7ada2d8ac4",
        "cursor": {
          "ref": "3da9fcb3-bdb5-4db5-b29d-1b64141142c2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e0b94a7b-1c8f-4f5b-89d8-e2fce04a0b15"
        },
        "item": {
          "id": "8624e6c5-2e1c-43ec-8998-8a7ada2d8ac4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "53470291-576e-43f7-833e-fa3ee2b0033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b71417-c4c8-4116-89eb-a4f0292c2cf8",
        "cursor": {
          "ref": "4d26c8f6-0226-48ff-be38-d21e250bd18e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2639ebf2-70f2-4e3a-9087-71b290ca6225"
        },
        "item": {
          "id": "b8b71417-c4c8-4116-89eb-a4f0292c2cf8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "499fa64b-0ea8-402d-b062-6248f4ce1d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aec195-3b46-41d8-ba01-ff2d7fec4cfa",
        "cursor": {
          "ref": "2f748e9f-d13b-48ec-964e-d30fccaa09f6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0922ce3-0de4-43e8-8084-e81347e3e69a"
        },
        "item": {
          "id": "e9aec195-3b46-41d8-ba01-ff2d7fec4cfa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "faf12833-eaf7-49c9-a89f-72887bb5a74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c1cf94-8423-4373-afc1-b862eede81ba",
        "cursor": {
          "ref": "e51dde31-d7d0-4088-b129-ed9ddd690af2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "75ab0679-1e25-4b3a-ad38-87bf0fcfb02c"
        },
        "item": {
          "id": "83c1cf94-8423-4373-afc1-b862eede81ba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "315b8079-0d59-4583-bb2c-fdc39184fdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeff410-8265-4880-8d53-5cbffc3bbd32",
        "cursor": {
          "ref": "ecd02830-6d33-41b8-9baa-4dd45bd6c3b4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "147f8800-5027-40e9-a56d-f247ebc8f56b"
        },
        "item": {
          "id": "1aeff410-8265-4880-8d53-5cbffc3bbd32",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f7608cb-757f-4e59-939d-081271bdc184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389923f7-9f5a-4d6a-acf4-4bbf40f4d79c",
        "cursor": {
          "ref": "f0db038d-977b-4849-a191-9ffc346c3a6f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e83ea065-84b3-4acf-825f-f1202ab16abb"
        },
        "item": {
          "id": "389923f7-9f5a-4d6a-acf4-4bbf40f4d79c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ff85e17d-7226-46e5-9b4d-2b530203bbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f54beb-3564-4628-977b-7ed8cd7b82ca",
        "cursor": {
          "ref": "3e2e1d19-4c2f-4781-b034-0817827d3163",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00c40d1e-5154-4b6a-b17a-c20a1e8d18dc"
        },
        "item": {
          "id": "56f54beb-3564-4628-977b-7ed8cd7b82ca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb99325e-9732-4532-b897-a004c5f543cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801813a-cfcb-4649-8745-f3ec1063a086",
        "cursor": {
          "ref": "516cf7b8-deb6-4d58-9baa-72423d340487",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1fd8201c-c06e-43f6-8ec7-d53f030b1e57"
        },
        "item": {
          "id": "2801813a-cfcb-4649-8745-f3ec1063a086",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05787cb4-dbf4-4376-8fa5-8cb1b09df6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431e0be8-342a-48da-97f8-bd58fdaffa8b",
        "cursor": {
          "ref": "1ca69368-9a6f-46b0-bb74-bcbe2a86823f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eee28a17-3379-471f-8c17-a8f6e1cbc997"
        },
        "item": {
          "id": "431e0be8-342a-48da-97f8-bd58fdaffa8b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6c345f46-9920-4f40-97c7-057e06687ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49e541b-6f4f-4833-959c-c9908b122976",
        "cursor": {
          "ref": "0fc0b9f2-db78-48e1-9ca1-7347aa84aefd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "113ea8aa-8f56-47fa-9a23-5dfc4f4341b9"
        },
        "item": {
          "id": "e49e541b-6f4f-4833-959c-c9908b122976",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cfacefa-0caa-4b69-8145-8c9cd177ac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcae124-5b29-43e9-9cd2-61ef3b0d899c",
        "cursor": {
          "ref": "c27da0f9-c9ac-4e93-bda5-5c7e5a97196c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bca5e4ad-1586-4e78-aad5-fda107ae4a03"
        },
        "item": {
          "id": "8dcae124-5b29-43e9-9cd2-61ef3b0d899c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "695f8e1b-776c-46c7-b47b-5a468bcdb211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9becfb-0cb6-4e50-8943-3acfa73fc777",
        "cursor": {
          "ref": "f5fd7090-8c21-4985-8c55-f3eddaad621e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3b2729f-cc04-4542-9fb6-08fb3e8eb391"
        },
        "item": {
          "id": "5c9becfb-0cb6-4e50-8943-3acfa73fc777",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd5a5c4c-58b7-408b-aa68-ca29d9c95016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2657c89-94a1-4fd8-b940-c7994fca5190",
        "cursor": {
          "ref": "fc3e58f3-8005-4b62-9b8b-666e44275b99",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4d5c374a-9c61-44e0-a8a2-a3ce411e29a0"
        },
        "item": {
          "id": "a2657c89-94a1-4fd8-b940-c7994fca5190",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3594a850-7292-43ea-b0db-b2c194cb64bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7413a73a-1772-4a45-bc0e-15f2ce243744",
        "cursor": {
          "ref": "f94a6d78-08ee-437f-a6ea-af918bcd1998",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb36288e-bf78-4c4e-bb06-322ecf10e0cf"
        },
        "item": {
          "id": "7413a73a-1772-4a45-bc0e-15f2ce243744",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ac1f26d0-15f4-4d04-959f-77ea24c886ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0677cbf-05df-441a-9f40-a41c54ace91f",
        "cursor": {
          "ref": "f5f26676-57a1-403e-95e4-51e8d5e2596b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ae5b178c-29d3-4ddc-94eb-db56be1445fd"
        },
        "item": {
          "id": "b0677cbf-05df-441a-9f40-a41c54ace91f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c708e55-c5db-4dfd-b89c-92dbe30fec3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a53ea-4095-4915-b498-3cd8608eba32",
        "cursor": {
          "ref": "c9fa839a-fdcb-4442-afcc-34a4fbca714a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb351ab2-fbec-4328-a5f8-1f5d2dd90be8"
        },
        "item": {
          "id": "611a53ea-4095-4915-b498-3cd8608eba32",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "151e0dbd-e500-4da0-9cf4-b7c983673d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe175bd3-df46-4405-9f2f-f2aabee8399c",
        "cursor": {
          "ref": "72429c77-67a5-4c4c-b314-209ba6eaea9a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e8eb0f84-ed52-438d-9d0f-ca05883d8720"
        },
        "item": {
          "id": "fe175bd3-df46-4405-9f2f-f2aabee8399c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "708f9819-658f-405e-85f2-216224e91ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae77cb-b687-4e4c-bbda-917302374aab",
        "cursor": {
          "ref": "ebc0f60f-7139-474d-9ae7-2689dc288462",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa09145d-0c04-438f-809e-ca9ac6980ebb"
        },
        "item": {
          "id": "41ae77cb-b687-4e4c-bbda-917302374aab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "353b7df3-6001-497d-9e51-c7245c1e8455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02087ebf-89ee-4289-b8f6-a99729169e2c",
        "cursor": {
          "ref": "b0839e88-cf0d-4f84-bdc3-4f2ab5fa76f2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "73388857-2cad-407d-b377-d7e730754dc5"
        },
        "item": {
          "id": "02087ebf-89ee-4289-b8f6-a99729169e2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2a2f4617-f59b-4b4e-be37-9e6433269f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cb4781-a910-4add-b40d-67a58475b03a",
        "cursor": {
          "ref": "c6328fcc-6bd9-4def-9eb0-b899571b805f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "34a43d25-ba65-40a7-9072-29dbfc7e0445"
        },
        "item": {
          "id": "65cb4781-a910-4add-b40d-67a58475b03a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e839762e-1b8e-4491-84f7-74c2b26e0ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5702f-d5da-433a-a905-1cf60b562e41",
        "cursor": {
          "ref": "e46ff27d-4906-45e5-a25d-313fffe97350",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4d45cd62-2ef6-4539-adfe-c839633e5d50"
        },
        "item": {
          "id": "fdd5702f-d5da-433a-a905-1cf60b562e41",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a98bb26-8772-4d5d-95bc-740659cf57b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab526aa8-e14e-46be-87e0-51dd8c7df3e9",
        "cursor": {
          "ref": "3a72bff2-9406-43f1-a83b-4b57bfaf728e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c22e41e2-3258-45b4-817d-2ad070bd7cdd"
        },
        "item": {
          "id": "ab526aa8-e14e-46be-87e0-51dd8c7df3e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "470333b0-ccaf-4613-a5d5-b4cb5ba28176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17921e1a-86df-4e56-973d-34e191d98837",
        "cursor": {
          "ref": "c63bd974-f793-4d00-b2c6-214feb4e68f9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "543ffab3-ae61-469d-8d61-0bc0e7a41065"
        },
        "item": {
          "id": "17921e1a-86df-4e56-973d-34e191d98837",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "73b1e055-9f2a-4541-bb57-a7f4f3c16f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477c1e7c-6ad6-4dfa-8a3c-8c791c5afdb2",
        "cursor": {
          "ref": "5120f867-5174-471b-92da-d940a50f2f01",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ef161d08-aaab-4136-962d-386bca8c21c9"
        },
        "item": {
          "id": "477c1e7c-6ad6-4dfa-8a3c-8c791c5afdb2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "213a5647-e13f-4fdf-8ebe-13b5114cc651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee8a228-2178-45fb-8ac0-a4e40df58fda",
        "cursor": {
          "ref": "dc350342-b667-4a9a-946e-d220f94dfa7e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a9e2bf0f-f168-4979-9b1f-37313b02b818"
        },
        "item": {
          "id": "4ee8a228-2178-45fb-8ac0-a4e40df58fda",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7deb6395-db8d-4b60-b9f0-6e7166bb0350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f430982b-2b08-45ac-bc80-89147a91066e",
        "cursor": {
          "ref": "e10d8821-4501-4583-966f-ab03f33cae1e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fbe3487d-7339-4433-ba82-b3ac18a36bdc"
        },
        "item": {
          "id": "f430982b-2b08-45ac-bc80-89147a91066e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4f1c5a60-1c72-4e95-b0da-e54eb61d9d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fba27a2-229b-4b18-a36a-bc9985c39195",
        "cursor": {
          "ref": "f2a8b95d-f547-4301-a9f9-6cb09426f5b7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "321139fe-015a-44bd-a3d0-0af2add7ff3c"
        },
        "item": {
          "id": "0fba27a2-229b-4b18-a36a-bc9985c39195",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ebcd18d8-0441-4d83-a00c-cce37ef56aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6b01bb-6347-4bb3-9831-d07091ff2b83",
        "cursor": {
          "ref": "ad1716e3-d7d9-41e0-b0e7-fafa7e02e78b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f8b3f874-df5a-4fc4-9cf1-a047c9748578"
        },
        "item": {
          "id": "8f6b01bb-6347-4bb3-9831-d07091ff2b83",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7eb63394-3830-46d7-a5c4-b108d29953ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ac94e4-af39-45b4-8e92-f9c5753f446c",
        "cursor": {
          "ref": "2e6cb170-8e8e-41bb-9e37-40905a71aa83",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5747ed99-1bdc-4f99-9a51-73fc2ab4b96e"
        },
        "item": {
          "id": "d5ac94e4-af39-45b4-8e92-f9c5753f446c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b997a23d-4d08-432e-bcd4-7784c9a0ef35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e8ba2-6d94-49b0-8e50-230d064c385d",
        "cursor": {
          "ref": "5b9b66cd-8b5b-4b03-afb9-c6c1f3be6ed0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b0d14f89-a427-4fa4-ac8b-09ecbe3f7dd8"
        },
        "item": {
          "id": "af1e8ba2-6d94-49b0-8e50-230d064c385d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ad6b8e85-a1c3-4500-bae0-8a91672c40ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934c2bc8-0590-436f-a043-b02a1e3f6f0e",
        "cursor": {
          "ref": "2242df9b-2f71-410b-9b97-bfb20e381209",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6ade6ba4-e9d4-438b-8c9b-27bee778aa19"
        },
        "item": {
          "id": "934c2bc8-0590-436f-a043-b02a1e3f6f0e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93b8bb2b-20eb-463e-a5ce-3ca1ba8c8040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10c4bd3-7f2b-4238-8ff7-4bb2b70e28bb",
        "cursor": {
          "ref": "57753a11-b4fa-4307-9f6f-e9629d479832",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "40257c02-f5d7-46bf-a0c5-d4951488b0e2"
        },
        "item": {
          "id": "a10c4bd3-7f2b-4238-8ff7-4bb2b70e28bb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49e5a100-aefc-4c48-9210-a1c1b2b7c487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3d19ec-0751-4d13-bcb4-e8f1dd735ddb",
        "cursor": {
          "ref": "07ef4ab5-f0c9-409d-ad94-ac834f368086",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bda9103c-ca72-46cd-ad8f-43b63a110f8a"
        },
        "item": {
          "id": "6c3d19ec-0751-4d13-bcb4-e8f1dd735ddb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37c641fb-a963-4791-9ea0-a6e620ddfe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cabbb3-7654-49d0-9c24-1d557681df50",
        "cursor": {
          "ref": "04b88b9f-2fb4-4798-809f-1ef0160c72f1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "46759fe3-b379-4ace-9529-31a436331d48"
        },
        "item": {
          "id": "e7cabbb3-7654-49d0-9c24-1d557681df50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f62e4a12-d0a1-41db-9ee1-e951eacf4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfae08a0-87bf-4aad-ba3e-d0af0ae53e79",
        "cursor": {
          "ref": "a5e2b041-9ab0-4e43-bdef-ddde4b9fb6d0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a3ad467f-c87e-42f8-9445-a6438ac0e57d"
        },
        "item": {
          "id": "bfae08a0-87bf-4aad-ba3e-d0af0ae53e79",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "49b173bd-dc14-4708-a3ef-ed79039ed936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2aad34-6aea-45fd-b26f-a365cda29b85",
        "cursor": {
          "ref": "130cc97f-dc7d-43c8-af3a-286da7aad13b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6ccdd84f-401a-41e1-ad76-436fb2d43b8b"
        },
        "item": {
          "id": "ae2aad34-6aea-45fd-b26f-a365cda29b85",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "53c02797-c736-4457-9940-c0c8e9bcc073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee4f7f-f54b-45bf-8b71-9b8f724919ce",
        "cursor": {
          "ref": "e1fbea29-6034-45b2-a666-9353aa9cb839",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "780ec423-789c-40a6-a5b9-ca7aca95c21c"
        },
        "item": {
          "id": "45ee4f7f-f54b-45bf-8b71-9b8f724919ce",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d886e334-4b96-40a4-8f12-9e943725218b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033dd24a-b2e2-41c5-ad8d-fcc77273c4b3",
        "cursor": {
          "ref": "4dc2a9e3-e1f2-4d43-ba24-c6e0c4805e88",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dc3da410-905f-4aba-ab73-0d225837b108"
        },
        "item": {
          "id": "033dd24a-b2e2-41c5-ad8d-fcc77273c4b3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1926fdf6-c2c1-4c04-a3fa-4175a661f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee816431-465a-4b63-8321-4c955c07326c",
        "cursor": {
          "ref": "440daa54-b8b5-46a1-a5e7-b60fc65f9a9f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "59b0ae9a-b87a-4745-a782-51e797316e1b"
        },
        "item": {
          "id": "ee816431-465a-4b63-8321-4c955c07326c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "20810373-59b4-43d2-9531-8c0d5c63499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce525345-41ae-41db-a735-017c67dc7d77",
        "cursor": {
          "ref": "cdd2b77a-cf19-4b4e-bcb9-534fc23649f5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "32856f89-1763-44e9-8680-4016451e9e62"
        },
        "item": {
          "id": "ce525345-41ae-41db-a735-017c67dc7d77",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e0eed780-a03f-47b6-b0dd-f32bdf5b88c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed8873-a01e-475f-ad78-c7828b666c7c",
        "cursor": {
          "ref": "e0b1b637-71ca-4dc0-82c3-6a9b4a16ab42",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "76d888ef-56d0-4541-959e-cf3fc16aec2a"
        },
        "item": {
          "id": "4fed8873-a01e-475f-ad78-c7828b666c7c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ab42b0d-94ad-4ef1-a144-cf4c74e1fd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebed800-af36-4ed9-9d29-4fa17f4c5a70",
        "cursor": {
          "ref": "4852c42e-0c40-4ebd-a179-17e0079b2a21",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f0efe53c-9fe0-4663-b34c-d9d4738976f5"
        },
        "item": {
          "id": "eebed800-af36-4ed9-9d29-4fa17f4c5a70",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "306d39c7-0d37-4685-ae0b-5349b1164fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480dd408-bc53-407e-b453-17d00328bbea",
        "cursor": {
          "ref": "7897a6bd-de11-4b96-a251-7268196f09ef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cb3e3b67-0b74-4035-b104-dc4956440af6"
        },
        "item": {
          "id": "480dd408-bc53-407e-b453-17d00328bbea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9ec15048-4691-4b7e-86b8-a3355a4078b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa59ece-d1f2-4d58-b7a8-a76ea02d9209",
        "cursor": {
          "ref": "d91a44ed-b814-4e51-ad87-ddd853ef3e8e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f87e6d25-39a8-4da0-ac8e-51df05b92cc7"
        },
        "item": {
          "id": "eaa59ece-d1f2-4d58-b7a8-a76ea02d9209",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "76b81ec0-e1aa-464d-b43b-536ad64da42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58372c4d-553c-4d6b-943f-cfa15d1fb22f",
        "cursor": {
          "ref": "80449260-cd12-4778-bef9-0ea0e8ebf133",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c0424a01-6746-4574-b9bc-64ee8f83b0b7"
        },
        "item": {
          "id": "58372c4d-553c-4d6b-943f-cfa15d1fb22f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ae882dc-14c2-4598-be46-d9e6a312de0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaffa92-742c-41b2-9ce3-1bf1dd9fded8",
        "cursor": {
          "ref": "ffee3ccd-3766-4651-89d7-e426dceb7116",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "53f99302-bc55-4a75-b6b1-120d85c04ced"
        },
        "item": {
          "id": "fcaffa92-742c-41b2-9ce3-1bf1dd9fded8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "85ffa314-afa1-4888-bcdc-4a1c9a6a7f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac351e-310e-44ae-83f6-08c58d26c042",
        "cursor": {
          "ref": "b3a2919c-a27b-42e1-9068-cc81028eb2f0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3e605d90-45b7-48ac-9ed4-4e723fe77ede"
        },
        "item": {
          "id": "a9ac351e-310e-44ae-83f6-08c58d26c042",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3d39e0aa-c33d-465b-87de-f49ed712630e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cfe681-142d-46da-841a-3cc3a334faa0",
        "cursor": {
          "ref": "e5fe0036-75b5-491c-b1b6-5a52701b1285",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "285bbf24-c77e-4208-849f-3477282c0925"
        },
        "item": {
          "id": "08cfe681-142d-46da-841a-3cc3a334faa0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "433aad24-8b30-4acf-a3b9-a905716db120",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eaa1ac-9c29-4ba4-bb48-2f68cfbcfdab",
        "cursor": {
          "ref": "61db245b-f2fd-487e-a687-31ed5119103d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1bf8f325-a614-4e80-8abf-ede519de6651"
        },
        "item": {
          "id": "73eaa1ac-9c29-4ba4-bb48-2f68cfbcfdab",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8b76585a-a44b-49e6-a1f5-7e772cf4b2a7",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "725ed48e-ef37-4cbe-a5ba-c45370499737",
        "cursor": {
          "ref": "f7dd95bb-f05d-447c-861e-3c311f68cdc5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "29139317-606f-46c2-a9ad-4ef57ffbf2e6"
        },
        "item": {
          "id": "725ed48e-ef37-4cbe-a5ba-c45370499737",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1846ee18-9821-40ff-8a1b-dbcf75084a64",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac05380b-a8f7-4df4-9433-9870806ff3d3",
        "cursor": {
          "ref": "523d5779-a9e7-4faf-b56f-29bbf758d1ae",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95bcab65-a9a0-4c5f-b6c3-1dacf91c3d52"
        },
        "item": {
          "id": "ac05380b-a8f7-4df4-9433-9870806ff3d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "824e6538-292d-476b-9f51-1a35b1191111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac05380b-a8f7-4df4-9433-9870806ff3d3",
        "cursor": {
          "ref": "523d5779-a9e7-4faf-b56f-29bbf758d1ae",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95bcab65-a9a0-4c5f-b6c3-1dacf91c3d52"
        },
        "item": {
          "id": "ac05380b-a8f7-4df4-9433-9870806ff3d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "824e6538-292d-476b-9f51-1a35b1191111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fded8af3-ab69-48c2-aabd-b11b6cffcfef",
        "cursor": {
          "ref": "de93a444-88f4-4e84-91e8-b9d41580742c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f920801c-1226-4d9b-b43a-ea3622242491"
        },
        "item": {
          "id": "fded8af3-ab69-48c2-aabd-b11b6cffcfef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3c28c38b-7436-40eb-b294-3a85b0e04abb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3a62a5-0628-49fd-8a70-ca7eadee7743",
        "cursor": {
          "ref": "dff09ea3-1be6-4df9-91a5-ddf5dfb5fb7a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8364861e-68a9-4c83-b9c5-62fa336e21eb"
        },
        "item": {
          "id": "5e3a62a5-0628-49fd-8a70-ca7eadee7743",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c732bbec-73f3-429b-bd93-6f0163ecf7e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}