{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eaf03b1c-e313-4aee-a5e3-cb0549c6d690",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15969230-bf8a-4db2-8a3e-8840ddd4407e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e11d3f32-0bd7-488e-a8ff-c3f18f7d6f83",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2e5c8a4-d509-4fd7-9104-9fdb64270ce7"
                }
              }
            ]
          },
          {
            "id": "e47acf1d-a731-4f24-9cf8-11b80ae00915",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75eee73b-de45-4f26-8611-0ba3508d6509",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8337e82-9af1-4929-a054-43a1773698dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "366d3c5f-4354-4f67-984a-d66c1b59613e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "25b9034b-0b4f-4f75-8cc2-d4a9e08aa5ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84dfea24-b2bc-4421-8245-1a91f863ecba",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "339392d5-c3b4-4e67-9952-97444d8b3730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "310e9fa5-eb8a-4917-8b51-818b52ff1715"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1cb1136-f189-4228-938f-7118661750a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42b09209-f9f9-4e4e-a3bb-0eaffabf0029"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41130756-c4ba-4696-a984-25f0bac015ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76788506-7989-4432-8de4-6a2cf8d9d556"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40fbbb11-dd4c-4f73-9d42-eb849f13c26d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f01308de-01b0-444e-ba48-39b950d34d7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f9603b6-18b7-4ced-a2bb-17b08d929a67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "220d89ad-2e64-4b8b-a854-7a0928fd0023"
            }
          }
        ]
      },
      {
        "id": "cf751624-614e-4ca3-b77a-e6935cd23f92",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e1e70fe5-c29a-4eb6-8fd2-3b387d72e32d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e085da8-00b8-410e-b28c-5a03a0de3885",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e06efcf1-c510-46a0-9090-52910183fa8a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7db370-1d6f-479a-a751-e6c37225a577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc62f27b-1a54-4f43-9b2b-72b08c58a45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b5af4-995e-42e1-bb9e-ad6f60ebd6a8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670427cf-d803-4b2b-9c2e-5e2f04de4ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07722003-74d5-42bd-8c24-5ece2d8f9137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cf9b94-2550-40ad-9875-5274864c256a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05cf4c9-12fd-4326-84ae-856dbe8d4d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29730f11-6799-454a-bd60-a6f8458650ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4954a59-31d0-42c5-b8af-2b328322f98e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a85b7e1-7c6b-43fd-a409-86c70abf7cd1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30bb33e-a2ea-48d6-8571-eeeee30b22cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71fa9166-8982-4280-b16d-741e528ec765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d8cf3d-b4c2-41ef-84b4-4485a35e42a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bed4adf-e17e-4691-9318-2828c3c391fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "973d5b0a-7ace-428a-8591-117f7de20dc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55b55109-33ad-465c-bb1e-fe2ba8788b37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45fcd416-14aa-4c3b-825c-b7c84cdb7b37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5ca6f278-163c-4ff8-b88e-7b0a386ea92b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8546288a-29e9-499a-914a-309097aea50b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf8ef6b3-7dda-4e44-8a13-915cbd3a4c09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2781842-56fd-460a-8d8c-477342360734",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c039230-9309-41cc-bc75-0d93b2bd5f79"
            }
          }
        ]
      },
      {
        "id": "a34fbfe6-cc98-4523-a8d5-4804c74c7fc0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "facc7e57-3f1a-4cba-b954-597ee0e70a3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80fead5a-876d-4202-b653-d0ee0467c9e7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b509e149-67bb-4f48-9dcd-6e992e78276f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbd75e3-22e4-4745-9a7f-6111ec1e1371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01468820-ec58-4db8-9d5b-cdf634ccfcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5615be55-8b94-4c17-8b9a-27442c74aa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae80eb7-3ebc-463e-beff-ba6a7616d1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a477ea-e39c-4f2d-a6a3-e25da22ccbdb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01274b81-6853-47a3-a559-421b963110de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc84e2-0aba-4e24-bbfb-50f0d49a4f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221555e-60c0-49e0-89eb-3060a640ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebd07b68-dbc0-4237-8c22-abfd8821927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d220691-bc8c-47ba-b6d0-d4972b087865",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54e478d-2730-44a5-a34d-4e12bd64b84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a073246-f970-4d11-8202-6e2010b8c15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6857dd3c-988a-40ec-9832-82dc37d0a08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1cf70a4-f060-4e76-b4c9-93ce79faf6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39732112-13fe-4f2f-9b64-133801b0ce2a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ad411d-87b2-4497-9049-d54d14adb1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19068a6a-4907-490c-95b2-6fcb57c14f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e52a356-1d82-4ed9-921c-2d381f6b5aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b529f7-8c97-47ed-8170-93d5878ab232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb0ab58-1b16-4e3c-bcd1-47dcf7215cc9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ab938c-2b03-44f8-a8a9-0af173c5e41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1703ec49-c28e-4553-a641-f729c6e4b583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f251ee00-fb94-4338-84fb-4a8a0ace4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "615fc66e-71c2-49af-ba24-22dd14aaefbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4bd56a-a5bf-49b4-a0a6-c7f6a64deeb2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057a9cc0-7928-484e-94cb-f25fe5c7fc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f87afc-c0b1-439b-9045-0a304c2a50ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ac9c2-35ef-4118-8609-9e499b3e5d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2755e2fb-d8eb-455c-b7c4-eaae972aa440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2b02f2-d460-4485-813b-b4089d5f3b24",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4feaa-d1bf-43a2-91a7-d52b890c20ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d637786-b01d-48f5-8ae9-12def413b84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81126f5-6dae-4a34-be2d-798879be5555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac07952d-7b2f-4332-ae9f-91667bfbc4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e20aa2-ff92-48e6-8016-56cdc4e55785",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2bcb62-76f4-4183-a892-df8fd3d5672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ae3a19-4b37-4048-b28c-0a99fa09ea92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890efd81-410b-4ac7-94d9-2aff11f0bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a7e02e-abc9-4f98-9e64-8a3cf1f5bea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427e5d14-af36-4953-b729-4be99c9accca",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23ef728-ecea-4bf0-a071-3dcb28af58ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf78183-c1df-4817-915f-a095da57ae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d9d741-51cf-4584-85ea-acec8367a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b71815da-462a-41eb-81ef-6eaa8c9a38b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9f839-a7dd-4b0a-a74b-6250834e1333",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8502cb0-0b62-4e20-a102-cc82fa56f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c27e96-1455-4784-9562-5cc0f249ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1458e703-bd0a-4e7d-8275-ce67b51027b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db63707d-caf4-4e4f-97e3-a726e1f38d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32275ca8-51ad-4b15-bd9c-a6a061c2fe03",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5962bebc-863f-4d3b-8f1a-b9fec9d205c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbd909a-b011-4f9c-b729-6315b7d2474b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec30f23b-b3f9-4095-a411-e5038ec848fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f9f033-ead4-4ca3-91f6-bc5066825cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdeac22-55ba-4d11-a725-c417c59d8abd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cd241e-c6d5-4bbf-80fb-32fe40fa2e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce6977a-39cb-4ef8-b075-07fe4d5d6a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c7ffc6-8fdd-48a7-a76a-3da0b1ef21db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a68f41f-c0ff-4645-acf7-fa3784777d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df34c7be-9048-480d-bc5b-862c5af586e9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765c0b2-5d93-4775-b11e-ed8c6371cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5d3e18-1bdd-4690-a83a-389464d64a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30b04c-7f1b-47d2-9617-19706adcc3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "719119c9-9a14-4a21-bd80-0392fa49a36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae0274-2f08-40bb-9ec5-084fe86ea995",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70675ed5-af17-4153-bcbc-e5553a69450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608efcdc-951b-4116-8a6c-2e952c8ebf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad7bd4f-74c1-47b8-bc5d-d46d307f0076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8eeac18-e4b7-47f7-a991-297dd6222408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13726719-2ef5-4302-8e7f-b11a6e1d5f61",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5a0235-3f0f-4ed1-932c-415e7fe7548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d002d55-60e8-4cb1-82ad-31aa03d81618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d53d87-f37b-46f5-a4e2-0988b9f9ec5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d40dcfac-026e-4898-8dbf-3db709dfdd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a4cd9-ba31-4e50-b246-16e9b14470a4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cc290e-b06e-46d2-84cc-ee24f72541ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5967b940-ef83-4b75-9b98-663f49399fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c191d-cae5-4d23-875a-41780aef05d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190651e3-d944-4a41-8fdb-3d6589465daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10642bd-fdd5-43b4-8c91-46be1120fcd3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93be66d6-06ac-437e-be68-a80f3773f4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2939e3a6-05e0-4b63-8963-00296dc45608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9fb53-3b67-4d61-b441-3ad5548645b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a804973-200d-468a-8a2b-3195a5364b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a9882b-cabe-4791-8135-765f553852d7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5bb792-4730-4021-b0d1-0bb3f1c7143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8c42ea-6ee2-4630-bae7-90f38d98c926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30295bd-5fae-44a9-a648-39fddc51fef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbff5f3-6e77-45d0-b5e6-5535f16a3cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b122829-58c7-4264-9030-cc06c9533d77",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f43d4e9-8ac3-47d1-b8fb-dd7176861787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb47da4-926e-453d-8d28-1aceb37b0d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee34c55-4cde-41da-92df-75699c8f9d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "303821db-05b5-4b1e-9913-56f273d3d2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaed8413-649b-47a3-82ad-0d63b1f9e457",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dad283-9052-4795-8ee1-720211b1c834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51679589-a195-46ea-9a3e-e94f2bb44a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b743f3-0eaa-4237-b6c2-50be8e9f573f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ab2292-9f85-4fc4-baca-7d998b3eb858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fad67f4-7b1b-4272-b213-048845f31d87",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfcbb28-8cd5-4988-b3dd-bdaa3e2c85c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea5ddaa-06b5-4aae-9091-3bfdd0e81ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152caea1-afa4-4736-9359-6ac570fbdd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d47541-7b36-4539-8814-e512ee5a1129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4494a9c9-8cfa-4190-9cf1-eea6a4d36664",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caa2e0f-0abd-4fcd-9fb5-9bd7ea3236cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd81df62-2343-48a8-93fc-f9372ddda08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a9c5d3-7077-46b3-96b0-03657caa37ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4758eaec-fa18-4aa0-9fd7-1e164e1fad7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa0255c-022c-4a3a-8fc0-0d82805842cb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38c9b00-1cc5-487c-b88e-451ec0b24d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee8b75a-b467-48ef-8199-917933df152d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b838c20-e06e-4c60-8a70-7cf5d29795bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae784c41-dfa4-494d-a702-87267288a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302224cf-1493-4a48-bc64-20e63f97cd2d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a008afe5-f133-4997-86cb-23a0a184626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2896b93-475d-464b-b9dc-829f84f6798d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e962ea-1303-487a-b962-8508130d4623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d1adbf-535d-4c19-a9b2-fb2a114e53c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f087f4-e1cd-412d-92ed-461a1301e9fb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc842afc-d9d2-4458-bb66-f1feb461e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881ed7c5-b8e6-4af2-9864-dff484823de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7255fd-1412-41bd-9110-d7f84c01f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fb09e7-ba0e-4170-b278-00a3b4f00489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2560501-4671-4963-a2ea-65e8e867b1c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb9675a-5998-4d63-8e5d-8527430b58d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1cbc2e-c38f-4036-9783-cb656693e497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d48102-e805-4016-8d62-b7caa3794354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87af65e-0c1d-4251-8638-84cc1279913a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26f8818-4549-43b1-8948-980294681c61",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f48486e-cd4e-4e4b-9979-0b638a1c88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6629ddff-e311-415b-8252-3ce3e5b444a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc1e60b-7b91-4964-a91c-e93f35e20698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e41abd3-9e5b-4a6c-9c30-99a928ca8fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e7248c-aa95-4f38-909f-4cbcd35908a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c11c08e-4052-4b4e-86c0-1d0758a086ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd484415-a705-4837-8914-bbbe1c9993cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09192e73-50c4-4189-85c3-66d2c35da7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09da7be4-9668-44bf-bd70-d4b2448a53a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7b9f76-5c99-494d-b125-192e475aa87e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14569430-111d-4a97-b26d-ab9dcdd2626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68214207-0fbd-44a5-bbee-7db395a7a30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eff357-076d-40e6-a746-e0b6e891b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "348dc80a-710a-4ef0-8d88-4e08534dbc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f063397d-ebd9-449b-8340-d67aa4b6afc5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b231c1-5823-40e2-b3d5-91cf8c0ad820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55429c62-f4fe-491c-ad14-1b4a6cb70d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b102f994-02c6-479f-b7f2-f44b5fd2cc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a852e0c1-6357-4504-b19c-e733a5b2e203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaa8045-a22d-4007-b3bb-51898e1f9cc4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ed5dda-5582-45b2-8b8a-db2f637a1e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c323d4bd-5927-40fc-9d27-c8b0087eba3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaae2b8b-b44b-44d2-a6c1-1ad9173c42ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc052e9a-4620-4eb9-908a-85ec14207b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bf55d0-99c1-4a91-b7cf-c5fc36917d60",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0b8e3b-f426-4890-83e7-69965facaadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92331e2e-455b-40e3-b1db-d908c69ceb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baadbef-dad0-4ab1-9e40-4e86c7aeccc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90a38c3-0976-4d1a-bd99-1ae291269276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc49a02-2436-4dda-ae4f-ba1b0477f790",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeccda0-6a0e-4ab9-9b25-4c079dc2be75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfd0911-612b-47e8-abbf-8b2cfd3de03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b188a6fa-be12-4e3e-b973-13c100838c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86629964-2642-41d4-82c9-2c8df7c45deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9865dff7-5607-4940-ba47-aed0941e5caa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8f2610-1df5-45a7-9ccb-3bdcba8d83c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37773c8-e780-4b06-91ab-f28faae40e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b55d74-67c7-4ad5-bbef-581e6fce6918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c2f791-8d47-4604-bbab-788f403ff77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065c6e22-8fff-42fc-b3d2-6046b416f6ca",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fe2e81-7e3a-4cc4-8b9f-7005b9fb6861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b2cf0-21ac-4f9a-83e8-652179579dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fee8fd2-45af-4e5d-974a-bdba70d1e684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "77157a59-804a-48dd-a332-d82a601c822c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7666597-f4da-40fc-9685-affe3a8c41d2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd2270-2392-4aba-b830-15c996e31aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea10735d-8043-410f-9b05-a6abcf040ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d56985-7dbe-4247-aaf2-dc13287e96af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ea966-3322-417f-87a7-37ec34ca2deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41573bfe-cc17-48de-b4b4-628a78afd495",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddda20b4-fd69-49ab-ace7-33a16b57d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333b4c34-9f44-4db6-a8f2-ca2a2478f62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7583ea1-470d-4ad2-a016-61986d0fc75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be4214a-9427-477e-8518-d2da9e824caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf8d28-b498-4a69-a3f5-96698cf2b9bd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8576b91d-61ac-4512-8948-9891e245bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e195b8-e876-4a40-adff-82966d67b008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bff754-1d41-4f68-9896-14c6c6355ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8782a1c-eb89-459d-ba1e-bb35c7c29bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ae1787-e49a-4003-bb26-209b73c3c78d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b8ff4-05ad-488c-adc1-c55d49b1043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a68b3a-f78a-4689-b49f-6e537403d69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0219a3a-4f6f-48b6-bb02-9f934bfb6306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "172df23a-cc19-41ef-baa6-750b95f99ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1384203-404c-4caf-8811-bffc7059c88c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c66e93-6245-4249-b9d5-4ec1367f339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0559d7d8-5c74-4027-b9ad-e64fd9c13170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793bf717-567f-4487-a194-ebd2e757a69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbda5ce-ef0b-48d9-838d-5a0a044c3b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3f325-786a-492a-9738-e0855ffcf362",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef890a56-aa61-42f4-af7b-5bd17188ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb6558c-4795-45a3-a047-c22885ee5230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b76570-23c7-4c66-bc6e-ef1b4d85e167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a853cd56-8541-4757-862c-8ff9200f46a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85640412-c8a1-4191-b56e-445c96031836",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54fb362-420f-4b1b-af6d-4027a05813e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b53079-6335-422c-a14e-597f1334df72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bca06-cfb1-4fbd-9c9d-f02f98c71054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de3ed558-f737-4334-a85a-042ba95046ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5ea79f-c206-461b-8a59-aa2edab52d3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08157977-35b5-4070-9921-385ed035e745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeb366c-a6ed-4b2b-aaff-8dda4d55fe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24131000-8a0c-4a4e-9a53-14d65eb6e06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2655c2f7-b126-4e98-85a5-41f87def0fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f44775-10d5-4084-8278-e4ca81a11525",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d07a5-2b90-406d-9a3a-b48f524fba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b01e07-07e2-430d-a382-afc25f6b4cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4af0e39-bd11-4215-a565-e57f5534a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4f6d8a-5bd6-4d49-bf17-a8ea09f1de0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd31d4a5-747c-407d-b242-cada77d460bf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b87ca7-e740-4a3c-bea4-e034e1522fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ffa3f7-06e2-414e-bc7f-dc16365a8ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b0276-34e4-449d-8279-a0eb9114698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c329c7db-8996-4f49-abec-8c96459132ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357eab3f-e5b7-4fba-a8f6-f7ff86073d57",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9814ca4-9a3c-4289-89e4-87f50a28a178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3262f7b3-b727-4a25-9f28-c6db08e06375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313aa739-8056-4f21-a7c9-afa672758d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c5e0a0-5d11-4583-8db1-7d4a22d83616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a73e78a-e4a8-4c89-a240-261641501c8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9fdad3-c6c9-4fe0-9461-ec0d895f025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a84e5f9-863b-478f-ae45-de87efc6beb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc8387-4b6f-444c-8ba5-7eea92f5789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8414f59f-3737-49f0-9ca9-356882906e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b7246-7fd3-4df6-bee4-8a7195895821",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a00f84-7984-4cb8-83ae-213db65b2d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf2bfd5-01b6-4da0-97bf-0ba6eb6115d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0903a282-c355-4c56-8e19-04a2b358ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cab168-ddc1-4667-8fe6-7d7d85c58df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507f1a2e-1f78-404c-89a4-34d17bf7194d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920928fb-c255-4929-867b-c5eceb978efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d34888-0adc-4502-aaaa-3b1d42961171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c0a4f3-9b56-4c2f-91c1-fba740dde274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd70d86-e473-40c9-b64b-af0c27921996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c457a11-4a5a-4036-a3f0-d350a9682d79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d03f9-a248-4337-a101-177bf1576c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bfb781-1a99-442a-b3c9-c818be754bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ddc74a-2b86-4a42-b059-9ac0d05a42d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8034ea1-ac93-4b75-a553-6d91b7bc9e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93023cc7-1d30-4d47-97e0-898dfb34d481",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d836ae8-ac22-4d77-9db9-628be6f7efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea80724-ce17-471c-99cb-81795424f86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7604ed-8683-4196-871f-061d391090f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "768a4d17-a09e-4171-aa1d-3def7e4f016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79645ea7-d17a-444d-a387-30fbee0a0705",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f15b78-ed6b-4f1b-aa6c-9458edba8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ac096d-e7d2-44b5-b144-53378923b62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb34d3f4-c69a-4e76-94c8-40ce636f0cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bedd3b-6af2-44fa-9257-477cd6c1dfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c4cd05-c3f0-4205-8dd9-317e481e9c85",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e711b4a-11e7-4a67-91db-8928a0d4b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff258942-54c4-4970-a018-0d18cc345839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc96f351-6f71-42b0-8d33-1fb82f7818de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ffec6f-512b-4996-aad9-7cb0a69c3c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824aad7d-b92f-4cd2-88dc-19a851d1113a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf393d9d-73b1-43b7-be0d-6d279c66ddb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce6fe38-b881-4002-b4d1-eee6150d1299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60770bc0-e0e3-4f6b-b082-c892b5666395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04589ca4-d94d-4912-813a-488a8681e77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51025188-01df-430e-a511-e9db8c13dda5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67ab31d-70fa-4c55-9072-925571e23316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c5a313-a4ab-4daa-a166-bb230b1179bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ece847-d597-4066-8af4-4ab5f534e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d783976c-5295-467c-9a96-d99c94919a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5271c7b5-153d-4e74-a91a-b31670b03be0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e66db3-8721-41e0-8596-2c88e64a8928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed343b5c-be04-4154-9321-defeee264a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17156804-cb69-4845-a69d-a45909be27fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5abc20-df24-4798-8361-31b6c7fcf80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46506615-e9e0-4a85-bfe8-1a08c5749acb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d81a193-3f77-4485-b96f-c0fca32054fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e0ac9a-9fd5-4c9b-b9cf-8f665894a8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d73e488-a790-42cb-82fe-e77fa78c0fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b487f8a9-39c4-4a5c-91a7-459d1a17858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cb6fdd-b0ec-499a-8306-578d877a24cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22051eaf-870a-43e5-ad33-e1874a8fb603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f69f81f-0bbf-4cd3-80c6-f0553ca1cfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dafa1c6-a9bf-4250-b567-c9d3f6d49c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50cec8d6-7d2d-48ff-b064-dea9ae394850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5138478b-927e-49bc-a662-6dda35daeeb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af581a5a-ce06-4e9e-b70a-3c748aa51e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325e62f8-0f89-489f-9ed8-f65e989dfb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d995c45-39f7-4b61-b5ed-6ec75120aac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f66839b0-6810-463a-a0db-61b0ca54d905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a172cb35-6fa3-4157-a32d-c816a88e58df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843e304f-9522-4af3-ba4b-9f5850adaf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb12ebf9-f6ec-4f14-9d78-5b3948d97a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d86c6a7-80c9-482a-a7c2-e7a111e849c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5238422f-bde2-4a9c-9b7a-998472eaab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638c4881-740b-4830-8133-ed8cfe16afb5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86608c33-e1c5-432e-966b-b2302551cd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf97d7a-5d27-472a-9c8a-daee56b740b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27de36d0-ac18-4774-9e45-f23c61c9dac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae4ab3d-c51e-46a0-953f-ce348de07751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c45aa02-cc89-44d5-89c5-8bfd095868ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9248ee75-6843-40d7-a87c-e235554ae3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070c06a4-1cad-4181-9684-8e164cf49d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4935f196-a2a3-4fbc-8999-040fa8844fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "40460000-4650-4d29-8479-17cedb947545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39377e3-0086-4627-8026-003e5a78ed7e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1361f6f3-78b2-4c64-b068-0a2d40e39c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f1e30-ddc5-4db4-ba5f-a89e5a8d6f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670e648-dd30-4494-a74b-95fb0c2c9467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb716942-65dc-441d-8174-c17f54438e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635822e4-af6c-4bb6-990e-00da89f6bffa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b87f1-fcd2-40c6-917c-c04b340fe14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e691501-1596-4069-94a9-2388639b1d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95aa7d8-1911-44fc-886e-2ad6212732bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa2f514-0500-4f70-be78-f8debbb71c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc78b36-4c81-466f-93bc-2f452ba044a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707a3bfb-b8de-4641-89d5-a42738e8ab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06a68f-a7d8-4b33-9666-e162f4e6c89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bd5895-5836-4a54-a158-d756964d1aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "531d496c-1601-4700-ae8f-079f82c93e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba392005-b95c-4526-9b64-68648e555bf1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f753c0-f8ea-4063-a7ee-1bf7efaf4032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba37b93-543f-4037-91c3-c82dba23148d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8fd60c-bcd2-4659-b8a6-86531d53cc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8e58f6-7a08-4593-a626-b10b6a48836c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedcc328-9cfc-4d5c-9236-bfa560efa2f5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3dc38b-2e4d-4d0a-8135-70a731795b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7591c412-284a-4f1c-957d-522a47ecb201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b48c3e-8007-4d6a-a443-dd756649433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420a296c-58f3-49e0-a92c-ca3bee11994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccbdd93-b0b8-478b-9bdd-db394219b92f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c63b5-d167-4348-af8b-80104da01ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a98452-4e09-44fa-ae34-b7d88663ea3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a97779d-cb4f-472f-a828-494f0cb05576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5291aa16-a149-4922-8d74-7833b61d389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08403ed5-b897-4ccf-b2cb-5ab9fc77fc26",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd56753e-83a6-44bb-a66e-3139f9244ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072035f9-7b4e-4b89-98ab-d00d64fc6c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ac72b1-1e14-48aa-a76f-fe3ebc8c6454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde80ed9-a6fe-4ea4-aebb-fe4a3c6ee2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a62eae-3232-455f-8795-eff56e38bc1d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4abc72c-718f-4c66-846b-ae09e091cf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8fb8ca-f128-4aad-bc6c-07386ee3f896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e5fff6-23d3-4c69-a5c9-8a92ac9f8446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eefaa6-e791-4086-a31d-81e530592136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccf617e-4984-4898-ae71-ecb0914e12be",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a6b23a-ea45-4f4a-9538-7176b8c9bf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd96337-d707-41f7-81f3-d704c2670aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129be551-eff6-420c-b9ac-eb6803f686ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e536262f-6aa7-4ed8-8db1-a320117b08c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07219aa2-f78d-444a-ae68-78534bc89b10",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9e93ef-f352-4d0d-9918-cc1b4871bad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b03cba-3775-43e5-a21e-1e16f94ae9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de922086-9130-4e5a-98e7-79ac2c7cd711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93f8b7-f838-447d-9e71-e11f8810af8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eb9c4b-2496-497a-bd15-1f03efa8149b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7c8e2c-98ca-4c76-a9cb-d39c4b68fffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ecd9e-4c11-4078-9d14-4637b5e53b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f1446-f91e-413b-a6a5-7752f2c60ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be35110-4aa1-4fec-a6d7-ae6aa58efc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ee82ec-68fb-413c-9c39-428ebb0e1e16",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa3595a-8493-4836-b709-108a8c787d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6685e3-d78b-484f-ab89-585332d8aada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46705942-f038-461f-890f-a6894f50f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0655c3-db68-4838-9476-6d696a4f1acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baff936e-1d48-4bfc-89e2-17b3060a1de9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061594ea-82e9-46b5-bb80-7f769f09677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f886ab0-0402-4d98-91c7-8c8d1dc3fb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25925b86-e7c2-458a-a9ad-4337f02e7598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b09b91-607b-4fe6-bb58-0f0326e890c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e899de7-f1fa-4b11-a421-cdcd370a6d45",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012ae51-2d50-48a8-9828-1afee093d711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f28b3d9-f15e-426b-9be9-d4c7c9d8b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9505cb59-df5e-470d-84e2-49ae37f2e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8512f745-524d-4985-9855-459a1b509b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a875f-bf7c-4fdc-8f7b-ea776aef37ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39e7fe4-1565-443b-867b-9d6a280842e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018de410-b958-403a-803c-72336485a61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7375c57e-6879-4073-a24c-b61465418d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4363f605-cfc5-44f3-9c86-afd1f1daa536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0ac574-8a61-41ac-a4af-79c188da3462",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc002e-81bd-4a1c-9e7e-87246bd24d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9c42b4-99f0-4c84-bca6-aca118c1aabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bf7685-9bb2-47eb-b8eb-704d532669e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9318080e-796f-40a0-949b-2d25820e32cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7c409c-846f-4e8e-85a3-4083432c35ff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c536e4f-3f96-4aea-b897-a1f55f471ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8aee84-64fb-4f3e-87d0-0f505ecd6087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a773eaa-64e3-4f33-bd7d-41aa83bbef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9a1a9b-4db3-4ac7-a286-48b4e2764b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447b029d-47ac-48af-818c-deb6a6e54b9f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d0dba-5200-4084-9cc6-757950b8de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a190556e-3c17-4f3f-9772-80fdc23126fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a72e8d-b447-4db2-ad11-dce49edf9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8183f27-3f7d-47af-87b3-1b9af7ae2b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ea7092-64a3-4660-a765-b0f1703b6602",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb102de-8f32-4cd8-ae8a-188c78e08661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21345d06-6d94-4f9b-a5b3-ae0551441d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26abfea8-7ebe-4f74-aa2d-712438d5f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0925806f-e9a6-49d0-9b2f-2e9981e055da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7f25f5-a77f-4d5f-b0cd-d8578f752ee9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262fe608-7987-4abe-ba83-4d53f0a16e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7296f592-d1b1-4cad-869b-c62fc64e62b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc08486-1ab9-48fe-a8d8-61cca26c69b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95bb81b-1cef-4666-bf2c-95ae7664f915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85925424-2d58-4c9e-bacd-f761b4595bf7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c0e0f8-37ca-41c7-8fd7-b74b3fc9a97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaba9f5-dcc1-4194-bffb-7354c376d37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb4d3a6-dc4b-4344-8a0a-0e8596246e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf07d71-9916-45da-aa26-23bd82b82e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f3daf1-b0c5-4012-83c3-a3deadce6cd6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cf3b6e-17e2-4fcf-98ec-7a13a2127f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a012c7-66b8-4649-abee-52ddb57cedf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52cb842-2f37-495c-94cd-88ef867b465e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7815b2d9-a0c7-4df4-b1b3-2427dee43d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409bb1b5-27d6-454a-a997-dbdc8e445a86",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bab2ce-b332-4247-bd8f-a8381373e58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceca412f-5b63-4473-89df-ec86d4e9f5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a59ccf-3298-40f5-af85-4d4445ef6810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b3f8b6-6681-4f28-b1e0-b4b0791770e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5679ea-3ee7-442f-a663-15e30108333c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7871adf7-46a6-4eac-9f6d-52139b794cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21b1873-b886-49e6-a3e4-df0153d2eab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dc429b-225e-4805-a777-ef527cef253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "895aa714-5491-4514-ab1a-22f17b561c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4d7df9-339d-4ac8-ab4e-9418a5848f4b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a80e6a4-1024-401c-83d9-2b6b66f2fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2763ec22-d75f-4e49-81ee-fd19ae9f0af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613bdbf8-5b6b-4682-a883-2c12e0f230f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77ec2200-bd5b-4e58-94c7-4bcfeb99dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7c8f2f-e5aa-4dff-8701-a2283de08e38",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bced86-f12b-4491-8fc4-f8f78674da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ce426a-0522-4d97-a3e2-d1771d479b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bea61cf-88f5-4164-a14b-49b34d54f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e1e581-49ab-4a47-9ce9-56236f51ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed98c41-ae90-4408-9982-d09b34cf8c7f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa0cc92-3ada-4077-84ce-d9b2e00edaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e48de7b-8cbe-4b82-b8ff-9601d3a2834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd776de2-d58c-499e-9154-2451f4ff290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a5ad5-4021-4d39-bd61-f215145940b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5db2547-709e-42a2-8b56-949ef47b1710",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f72a6e-512a-41bc-8c8a-b15cd638d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2488f1b9-f3ec-41c5-a080-833661aaf8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27811ed3-b298-4568-b36f-c1c0ee5dbf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8715762a-b3a3-4993-af21-98a3ec0b132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38857c8-b38f-4041-b0a7-28b373a08999",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1b0380-82af-44ae-8593-72ddae4eefdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2380b0-0a35-41a0-b50a-5fcb417efc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11acd2bc-5708-4413-bd06-85660360c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98db8ec-7ce2-4818-9ad0-66e8db2b9aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9508b51-5efe-46f1-9998-7c46432ca649",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d3bad2-7c3b-4f7a-8ee6-566cd232a48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c9853f9-ce0e-4ce1-814e-2409c299a162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1236d624-bc0a-4a04-b4b4-329487ce9252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c58033-63ce-4deb-a92e-ac2aac3ac08d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53dddcc6-111c-4190-9e3d-e4611b68da53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "341c110f-4cf2-4570-b64f-f38c28adc5a8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa8b10-b004-4f3d-a1ff-bf0584405068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1bb6772-8eb5-4d82-a06c-235aaf847b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424b4843-1034-4bb0-87cf-6b856eb99182",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5d0b879-aae3-4110-ab29-c0664c7e5a7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7927b7c5-1924-4bac-bb1d-67fb49d7bbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff484872-b84c-4fc8-9d55-e1a5557686c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd50135-be7b-4c84-b16e-4af8dd486255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11f0fbd3-c016-425d-a0aa-0926a540e016"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df01feae-d90e-4f9c-ac05-306a9a50b132",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bde072f-fc15-437c-877c-4c2ecc5c6a3b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f16d4025-ceeb-413a-a7c2-ca1f4d0dc95f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d2bf907-fd48-492b-9c18-34c6141bca34"
                }
              }
            ]
          },
          {
            "id": "0e5554b5-56be-498e-bac5-d9f609fe2cec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e6f64ba-790f-441f-8853-dab5d3a8aaa4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "98a4b001-0bb0-4f3f-b369-01b8d482baf8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533cb70b-c177-4c63-bc89-75c66277458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c695cfb4-d47d-4625-b8b2-aa57edabd8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946c3cce-6618-4e73-a2b1-b57001103e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e29aa1-f1ee-45ec-8de8-4a8fe5548adf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7f552b2-fd32-410d-a7e6-85b2a6f04f1f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b51c5113-bcb4-4be2-b3ee-3c294421419d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9e3e0b0-bbc8-4535-af56-3d8c49a8e1b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9628b947-5df5-4ce8-8233-6c69eea7a018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbf5ac88-d403-40b6-b8a4-a06e588b6c23"
                    }
                  }
                ]
              },
              {
                "id": "3dbc12c0-c64e-41e4-9850-2d58b515553e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cacd4d88-6e40-4e2a-bce7-1170365aae22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2d5d686-dd9d-476a-86b0-4a87c4864eef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3efc16f3-ed80-4cb0-92e2-e048b231e1e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3af052b2-8757-4cab-81e1-fcbc46ad0b53"
                    }
                  }
                ]
              },
              {
                "id": "20998867-df96-49d0-8ce0-98bf764499dd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d3b1a9b-1f6c-4547-9129-619e883a67df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69b08297-38a1-47d3-af58-0f12ea87a5ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e53d27-9219-4721-9b1d-3ac721108379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cec46e18-de5b-499f-8d19-d00bd3d4e960"
                    }
                  }
                ]
              },
              {
                "id": "3169c0fa-0b66-418c-8468-6dcf9aaf3ebf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ccaa434-1106-4f92-9fd5-e4c2339bb772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcc1c2d9-ca2f-43ca-865d-c18c44d4bc52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9d1a151-85d5-41a9-a5f3-94f42d70c3f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af3282f2-ec1c-4d8f-80ee-c512f54fc455"
                    }
                  }
                ]
              },
              {
                "id": "aee689e4-717f-4b29-a82a-4d8f80197f7c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a79bf65-9538-4600-ba64-39c756410d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9375d0f-7f1b-4f67-9e69-d22f8de52840"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d439e7-2b99-4307-92b1-3f4b57e327c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cd8c35b2-c0ee-4db2-abca-7cf3c66c7ba3"
                    }
                  }
                ]
              },
              {
                "id": "8fbeef15-8cd4-4ba9-aeb4-c47e33cb84e4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "644a3ae8-de2d-4bde-afce-b952eb51dd98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "febbb01d-2254-4f59-bd70-62ca581da2a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86f78685-cb3c-41c7-ae38-fa165908a0a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6a16e25-ab68-4fd2-9a23-1f8ff6f94c7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db102cad-e868-4e8b-a307-b2c8dd5ef41d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fbddb5e-5c2c-4aad-97eb-8971e90bf1ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b21aca8-a929-4496-a9f2-d5301a0dda45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e34485ce-449e-407f-82d1-3afd8a3f6cf8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "781bfdba-3d91-40c4-95d8-d1181676ef54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c279e764-ee07-4bab-a25d-85eabd0fb2ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27911877-2bec-465d-87bf-deb46c3776a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efabebc9-efcd-43ee-8fd2-6466255bafeb"
            }
          }
        ]
      },
      {
        "id": "2f80ef73-8344-4396-99ae-a847b32d51ef",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "91f419d6-c913-47f8-84a7-f307a8b3c051",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed4efbdf-8abb-4c5f-bacd-dfd01fe8b0a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d78bf61-9e94-4d3e-851c-875e2896dd33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e33441f-cc0c-4e16-b912-e4873b88ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91b17ee-8be7-4e0b-9fc2-3d6faecf704a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38970cf2-d6ce-451e-adc6-4bd496926feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0439d0f-63a6-4970-a3a5-58d2f97a5c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5956ce-460c-4bcc-9d7c-44c02a44553d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4644fae2-596d-4775-8353-a96a5ced55dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5aad20-4abd-4be2-82fe-ba8d9433658a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b740dee8-89c5-4235-b321-6ae4e370540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c76935a-bc7a-4ef3-9214-9811a567a35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cce0f7-93c8-4860-9ea3-43faefdaeb8d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafa16eb-6679-4ecf-a589-f82c26722d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed88f6b4-e8e7-4ec5-a792-9480252d221f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057db81-122d-40e1-b8f8-9f2dd35e723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21a8572-5da5-4080-95ea-2c18bc7a4481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3289f9a2-7c2c-4d2a-8b79-1902f023e4f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281f6111-4c7a-4482-8b94-98f68371f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cb0989-7a00-465a-9f03-1886fb3a4902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6348ccd-b9cb-483f-8352-1c36b9e5e4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03625272-0e2e-4ab7-962a-14e4bbe281c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73486bda-2707-4c40-9c66-077117fb9c3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a16408f-dbde-4a5b-a460-575864342ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340e4061-ff53-462f-887c-feb3876094e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b4aa99-dd40-4d8c-a654-a0adc3f21ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d072eb2-7aa6-4ede-a0ef-2ff96f8ac3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef482110-b0d6-42fe-836e-7d87796ffbc0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ace1a81-a0b8-44a6-8b5c-4587ab9adae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3424a63e-73c3-47b6-9a6a-b937ea5c8c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacd1dca-e851-4f2e-b1a5-ebc92abf22f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be7d56ae-ee8f-478f-acc3-41ae144f53fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2660efd9-f110-4cd1-a6f9-8bc17b91c4f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71361149-5149-4cf0-9fb7-8cbed460730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abe8c70-9c58-4477-bcc2-0af6cd97d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5c146-aacf-4bb1-823b-63220e965e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1661c410-1510-4fac-bf74-8413faeee6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6d20ef-935c-4171-a125-2b8b2873c83d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803cabe7-ba22-47cf-aa79-a74455274da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3705f336-b842-4f5f-8d43-c7bb6359e756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01b5bb7-5b56-4424-93c9-ca4e02bfa02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0324ca4-f168-41e2-a7d5-b0a87cdf2254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e620a4fb-904a-4da6-8661-918dfed71eaf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef93dc6-86bd-4c06-9973-1b1b19af5564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bce811-6e21-424e-985d-36119b49160b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7d9235-5930-4967-83fe-4185feef7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a4d1ba-bec7-41c8-ac2e-0859688e4039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7046683c-d071-4700-a0ec-e7fcc3f62ac1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d552c3a3-f44b-4711-914c-cfe60dfe5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c44833-82c1-4045-ae19-ded4f5f79ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03fa793-5761-426b-b9c4-9ace33e82484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "314ff67a-baf1-4b2c-b25d-d68e10f03350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535185d2-be63-4f10-924d-d254a55561a2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276f9d41-2ee0-43d3-819a-f52480d19413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ae0556-2df8-44dd-92d8-682ff46b5845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532f1528-8159-47f0-91f4-020917449306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9d17fc-20bb-4019-b333-5d1edfbfd265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50719ee3-64b0-40ce-a31f-a510cb012032",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba21274-e175-4ff2-9305-b6e3d79d9ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b724a-73b7-4369-9a5b-fd4657ecdfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3495657a-9242-49dd-9a5b-65c70279fa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "beee152b-a287-4c00-9a9a-d64d39046f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc23a0fc-5398-4970-9d33-2482a86e6af4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477818f0-8292-47c9-8a41-c7aeea554dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b5a54-39f2-4b74-8608-b5d16c7c5863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379eac20-fdac-43dd-ab60-aa39a21d2656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d71287-b45a-465e-bbe4-27ff4df8f15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c723697-9c81-4c8b-a1ad-530a8e6d1fc4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0706448-544e-4f6d-b0ad-dce8f0d69940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d308be-ffc5-48dc-9c7d-0d46675be158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9395e6-1dfb-4289-9184-6cde9d674bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5de020b-f4d9-4f02-ba23-5202586af5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be705d35-18ca-4f0a-84ae-f723ec19cf12",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc9a66-d73c-4573-a06c-f8a3b15abd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bff13bb-637c-40ab-8e49-67a3f20f50f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73619c7-df08-481a-ae3d-33274a8d6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba16abf-7940-4d8b-8bfe-544315133d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55841d0-95a4-40e6-b77b-5d42949b081b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6732b69a-75fb-47a8-a3b2-057d85e631f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2351b20-94eb-4edb-a758-0716218d3805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c47d2a-0844-45cc-9317-22236f0a9852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80d8121-c8c2-4a63-8092-b3a4587da5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383fe5b1-3466-49b4-97f4-202cb6f0f327",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc51dda-f400-469a-9209-39845443dae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b17471-8d4b-49fe-954e-ebd7d068e1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c91130-0655-4d7a-891d-796e30d901ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc23a02-bbd7-4a43-9657-7479ac0b5847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ac4f03-4b78-4854-a40d-6574a683d862",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9ea1f4-8512-49ef-8a67-793e8517fbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4c3ca-01bc-4934-bba6-0560e74d5362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab67cc4-9b6b-4b62-bbf9-fe6c39622b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7c400e-9756-409f-8b7e-4bf67615f8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4a9c96-aa4b-4a72-92a6-44cbe834b74b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2615e5a6-e4e7-4fc7-908b-afbbeac0784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6323565e-7f0a-4b85-877f-84336f4cf2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80eaf11-3022-47cb-a55c-733fc7f557f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "905c0b9a-475a-43cb-993a-e43380f0dbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d0cdb-0200-40b3-be0b-e9e6a1ea3c47",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f52011d-3248-4592-9227-8904144c035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b8ad60-16d2-4f0e-8b05-8b8cdfcc3d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c7e97d-185c-4b44-a82c-7857ef947da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93845a0e-1674-4630-9500-0f707f2bc22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4672514e-c351-4dfe-b2a6-3ce3d3ff9da3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755f4a92-0a00-4ee8-a0c6-4a422cfac590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeccbae1-8c8b-4997-b46d-958bf3e1bf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fded8573-d967-42a1-80f8-76d778afd827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23a6203-5e50-4aba-b47e-e97de6209083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b824f-f073-4035-9296-a41b9aa9b1a3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662a85c1-9920-437c-890a-f1ed45e3a6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd9e066-47da-4a0b-9be8-be8cf2af10a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f466d28a-488a-48c4-ba5a-311dd8697144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf8481-d7b5-4acf-9191-992618749e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043464a-cfea-47c0-a4ec-3f3742f86751",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f95e75-c451-4d8f-8336-9d4da70b6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49116898-d1c7-4c00-8769-8114d823ee17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e04ef24-c803-4707-a07e-5d0ca021af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0edb5f-c574-4afc-9171-a95a104fbc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a5601f-5714-4318-b208-ab0563536cec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db58c4a2-510d-4816-9153-6c941e4a03a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c322bf5-d9ea-4343-964d-fe04abcc14c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc66f8d8-a169-48af-841d-ab63f0dc67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786cf424-121b-46ae-973d-faf6ed10686c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1d8f2-4bb7-454a-b987-7dd9d2e1a0b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d6051b-f2a3-4785-964f-213ba448f739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9baf6de-7a7c-4d0e-a8ce-cbe085f25de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8ad09-b71e-421d-bdbf-3c1518e89017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2adaef3-e5c6-466a-afc1-16a000286291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb4f69e-9454-41b5-a0fa-2c4a9831bd6a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e938e67-e0d9-4645-b1f2-f4bf1138792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aaaf52-65fa-49a9-ba5f-76c835e7d08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7998a5ee-4107-485b-a7a8-4e24147df48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af5fc72-c83c-4677-a812-06533c650368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170e396e-7412-4e76-9975-0e3f8d9bab26",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7018dfd5-dd3a-43ae-ba58-53c65bf98ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b574cc6b-fd75-482b-a838-629281c408e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efc079a-0363-4729-ad68-d9cc51466176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ab56e5-5bad-4124-995a-286d81a3f3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880ffefa-fd2c-46df-b508-333820ae22f5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c126a4-811a-466a-badb-ea5afb8028e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae3d055-52cd-4408-bf0b-785788ae7240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da3e5ac-f49f-4788-b67e-f7259488d414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac042765-8c21-4411-95d6-9087acd4f939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d2a53-6eb1-4312-9f62-ec39263c24b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f902d0-5df4-481f-8d7e-fc30a39c2a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cff843-a258-4738-887c-1907b3b43ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ace59e-0f57-4bac-bde7-e61631bfdfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a46ef89-ee9d-4e8f-95f2-f092ca4fdb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2c639d-fcbe-4d7c-8b28-bdd73819a9e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7c625f-a24b-4197-9b76-8c53648bed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d264e1-1f63-4c14-b09e-ebd84403b467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb8a9ab-a67c-4c18-9ed3-8672f65f4e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31338ea9-2cae-453d-96d7-92d590c8ec6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec9a962-bf7f-472a-825e-ad104feeb202",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56570765-83ab-4068-b148-29ad08169faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4656a36d-8c42-4ddd-ba71-6ba57227a1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131dc683-fe62-47c8-8daa-b9588b66e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a16d861-263a-40ca-a804-e016778e33da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda89d6-4d60-4048-877c-0c8e1f18b1ce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a9be56-fb3d-442a-b5f1-ba692cdbb7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62910f9-5eb6-402d-9780-51ee3f4b003c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458ade5e-7457-431c-b6af-4e7b727fdf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57fff9a7-2556-4729-85af-ab6b4f061b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5db7e12-14fc-4bc0-9e00-83108813c7da",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d10b17-4e5f-4a1b-b5a7-1adc825cc428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0847da97-a579-4e3f-81e2-666c4a157eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e171d3cb-6dae-4d6a-99f3-4e720af58d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5835a50-b8d8-4a01-8298-97cfdcff2d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11159fc9-b3a1-4b69-b5e8-f9a6ac35fe30",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad14fff-ccfd-426f-b9ca-03907f7285d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cee2aea-a952-48a8-94c7-b6129ba851b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d835753-e5fc-468d-848f-9cc6060d700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59963176-d91d-4f65-8089-9eb9ab547782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38cf18-4550-40eb-af5e-b74f1c8c583e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2368b1-4977-4ecd-ac8b-db4f7c2829e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4058463-f889-41a2-b0f9-e1de4a1f54af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb73fb2-6a8a-46fd-b288-2afd69a95eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "820bcc35-fc70-4a02-9092-2de790c1def1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2eecb4-d3e6-454f-bd62-36f52d7963f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a843a62-338d-402d-9064-ce16a57d5289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ef308-3b54-422c-97ab-54a4f3d07acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83628d8e-9eb5-469f-a805-b542b32141a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61615d40-f4ca-4072-83e7-0790d0841037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fb73b5-0a9a-4a5d-a351-07ad329d3b99",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f12c2-a495-4b62-9d4c-935d18d9952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe1d329-4fed-4516-8c5a-55a92bfc8721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707a716e-2261-4dae-b8a5-d426fdd05b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b69a70-dd2e-411c-a4fd-e0a0b8fe21dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "191dcbfb-3e07-4d18-9379-f303e2d97c3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1c01c91-50af-4bdf-b635-5e84236d713d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e9d48-505f-4fb1-97ac-d37efe6a5c45",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcfb44b-c7e3-451a-98aa-818907bb2a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c491e64a-7707-4de5-a29d-b3ac5853e320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5055cda1-6c76-40e7-be42-e95219d93189"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f78a83e-f5af-4cdb-a173-9dfc91ecc9fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3fb3205-aa12-432c-aa58-a31047107946"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f95a70ea-e7f7-4578-ad50-f2104c5e3ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad56437d-a159-4fdd-85af-d81aca1e42a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cd945b3-e805-4bfd-b7f7-11762bf48a78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b76c4c4-8a41-447f-80f2-8736e400a792"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d185972-e28c-4454-90a8-6c8f364043f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c719a25-da6a-4451-ad92-634bde2bc643"
            }
          }
        ]
      },
      {
        "id": "abff1a05-1bcb-4cfd-8c71-424526571121",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5ea44f27-eac7-43f3-8e9b-ad6dc4d294f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e397bf96-a340-44b5-9645-7b95a0821f2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4bfcf75-63b7-435e-b023-7556737b7e34",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b728e3e-e2a4-4921-bfd0-191f565d68e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696d4080-227a-4b58-90d7-3355c5fc1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f7368-5835-4033-a36b-aef76a81fc9f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0369c96-6278-4323-bb30-840d35403b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e1d749-5b1d-408f-ac98-dd99fae09abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742102c7-fe3f-4994-aa88-013483623a5f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62030992-e997-40fc-b2fd-2685c15c18e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1896e1b5-6ef8-43a1-8d7a-125c15f77ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bf5a25-4610-45b3-bdee-d14039227e67",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa43cce-6468-4843-b6ea-6520761c99cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a10b48b-ad44-4b6b-8c8b-bd7d0244d15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7437b00-134b-4b43-8010-ceef88446208",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb41e72-a876-4a09-9c04-208510d75239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f340918-66f8-4229-9b16-9fa016b32272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe82ac95-65f4-46b8-b9e6-654174ba8ed5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b3e54c-a884-4f7e-aae5-e8bab0e7bf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232fac92-9cd1-4fdf-9d9e-c21499b64ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c454bc05-fb2e-45fa-8d4e-6bcd72195ddf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb281ce-b388-483a-b02d-c026cdfe509c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5029198-6c46-4771-a436-fa67158d1894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c41bdd1-e93e-4278-a97a-7b2152a75289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3e32c0-5b56-43ec-84f3-375c52a613c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e92cddd-df65-4fcb-be27-73f4fdd1ebdb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b8ec77-52fe-4d07-99e1-b1702f7da804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2d7d9d-65d0-48d7-b22f-ca829874d9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead532d2-c491-43da-81c0-dd1fb94d87d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8bf31b-4b1c-49dc-b718-decdf4e89580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf03478-7e67-4bce-8863-8244945adbd0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c63a2e-0221-4ebd-b47e-09e98f60d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75009d36-882d-471f-8151-362d13dbafca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d891a55c-21ed-4d35-b70a-df9e31eea279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecafa8a-e581-419c-ac3b-209ea14e8239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df24d038-20a4-4c42-bb59-20f7bfde5f5c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9a7a7-7e82-457d-b83b-6fd9a7823e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99828a4a-12b5-4a32-afcc-58696d892329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc124d75-9630-4c73-97d3-8bfb138fba35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ba61bd-71dd-4e1c-b1ec-6b410a50ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9400e7-55ca-4265-9adb-08f53e7ce54b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c339166-4254-4376-b193-dbbfe4d8548e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552afff8-2d07-4a60-ace3-b7f8ef2642ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e933f12-3f18-4f85-a466-0c65438629fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78849dfa-6091-4a44-bd5f-48468cc8f9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a856274-e102-4bc2-9214-c4ca45de32a3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03acb7eb-7f97-4e57-a98a-55418173c137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8a8808-1fea-4e3c-b77f-5facbc3369ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a27a53-a1a0-4a3c-9a9f-fcb1429a7937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c69c9ff-9a85-46f7-a23c-233b7aaf6454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a088be93-60d3-4dfe-9146-6eb4fd11f8b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16751271-3dea-49a0-beb9-73183512c389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e4ab11-f508-46a8-af60-e81621e968be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a119809c-7b86-4d95-84c4-0d0d3fdfe57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce753a8a-449f-4d0e-856f-cc947a30f249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac6b4b-e0ab-4056-9c20-3b1740192cd5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab183a0-99d7-4349-9379-c473e68145b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d9cbea-9a65-435a-ab70-7a64064a651e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd984f-e9b0-48f1-ae10-55ec0758fb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc101f28-86c1-4681-a390-8c2eb4cc89d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aad23f6-5ff4-4852-a8de-e28fe4a830c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afb2fd5-bc4a-43fe-a553-f28ce9c6164f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c67e86-8e28-4a6b-81d1-efd3152f1649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc069f19-fa17-4f30-b708-5f0f8cb22edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206ace0e-278f-4d57-a56d-bd56418b74fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20122cfa-487b-403a-b66c-74641d2e50e2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7067fbfe-af37-4fb4-9602-9bcadd37c74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e35016-b2cd-43fd-a933-faed4b38814e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2429b084-02e9-4f23-9b40-bff1a98f1a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b97e1c5-60f0-460b-99cd-52d938a2200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde9ea96-c29f-42fb-a8eb-575148c566a0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff722ebc-e8a7-407e-b2b6-a94bdb80d16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1258be06-dbdf-4a7b-8994-aae0c616f86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b35e6-237b-4760-94fd-f262d3e5e3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bcd955-7314-436e-984b-f430323a6a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a28c323-4fd5-4945-b573-162beb24846c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f736d-0fba-4b38-b2a5-80a923453bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ebc4e4-55d2-4a5b-b726-2f537457a406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf910b0-7b5e-46ad-a6e8-784bff8699d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a5438-4dfd-4c68-ae83-683ac9da0d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a088fd-dc60-4915-9ca2-1afe79787f73",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26b2ef7-017b-40f0-a0ef-8fab27cabe38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cc14e5-6cd2-465d-9c71-8d9cde09d757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94a628c-2b95-4a94-b9c1-fef59b4597b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778a6e9e-1485-4d3e-b8f7-81efe6b574ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51970e7d-5b6a-4d5a-be60-cdc34e4baa14",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956eeb48-4160-4e2a-bc4a-b81a6e7246d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d889aa64-b926-4a67-8ac2-c36d9fd4c0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed63754c-3189-43e7-9f72-eb448ea0b942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b308d5e-e1bc-4f6b-af05-d3573a9aa039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2811ac12-9619-49a4-a7f6-abc42221012a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d49c39-b834-4bbb-9809-0b422f68641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047ae7bf-e067-4c8a-8fe9-3a4b8b1b86ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b2300d-2d5f-491f-9d10-b25c714362b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d0225e-4320-48f9-a1b8-03e5df9ddc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8509ec-8ddf-4baa-aab0-8602f9d18d63",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9318529d-29ab-433b-9428-197f9f12b7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a389606e-4c46-4aec-9a21-132316098083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accd811a-121e-42ad-b1c0-3886ce9854a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7058a30b-0f3b-48ab-9e35-adc6ebbf457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d430325f-1f9e-4562-bf7d-d6d267940fce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ead5fa7-467d-43b1-8742-f7c47f3e7613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8216dc7f-8e61-4334-9ccd-f3b474f16287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75357241-4cd9-4c85-baea-4756db9cd477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b98096-4e0e-4cac-900f-5b86a328e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4144ed40-4e4b-432b-8dba-765793ced29f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9a23c1-a594-4bda-8d67-f73a3a539999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa1a860-1279-48ed-9226-104821b2de65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a626e-ab51-4880-8406-bbe2491c94df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2072b73-591d-4648-ac89-4b0d43a377ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104bcf64-6e47-4635-8a74-88b77a01edef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24545db-206f-4fc1-ad22-33b8d726b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9a7579-1009-4d34-bb79-1856a721e107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a57cd36-fe84-4d41-962c-8ef5f3892662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ca308d-4f5d-4e7f-9687-7e7661098f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c0ad3d-5ab4-43bc-9f25-5cd81633693b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c320f696-9efc-466a-9a93-59805c857a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47c2421-0a4c-4e74-871a-4a9ab735fb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a1049f-3651-4447-95fb-6cefaedd93a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e333bd-d266-405c-8f6d-777b5dda0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965950a1-7304-4694-bb9b-be8f0c0d298f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4860ed-0ef1-41e1-a6b2-1dea684e3442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83adc86b-4bd5-4589-93bd-e89230e3c188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f571f4f-f6f9-4795-b2c4-128e9cca6ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844a4e6b-4ba0-4d6d-ab71-f868fccff07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16f0f4d-1185-4bd5-aecf-bfeb00a907d6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e262f8-5a7d-4dd4-ac26-b99ddaec1754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0655c6-0231-4278-9d2b-778410e0645f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a18784-4331-4b28-a76a-ccd7061e9523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ade4700-d8cb-4d87-bfb3-105bdcb0f94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c510a5a5-bcf9-46e7-9f3c-ca0f5f245ce4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed626431-bfb9-4451-95cf-fe3d235063de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ec1db5-97bd-40cb-9c00-766da8e2fe98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e415ede1-006e-4b85-9fa7-11c66e877625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976f8940-119d-43a7-9fdc-0aae4a3f1306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313df69-99ee-4c07-82ff-a282f86b6679",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c101066-b5dc-459d-9ee8-cc7c3455358e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94683691-d396-41e0-a5e6-e5a1721e0c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e081113c-f959-4072-8337-ebddbce917a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18eed9e-64bb-4b06-b0b0-16d000af2a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e64d79-efd1-4aae-8357-c2adbc40bdd7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c121b6-9166-42e8-b7dc-ab15ac846d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbaa985-51a1-45dc-b762-5b100ce73b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bf6575-2f6e-4963-81e8-178570aeb309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f327bf-cb1c-4fc8-9af7-e3807e72ad1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ae326e-912e-498c-9f62-a757801436e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2a664a-bb2a-4a92-a72f-4c79eb9ef77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1c52fa-a145-42a4-8738-d5bc37523f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7294dc64-8bdf-4371-9b6f-0f0c786346d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e015de09-5e14-4a78-93a4-b3479de89c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157f11d-9bec-48f2-b9b2-d2231d2a24dd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071b3137-d15b-4e5d-b65f-fc4f466f26c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e270e5d-cfb7-401a-b1f1-4e1119c02484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a406a9e-5ebc-43e4-b419-d3a9c7350774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c822c16-6256-4078-b6a0-5910330dc06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad9d12f-88d6-4b16-82d9-3a5b8efae464",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327c3fbd-9f72-4117-9b08-06477a59b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81244565-205a-446d-af5d-1e330de44169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9778177-ee1f-4b61-8496-ebca504be256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dbb4c2-3b24-48bd-8ba4-f3b583537e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3e4f3c-f891-423e-8ae4-b7d15010acc5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4beda2-e18b-46a6-8021-9d4202fa613a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8f2a6e-cc59-422b-8d99-f0a7e83fe5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2877d-8f5b-4eeb-aad6-453f64824cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1798c4-8b6a-4040-9c52-15b16b2e7e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a36b56-1c6a-4ad4-bd41-3fc54e12486c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06c087e-35c0-4af9-a23f-99bf1a9d20f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a413c3cc-6271-4a88-8cdd-5c456e5b79de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b8ee50-5cfb-4c4b-b7fe-d41d20fbd199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e7556-6533-480f-85d4-dabdb2c6890d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a181f8b9-f4cd-4cca-97ac-e87b6ca390f9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c37fce4-80d3-41f2-8422-fc8391621245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887296c1-e893-4f34-80db-8a8ea4e19da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6260c-d46b-4f1e-8c10-e2feed8c6eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5811366b-96d5-4d17-a659-baf033724e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9024117-d6dd-4f7a-95fa-dedb91d79800",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80caaa16-02a5-402f-969d-66559d0a1c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2596d7ea-e06d-43d9-8ac6-60cf79d8a8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb21056-8815-4d9f-a41b-a5aa7628da6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd1b8fa-da53-4008-b761-e7181d162b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c38bf2b-1af2-4073-b835-0ccf583dc0d8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8d502c-352f-4b6f-bb63-0efd31bac3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2374afa-9fe7-4ada-89db-c64033e4100b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044c3361-77f0-4ae1-a178-555452a66341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ac718-baf7-4c69-a730-0f319369cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45522642-1e34-471a-8ffd-6e22a72ba818",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51516b66-f3ab-421a-bfc9-cff58f0bded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d41f62-d4db-468c-bad5-bd52539a5787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25e8e42-f428-4ac1-86cc-91b3fa41e434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf93f9a-020c-49e8-9af3-0a9fc924e263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d8435-723b-4cd3-b710-875c94895388",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f925524b-9eac-4fca-b814-12d4a27c2770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6687e713-c8b8-4a15-8f9e-01b00da79af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20e033f-14ca-4482-9da0-b45389f0f9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b36d192-2c23-4313-928d-3ddf24d2aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8664817a-e480-4e75-a0b8-c09b7a379d1f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fd9f7e-da08-4586-89d8-ab3a601e3854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e5dff9-a7e5-42d6-8fa7-411b4a6f4f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff44ccc-2ae4-455c-959a-03f9ce050c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3c6a50-7158-46f2-92e2-10a56c69b960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0b0f74-15b5-4326-b529-2b33b11b92d1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ad7263-f22c-4c3b-b2b3-77999e570bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43f1adc-8a2e-4744-8c73-2130b7cf017d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38595c11-0535-42e6-bfc7-f4ce2c81d1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cb4370-37f2-44b1-8f17-c250aed9378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f7af6-c2df-45d2-88fc-13dcee98fe75",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55520e85-f5b2-4d0c-84e4-c8933409edb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a72402f-00cc-4950-8dc5-4c39183bd5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa32a6e-45e8-400d-92dc-21a3041f99c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9784bb58-3985-4e9d-9d79-71f7e8d0ed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a5f442-89ae-48bf-9770-ff8cadc0ec7f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8605a1b5-60cf-400d-b9a5-fecedc59e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa7d245-ff68-4d3e-ae06-c2771a315250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86e50cb-a268-45e9-b038-db3d39a804db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2948bb-b5f9-4153-9c58-f42504b3cd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d70c2ae-7ac6-470b-b104-caea240057f7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a0b927-2ef2-4511-bb30-7d262c97d8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9707f57-1b02-4bc0-896d-882e3e251d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13863971-a1cc-4bc6-8793-bd9bde598b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a893268-76a8-493f-84c7-b0bacd599928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc043c5-9788-41b8-8ef8-b6aabe0981a4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee0844c-4af3-46c9-beb0-61a23265dde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f38c9c-063f-4cb8-8490-dfabd3a9a6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0d69a-6725-4921-a368-d051385031d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ef16e7-88e3-446c-a097-89ccd8173c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c363a50-759b-457d-a1fc-8a2f6fe8aa8f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b5d22-6e8a-486a-8654-ca78a63a16c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3e2aa9-c012-4b83-8bd9-e3a321d46328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888e4755-a0ae-4cfc-bbc1-8cf368f23850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b14edc8-68e7-4f25-a13b-2cd8019c926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ff636b-76b8-4229-aaa2-fd3ed2d5e335",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361fc2d6-ce11-4848-bfe2-91b0be0fa906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687f72de-0b92-4380-8fc0-d9809b2f55f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938edab8-75a8-40c7-bf08-10ebd98d3141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd9c026-4b3c-4df5-a4fe-db6b92938950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51341041-b4fc-409f-925f-30671fe44dbf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48e3fb5-e170-4b0f-87a1-557c3f549540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e09f1e-532c-40db-aa0b-76abea2e8fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749073ea-1de9-444a-b7f6-074db843abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab2971c-88c6-47f6-8b56-1732d691d143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323cd448-f817-4d74-af17-dbd5f503f88e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53c9852-15a2-4438-854e-75162a59f1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92c5cdb-a413-42f6-af0c-e942b92be4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c424852-5efa-4497-9aab-aece535d8762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65687775-4ac8-4b21-9c9a-851c294f85d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bdf5ce-2a28-4f4a-89dc-d089d211e453",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c323a1fa-96cd-4222-88f7-84da135dff0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b04e103-f7b0-4c83-bb79-26c4e378d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d12ce2-92f3-4c0b-a266-4b797c48726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab9b2c1-791e-4dea-a75e-e9730d5f9070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6967bc60-f4af-4fa1-a27d-df13fb3be40e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f18f46-491e-47e3-9866-e9901f75a022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183db639-80c0-40d7-b3fa-cfc77d7ccef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2c476c-4d89-42f3-a8a1-dd1c0fba8814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44662e1e-832b-4fae-8a4b-9d7cf846e4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cc5457-03b3-4d1f-b418-c7fae778d2f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed76975b-5c5d-4336-9a9e-e417a9bd492f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c2f08d-6369-4648-be33-11473b36e521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbffc115-b661-4edb-93b6-9f266c221822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad0221f-63a0-4392-aa95-25263417ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c6381e-dcd4-4bab-916c-70a968b2d504",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e53189-1255-49e3-a994-b8f45964df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb35222-37d2-4668-b777-4bd9845fa3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7fe9af-3a68-4118-9278-388a164519c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b5d5c-2e2e-4336-996b-52fe43b0f1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404edcea-dab0-4145-9a92-bf5605766ae1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c406c9-8450-4ab8-8b01-d3a32e598c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4868bbc0-f439-45e9-9179-700fae8dc230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ce505b-7707-48bf-a62e-e5feb3aad2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b6f2a1-7dad-4a80-8b4a-f37da82b3420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3afd95-8010-4732-9399-ee764f17a8a6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbe864a-1f3b-4844-a06b-6c230e104662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa64e18e-e7b7-4631-aeb1-7c931cddbc22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307d534a-0a17-4940-8f6b-ec002d87ef95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756af02e-ffca-47b3-9b2c-b3b147b691b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f5c677-b953-43fa-ac3b-51c821791a91",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb3d44f-7ec2-4e62-bd4b-721fc6f50c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4998c2-d530-4976-ba1a-53a93ce13179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd99874-9dc2-4312-8b72-ec94b23ccfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c61aa1-029b-4a7a-a5cd-3e677b83ab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1310d17-13e2-44b1-b9f7-da1baf2eba04",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c52bdb-29a1-4fbb-b73e-ad3049b3be6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e26763-0337-49cf-ab4b-7d672f1169b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c165f19-7fde-454e-b72f-21948f2826e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631b83a6-bfb6-4288-b7db-413d97eedd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f69519-5127-4553-ac7d-eb3a1d232e73",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b3eb1f-fee6-4c8d-967a-0f00e1978c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae84d8f-11c4-4a84-a3a8-9989c545d5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0213e955-b00c-453b-822c-0c927e5ef689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df967c3-8d4e-41ed-bf15-aefd4c7815ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46a06ec-eb46-43aa-8df2-9853566558db",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b585c53b-8096-4937-82cd-3e661f604d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6ba225-91e6-45bd-8697-8fc40555741b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d1a57-9793-4bdc-8dfd-e58fd9ce1cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599cf3ae-d9a0-4fc9-b488-a9c3bcc82ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc021108-6ac1-4d59-a8e8-3995d4339f5b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469b3c25-26f8-437d-bae9-35f6a534c310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c80988-e0f3-4c37-98fc-b1b32840d4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e424c-f845-4dee-9f32-efc0ab7f6ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a09843e-26ec-4416-a630-dbe680ba5457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238d921c-d9a4-442c-80f2-a3089cbe9952",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1d71a2-d45f-4481-a427-1cbc804e62c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e32e39b-ba97-44b7-a809-7c5f84d5dc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c1287-b955-4004-98dc-0458deabe23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7aa0db1-593a-4af6-9cef-fc08743e34bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aa4170-42ed-457e-b55c-903b89a1830b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bbc208-3261-402a-b0e7-724081786d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a34af95-cebe-4194-b4a2-1afe4672f88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e9feac-4a72-4223-8735-0303864c0e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5923391a-b833-475f-93a9-01098b9dbc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7642e9bd-dca1-4b54-b4ff-9acfe7a275d3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cb3110-0093-4789-b6d0-696e5663b847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3d1447-3399-4f36-b02d-04598b04969f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601e5a3-8253-470f-8f5e-70fc7c792921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3f8b7e-8202-4dcc-b67f-9be326fd2172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f32ce7b-08ba-4ee7-99ae-ab22f4e4d13c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30547ba1-cb5b-44a4-9580-2416ad932014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a66529c-1113-405f-b223-1e920133eca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac211c07-7204-44f4-8a6a-237720527ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c96a23-7374-4493-a904-4e61d0511021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7976d72-3727-4a2c-8638-0a215cd50cea",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f598c864-021a-4b60-93a2-cc2184e5ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eab834a-2563-4215-baef-6a1d7097773e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ddc827-6f45-4e77-97dd-cde99f835022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffa0fdd-beb3-4267-8e65-0f8a1e7529b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47521fa-35f2-4088-90bc-6afceecc735e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5908e9-f663-46d2-9064-2986c1df93be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5f6832-7239-4d35-8ddb-95fc87e2f830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc57f2fc-6e69-4184-b68a-6f1002e415ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeed1ab-3a5c-4570-be27-aa3ddc4a47d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d17d7f-86d4-4122-8135-322dc1ae8bb9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3c05d-297d-422f-a18d-7e836d5a781e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d7f12d-6657-4714-9a85-98f553e39102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f68dd74-cbbd-48d7-8d87-d6f971b8d03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a49e7c4-f7fc-4f33-80f2-08d5e79b27ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160d2cfc-2b8a-4b98-9bec-c96c73bb0ec8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c137a3d5-b844-4306-9ceb-db285239b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48500fa3-d7c0-430e-a83f-f802607177ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2de483-326f-4711-bb89-b9e1caef2da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434a177a-d4cf-463b-bc8a-c2cec3dbe755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d33575-b5ae-4f9d-8960-a479c3b41b08",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdfa5af-a9cf-4f4a-8d15-d5ddb251b61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e08cf6-5368-4a81-99dc-81662dfb4bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c3b56b-9c94-4eca-ab05-75312312ca3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d7b72f-2cac-49c9-8bb9-72af850e4128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e64aedb-e249-4716-a6ad-eb59752aebbf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c8062-223d-40da-acdd-0ff6058a98e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7087bb-76fb-4572-9621-dc596ad7bc43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e4267-ff91-4a9f-b26e-02deacdc443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23013440-463d-43f8-a71f-18f2e5424421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39369c5-e27b-45e4-a154-85f20212caae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97a555-a589-4b66-b946-cd5d7d557c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9380affd-036f-4093-98dd-84fbffef3df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d010049c-ea17-457f-bf8c-eefee72a74c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207e27cf-d0ee-4cab-9a58-6f9f8837364d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6685b769-2297-4b05-9e5f-dd47af011341",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f82220a-40fb-4aba-9471-f0fcff4d90d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ba43f7-e8f0-480f-b566-b848fc0ae4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da8bb8b-0fcc-4df5-933f-8c4aed3db022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a3d3b0-e515-4c3f-9653-1867d78c20d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f19ea-1dfb-483e-9c3c-d16549226231",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32467b3-6e52-435a-9a1e-0f9342944e06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af49e55a-f445-4dc4-b769-84614e9d046b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7667f71c-a996-4ea6-a46a-63a3e404f4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8737c4-29d9-4435-9259-34afd9cb0a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c839b0c-95b8-4d1a-8b9c-1a07c50ed808",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb28438-46be-4ca4-9509-c3aa6dcf1ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0f904a-dd8b-4626-9a40-6b06e20f520b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ae9fc7-a115-4396-8190-a493a93d42f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a803a226-29a6-4f39-9560-b236d124d2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14153221-d148-47b0-ae93-e59d6679c314",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cc80f6-ddae-4522-9dec-47fae0f37b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19d1da2-ae3b-4541-9fe0-5b1ee89e51b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bc6d34-6a9b-4d8a-b762-69cc68a44dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a27943-47b3-4bc8-9d10-c6e3af0287c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ef75f7-ff14-4255-96b3-5d8db55277e6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec0a668-0d29-4d78-996d-bbf45e6202b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1530e8-d72f-402d-97a1-1b1613d9e826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d655734b-9d69-4b1a-b387-a9ec46818312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e95de20-957e-4124-842c-c26b454d8748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2669a042-3a63-4f61-b46b-60c90ecdc714",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e8bdd-1263-4342-88fb-b57a1a384ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a139b3-004a-4f46-99d1-40b3ade532ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ae819-4e6d-42d7-b2bd-469adcd4a58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52689386-96ec-421f-8c2d-3956d6ffa62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ed6a4-4525-4b36-9748-88c9683443a0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87f8679-00b0-4233-8343-a6722d9201fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc0670e-47aa-4c75-ba5c-0ddc2c3fdf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920dc50-3f96-40fc-96fd-e9ed2c68cc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9c105d-23df-4e72-a0d1-e69e6b550a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6232254b-941b-4265-b12f-3b72c8d37a81",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa3bdc-e038-4726-a067-5eac0f682295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e2a61c-a2c1-4fc0-afca-c0a6844607f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca7ce5-c2a6-4cd1-9629-876a12c688b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36f388-9529-447d-b8b5-c7e1de1f7343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33799db3-6fd4-4a90-86c1-6c8fbb1ef52c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af449f9-5f12-4f82-9066-7a9de3458c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf30b78-61a2-4159-8472-86b30e8d4e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba6c85-54f6-4bee-9d06-9f860608bf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec26ebac-aca2-4d0b-9505-fc7ff28a2628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8d8694-f36d-404d-9f86-f470d514520d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e182673d-c462-45e7-9d98-f567415c5f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8ef8f0-f17f-46d9-88c1-001395b722e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be16e1e5-4ae0-41d6-a489-a2de76e59494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1240d1-2ad9-4484-aca1-fa2b9ed0aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b9758a-5c52-4192-ada3-221adc36b320",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc1c1f2-edf3-4af1-887a-e4bd3e041e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dce8982-6dc6-499b-875c-98c9bf02a3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb46374-4559-4c43-8e79-f46f2e99038a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2533287d-72fb-47cc-9f2c-5a6dd740e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba45409-7d4e-47a1-b2aa-4391c592b90c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4924ffe-1997-4caa-807c-02379c3016b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9249128-727d-45f1-a0c4-393ce20d4953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23b8009-99cf-4246-b0f5-47a3eeadd24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb461a0d-a026-4086-b08f-0fb41079b09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6b841d-4a82-451b-9c6f-2f0cd08f6ca1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a51dba-7234-4c1f-b5cb-3c98634af03d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8813494-c705-444d-a58a-d0ff81427cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b0b26e-b870-4ba1-86dc-c82fc9311c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5e3f91-d4d8-4970-a962-5f01a64936ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afcd7b1-57fc-4ab3-902f-66ad60a12f69",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa8171b-c5f4-49eb-a0a1-308d1820b327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4173a0-541e-403a-9abf-dfe66f710b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed5be5e-5138-4df0-b744-6826dd580076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aaeff9-1319-4336-a98f-0cc60d827631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c633dd7d-3924-4e5e-9289-d77e73dcd2ec",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4aa3ef-c8df-433f-8ce4-22c6575b6493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7782354e-ab8b-46e5-a76c-2601aa633d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec6db75-5cee-44c9-9abb-0bee400d9779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89e461-1669-4363-9afd-a461892d90d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61ada04-91db-4cc0-8c65-b360a505265d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39674c5-b10a-4940-bcd1-d2ad4d12f085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b353e5-38d1-407b-83ba-a5fcc1b684cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c6a6bc-d109-4e2c-a34e-792cefad8b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d6147e-d9fd-46f1-9755-95f7691ec89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617295c9-558a-43ec-aaaa-30aa237e2c6d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b7c693-04f0-4fd8-80a3-38e1b29e8bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47be2def-ad97-41c6-8abf-ff0f76dc0902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e969bcf-67da-4e99-b37f-3142ecf86bb9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d20eef-6f30-437c-bace-d3b9971d9e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24a9b94-5b38-4ca2-9b7d-d062632cd218",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d846ad-ba81-4ff0-b9e4-b694fd41a544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5441b4-c8ea-4b0d-81ee-be34cd9605f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e001052-8a0d-41e1-b611-ca5a1b31eb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f473133-9a4c-40c4-8675-b52f3cfdd89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca27a41-2123-4c49-960d-9aa40246961d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea936c6-5130-44aa-aaaa-8975e5046e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac724cc-7e49-4e94-9e53-c69dd112a70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df6881-3db8-4b92-9db0-191ecff00c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba08938e-93e1-4199-a986-c0f9f1301aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fe740e-6131-486e-94fa-2c07a5e70da4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858b74f6-de3a-4a8a-8f2f-1c2c8fd5385a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a398bbc1-901a-4d47-853e-9290623681db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e38540-cc0d-4f0d-880a-281a5f830d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a69ad00-6787-439c-ae8b-7bec8aa2c4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a06ddb-df36-4444-85a9-dfcf22966f95",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8646343a-81e5-4a51-9149-91cece253998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0374ef3-5b96-4752-8de4-400a69a56f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81147f29-36fe-4db9-81f8-6b2e3bc7cc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ad091e-a22c-4690-97b5-281c0384375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630eb9d8-92b8-4955-89dd-122bcccd15dc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad04ff63-70e6-4896-b75b-e6188c926cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aaa2abb-cba1-4b81-b688-9ef8e6491b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b5103e-2dd1-444a-ba0d-f5dce47bedb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206035ca-c06c-4d28-87ae-fbeab2e5e461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ab460e-90e9-4c1a-9be0-c7392cf18397",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5999d796-d4cc-4bb5-9a40-6c3bb26e8af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b6d343-6916-4622-aa8b-5270b6c09661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8734db3e-1a35-40f0-8311-81bc9fea1a70",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe639aa-ddae-4530-9a0c-18d4c0ce3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4f6846-845e-473d-bc62-4a558aadc03e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f1b9dc-0e9d-46f1-bb70-c716c6872ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb04f88-3830-43d9-b416-6c6a9b6f2560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cededff7-c2d4-4c2b-b18c-531389fdf1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874123a5-241a-4e65-9d08-2077b26cbb70"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "793ffe27-7502-4a65-aae2-15c9afd2f297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0afc011b-fc6f-45df-8192-029f0a14f5c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf8f28cb-e79c-4b09-874c-e2f448c14002",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b87ca526-3b5d-4c52-83b4-c212af2de2e1"
                    }
                  }
                ]
              },
              {
                "id": "b1687d5a-42a4-4291-8a41-19f92cc56ba2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad2a5a5d-4254-439e-8795-2a30928f6ec6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428356da-3457-4bce-a26a-4e130846b319",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bd7e0d60-34ce-4824-b785-94d2ffc086fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503b74d8-b8b5-455e-b3f3-3ac60672f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99014ab4-0556-4813-9c90-3e6d8a45ebcc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4920b3bb-0958-4225-a084-582a2c38d7bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67bc47df-c0a2-4dd4-9d5b-40760bfd94dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6f9544c-c60c-4ead-89aa-536b533a4cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5eb6428-deea-484e-938f-761e34245ba0"
                    }
                  }
                ]
              },
              {
                "id": "00ac38ea-b382-429b-b081-dd864cb4b882",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4926adf4-a24e-44c3-b5ed-a74c3d5f8512",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab205e55-f64e-4178-bcf1-b42a653479fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0cc9166-c86f-42a7-b24a-42c6139325ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f265769-db90-4fef-8ec2-c14cfa4659b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7a1cec-2e5b-40e9-b769-d14f5c2b9e43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d38cd4c-640f-46af-b6f7-75c0d7c2e654",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac1d800a-2457-4bba-ae06-d74af6fbd2a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "614815de-29c1-4528-a230-39b61f06080c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dac0a388-b6c6-454f-aecc-ac523fcf9c2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eebdae32-ab0b-4a98-8232-54d48abb5609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac509402-8edd-411f-92d8-abeb799f9b1e"
                    }
                  }
                ]
              },
              {
                "id": "199f94f2-564c-4359-a49e-fe0f72caa661",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e7b5fb6-67ee-4730-bd1a-cf692326e6d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98c1dad5-5b7b-4d3d-af5b-2eec3bbd678a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5bcdd5-6cc8-456f-bfa7-7ced32aedb2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fb608e1-a55f-4aa9-9488-e7bbca4799a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1ecccaa-ee8a-4c53-8c60-fcae7d9af94c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ece0d40-8642-480c-8e23-ead1ee14b762"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b697de46-cb13-4e45-9bca-3ee9af29486f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab0490bc-4b72-44aa-994e-910537ef76fe"
            }
          }
        ]
      },
      {
        "id": "b69e4d63-f31c-4e17-b4e6-991445546503",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cdc24d81-326b-4c61-a27a-79eda544bf01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5772106c-d143-4286-88ee-b7d6b803c4d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b43ca258-b30f-4111-a226-1b0c5c63ef59",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcdee67-09e6-4897-bc98-c0f9a688f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9ba9cc59-66d5-4f51-b4bc-b8277f3cece9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e4aa25-55ad-4101-8400-76b9ee469ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a14d2d7c-4fe1-4e94-88ff-0db7ad7c2f42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bae012db-6e2b-43f6-afa0-ee997b9fe250",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49abab29-a8f0-413b-b08e-ca8b42019545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2419fd06-c581-48b0-8757-b3f1687ad815",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89d011c6-ec21-494d-862c-0225ea8ffda7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61c7b52f-788e-446a-8feb-1b9434b5080d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e18a558f-2935-4cd1-b369-93cdfcbc974c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "152977a6-5ebe-4147-a235-35af52129156",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6549522-9083-4fd5-9d2e-e1ee18cc8503"
            }
          }
        ]
      },
      {
        "id": "9b90adbb-33ec-42fc-8618-b1615e302fc6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ca95ae47-0a39-427f-951a-b256a07147cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "441dad45-7ea1-47c2-b2c8-b09ad60b1142",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "537d74f9-f27e-470f-ab0c-e0f5841c5fc5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c9645b-73cb-43ea-823f-25e702e989a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7c2bba4-ca5e-4ea4-8f0d-dd1ee10ca0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013cdfe-040b-4515-a4a9-5d9cb6063450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a36e13c-8d23-4add-a6bd-6ddcd55dfaec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fc621ac-7a0e-4943-8062-88d43e6ff780",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5187d8bf-2a51-4af7-9d8e-7883c1f699fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9390224-12d6-4b90-af1e-e7ad28d6a178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af11213e-abff-4828-a69e-b7728db6fd77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6051fc9-0d21-40ff-924c-87b585b82e85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55f2934f-a39b-4703-8867-614d0ecf4a4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31213abe-c10d-4759-b30c-08aee6a138c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cb9a96f-4323-42c8-ba7a-ab76f8a3b917"
            }
          }
        ]
      },
      {
        "id": "e9307e58-d96f-4db3-9193-1e7d55871e7d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a39beaf-259b-413d-843e-3d549d79dbf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e25db147-7fb8-40e1-8411-ce91fddd5c5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c947af4d-5263-4804-851b-bde1a50ff6ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d07065-d581-4fc2-be30-2cc53a922298",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ade5a3ba-62b3-46c0-afbf-675d8305be9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e885d5f0-819b-4a72-8ff4-4d91efed8729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7308ba3-30c8-44d4-b909-5dc7d0f6b973"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17b9fadd-cfa2-4c68-b4cb-7f5e45b202da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc92d18b-8844-4a5c-8acc-7764641eff38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c00226f-a0d4-4089-955c-c9beb1f1ce3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c093b213-ccf9-4faa-adba-48c43f7b9844"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1de32bdc-8065-4cc8-897c-550b3531049d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1b9e684-002d-44d3-a587-a060b40f6d37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b384a2-b702-4e17-bd6e-e40e4ded1489",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30f6d184-b038-46b7-8561-3892db153dec"
            }
          }
        ]
      },
      {
        "id": "51e96a9c-77f6-4db4-ab86-676a54786c72",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4f409ee-13c6-47da-9254-0f1296013cc9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e277a3c4-fe56-4461-9746-962c24815860",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fe6c3c87-26e4-483c-b7f3-32538583ca5f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f0d2eb6-e911-4857-9cd2-35ea65df61f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "236c71af-a5c3-4c9a-8f1f-391963efaf56",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 662.4722222222222,
      "responseMin": 9,
      "responseMax": 21866,
      "responseSd": 3239.436840390496,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726879387779,
      "completed": 1726879562805
    },
    "executions": [
      {
        "id": "15969230-bf8a-4db2-8a3e-8840ddd4407e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "87b05061-7774-42b5-8df9-8d97c1af07fa",
          "httpRequestId": "9d97137c-698f-4630-b2c5-37d1f04bc7ed"
        },
        "item": {
          "id": "15969230-bf8a-4db2-8a3e-8840ddd4407e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1f1963b9-1209-45eb-a39f-4c81e8ce215b",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "e47acf1d-a731-4f24-9cf8-11b80ae00915",
        "cursor": {
          "ref": "f5411265-f4c2-4e45-b075-ee551240a827",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3bc0d711-14fc-46ef-b8d5-f2b82f3a139f"
        },
        "item": {
          "id": "e47acf1d-a731-4f24-9cf8-11b80ae00915",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7f8e5668-77ee-4562-86e8-f0fd18991d87",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "84dfea24-b2bc-4421-8245-1a91f863ecba",
        "cursor": {
          "ref": "d1899fb0-ff59-419a-93f6-3f0ba2baee37",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "61f20f62-390f-4da4-bea6-2e4442cdea43"
        },
        "item": {
          "id": "84dfea24-b2bc-4421-8245-1a91f863ecba",
          "name": "did_json"
        },
        "response": {
          "id": "f42c587c-3c43-4106-8847-2c260aa5b19e",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06efcf1-c510-46a0-9090-52910183fa8a",
        "cursor": {
          "ref": "bcd260f6-6d60-404a-8b6d-a0d7a55abcfd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb8cb84f-7c3f-44c7-9b72-0529428defe7"
        },
        "item": {
          "id": "e06efcf1-c510-46a0-9090-52910183fa8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ccf7cebd-6c49-4106-8102-795c825f8068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2506,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06efcf1-c510-46a0-9090-52910183fa8a",
        "cursor": {
          "ref": "bcd260f6-6d60-404a-8b6d-a0d7a55abcfd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb8cb84f-7c3f-44c7-9b72-0529428defe7"
        },
        "item": {
          "id": "e06efcf1-c510-46a0-9090-52910183fa8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ccf7cebd-6c49-4106-8102-795c825f8068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2506,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b5af4-995e-42e1-bb9e-ad6f60ebd6a8",
        "cursor": {
          "ref": "b92457b2-8bbe-4b5b-ada5-2e2f31b2d531",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "acfd1e3e-2dcf-4e0a-8d0e-8e4f1eeee8c2"
        },
        "item": {
          "id": "338b5af4-995e-42e1-bb9e-ad6f60ebd6a8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5f0e8c4-e3d1-4484-98f8-6467efac9277",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3024,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cf9b94-2550-40ad-9875-5274864c256a",
        "cursor": {
          "ref": "ea266bc3-b96f-4b14-8a0c-1aa661607d94",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a8e2e71b-ad08-4154-8339-fbb3ad95ba2b"
        },
        "item": {
          "id": "a8cf9b94-2550-40ad-9875-5274864c256a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "92ea7aa3-556e-4fcb-b833-d5c95fe8130d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2510,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a85b7e1-7c6b-43fd-a409-86c70abf7cd1",
        "cursor": {
          "ref": "09551042-5b60-45fe-ae99-3869fe366d94",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "50457342-8fd0-415c-865a-c093e3785615"
        },
        "item": {
          "id": "3a85b7e1-7c6b-43fd-a409-86c70abf7cd1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9de89a55-11a7-4df0-9e91-55af18212d99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b55109-33ad-465c-bb1e-fe2ba8788b37",
        "cursor": {
          "ref": "a797d937-572c-4f88-9dbc-f24207ef8166",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eebc8ccf-a9c0-44a4-92b7-ae4bd816feb2"
        },
        "item": {
          "id": "55b55109-33ad-465c-bb1e-fe2ba8788b37",
          "name": "identifiers"
        },
        "response": {
          "id": "f989a96a-cc51-49c9-8354-f5996488bb09",
          "status": "OK",
          "code": 200,
          "responseTime": 2630,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b509e149-67bb-4f48-9dcd-6e992e78276f",
        "cursor": {
          "ref": "66509ef9-ca5e-4633-95df-2e00b5f908e4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0e0a8e30-2fde-411c-8e0b-469f666e3885"
        },
        "item": {
          "id": "b509e149-67bb-4f48-9dcd-6e992e78276f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e7ade3e5-6438-4227-ab08-97d3bf18c232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a477ea-e39c-4f2d-a6a3-e25da22ccbdb",
        "cursor": {
          "ref": "aa044ce8-4358-4b71-9005-ce021cac7217",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac0daa1d-81e9-4023-86b6-43dfe1f92c69"
        },
        "item": {
          "id": "f5a477ea-e39c-4f2d-a6a3-e25da22ccbdb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a588f8cf-1d4b-4b65-82ad-7dc207eba094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d220691-bc8c-47ba-b6d0-d4972b087865",
        "cursor": {
          "ref": "9c53c7e6-3849-4aa6-9b5a-eca4ef37a51b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "52a01346-ecad-46d1-9141-08dbc68a017c"
        },
        "item": {
          "id": "7d220691-bc8c-47ba-b6d0-d4972b087865",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c059abd-32aa-4ba8-99da-4efa6d3219ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39732112-13fe-4f2f-9b64-133801b0ce2a",
        "cursor": {
          "ref": "a2e92d9c-ce3c-40c6-a1b9-40bc3ae7b647",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cdcf7913-5624-45bb-a3a5-f25566c99fec"
        },
        "item": {
          "id": "39732112-13fe-4f2f-9b64-133801b0ce2a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ae348c9f-8886-41c4-b124-f1890a44c0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb0ab58-1b16-4e3c-bcd1-47dcf7215cc9",
        "cursor": {
          "ref": "e819c413-373f-4724-b001-efdde24699e0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "267f080c-2da6-49db-b138-06469be62870"
        },
        "item": {
          "id": "ccb0ab58-1b16-4e3c-bcd1-47dcf7215cc9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ac4b50b5-e672-4c64-9870-9f6869611df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4bd56a-a5bf-49b4-a0a6-c7f6a64deeb2",
        "cursor": {
          "ref": "351b8add-7a4c-4776-97a6-ce3683497238",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "81f6f16f-ad94-4d17-9968-c12f2b241c57"
        },
        "item": {
          "id": "ba4bd56a-a5bf-49b4-a0a6-c7f6a64deeb2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4be82708-4be9-4070-83d6-595579409af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2b02f2-d460-4485-813b-b4089d5f3b24",
        "cursor": {
          "ref": "08691428-383c-4374-a923-7b008799c4c7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04ab970a-1766-49c9-80cb-2a3192ff5252"
        },
        "item": {
          "id": "6e2b02f2-d460-4485-813b-b4089d5f3b24",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "167ac58a-0c74-4c1d-81df-afde1c2d121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e20aa2-ff92-48e6-8016-56cdc4e55785",
        "cursor": {
          "ref": "e2035f3c-d24b-4ce1-ad74-f15e2155b445",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5aad6457-0436-4a5e-9d99-e21c9f070f89"
        },
        "item": {
          "id": "b0e20aa2-ff92-48e6-8016-56cdc4e55785",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4cceda74-07e6-4cfb-85e6-b0c988edbb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427e5d14-af36-4953-b729-4be99c9accca",
        "cursor": {
          "ref": "53b06ac5-20b3-42c4-973c-698042dae38c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3e1773e3-2e9c-4d95-b0d8-8b7c0855ae67"
        },
        "item": {
          "id": "427e5d14-af36-4953-b729-4be99c9accca",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8826a13a-dd86-4df6-9e3a-537d1df57051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9f839-a7dd-4b0a-a74b-6250834e1333",
        "cursor": {
          "ref": "046ef08f-77c9-4543-a507-f9c654c11d77",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "70a5f1f2-d5f8-4b76-9b09-5386814855aa"
        },
        "item": {
          "id": "82c9f839-a7dd-4b0a-a74b-6250834e1333",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "93b5e936-c3cf-430d-9956-6c8d4e16ccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32275ca8-51ad-4b15-bd9c-a6a061c2fe03",
        "cursor": {
          "ref": "f70d2a40-6dcb-437b-9a87-2e0b4b51d109",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c91d464-edbc-4665-90c7-f0f41c2e7793"
        },
        "item": {
          "id": "32275ca8-51ad-4b15-bd9c-a6a061c2fe03",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3d3c4930-b4eb-47bf-a190-b91b9637e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdeac22-55ba-4d11-a725-c417c59d8abd",
        "cursor": {
          "ref": "22552534-eaf3-4377-a2e2-5fa0be6b72fe",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb36f717-1272-42b0-9287-ca542cb93126"
        },
        "item": {
          "id": "ebdeac22-55ba-4d11-a725-c417c59d8abd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f8dbc315-fa0f-453e-b3ec-744d7e45d6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34c7be-9048-480d-bc5b-862c5af586e9",
        "cursor": {
          "ref": "a9bc78a5-d518-4990-ba22-9375102809a2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3cc889ef-3228-4a09-afcf-342b7f4d7d19"
        },
        "item": {
          "id": "df34c7be-9048-480d-bc5b-862c5af586e9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e07701f7-764a-4573-92f3-62cd9367421f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae0274-2f08-40bb-9ec5-084fe86ea995",
        "cursor": {
          "ref": "56da4c91-fd3e-45e3-b8b2-ea6361537667",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "433417e1-33ab-4a49-ab53-7a933e4f94f3"
        },
        "item": {
          "id": "66ae0274-2f08-40bb-9ec5-084fe86ea995",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "483c9576-86b5-479e-aae5-6cc981f465f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13726719-2ef5-4302-8e7f-b11a6e1d5f61",
        "cursor": {
          "ref": "2cf2c23f-d656-48cd-b6c7-0b1b849a311e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ae3d8425-85a5-43c3-8d17-7076e20d0615"
        },
        "item": {
          "id": "13726719-2ef5-4302-8e7f-b11a6e1d5f61",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4b5f0357-4ac5-4b93-9d3f-5c15d0e149f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a4cd9-ba31-4e50-b246-16e9b14470a4",
        "cursor": {
          "ref": "737f0320-7cd2-47c2-8b5e-4f835ca1ed4c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c8c9c27e-9ced-4afc-b654-adb106164db7"
        },
        "item": {
          "id": "757a4cd9-ba31-4e50-b246-16e9b14470a4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "311311b2-f03a-4642-a348-83094cde30ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10642bd-fdd5-43b4-8c91-46be1120fcd3",
        "cursor": {
          "ref": "35f06114-0119-4750-8d24-e8511bb93332",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c8f13414-9503-4efe-9b8c-c392081bbdac"
        },
        "item": {
          "id": "d10642bd-fdd5-43b4-8c91-46be1120fcd3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ffa2b5cd-4715-4462-b7eb-c142cc23ba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a9882b-cabe-4791-8135-765f553852d7",
        "cursor": {
          "ref": "4463ee6a-6587-4bda-85b8-2e71ccad8bf6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "809aa71f-f385-4d2e-888e-71270533abda"
        },
        "item": {
          "id": "e8a9882b-cabe-4791-8135-765f553852d7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c7c9852e-59d0-4c09-91e6-e92156534d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b122829-58c7-4264-9030-cc06c9533d77",
        "cursor": {
          "ref": "4863d142-3643-4966-b99b-0028e7218cb1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c2bfbe53-3a91-4298-9a28-75a5322bd027"
        },
        "item": {
          "id": "0b122829-58c7-4264-9030-cc06c9533d77",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d7c28486-3705-4caf-b322-41f150ce0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaed8413-649b-47a3-82ad-0d63b1f9e457",
        "cursor": {
          "ref": "79160f8c-c91b-430a-9bfd-c6c972b2d611",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e217f685-d0ba-489f-8521-dd0e9018cbcd"
        },
        "item": {
          "id": "eaed8413-649b-47a3-82ad-0d63b1f9e457",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "886d3a77-c455-4a9c-873a-c485b18d6c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fad67f4-7b1b-4272-b213-048845f31d87",
        "cursor": {
          "ref": "48ecdd8c-f26e-4a3d-a73b-34d663d9d74e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e8d41a03-f890-4eb8-b611-bf12826f4169"
        },
        "item": {
          "id": "2fad67f4-7b1b-4272-b213-048845f31d87",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "792532b1-1e8d-4075-9253-d54b397c59e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4494a9c9-8cfa-4190-9cf1-eea6a4d36664",
        "cursor": {
          "ref": "006a5672-9fbe-45de-bd6e-2b4277642822",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f2503694-b62a-44d9-aade-21fdbdafea82"
        },
        "item": {
          "id": "4494a9c9-8cfa-4190-9cf1-eea6a4d36664",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cb517999-edff-477b-89f8-597e061b92ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa0255c-022c-4a3a-8fc0-0d82805842cb",
        "cursor": {
          "ref": "f1e0ae4d-235e-4ef4-8727-726459244a60",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "135f4efb-6fd3-47e7-b282-2e5301127b08"
        },
        "item": {
          "id": "0aa0255c-022c-4a3a-8fc0-0d82805842cb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb728200-90c8-4ce0-9a1c-4fe21e2511c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302224cf-1493-4a48-bc64-20e63f97cd2d",
        "cursor": {
          "ref": "048772d8-eb68-4df3-8679-2034c7bc21be",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "48e5b957-85f7-4bf9-89fa-2ce4069eb534"
        },
        "item": {
          "id": "302224cf-1493-4a48-bc64-20e63f97cd2d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c2566a0a-d706-4f6f-8d21-3aeec9a02f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f087f4-e1cd-412d-92ed-461a1301e9fb",
        "cursor": {
          "ref": "c77ac566-9945-4a68-8200-7591f719dfa9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "242598e8-411f-4610-a247-d1418849f10e"
        },
        "item": {
          "id": "d2f087f4-e1cd-412d-92ed-461a1301e9fb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d1649fe3-3df6-4213-9268-85ad7912ecf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2560501-4671-4963-a2ea-65e8e867b1c2",
        "cursor": {
          "ref": "b32ef68f-b289-48e7-bfa0-9726dbb31588",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0679700b-32ae-41eb-8d4f-bc0514deec12"
        },
        "item": {
          "id": "c2560501-4671-4963-a2ea-65e8e867b1c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d3bc7c34-9b20-4e86-bb4e-1e1cbbac8f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26f8818-4549-43b1-8948-980294681c61",
        "cursor": {
          "ref": "82835d4b-2118-4063-8c75-a28ad7784468",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8e8f456b-00db-4b80-b9dc-4a5c946e7e94"
        },
        "item": {
          "id": "a26f8818-4549-43b1-8948-980294681c61",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "67d24cfd-6fb3-4143-b42a-71e307048c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e7248c-aa95-4f38-909f-4cbcd35908a2",
        "cursor": {
          "ref": "d251913e-b6af-4a83-bb2a-839a7c2d917e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5811e3f1-db00-4d33-9d0c-8ac7f0088e6f"
        },
        "item": {
          "id": "65e7248c-aa95-4f38-909f-4cbcd35908a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "db2f78eb-7856-4e31-8f00-a07b54db98c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7b9f76-5c99-494d-b125-192e475aa87e",
        "cursor": {
          "ref": "6cadf238-efa3-4bae-a09b-a346591d3830",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9db74c5c-2bf0-4e74-8ac1-0eaebb57260a"
        },
        "item": {
          "id": "6c7b9f76-5c99-494d-b125-192e475aa87e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c23a961c-c865-4575-92ff-826aad3600e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f063397d-ebd9-449b-8340-d67aa4b6afc5",
        "cursor": {
          "ref": "9e1cc85a-8e99-4520-bc02-d36c27d0af68",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a89609ab-d3d3-498f-9ada-30fc1cd36e48"
        },
        "item": {
          "id": "f063397d-ebd9-449b-8340-d67aa4b6afc5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9868aaef-0dcf-4bae-bdb1-a06d34edb390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaa8045-a22d-4007-b3bb-51898e1f9cc4",
        "cursor": {
          "ref": "a10310d5-eae8-4150-806f-a6eb0d637887",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d5388277-12d3-4125-b2e2-01a6fc94e3b5"
        },
        "item": {
          "id": "edaa8045-a22d-4007-b3bb-51898e1f9cc4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d135a8af-8a0d-4010-b2c9-74c82be126e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bf55d0-99c1-4a91-b7cf-c5fc36917d60",
        "cursor": {
          "ref": "3ed4dec4-3514-4f62-90df-0c5a43e54ec1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aa9b722a-a41c-465d-b00d-d9871270f05c"
        },
        "item": {
          "id": "52bf55d0-99c1-4a91-b7cf-c5fc36917d60",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18126e92-a41e-4084-85fe-5c9e143fff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc49a02-2436-4dda-ae4f-ba1b0477f790",
        "cursor": {
          "ref": "90ddb34a-241c-4368-a50d-4c83fad657f9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "58f382c9-0b1f-4d20-9689-4f48a2d08348"
        },
        "item": {
          "id": "fdc49a02-2436-4dda-ae4f-ba1b0477f790",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "afb68ab1-1a31-41bc-9507-c3b5af34d3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9865dff7-5607-4940-ba47-aed0941e5caa",
        "cursor": {
          "ref": "653af40d-00a7-4b39-ab2b-cddab10e3699",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f2d82d4d-0c1f-47fb-a854-ef2b82898c42"
        },
        "item": {
          "id": "9865dff7-5607-4940-ba47-aed0941e5caa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "58dfdcf1-59c9-47ee-b346-44c4f9cde98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065c6e22-8fff-42fc-b3d2-6046b416f6ca",
        "cursor": {
          "ref": "1e6c00c8-cc08-4011-b611-94cb4b4714dc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "65a0a4b8-21cb-427f-96e2-5ac720c9ce3b"
        },
        "item": {
          "id": "065c6e22-8fff-42fc-b3d2-6046b416f6ca",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5cbc985a-0d8b-4e51-ad5e-253ee0436b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7666597-f4da-40fc-9685-affe3a8c41d2",
        "cursor": {
          "ref": "7e615824-e27f-4c7f-b0fe-182c51d8c770",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eda9c3f5-d55d-449d-af49-fdf07686034c"
        },
        "item": {
          "id": "b7666597-f4da-40fc-9685-affe3a8c41d2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a6f9b39-2ed1-4b5c-becd-4f6566305496",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41573bfe-cc17-48de-b4b4-628a78afd495",
        "cursor": {
          "ref": "da91e0ff-5ec8-42b7-ac2c-7fcb54b126ff",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a5061179-ca01-4e71-baa5-f35303868924"
        },
        "item": {
          "id": "41573bfe-cc17-48de-b4b4-628a78afd495",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fea990dc-7ea4-4e15-b65e-74d10032f219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf8d28-b498-4a69-a3f5-96698cf2b9bd",
        "cursor": {
          "ref": "8b7260ce-d948-4f77-818a-075f6b276285",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7610737-5c54-450e-a287-a310d6fd3a75"
        },
        "item": {
          "id": "d8bf8d28-b498-4a69-a3f5-96698cf2b9bd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ee4b9c53-a5c7-4a7d-9d45-a0d4ae079a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ae1787-e49a-4003-bb26-209b73c3c78d",
        "cursor": {
          "ref": "7c8eb5d3-07b2-4c09-afcb-60bad99674db",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1fd7a92e-c200-47a8-bd8a-1c60dcad1343"
        },
        "item": {
          "id": "17ae1787-e49a-4003-bb26-209b73c3c78d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "67687a64-c17f-45aa-b4f7-b64356ef2f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1384203-404c-4caf-8811-bffc7059c88c",
        "cursor": {
          "ref": "a7179ca2-f806-44c3-8f4c-93ef13ce48e5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1f2e8330-0bea-499e-94cf-7b11a2c56325"
        },
        "item": {
          "id": "e1384203-404c-4caf-8811-bffc7059c88c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "21264c86-4e49-45dc-84d0-a2e6e54cce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3f325-786a-492a-9738-e0855ffcf362",
        "cursor": {
          "ref": "b60bbbab-8ff7-428c-a1da-b6a8fee87016",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a00efef7-a977-407a-a8b5-b49a62a5de95"
        },
        "item": {
          "id": "30c3f325-786a-492a-9738-e0855ffcf362",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4b808f54-118c-4dc7-889a-ef17adbdac93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85640412-c8a1-4191-b56e-445c96031836",
        "cursor": {
          "ref": "0889a16b-200f-431c-9e30-f8679343de09",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "20ce9385-3d3f-4794-9f9a-4d097a4086fa"
        },
        "item": {
          "id": "85640412-c8a1-4191-b56e-445c96031836",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7667d487-b58f-4b53-88c6-96f1571df5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5ea79f-c206-461b-8a59-aa2edab52d3b",
        "cursor": {
          "ref": "60ede3e6-2f03-4c5d-a08e-a86502c53a88",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1084d6ce-b314-48ad-a329-2d9e53977baf"
        },
        "item": {
          "id": "de5ea79f-c206-461b-8a59-aa2edab52d3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3bec042e-08c8-46a5-80af-bc36cbcf6af2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 85,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f44775-10d5-4084-8278-e4ca81a11525",
        "cursor": {
          "ref": "ad0c416a-92e1-44e4-8605-c5a6a32c938d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cb3917c7-a417-4334-95af-148a5d4a1534"
        },
        "item": {
          "id": "24f44775-10d5-4084-8278-e4ca81a11525",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9239d8d2-965a-4024-8d93-1b3ff3efc9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd31d4a5-747c-407d-b242-cada77d460bf",
        "cursor": {
          "ref": "6f09c9f6-1a50-440d-a9cb-048a00e0da8a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "49700806-2fa9-4ae5-9024-20337246a74f"
        },
        "item": {
          "id": "cd31d4a5-747c-407d-b242-cada77d460bf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4defce6d-5ac8-48fd-aba1-8fa25a78bf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357eab3f-e5b7-4fba-a8f6-f7ff86073d57",
        "cursor": {
          "ref": "4551e851-12e1-43e7-98bd-6784fe685ec2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "30a4e485-da23-4297-ac92-bc90fccf6b29"
        },
        "item": {
          "id": "357eab3f-e5b7-4fba-a8f6-f7ff86073d57",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f394905a-cceb-4de9-b269-e11af73ae05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a73e78a-e4a8-4c89-a240-261641501c8f",
        "cursor": {
          "ref": "15e22449-3948-483a-b699-01b4a9e69f84",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a3a397ab-e0c9-45e3-acfd-a7cce1bf61a5"
        },
        "item": {
          "id": "5a73e78a-e4a8-4c89-a240-261641501c8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "69359b68-0044-49a6-8bd5-51794cc11fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b7246-7fd3-4df6-bee4-8a7195895821",
        "cursor": {
          "ref": "cbfe0303-520e-4d3e-a641-2bbc1a3ffeb9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "43ab3b3d-7182-4125-a2da-f43f3e606eae"
        },
        "item": {
          "id": "460b7246-7fd3-4df6-bee4-8a7195895821",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "25dcaa6b-2d97-4d83-b3ce-6c479d30a2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507f1a2e-1f78-404c-89a4-34d17bf7194d",
        "cursor": {
          "ref": "e05379dd-f637-4270-98b1-938b4df06276",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd0195c6-42b0-4dbf-b720-6cb8903e5f6f"
        },
        "item": {
          "id": "507f1a2e-1f78-404c-89a4-34d17bf7194d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f7a9bfb0-be2e-412d-b251-b08a913df997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c457a11-4a5a-4036-a3f0-d350a9682d79",
        "cursor": {
          "ref": "eb1213ce-0833-4ab8-b3de-b01a06a51a11",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4e1f7797-b9f0-45a7-971f-9930774f5996"
        },
        "item": {
          "id": "7c457a11-4a5a-4036-a3f0-d350a9682d79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d292f81c-af33-41c8-957b-bf839e0ae288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93023cc7-1d30-4d47-97e0-898dfb34d481",
        "cursor": {
          "ref": "11cbdbf0-b1dd-4e90-9e06-09f03d2693e0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "030d5748-2a7c-4184-8011-9bfb269da5f2"
        },
        "item": {
          "id": "93023cc7-1d30-4d47-97e0-898dfb34d481",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4b2f31fb-caa1-400c-af6f-32fd9a01eecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79645ea7-d17a-444d-a387-30fbee0a0705",
        "cursor": {
          "ref": "059dce5f-f8c2-4488-b440-3a017152908b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "22483d9b-8a60-40d6-a900-10305e7bdbcc"
        },
        "item": {
          "id": "79645ea7-d17a-444d-a387-30fbee0a0705",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b98818c8-7cee-4822-8942-0894fc9ad064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c4cd05-c3f0-4205-8dd9-317e481e9c85",
        "cursor": {
          "ref": "17b05b8a-b87a-47cc-9fca-748ddfae4f25",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c075b4ca-2dba-4ed5-a0af-e3ebd61f1e2c"
        },
        "item": {
          "id": "50c4cd05-c3f0-4205-8dd9-317e481e9c85",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ff001b4a-5662-421e-a9f6-a17fd08ac9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824aad7d-b92f-4cd2-88dc-19a851d1113a",
        "cursor": {
          "ref": "a5ba6762-e426-472e-bdb7-cf1a2280a12a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "47771ea8-92ee-43cc-9092-47e73ef57979"
        },
        "item": {
          "id": "824aad7d-b92f-4cd2-88dc-19a851d1113a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36ee95fe-d891-4969-a986-ca9750539057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51025188-01df-430e-a511-e9db8c13dda5",
        "cursor": {
          "ref": "b8ca20fc-77db-4734-b96c-f8b8bb618475",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "276a5e2e-6177-4305-8439-142f9f838cb5"
        },
        "item": {
          "id": "51025188-01df-430e-a511-e9db8c13dda5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "91643b8e-77aa-4567-96ce-699351f4af37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5271c7b5-153d-4e74-a91a-b31670b03be0",
        "cursor": {
          "ref": "e7a71dae-091b-4d84-a3bc-9747e3790810",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0844ae61-12b4-44bc-9200-5e914778fa47"
        },
        "item": {
          "id": "5271c7b5-153d-4e74-a91a-b31670b03be0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b17c7544-867e-4b62-b598-3d70b830f97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46506615-e9e0-4a85-bfe8-1a08c5749acb",
        "cursor": {
          "ref": "7a78a1b2-be4d-418c-9282-51e4bb06f805",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "06f9237d-8efd-4f2c-afda-19873b94bbb0"
        },
        "item": {
          "id": "46506615-e9e0-4a85-bfe8-1a08c5749acb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f4cc0e0b-c6a5-417b-9760-483b3513ee92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cb6fdd-b0ec-499a-8306-578d877a24cc",
        "cursor": {
          "ref": "dfd5fa92-d071-4b76-b9a7-f3037c94c8fb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9abc42fa-04fb-46cb-8c7a-39e833b7ca20"
        },
        "item": {
          "id": "f0cb6fdd-b0ec-499a-8306-578d877a24cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5c6fe96-dcd5-4a0d-b4e4-4e8b9c53a81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5138478b-927e-49bc-a662-6dda35daeeb1",
        "cursor": {
          "ref": "cd0ad1da-f188-4892-876e-209a1026d1b6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6f068034-13a6-4ebe-895f-6852f599b897"
        },
        "item": {
          "id": "5138478b-927e-49bc-a662-6dda35daeeb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "59999c89-fc3c-481d-98f1-a91b38dc3169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a172cb35-6fa3-4157-a32d-c816a88e58df",
        "cursor": {
          "ref": "2e595f8e-51c1-4336-be0e-dd2312f6040c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "00e67a52-fa9b-464c-a61f-88a31896a737"
        },
        "item": {
          "id": "a172cb35-6fa3-4157-a32d-c816a88e58df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7a7faa57-a4fe-4271-acc7-e752db9288e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638c4881-740b-4830-8133-ed8cfe16afb5",
        "cursor": {
          "ref": "b363012e-4268-4acd-a1b1-fedc03d1ffce",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ffe205b3-d538-4673-9288-e5c2d96eb2aa"
        },
        "item": {
          "id": "638c4881-740b-4830-8133-ed8cfe16afb5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cec6a88a-58e0-43e1-b1c1-b4a0923bd4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c45aa02-cc89-44d5-89c5-8bfd095868ca",
        "cursor": {
          "ref": "a99ab38a-c1fa-4727-9184-9129cf5150df",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07f68b0b-9d36-4941-ab5c-e955600280b3"
        },
        "item": {
          "id": "3c45aa02-cc89-44d5-89c5-8bfd095868ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d8795d68-d136-48cc-842e-50922f001884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39377e3-0086-4627-8026-003e5a78ed7e",
        "cursor": {
          "ref": "92162be0-7191-4ad5-9968-663e6586afa6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c10685a9-5a96-474e-aa81-df88b2f2efc0"
        },
        "item": {
          "id": "b39377e3-0086-4627-8026-003e5a78ed7e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5a2742ce-6824-4903-b97e-570de54c5827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635822e4-af6c-4bb6-990e-00da89f6bffa",
        "cursor": {
          "ref": "03bf14af-6107-4564-97b5-4ff446a35827",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "63b7ffe6-c352-4624-b7b8-3353047783ef"
        },
        "item": {
          "id": "635822e4-af6c-4bb6-990e-00da89f6bffa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48f99a97-3cc8-4e8c-a2e6-b8f26e72777c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc78b36-4c81-466f-93bc-2f452ba044a1",
        "cursor": {
          "ref": "9ecb906a-886b-41a6-9fef-5ea448280ede",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ab4ff438-0b0a-4705-84cb-0d8fc32c4686"
        },
        "item": {
          "id": "cdc78b36-4c81-466f-93bc-2f452ba044a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3686e4bb-b7da-4282-bf2f-15e08eda3722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba392005-b95c-4526-9b64-68648e555bf1",
        "cursor": {
          "ref": "4574be73-a5de-47d4-916f-d5167e572869",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4c3e10e-ea4c-4a03-ab10-f050af1283f6"
        },
        "item": {
          "id": "ba392005-b95c-4526-9b64-68648e555bf1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f2b7613c-2a20-4762-a679-e3ff876d0143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedcc328-9cfc-4d5c-9236-bfa560efa2f5",
        "cursor": {
          "ref": "d844ec2b-2ed5-449c-babd-0a226ee76fa8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a9c99c62-e88a-4c9f-a58f-314c4f40bb8b"
        },
        "item": {
          "id": "dedcc328-9cfc-4d5c-9236-bfa560efa2f5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f738862-ff40-4800-bb12-deeba5acdb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccbdd93-b0b8-478b-9bdd-db394219b92f",
        "cursor": {
          "ref": "c4a564a1-476c-4702-9b90-32aa118ab8b9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "50a6bd04-fff2-4cf2-a0e6-6c62eadff2b3"
        },
        "item": {
          "id": "1ccbdd93-b0b8-478b-9bdd-db394219b92f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef52c997-64ba-4f81-b6f6-3d48204f53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08403ed5-b897-4ccf-b2cb-5ab9fc77fc26",
        "cursor": {
          "ref": "26b1bf58-246a-4191-a1c1-024825becab8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "08325d17-8248-4c96-a22f-b4583f4c91a9"
        },
        "item": {
          "id": "08403ed5-b897-4ccf-b2cb-5ab9fc77fc26",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f9873522-e71e-4ca3-8d35-3acc4dca7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a62eae-3232-455f-8795-eff56e38bc1d",
        "cursor": {
          "ref": "6286ccc5-8e6c-4da5-ac02-e71e5b6b7bd3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d4de0db4-def1-4bc6-a569-3eefbfcef4e8"
        },
        "item": {
          "id": "11a62eae-3232-455f-8795-eff56e38bc1d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b26fbfe5-4c71-43a0-aeb0-f4aed8454fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf617e-4984-4898-ae71-ecb0914e12be",
        "cursor": {
          "ref": "4880e92c-64ec-47c0-a8b8-d9bc04e5f87a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fc859d10-f031-4fa7-aa76-3658dc890320"
        },
        "item": {
          "id": "bccf617e-4984-4898-ae71-ecb0914e12be",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "93c3853a-d7c2-4dcd-8e39-70648c6d4ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07219aa2-f78d-444a-ae68-78534bc89b10",
        "cursor": {
          "ref": "0c41f013-7507-4858-b50c-88d2b5bd507d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2d8af091-3e37-4a4f-979b-e7800bcd5b88"
        },
        "item": {
          "id": "07219aa2-f78d-444a-ae68-78534bc89b10",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c3e7f698-2d30-4d0d-915e-93196ebf54d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eb9c4b-2496-497a-bd15-1f03efa8149b",
        "cursor": {
          "ref": "f815a46d-ca57-4c27-8d79-1548164fa1ac",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c43331a9-1237-4c1c-a220-b7b0836b0744"
        },
        "item": {
          "id": "48eb9c4b-2496-497a-bd15-1f03efa8149b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5140ac6c-2408-4710-8cc0-55f7456d376e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ee82ec-68fb-413c-9c39-428ebb0e1e16",
        "cursor": {
          "ref": "885cc168-ab5f-44c5-bb0b-09fb824678ec",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "edfd5e75-954f-4296-9229-a6da33457f06"
        },
        "item": {
          "id": "e4ee82ec-68fb-413c-9c39-428ebb0e1e16",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a751d4f-794e-4dba-bedf-ce85ce06fc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff936e-1d48-4bfc-89e2-17b3060a1de9",
        "cursor": {
          "ref": "65eaee19-71db-48f5-87bb-47036323136c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "97f8c15e-934d-4ab0-b006-5961cf621ed4"
        },
        "item": {
          "id": "baff936e-1d48-4bfc-89e2-17b3060a1de9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3578bcdc-7ebb-4b30-8f45-42745b948dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e899de7-f1fa-4b11-a421-cdcd370a6d45",
        "cursor": {
          "ref": "4c041605-23cc-4721-b6d5-481f9b4bf6bd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7c799402-41c2-4870-8959-f58e1a38df3e"
        },
        "item": {
          "id": "4e899de7-f1fa-4b11-a421-cdcd370a6d45",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cd1442f9-ab4b-4aaf-baca-68e339a2383a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a875f-bf7c-4fdc-8f7b-ea776aef37ac",
        "cursor": {
          "ref": "0c36e624-5665-410f-b4b3-8d35c0dce527",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6c076f0-98a0-490a-97d1-db0e47712495"
        },
        "item": {
          "id": "ad3a875f-bf7c-4fdc-8f7b-ea776aef37ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aa57e4c2-cea4-4cfe-a8d7-b0d0453e9958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0ac574-8a61-41ac-a4af-79c188da3462",
        "cursor": {
          "ref": "499c6d6a-4e0b-4eb8-964c-464c800c0193",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e58053d9-a607-41a9-9f2c-695e47dee6a5"
        },
        "item": {
          "id": "8e0ac574-8a61-41ac-a4af-79c188da3462",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2d6b004d-7627-420e-89ef-5092c4bd6d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7c409c-846f-4e8e-85a3-4083432c35ff",
        "cursor": {
          "ref": "85c8c67f-1585-4528-a94d-430525f3e465",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ad630a5c-f73b-47b7-b986-945c5016830a"
        },
        "item": {
          "id": "6e7c409c-846f-4e8e-85a3-4083432c35ff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a2eb1d4f-2464-4649-b27c-86f5f8620ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447b029d-47ac-48af-818c-deb6a6e54b9f",
        "cursor": {
          "ref": "4f00b35c-749f-4269-a4e6-b9be75e05ea0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ae341209-d2a0-447e-99dd-2c8352b3773b"
        },
        "item": {
          "id": "447b029d-47ac-48af-818c-deb6a6e54b9f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6521560c-dce2-492c-b4a1-1dca16680c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ea7092-64a3-4660-a765-b0f1703b6602",
        "cursor": {
          "ref": "e216cda4-714f-4a83-9aa6-46a5b1e6b7c5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5c421630-7e68-4ff2-bb29-233502e20203"
        },
        "item": {
          "id": "84ea7092-64a3-4660-a765-b0f1703b6602",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a0088bb5-4190-4953-8b91-ea09fe93c614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7f25f5-a77f-4d5f-b0cd-d8578f752ee9",
        "cursor": {
          "ref": "c5b42256-1ce4-4a5b-9155-7e9c6735a9c8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f4d7768b-77e4-4c19-8a4a-65378a8fb151"
        },
        "item": {
          "id": "8f7f25f5-a77f-4d5f-b0cd-d8578f752ee9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9c1ba2c-d8fd-4074-92d9-5f0cf397fe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85925424-2d58-4c9e-bacd-f761b4595bf7",
        "cursor": {
          "ref": "7ea3232f-fee0-4a7e-811c-6c083652f79f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e8b151e-4c34-4188-8aec-1929abdfcb8e"
        },
        "item": {
          "id": "85925424-2d58-4c9e-bacd-f761b4595bf7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b61f0629-e406-48af-94d7-ccd811405640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f3daf1-b0c5-4012-83c3-a3deadce6cd6",
        "cursor": {
          "ref": "b033ad01-f714-44df-8099-4fd7f1352ad5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9aedc8bb-6aad-4f2f-89d8-bb7deb8a8789"
        },
        "item": {
          "id": "a8f3daf1-b0c5-4012-83c3-a3deadce6cd6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "810d0b3c-0b14-4290-a49b-d8a9c09a7b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409bb1b5-27d6-454a-a997-dbdc8e445a86",
        "cursor": {
          "ref": "4d8db784-34f9-489b-b8f1-2a98d0a8cac8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2c2d54ce-8e53-4755-bb5e-7c9e577a1d7b"
        },
        "item": {
          "id": "409bb1b5-27d6-454a-a997-dbdc8e445a86",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "db59eb87-6364-4062-96fc-c4d94e9f4edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5679ea-3ee7-442f-a663-15e30108333c",
        "cursor": {
          "ref": "695258c3-5b5e-4f83-b729-1be25eed32e3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "29364df6-7c90-442e-940b-e9c09edaf999"
        },
        "item": {
          "id": "0e5679ea-3ee7-442f-a663-15e30108333c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bf4e65eb-429f-4ce9-8322-f967524edb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d7df9-339d-4ac8-ab4e-9418a5848f4b",
        "cursor": {
          "ref": "564ab82f-222e-4cb7-8230-28f96a9c2ecd",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e934a5cf-d449-4c5b-baa0-13d51efbe972"
        },
        "item": {
          "id": "db4d7df9-339d-4ac8-ab4e-9418a5848f4b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f90d312f-addb-4f8a-bd63-bcf9d56088b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7c8f2f-e5aa-4dff-8701-a2283de08e38",
        "cursor": {
          "ref": "30d8c583-ae11-474f-b0f8-c1329913eb78",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "502bc6dd-62eb-443a-a0d9-379305901ff1"
        },
        "item": {
          "id": "dd7c8f2f-e5aa-4dff-8701-a2283de08e38",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8f7392e7-d381-465e-b397-9adafce25609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed98c41-ae90-4408-9982-d09b34cf8c7f",
        "cursor": {
          "ref": "93b646ee-95ea-4b83-a75c-2c8dfa3cee56",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "643af6dd-13a2-418e-b377-5feceace3eb0"
        },
        "item": {
          "id": "2ed98c41-ae90-4408-9982-d09b34cf8c7f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1e4091a0-1ffc-4e64-8392-8c077df5b49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5db2547-709e-42a2-8b56-949ef47b1710",
        "cursor": {
          "ref": "3f98f409-66c8-45cf-aa6d-0a5ac5f21cff",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2073d68e-ada5-4cf8-b58d-9cb63c9cec3c"
        },
        "item": {
          "id": "b5db2547-709e-42a2-8b56-949ef47b1710",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ec624712-2ca5-4768-8ba7-b77b2a027adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38857c8-b38f-4041-b0a7-28b373a08999",
        "cursor": {
          "ref": "f9219346-4c8f-48a1-873a-9a96ba0cbed7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6dd6e9ab-1a1d-4122-aacf-ed909d873c85"
        },
        "item": {
          "id": "f38857c8-b38f-4041-b0a7-28b373a08999",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f0fb490b-7acc-4b6d-9054-b10b27ca623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9508b51-5efe-46f1-9998-7c46432ca649",
        "cursor": {
          "ref": "f7661b60-57bd-4fef-bc30-dfec8347622b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "91bd2a00-653f-40f4-8092-ddc745533fd6"
        },
        "item": {
          "id": "b9508b51-5efe-46f1-9998-7c46432ca649",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7726d370-8e2c-479f-bd62-a7be51c3e005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341c110f-4cf2-4570-b64f-f38c28adc5a8",
        "cursor": {
          "ref": "70ea21e5-3453-4c18-a75d-922f672bfe45",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "161a32a4-5893-4fbf-8e4e-c20156da288c"
        },
        "item": {
          "id": "341c110f-4cf2-4570-b64f-f38c28adc5a8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9841b522-7728-42a5-8c10-558af58fc970",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a4b001-0bb0-4f3f-b369-01b8d482baf8",
        "cursor": {
          "ref": "ad742820-1ec5-40a5-a4df-58d3e94d95fe",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "31f6355e-f741-4a73-a196-89b8a1e13e4e"
        },
        "item": {
          "id": "98a4b001-0bb0-4f3f-b369-01b8d482baf8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b661de59-0f75-4067-b978-101c9124bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d7f552b2-fd32-410d-a7e6-85b2a6f04f1f",
        "cursor": {
          "ref": "4c5735f5-581c-4d9f-b7e9-7cb791012cd5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b9d3ccdc-2602-4bc6-b795-2d32deab4f9c"
        },
        "item": {
          "id": "d7f552b2-fd32-410d-a7e6-85b2a6f04f1f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d4ed05bb-a1d8-456b-a16c-d2a7676226db",
          "status": "Created",
          "code": 201,
          "responseTime": 21552,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbc12c0-c64e-41e4-9850-2d58b515553e",
        "cursor": {
          "ref": "6a7eec58-7402-455c-a340-c855c3706af3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "957bcfdd-65fc-4e73-92c1-4b6c9d2eae57"
        },
        "item": {
          "id": "3dbc12c0-c64e-41e4-9850-2d58b515553e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "07498d63-284a-4d2e-97ba-ce6474a93dae",
          "status": "Created",
          "code": 201,
          "responseTime": 20726,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "20998867-df96-49d0-8ce0-98bf764499dd",
        "cursor": {
          "ref": "2f1063f2-ef4c-4a89-a1b2-cc54309a7f69",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "29ab3c31-8c01-48ba-8038-c516c24e802b"
        },
        "item": {
          "id": "20998867-df96-49d0-8ce0-98bf764499dd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39795dfb-8076-497d-93a3-17f1d263d0a3",
          "status": "Created",
          "code": 201,
          "responseTime": 20525,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3169c0fa-0b66-418c-8468-6dcf9aaf3ebf",
        "cursor": {
          "ref": "ef21ed92-aa7b-4f62-a1bc-c51aa8b0f8d6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c4eaea53-df7a-427b-869b-26d1d843e362"
        },
        "item": {
          "id": "3169c0fa-0b66-418c-8468-6dcf9aaf3ebf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "28aa0c0d-34d9-49f0-b94e-ede6b8c04c0b",
          "status": "Created",
          "code": 201,
          "responseTime": 20819,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee689e4-717f-4b29-a82a-4d8f80197f7c",
        "cursor": {
          "ref": "b5a5b3b0-b6ac-4ef3-a1bc-4437d05aa0e8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4204e54c-31d1-4166-a000-2b40a58bc8e2"
        },
        "item": {
          "id": "aee689e4-717f-4b29-a82a-4d8f80197f7c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ae9c1dde-ead5-4996-957a-16a001a0a383",
          "status": "Created",
          "code": 201,
          "responseTime": 21475,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-21T00:45:14Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-21T00:45:14Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8fbeef15-8cd4-4ba9-aeb4-c47e33cb84e4",
        "cursor": {
          "ref": "eab4a44a-dd99-4d1c-889f-a4b628f48d82",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dbb23edd-6e3a-4502-bfca-9bc5eef4a8b4"
        },
        "item": {
          "id": "8fbeef15-8cd4-4ba9-aeb4-c47e33cb84e4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8131596-fcb8-47b7-81f2-cbb4b852610e",
          "status": "Created",
          "code": 201,
          "responseTime": 21866,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d78bf61-9e94-4d3e-851c-875e2896dd33",
        "cursor": {
          "ref": "4d0bffc2-a5b6-49ac-b913-69f8cc07beba",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "57cfad92-64de-4e63-8bfc-42af87e4a54b"
        },
        "item": {
          "id": "6d78bf61-9e94-4d3e-851c-875e2896dd33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "393359b5-8d37-4c4b-8489-2df267131929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5956ce-460c-4bcc-9d7c-44c02a44553d",
        "cursor": {
          "ref": "db006961-6839-48aa-bb3f-78980685d5d4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7da2ad4b-da57-411d-9d62-d03d11e928bc"
        },
        "item": {
          "id": "8d5956ce-460c-4bcc-9d7c-44c02a44553d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ee75dca-2e3b-4466-8b79-81e62ccaf9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cce0f7-93c8-4860-9ea3-43faefdaeb8d",
        "cursor": {
          "ref": "aaa5a99d-72dc-434d-8c4d-f004395f3cef",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d7e95260-f327-43d1-818c-78a633586e70"
        },
        "item": {
          "id": "98cce0f7-93c8-4860-9ea3-43faefdaeb8d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eb62c6af-c01c-419a-9301-7ce1b9a5a4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3289f9a2-7c2c-4d2a-8b79-1902f023e4f6",
        "cursor": {
          "ref": "fde26a9b-03fe-4f89-8b9b-151c197d5508",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cc4c5c97-b26d-481f-b860-5fbfd9648313"
        },
        "item": {
          "id": "3289f9a2-7c2c-4d2a-8b79-1902f023e4f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b9c8731d-d76f-42eb-95a0-d78d1212e90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73486bda-2707-4c40-9c66-077117fb9c3e",
        "cursor": {
          "ref": "7575d031-fa65-455e-babb-b30550fa3c29",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9cb898a2-59f5-46fd-b10f-2b1e40467058"
        },
        "item": {
          "id": "73486bda-2707-4c40-9c66-077117fb9c3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "28f2523c-6402-4a4b-972f-c14557f9c7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef482110-b0d6-42fe-836e-7d87796ffbc0",
        "cursor": {
          "ref": "cc0e492f-f9a1-4e33-8556-1bc295826b0a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ca489d1c-6ef5-4c13-b5cc-613867307a43"
        },
        "item": {
          "id": "ef482110-b0d6-42fe-836e-7d87796ffbc0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae7b4a6a-2108-4ffd-a76f-2a0a602d5863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2660efd9-f110-4cd1-a6f9-8bc17b91c4f9",
        "cursor": {
          "ref": "82417f59-40e6-451f-9125-a1c290024efa",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d8d2bb79-393e-4ea7-93f8-682a8b9bf5e1"
        },
        "item": {
          "id": "2660efd9-f110-4cd1-a6f9-8bc17b91c4f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba661ec2-5381-4ff6-a51f-18be1bfe26c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6d20ef-935c-4171-a125-2b8b2873c83d",
        "cursor": {
          "ref": "8c458938-bb73-4299-bc6f-7b8ab4a6c835",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2c92d9b7-a6e0-47bd-8546-faec5537ba66"
        },
        "item": {
          "id": "ab6d20ef-935c-4171-a125-2b8b2873c83d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5afc1164-dd54-4263-9bb9-b0d9e44e5d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e620a4fb-904a-4da6-8661-918dfed71eaf",
        "cursor": {
          "ref": "1cbbdb53-e6c2-4332-8f0a-bd701e5b5ac8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "60e7e725-e4aa-4735-94b7-ab18b8c997bb"
        },
        "item": {
          "id": "e620a4fb-904a-4da6-8661-918dfed71eaf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0813a951-1685-42ca-b112-db9ffad9d8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7046683c-d071-4700-a0ec-e7fcc3f62ac1",
        "cursor": {
          "ref": "6e425403-9e48-4d53-b041-ef9637788246",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1104bc3e-b565-4a0e-923d-31a7de093664"
        },
        "item": {
          "id": "7046683c-d071-4700-a0ec-e7fcc3f62ac1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9ac9af16-08bc-47c2-b6f4-8dc77d90d1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535185d2-be63-4f10-924d-d254a55561a2",
        "cursor": {
          "ref": "26b4fbdd-75db-4e52-ac21-61b5609ece89",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7cc8ac67-0b65-4a15-9080-4e12527dcc97"
        },
        "item": {
          "id": "535185d2-be63-4f10-924d-d254a55561a2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7317d91d-8080-4d1a-b256-555a17595b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50719ee3-64b0-40ce-a31f-a510cb012032",
        "cursor": {
          "ref": "801a2c53-ed43-49e5-801b-e969da3ab065",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "11646eb1-f5fa-4a6a-979f-7190c4c2d757"
        },
        "item": {
          "id": "50719ee3-64b0-40ce-a31f-a510cb012032",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33a2b13c-ec78-41ca-b489-87a54f7998b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc23a0fc-5398-4970-9d33-2482a86e6af4",
        "cursor": {
          "ref": "0665583d-ebe2-4906-8d27-447854f562d7",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2a78fab2-194e-4199-8133-4212e996f89d"
        },
        "item": {
          "id": "cc23a0fc-5398-4970-9d33-2482a86e6af4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8de8544e-8348-41ed-b039-c2fd5a54e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c723697-9c81-4c8b-a1ad-530a8e6d1fc4",
        "cursor": {
          "ref": "7abd489b-1147-4d2e-9d51-f95128208dde",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "71ab4515-2179-44b1-876e-557a53100e32"
        },
        "item": {
          "id": "7c723697-9c81-4c8b-a1ad-530a8e6d1fc4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5ef49b84-27fa-4156-a3f2-bebf4e1feb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be705d35-18ca-4f0a-84ae-f723ec19cf12",
        "cursor": {
          "ref": "da714c38-39f1-4b4a-bb8e-a7e46a96f6bf",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3c1e03a-b7ef-4a47-9334-1383cb654200"
        },
        "item": {
          "id": "be705d35-18ca-4f0a-84ae-f723ec19cf12",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "28ed0cd9-9d47-4e8e-96e9-c0c8fc8e9198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55841d0-95a4-40e6-b77b-5d42949b081b",
        "cursor": {
          "ref": "fb1070f6-11af-4ff6-8581-3cb3c06c51db",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "20e60d66-1144-452a-b276-ef12c391a714"
        },
        "item": {
          "id": "c55841d0-95a4-40e6-b77b-5d42949b081b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fc63c0c8-97d3-4f15-a7a1-74e1059734e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383fe5b1-3466-49b4-97f4-202cb6f0f327",
        "cursor": {
          "ref": "c909ca9a-2cb9-49ee-8f9a-b1612ad56dbd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f3c1087a-9550-4d54-bc1f-a3baac5697e5"
        },
        "item": {
          "id": "383fe5b1-3466-49b4-97f4-202cb6f0f327",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60b0d4fe-01a6-4231-b56d-bf161344b39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ac4f03-4b78-4854-a40d-6574a683d862",
        "cursor": {
          "ref": "b824c1c0-0a8a-4d2e-ab47-b9ab90415e79",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cef4f479-0bee-43c9-8c71-c369c65093c3"
        },
        "item": {
          "id": "f4ac4f03-4b78-4854-a40d-6574a683d862",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d5579e11-0d8b-4004-b66b-6aee8998ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4a9c96-aa4b-4a72-92a6-44cbe834b74b",
        "cursor": {
          "ref": "c804f95a-ee3b-4b5f-96b7-8fffefaa02d7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3f047b1b-e8fd-4844-bb5e-20eae02b6560"
        },
        "item": {
          "id": "ce4a9c96-aa4b-4a72-92a6-44cbe834b74b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b4cf4f2-2f3e-47df-a8e7-46a42abda0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d0cdb-0200-40b3-be0b-e9e6a1ea3c47",
        "cursor": {
          "ref": "cded9159-1d84-4f4a-a261-99b8698124a1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b47d401d-0f0f-479e-89fb-58eeec84ad50"
        },
        "item": {
          "id": "4c5d0cdb-0200-40b3-be0b-e9e6a1ea3c47",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6aa39f79-5e22-42ca-afa0-6b3cea6f4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672514e-c351-4dfe-b2a6-3ce3d3ff9da3",
        "cursor": {
          "ref": "e044a134-a6ae-4a21-8f07-a92bb502fef1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b82b43f5-9786-4f04-89ea-768590a77cf8"
        },
        "item": {
          "id": "4672514e-c351-4dfe-b2a6-3ce3d3ff9da3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a359d30d-0797-48e3-8e00-8c74616cbc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b824f-f073-4035-9296-a41b9aa9b1a3",
        "cursor": {
          "ref": "3bcd6a3e-ec81-4c3c-929b-86e75c2d4499",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "96839adf-f825-4976-8b84-6d41d3fa22cf"
        },
        "item": {
          "id": "539b824f-f073-4035-9296-a41b9aa9b1a3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8ddec673-7c68-47eb-b26b-3d80f5d558ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043464a-cfea-47c0-a4ec-3f3742f86751",
        "cursor": {
          "ref": "9e4551a8-7a89-4b53-96cc-c6a944a38514",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f856aa7d-2fca-4f5e-bdda-d7ac0ea7c7a2"
        },
        "item": {
          "id": "0043464a-cfea-47c0-a4ec-3f3742f86751",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "253a417c-a695-4aa7-a454-dbfd5199df68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a5601f-5714-4318-b208-ab0563536cec",
        "cursor": {
          "ref": "66f6dc7f-9bcc-4bd7-86c7-fd22f6a9618e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "207a9fec-220c-44be-82ab-3d463983fea4"
        },
        "item": {
          "id": "f9a5601f-5714-4318-b208-ab0563536cec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "572b3f97-6602-4483-8941-0d026c2e1730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1d8f2-4bb7-454a-b987-7dd9d2e1a0b8",
        "cursor": {
          "ref": "8d6c5113-1a6c-4a89-9325-2a42592fdf07",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "590f3b52-d345-4903-8f54-37636aff8da2"
        },
        "item": {
          "id": "9ee1d8f2-4bb7-454a-b987-7dd9d2e1a0b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "170b5bdd-bbcb-4f61-8cbe-bd0c65098703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb4f69e-9454-41b5-a0fa-2c4a9831bd6a",
        "cursor": {
          "ref": "a7441122-b5a5-47e7-bec7-13171994a446",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "afba981a-62d1-4bca-82fb-41522b33f239"
        },
        "item": {
          "id": "2fb4f69e-9454-41b5-a0fa-2c4a9831bd6a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "149867fe-7d83-4050-aef8-98030c579e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170e396e-7412-4e76-9975-0e3f8d9bab26",
        "cursor": {
          "ref": "34e4df37-1d4c-426b-ac01-c9b8b1ffcaff",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "489f51e3-4320-42c6-aaef-81d0368048d1"
        },
        "item": {
          "id": "170e396e-7412-4e76-9975-0e3f8d9bab26",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1d302b2-b14b-49be-8235-ef9294f5c6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880ffefa-fd2c-46df-b508-333820ae22f5",
        "cursor": {
          "ref": "6dfd0dac-cc05-4c38-b3de-6afa2132678f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee8e7ab6-add7-42e5-a6d8-cdf908cb7a57"
        },
        "item": {
          "id": "880ffefa-fd2c-46df-b508-333820ae22f5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "88cf4909-b86a-454e-bef9-85d580da9ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d2a53-6eb1-4312-9f62-ec39263c24b8",
        "cursor": {
          "ref": "6d6b711b-b384-4c6b-9583-1b6ea34b8b1f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b3b0d3f9-12af-4801-98ac-ae16579e47f1"
        },
        "item": {
          "id": "ce9d2a53-6eb1-4312-9f62-ec39263c24b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4e114070-2aca-40c5-a8c5-d6f0d1a7c79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2c639d-fcbe-4d7c-8b28-bdd73819a9e1",
        "cursor": {
          "ref": "026fe80b-226f-4538-a7f4-39d56588237f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f682b938-df40-48c4-a96e-6af86d5e76c8"
        },
        "item": {
          "id": "3f2c639d-fcbe-4d7c-8b28-bdd73819a9e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3fcee1c3-9c1a-4874-84b2-3b65d4a59dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec9a962-bf7f-472a-825e-ad104feeb202",
        "cursor": {
          "ref": "ac66c00a-663f-4d9f-b6b0-0daac4367990",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7a5d4347-379b-4e7e-a535-9da72917e30d"
        },
        "item": {
          "id": "9ec9a962-bf7f-472a-825e-ad104feeb202",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "529ff17b-c3dd-4de4-bc2d-121bad8fa7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda89d6-4d60-4048-877c-0c8e1f18b1ce",
        "cursor": {
          "ref": "8e1e7373-1a9e-4c53-ae08-bfa14d7efe3f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de8d1702-71ff-4897-8d4e-15e09cd6726e"
        },
        "item": {
          "id": "2eda89d6-4d60-4048-877c-0c8e1f18b1ce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3d0e4422-f939-427c-97b1-59b74b9e808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5db7e12-14fc-4bc0-9e00-83108813c7da",
        "cursor": {
          "ref": "36a0c342-e12a-4896-b5d0-3d6126b48662",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cae5ace1-f2b2-4654-a323-6a951d9660b1"
        },
        "item": {
          "id": "a5db7e12-14fc-4bc0-9e00-83108813c7da",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "37cc67bc-1cba-4dc3-985b-cc00336ead16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11159fc9-b3a1-4b69-b5e8-f9a6ac35fe30",
        "cursor": {
          "ref": "70ee526f-943e-4bc1-88a8-b23959eb377c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36bd2877-a805-4ccd-851a-6547a9500590"
        },
        "item": {
          "id": "11159fc9-b3a1-4b69-b5e8-f9a6ac35fe30",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "68d43672-005c-479a-abca-efa76782193a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38cf18-4550-40eb-af5e-b74f1c8c583e",
        "cursor": {
          "ref": "aef4dac9-2e9f-40d4-aaf3-c32e61516afb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d851cd6-ba97-410d-9c34-967f7452345f"
        },
        "item": {
          "id": "fd38cf18-4550-40eb-af5e-b74f1c8c583e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ad144fb9-9f0d-4970-866d-ca5ccdd04c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2eecb4-d3e6-454f-bd62-36f52d7963f5",
        "cursor": {
          "ref": "bcdf8bfb-8607-49c3-be66-4e1242eaf58e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c25f402e-d784-4df1-b7d0-aae175c357f9"
        },
        "item": {
          "id": "be2eecb4-d3e6-454f-bd62-36f52d7963f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fe92055a-1982-4d2b-890c-88f8e4f02f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fb73b5-0a9a-4a5d-a351-07ad329d3b99",
        "cursor": {
          "ref": "3d7e9c59-6e57-4ddc-8800-d1597c4990f4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fb941fbc-7599-4a31-97a8-7883b405a77f"
        },
        "item": {
          "id": "e7fb73b5-0a9a-4a5d-a351-07ad329d3b99",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a3381e9-f930-4479-a72d-2729c07be3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c01c91-50af-4bdf-b635-5e84236d713d",
        "cursor": {
          "ref": "5aedbe74-d76a-48f0-9705-8a05c99cfc57",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "532a6f81-0f6a-4fd2-bb9c-f00b5b06ed82"
        },
        "item": {
          "id": "c1c01c91-50af-4bdf-b635-5e84236d713d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08b8f6f6-e555-4e57-8535-4bdcaf67e51c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bfcf75-63b7-435e-b023-7556737b7e34",
        "cursor": {
          "ref": "5f28d7f9-7e38-49ee-bc07-bc6b430fde7c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f5c34aa8-faa4-4414-aa27-641d75b78978"
        },
        "item": {
          "id": "d4bfcf75-63b7-435e-b023-7556737b7e34",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "487217bf-c1f6-427a-ad22-c9795d9f1d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f7368-5835-4033-a36b-aef76a81fc9f",
        "cursor": {
          "ref": "637c73cb-bf58-4840-b765-1dc6c736a109",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c94a1cf3-fd0a-4d8a-ba94-0d851abe9eb4"
        },
        "item": {
          "id": "bb7f7368-5835-4033-a36b-aef76a81fc9f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8b8cb35e-224f-4993-b10d-eecde092749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742102c7-fe3f-4994-aa88-013483623a5f",
        "cursor": {
          "ref": "02f4aa1c-0a77-4ddf-8863-3293809d33cb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f095c42-fa2e-49d8-ba95-dfdd3bdd2bff"
        },
        "item": {
          "id": "742102c7-fe3f-4994-aa88-013483623a5f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bc1e79d2-168e-4cab-ad6e-7be5db13374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bf5a25-4610-45b3-bdee-d14039227e67",
        "cursor": {
          "ref": "6d6a270c-cada-4ded-bfa1-57f852ef8ac5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e6821570-c906-4a7c-adb5-8c5fc19a2831"
        },
        "item": {
          "id": "80bf5a25-4610-45b3-bdee-d14039227e67",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c5f5b283-046b-49a4-8b88-f1566ea2f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7437b00-134b-4b43-8010-ceef88446208",
        "cursor": {
          "ref": "91e276a8-f676-4f41-9e28-8fdcdc2def9b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6800dbbd-d7b4-4b53-bd9d-98e3fd739942"
        },
        "item": {
          "id": "f7437b00-134b-4b43-8010-ceef88446208",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d88d36ae-72fc-4c1e-af57-fd92b9a5b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe82ac95-65f4-46b8-b9e6-654174ba8ed5",
        "cursor": {
          "ref": "421617e7-21c1-4812-ae62-10e835ab9606",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "34bc6127-22c8-4788-a40a-03e66adb02c2"
        },
        "item": {
          "id": "fe82ac95-65f4-46b8-b9e6-654174ba8ed5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e62e27b1-99a1-41eb-a922-eeb9f09ec693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454bc05-fb2e-45fa-8d4e-6bcd72195ddf",
        "cursor": {
          "ref": "91524267-3939-4fc3-8324-6b34a48ab244",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9730e331-7aef-4fff-8c50-7763fd424261"
        },
        "item": {
          "id": "c454bc05-fb2e-45fa-8d4e-6bcd72195ddf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "89e4a5b6-03be-4e39-8405-0a01f82af5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e92cddd-df65-4fcb-be27-73f4fdd1ebdb",
        "cursor": {
          "ref": "2479fd3d-6a24-4277-90bc-7dbe8e33b579",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7284b2d4-d084-4747-9019-be414334e4d1"
        },
        "item": {
          "id": "5e92cddd-df65-4fcb-be27-73f4fdd1ebdb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c8372f6d-4041-46d4-97ac-e7601fc2641c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf03478-7e67-4bce-8863-8244945adbd0",
        "cursor": {
          "ref": "7b18014f-a03f-44fe-b95d-7a3b75c78e7a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "693fc5b1-03bb-4d55-b255-9c36d7e5f7b8"
        },
        "item": {
          "id": "bbf03478-7e67-4bce-8863-8244945adbd0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9b6f291b-0ddf-4fff-b13e-69f6e2fa095f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df24d038-20a4-4c42-bb59-20f7bfde5f5c",
        "cursor": {
          "ref": "643bb856-2fda-459c-a5fc-9c8b3c62a6bc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1b30df62-f595-407f-a1a8-25c42fb0ff3d"
        },
        "item": {
          "id": "df24d038-20a4-4c42-bb59-20f7bfde5f5c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b7116fd7-0d76-42ab-8fd6-9de3b04ce283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9400e7-55ca-4265-9adb-08f53e7ce54b",
        "cursor": {
          "ref": "16bfb31b-cd72-4b34-a44f-0f80228a9cf3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c70fe787-69e4-4ac0-ae5a-d1db3b2b70bb"
        },
        "item": {
          "id": "8c9400e7-55ca-4265-9adb-08f53e7ce54b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "df64a669-b8fa-433f-a809-97fc885ed5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a856274-e102-4bc2-9214-c4ca45de32a3",
        "cursor": {
          "ref": "bb3ab20f-b3d0-4f68-9db4-fe2f617ab99e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e17059cb-0a99-41e2-936f-e5908a185d65"
        },
        "item": {
          "id": "3a856274-e102-4bc2-9214-c4ca45de32a3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9fe49204-2793-4beb-8c6a-27db926e9acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088be93-60d3-4dfe-9146-6eb4fd11f8b0",
        "cursor": {
          "ref": "b250e9b3-f077-4685-9e2e-86a038d4231e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "da55f1d4-0ff6-499f-8b76-2abd013ca426"
        },
        "item": {
          "id": "a088be93-60d3-4dfe-9146-6eb4fd11f8b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd3389de-0dfa-4564-bbbe-ca838a72699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac6b4b-e0ab-4056-9c20-3b1740192cd5",
        "cursor": {
          "ref": "c0a5b09e-dc1d-4c15-82fb-8f033762e0f3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "621a7193-3f2b-437f-9949-509729e98406"
        },
        "item": {
          "id": "63ac6b4b-e0ab-4056-9c20-3b1740192cd5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "af0fbe18-be2f-4e35-ae10-a8064ea7ee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aad23f6-5ff4-4852-a8de-e28fe4a830c1",
        "cursor": {
          "ref": "6515bafd-5107-4e4e-9d23-915821025eb7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d1569e7-fb68-4283-8603-366ef6bea46a"
        },
        "item": {
          "id": "8aad23f6-5ff4-4852-a8de-e28fe4a830c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f105b82-bdab-40e5-b45f-f425459f4fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20122cfa-487b-403a-b66c-74641d2e50e2",
        "cursor": {
          "ref": "243b9f80-356a-4ad6-8350-e9acfbef12b9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1e977cb3-4d49-44ac-9997-5743f7cef8b6"
        },
        "item": {
          "id": "20122cfa-487b-403a-b66c-74641d2e50e2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a0cf8b53-9544-431b-80f5-69570a89ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde9ea96-c29f-42fb-a8eb-575148c566a0",
        "cursor": {
          "ref": "1ce9f16d-a9b8-49ca-8632-b3745e133bce",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d7602e6-0242-4eca-84ef-a635031e4454"
        },
        "item": {
          "id": "cde9ea96-c29f-42fb-a8eb-575148c566a0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae328fac-5581-4d8b-85a8-74fb6c4c7678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a28c323-4fd5-4945-b573-162beb24846c",
        "cursor": {
          "ref": "33742049-6244-401e-ac18-3b0853449917",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f781458d-ca5f-4f0c-93d4-a3b52ebecb4a"
        },
        "item": {
          "id": "9a28c323-4fd5-4945-b573-162beb24846c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "33333e35-4757-4d36-b2de-185feb628b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a088fd-dc60-4915-9ca2-1afe79787f73",
        "cursor": {
          "ref": "03a39dae-91ec-4cb8-85b6-bc994ed5cf2a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4c103514-3ee1-4d56-b9b9-3e137546c359"
        },
        "item": {
          "id": "a4a088fd-dc60-4915-9ca2-1afe79787f73",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f9e56f6c-4779-47e5-8d72-802c006553e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51970e7d-5b6a-4d5a-be60-cdc34e4baa14",
        "cursor": {
          "ref": "db09db07-1f1c-4f2d-acfc-8b615855b574",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8b315846-b8c1-4eff-9dbd-c126a8d591a1"
        },
        "item": {
          "id": "51970e7d-5b6a-4d5a-be60-cdc34e4baa14",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8806b9ca-fc4d-41f5-bbdd-4c0203e28773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2811ac12-9619-49a4-a7f6-abc42221012a",
        "cursor": {
          "ref": "54962003-1a61-4487-ba17-9992fb2b6305",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eecbd22a-80cf-4b1c-a4b4-198c9dd22bd8"
        },
        "item": {
          "id": "2811ac12-9619-49a4-a7f6-abc42221012a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aed89316-e69c-4cf3-8a0d-8048a76a8888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8509ec-8ddf-4baa-aab0-8602f9d18d63",
        "cursor": {
          "ref": "a79f9e46-b2f0-42c5-9b38-0650de17072f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8d335b8-7b38-43d3-9a14-12e6835e3dfc"
        },
        "item": {
          "id": "ec8509ec-8ddf-4baa-aab0-8602f9d18d63",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "05727652-f271-4313-b02f-d94a0d7e8632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d430325f-1f9e-4562-bf7d-d6d267940fce",
        "cursor": {
          "ref": "99b6c6ba-5515-4b28-827e-6074b12d7dee",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1e9ccfee-2c34-48b0-8192-cab306a197a0"
        },
        "item": {
          "id": "d430325f-1f9e-4562-bf7d-d6d267940fce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2bb7b1b9-96f9-4e11-baa7-e3569bde44c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4144ed40-4e4b-432b-8dba-765793ced29f",
        "cursor": {
          "ref": "9cfe6a14-691f-4330-8a38-a70b2dce885a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6b3b8a28-cae3-4312-9f67-6b5a7ec9da90"
        },
        "item": {
          "id": "4144ed40-4e4b-432b-8dba-765793ced29f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f19a0eac-f82a-4335-92d2-df5dcadc3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104bcf64-6e47-4635-8a74-88b77a01edef",
        "cursor": {
          "ref": "2f21450d-5ea2-4b59-bccb-a0c23925b919",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c307a407-4184-4d12-a069-a3185772b8e5"
        },
        "item": {
          "id": "104bcf64-6e47-4635-8a74-88b77a01edef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44b23157-158f-4cbb-89df-18bb42b2218f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c0ad3d-5ab4-43bc-9f25-5cd81633693b",
        "cursor": {
          "ref": "c5f5a0a9-1db7-4e67-9f8d-5ce52bd0fed8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c027849e-788e-4eca-b043-34138bc96c4d"
        },
        "item": {
          "id": "b4c0ad3d-5ab4-43bc-9f25-5cd81633693b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dc048b41-f527-48df-bc2c-64688bb869a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965950a1-7304-4694-bb9b-be8f0c0d298f",
        "cursor": {
          "ref": "c18bfe3c-d14e-4fe0-80be-35e5d865964f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4fe557c0-0451-441d-9e5d-7367f5ad8814"
        },
        "item": {
          "id": "965950a1-7304-4694-bb9b-be8f0c0d298f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "50f18667-5688-4a16-a70a-62aff2e096c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16f0f4d-1185-4bd5-aecf-bfeb00a907d6",
        "cursor": {
          "ref": "2ca2c68c-36c8-4a30-a4bf-86927b669bfe",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "93dfcefe-9d2b-415a-962d-aa290d6fa630"
        },
        "item": {
          "id": "c16f0f4d-1185-4bd5-aecf-bfeb00a907d6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cc5bcaa3-ea6b-42fd-874d-8b2adb177e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c510a5a5-bcf9-46e7-9f3c-ca0f5f245ce4",
        "cursor": {
          "ref": "c36b336b-4b40-4871-a054-326b3f0de9be",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d51576dc-268f-46eb-babe-1455f2073fd6"
        },
        "item": {
          "id": "c510a5a5-bcf9-46e7-9f3c-ca0f5f245ce4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bc41490a-d3d6-4212-86bb-2cda1902b944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313df69-99ee-4c07-82ff-a282f86b6679",
        "cursor": {
          "ref": "2644c35d-8af5-4528-9cfb-76fd01a3ccbb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "664bc952-3cc9-41cf-b797-18a7edd72859"
        },
        "item": {
          "id": "8313df69-99ee-4c07-82ff-a282f86b6679",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a2c92398-56ba-40f4-87e1-11197a750018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e64d79-efd1-4aae-8357-c2adbc40bdd7",
        "cursor": {
          "ref": "f3f7a74a-f863-4fba-963d-c5ea3ccf6578",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4d30248b-2b79-4423-8fb4-43376e77ded1"
        },
        "item": {
          "id": "88e64d79-efd1-4aae-8357-c2adbc40bdd7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "53c58134-ba3e-4616-b056-eb7b6c86b1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ae326e-912e-498c-9f62-a757801436e1",
        "cursor": {
          "ref": "1b80bdae-227a-45c2-b6ff-0b07dbfe955a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "74cc4b81-25a7-4c92-b04b-de966ab9178b"
        },
        "item": {
          "id": "16ae326e-912e-498c-9f62-a757801436e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d7c5bdee-70d3-4ec5-8736-8acf51b1fcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157f11d-9bec-48f2-b9b2-d2231d2a24dd",
        "cursor": {
          "ref": "0d278031-3aa1-4038-a7d8-46f149e4be0a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b2c2022a-32d1-4fd9-9664-6584c23d5747"
        },
        "item": {
          "id": "3157f11d-9bec-48f2-b9b2-d2231d2a24dd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0c03ad71-d22f-444c-b730-cf3d7f9a998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad9d12f-88d6-4b16-82d9-3a5b8efae464",
        "cursor": {
          "ref": "0c8dce91-e6bd-43b2-a846-079cabad67eb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "87217ad9-59a2-4252-8683-78aa5e4ab2c8"
        },
        "item": {
          "id": "4ad9d12f-88d6-4b16-82d9-3a5b8efae464",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4a98d0ca-ff69-4517-ba6d-d3710091c7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3e4f3c-f891-423e-8ae4-b7d15010acc5",
        "cursor": {
          "ref": "37f471ef-272c-425b-a02d-202321e2b343",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "277b8699-e7be-4eb1-8080-a5ae1360f206"
        },
        "item": {
          "id": "7d3e4f3c-f891-423e-8ae4-b7d15010acc5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1ba27029-3bdd-4d40-813d-e57537233fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a36b56-1c6a-4ad4-bd41-3fc54e12486c",
        "cursor": {
          "ref": "bb3c2508-4be3-48ba-810d-dfc00d9e43c7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56a0b293-53ae-4465-856b-5841eef34066"
        },
        "item": {
          "id": "d9a36b56-1c6a-4ad4-bd41-3fc54e12486c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8ba98d13-7c55-4c2d-9f77-996b35fdd1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a181f8b9-f4cd-4cca-97ac-e87b6ca390f9",
        "cursor": {
          "ref": "87a8010f-34fa-43ac-bc6e-9dc6237b0539",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2a9e954b-169e-44df-bc00-12a016517f92"
        },
        "item": {
          "id": "a181f8b9-f4cd-4cca-97ac-e87b6ca390f9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b89eea53-b0a9-4d1d-b311-b0e89d36bd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9024117-d6dd-4f7a-95fa-dedb91d79800",
        "cursor": {
          "ref": "f434bb1b-3836-4613-af93-26deef73d08f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "acc86b1e-fd5a-46b2-9cc6-2614b99ba10c"
        },
        "item": {
          "id": "f9024117-d6dd-4f7a-95fa-dedb91d79800",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "505557fb-139e-4cdb-9294-b8c75186b154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c38bf2b-1af2-4073-b835-0ccf583dc0d8",
        "cursor": {
          "ref": "ae99b4e1-e035-4b30-a5c7-0db680ffcd6a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "180fb10f-7801-4524-9ebe-2885f4cf9d5d"
        },
        "item": {
          "id": "2c38bf2b-1af2-4073-b835-0ccf583dc0d8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b09976f4-e496-4cfd-8de2-9060119dda4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45522642-1e34-471a-8ffd-6e22a72ba818",
        "cursor": {
          "ref": "b249ac61-6796-453b-a55c-ed2f0b3faf32",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "97986041-797b-485a-80fb-3cc9bf60b5b6"
        },
        "item": {
          "id": "45522642-1e34-471a-8ffd-6e22a72ba818",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9c17cf53-9d0e-42ab-9804-55d3c6506a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d8435-723b-4cd3-b710-875c94895388",
        "cursor": {
          "ref": "cd4d2182-caee-4fd3-bf44-9e7bd1be39e6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "017f9508-1ea8-4007-a1ce-506d33912704"
        },
        "item": {
          "id": "317d8435-723b-4cd3-b710-875c94895388",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee3ff2c2-6777-4659-9e4d-c63da5dfed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8664817a-e480-4e75-a0b8-c09b7a379d1f",
        "cursor": {
          "ref": "a5263ae6-b9f8-4a19-bd15-68c7c9d5bb42",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6b913d7d-e212-441e-875e-a2d3233cddee"
        },
        "item": {
          "id": "8664817a-e480-4e75-a0b8-c09b7a379d1f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e611996-098c-4a0a-a68f-df805ebc580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0b0f74-15b5-4326-b529-2b33b11b92d1",
        "cursor": {
          "ref": "a04361f7-b0a2-41b2-bff7-74c19691c591",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5106d142-b2d7-4be5-abd3-59b11bb2f216"
        },
        "item": {
          "id": "4d0b0f74-15b5-4326-b529-2b33b11b92d1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5e48b5c2-9d63-4b6a-a127-528fe207595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f7af6-c2df-45d2-88fc-13dcee98fe75",
        "cursor": {
          "ref": "8e6daefa-2341-49b6-a60f-da76835c5ec2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "65d1c4a7-c790-48fa-9abb-f676c8c06474"
        },
        "item": {
          "id": "4c7f7af6-c2df-45d2-88fc-13dcee98fe75",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b1344bc5-16bc-40a1-b953-03fd90991d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a5f442-89ae-48bf-9770-ff8cadc0ec7f",
        "cursor": {
          "ref": "24992203-cd9f-4de3-8285-c6cc31acde04",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "89f2c5d1-9e65-49d3-a3f4-f8c7459d7ffc"
        },
        "item": {
          "id": "08a5f442-89ae-48bf-9770-ff8cadc0ec7f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ddf99e1-c348-41c8-861f-038b6e9b4e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d70c2ae-7ac6-470b-b104-caea240057f7",
        "cursor": {
          "ref": "161d8447-8266-46ef-b429-3529510498e8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "964cdb9e-7aec-4627-b7bb-ef1d064768db"
        },
        "item": {
          "id": "5d70c2ae-7ac6-470b-b104-caea240057f7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a1ad8d1d-21b8-4300-8620-5ee212ffc222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc043c5-9788-41b8-8ef8-b6aabe0981a4",
        "cursor": {
          "ref": "a3797c91-3870-478f-979b-dc8eaed40f39",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c4b4a94f-8415-428d-b16b-33816743a4b7"
        },
        "item": {
          "id": "afc043c5-9788-41b8-8ef8-b6aabe0981a4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "31b030e9-d95b-4204-9d7e-8ca7ad7717e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c363a50-759b-457d-a1fc-8a2f6fe8aa8f",
        "cursor": {
          "ref": "56594177-3734-417a-8c4f-6c0c89aeddda",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f3d9e933-b916-49db-91d3-2c8ce5782742"
        },
        "item": {
          "id": "3c363a50-759b-457d-a1fc-8a2f6fe8aa8f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b813ae8-d65e-4052-a52d-87eb333609b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ff636b-76b8-4229-aaa2-fd3ed2d5e335",
        "cursor": {
          "ref": "92ef8da2-9ec2-4cf7-bfaa-35bbcda16f62",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b901e0bc-901d-44bd-9895-526ae1641d86"
        },
        "item": {
          "id": "48ff636b-76b8-4229-aaa2-fd3ed2d5e335",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b89124ff-77bc-460c-845f-4042e58a89a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51341041-b4fc-409f-925f-30671fe44dbf",
        "cursor": {
          "ref": "2a7ef930-e832-4fd4-ac79-f1eda9d9e8cf",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "866c3870-7429-4bd4-ba54-e180bb775f08"
        },
        "item": {
          "id": "51341041-b4fc-409f-925f-30671fe44dbf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4eb23736-1311-4016-84b0-9c27a000c012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323cd448-f817-4d74-af17-dbd5f503f88e",
        "cursor": {
          "ref": "e6d7d718-fe12-48c7-9b35-b4b23839112e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1beb7f7c-5c27-4804-9814-d7ee322b1beb"
        },
        "item": {
          "id": "323cd448-f817-4d74-af17-dbd5f503f88e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd86e5e5-6d2e-41f2-b521-e8cb3cd36119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bdf5ce-2a28-4f4a-89dc-d089d211e453",
        "cursor": {
          "ref": "0a0d79a9-8d08-4e33-8e5e-a09191c7d507",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c414000-523a-482a-8f50-b1b0f4096270"
        },
        "item": {
          "id": "20bdf5ce-2a28-4f4a-89dc-d089d211e453",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e3e69f3-8b70-4e79-8cae-72386969585a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6967bc60-f4af-4fa1-a27d-df13fb3be40e",
        "cursor": {
          "ref": "8d336e68-4466-43ee-857d-107511120cfb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ddf10c65-cc2f-42e8-b31a-c7b4278983e3"
        },
        "item": {
          "id": "6967bc60-f4af-4fa1-a27d-df13fb3be40e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "09c0927a-8eac-42e7-b9f9-c68f29c1af37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cc5457-03b3-4d1f-b418-c7fae778d2f3",
        "cursor": {
          "ref": "e2ceed7a-2db7-428d-8f2c-80b51c6ec8fc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "da44722f-3cb2-4e79-bdb3-ac2fb9a9274a"
        },
        "item": {
          "id": "95cc5457-03b3-4d1f-b418-c7fae778d2f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6410c2e0-9292-465b-948b-108e4b959fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c6381e-dcd4-4bab-916c-70a968b2d504",
        "cursor": {
          "ref": "a7c11ea3-233d-44b1-8cf6-b84fa932cb30",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fad15b87-a1ce-4d16-a5fe-2544fe7bebc3"
        },
        "item": {
          "id": "d3c6381e-dcd4-4bab-916c-70a968b2d504",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9058b164-e7f2-4e25-a4a2-95918c976b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404edcea-dab0-4145-9a92-bf5605766ae1",
        "cursor": {
          "ref": "38ae3ce8-2a88-44a7-abfe-663736fd5c1f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d858bbb7-ea9f-4799-95ac-731f9fc091a9"
        },
        "item": {
          "id": "404edcea-dab0-4145-9a92-bf5605766ae1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9c7293f3-789e-47af-960a-61ce9cc5db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3afd95-8010-4732-9399-ee764f17a8a6",
        "cursor": {
          "ref": "a448751a-7a4e-4f13-981c-b84cb2dc6527",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b544f581-6cda-40b4-b491-e0e24f92b57e"
        },
        "item": {
          "id": "0e3afd95-8010-4732-9399-ee764f17a8a6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8ecefbe1-1c20-4264-867c-bd1f0668ffec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f5c677-b953-43fa-ac3b-51c821791a91",
        "cursor": {
          "ref": "94fa5f37-8c15-464e-a8fe-7e2c001e5a1b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b7657e00-fdae-434d-b737-f7aede916961"
        },
        "item": {
          "id": "67f5c677-b953-43fa-ac3b-51c821791a91",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "11fcb78a-9182-4aa0-a08b-47d25a7b0839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1310d17-13e2-44b1-b9f7-da1baf2eba04",
        "cursor": {
          "ref": "54311ae6-62b0-44ba-9721-c0945b4e6cb7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "05836440-9c55-47af-8c86-54a46e286367"
        },
        "item": {
          "id": "e1310d17-13e2-44b1-b9f7-da1baf2eba04",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8302de3-af98-458b-80bb-5b1b3c780ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f69519-5127-4553-ac7d-eb3a1d232e73",
        "cursor": {
          "ref": "bf233c63-71c4-4d00-a569-b9459149d49c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2dbd4a68-291f-413b-a77b-d29290925726"
        },
        "item": {
          "id": "d2f69519-5127-4553-ac7d-eb3a1d232e73",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a0e38100-41f9-47fa-9976-c69b757b4d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46a06ec-eb46-43aa-8df2-9853566558db",
        "cursor": {
          "ref": "1c5f42cf-00f1-40dc-ab38-46e43ac5eb44",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "60edfbf1-2e2c-468a-8bce-45ce81bc1a99"
        },
        "item": {
          "id": "d46a06ec-eb46-43aa-8df2-9853566558db",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "89311182-f8d2-40c1-a2e7-dfabaf0a0d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc021108-6ac1-4d59-a8e8-3995d4339f5b",
        "cursor": {
          "ref": "f3e5ad74-d54f-4052-b23d-0b6abe407a0b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7ca5bfad-9d39-4b23-8b8b-4f13ebc2b4eb"
        },
        "item": {
          "id": "cc021108-6ac1-4d59-a8e8-3995d4339f5b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "35a3023f-af54-4093-b6e2-58b87f00f39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238d921c-d9a4-442c-80f2-a3089cbe9952",
        "cursor": {
          "ref": "8756ec96-bbce-4147-bef6-7dfe3b8745b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69d26072-5507-4682-b476-560ba4d2b4ad"
        },
        "item": {
          "id": "238d921c-d9a4-442c-80f2-a3089cbe9952",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c6dd3a9d-b30f-453d-afb1-bedb68c047e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa4170-42ed-457e-b55c-903b89a1830b",
        "cursor": {
          "ref": "e3d81645-96df-4e1f-8432-984c01872864",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dca0b126-2456-4888-a924-0dc20d22330a"
        },
        "item": {
          "id": "a8aa4170-42ed-457e-b55c-903b89a1830b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "79e5641f-e35e-48c5-8b00-a00cce01b901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7642e9bd-dca1-4b54-b4ff-9acfe7a275d3",
        "cursor": {
          "ref": "daf8537b-0d92-45b7-94ee-efec4a247ecf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5c40c383-0ca2-4a45-8fea-d81e05521269"
        },
        "item": {
          "id": "7642e9bd-dca1-4b54-b4ff-9acfe7a275d3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d97d0993-5a36-41cd-bead-fb16c41c98e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f32ce7b-08ba-4ee7-99ae-ab22f4e4d13c",
        "cursor": {
          "ref": "25e7abfc-0a54-47cc-acc5-0bdbc84dd74b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b4cb904-fe83-4ab3-9590-8e66d3a25890"
        },
        "item": {
          "id": "6f32ce7b-08ba-4ee7-99ae-ab22f4e4d13c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d82e6fea-6745-41a9-abd2-688da6b14c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7976d72-3727-4a2c-8638-0a215cd50cea",
        "cursor": {
          "ref": "319617c2-8dc3-4dbb-86a1-0d123dd272d3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "90a571f4-ef1d-421c-8513-60d7dc4890cc"
        },
        "item": {
          "id": "d7976d72-3727-4a2c-8638-0a215cd50cea",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "31163fe6-32f3-406c-8d78-ec1b0fe799ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47521fa-35f2-4088-90bc-6afceecc735e",
        "cursor": {
          "ref": "c6cf428d-5ef3-4d52-a88b-956f97e76917",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04517657-931e-4469-850a-ca10c0674349"
        },
        "item": {
          "id": "a47521fa-35f2-4088-90bc-6afceecc735e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d1c86c46-5833-4031-be59-a5d8cab2a628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d17d7f-86d4-4122-8135-322dc1ae8bb9",
        "cursor": {
          "ref": "c1079e66-64fe-4e14-821b-c328dcc0c915",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d833b8f-66b2-4a07-8562-c04c5acd62df"
        },
        "item": {
          "id": "25d17d7f-86d4-4122-8135-322dc1ae8bb9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "575e4402-82e7-4905-81c8-d2355be385d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160d2cfc-2b8a-4b98-9bec-c96c73bb0ec8",
        "cursor": {
          "ref": "f6d7ad86-a473-4a97-8339-037d7b1efe71",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d896f8c0-1295-4d2a-bba9-35d3db177763"
        },
        "item": {
          "id": "160d2cfc-2b8a-4b98-9bec-c96c73bb0ec8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "af98b8d3-9367-4624-ab01-ddca0cb77beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d33575-b5ae-4f9d-8960-a479c3b41b08",
        "cursor": {
          "ref": "15ce481b-0686-48bc-95f5-35d38243059f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8d9d8305-3c02-49e8-b5cd-09f09717817b"
        },
        "item": {
          "id": "b8d33575-b5ae-4f9d-8960-a479c3b41b08",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "16361e2d-0c34-482a-bd5c-2172067473b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e64aedb-e249-4716-a6ad-eb59752aebbf",
        "cursor": {
          "ref": "a1436303-302a-4e24-8920-6a4d6f907208",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "45f01afc-c861-434a-9488-ec4c523bd802"
        },
        "item": {
          "id": "4e64aedb-e249-4716-a6ad-eb59752aebbf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "82bea3c5-f2dc-43f8-99eb-7a104253b176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39369c5-e27b-45e4-a154-85f20212caae",
        "cursor": {
          "ref": "b979b9c6-3d41-4995-8240-eba6499e0c0c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9be072d1-1ac9-41ca-9434-6ad3ec922eda"
        },
        "item": {
          "id": "c39369c5-e27b-45e4-a154-85f20212caae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "891f7f57-6206-4c8e-934f-b004be3b9999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6685b769-2297-4b05-9e5f-dd47af011341",
        "cursor": {
          "ref": "8ef6c7ff-4ecc-4a81-bca8-018da6feccc1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "52621f00-77db-4eef-a0e1-a8ccd0c00c71"
        },
        "item": {
          "id": "6685b769-2297-4b05-9e5f-dd47af011341",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8f3f1197-04ce-426c-83c5-1810c86b4141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f19ea-1dfb-483e-9c3c-d16549226231",
        "cursor": {
          "ref": "190c4540-021f-4dbf-a6cc-7e8df90f19ba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bf274654-c2e1-4cc4-83a6-e90ad13b70a1"
        },
        "item": {
          "id": "a17f19ea-1dfb-483e-9c3c-d16549226231",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d5230a64-039a-43dc-84a8-1f2c1bbf221f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c839b0c-95b8-4d1a-8b9c-1a07c50ed808",
        "cursor": {
          "ref": "d21086f3-0bb7-45df-b717-ca3c465b0fcc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "367dcb22-5257-4831-91b8-1872d5b8aa82"
        },
        "item": {
          "id": "7c839b0c-95b8-4d1a-8b9c-1a07c50ed808",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2ed8aa57-2c10-45af-a396-01f1c4981604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14153221-d148-47b0-ae93-e59d6679c314",
        "cursor": {
          "ref": "662c18c4-4c5c-44c7-a7e3-ffdb11ec7e1c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c84c0dcc-3dfd-4ad0-bf69-d10723df42dd"
        },
        "item": {
          "id": "14153221-d148-47b0-ae93-e59d6679c314",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "28d016da-0eed-4f1e-8bff-8ce48ea96eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef75f7-ff14-4255-96b3-5d8db55277e6",
        "cursor": {
          "ref": "a0e55904-293d-46d8-9100-6f4d5493739b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a848e260-688d-43f0-b33d-26b330a17d8a"
        },
        "item": {
          "id": "d6ef75f7-ff14-4255-96b3-5d8db55277e6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "209f37af-456b-47e3-bba4-12a0f37ffee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2669a042-3a63-4f61-b46b-60c90ecdc714",
        "cursor": {
          "ref": "831e7bb2-e830-4e88-ab1f-27ce07e5824b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "61feab06-0666-4844-905c-114d6ff12818"
        },
        "item": {
          "id": "2669a042-3a63-4f61-b46b-60c90ecdc714",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e9db1d63-baa0-41e3-bf02-b4a1bf1e56d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ed6a4-4525-4b36-9748-88c9683443a0",
        "cursor": {
          "ref": "b436b188-4244-432b-9557-a453dce5a1a3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "71069189-3702-4608-868a-92bb8ea44b1c"
        },
        "item": {
          "id": "729ed6a4-4525-4b36-9748-88c9683443a0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "431914f5-6f3a-47c8-9f22-4d5156df64b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6232254b-941b-4265-b12f-3b72c8d37a81",
        "cursor": {
          "ref": "0e46b514-8491-4315-a67d-1243fe1972a3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4343121e-4c0c-4bb9-93f6-26615ab3b993"
        },
        "item": {
          "id": "6232254b-941b-4265-b12f-3b72c8d37a81",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3363b82e-06bb-4909-80de-5518b8526efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33799db3-6fd4-4a90-86c1-6c8fbb1ef52c",
        "cursor": {
          "ref": "cdd9f1c7-5e30-467e-842e-397d01e0b1e9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b58607a1-9139-46a6-a503-2c35b6d32d6c"
        },
        "item": {
          "id": "33799db3-6fd4-4a90-86c1-6c8fbb1ef52c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "72fc6481-4205-4fcb-8486-69fd5d85cdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8d8694-f36d-404d-9f86-f470d514520d",
        "cursor": {
          "ref": "a6f664b1-98ad-4c6d-aa9e-59409482520a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eea384f9-c10a-42ea-85e2-3ea0cc752146"
        },
        "item": {
          "id": "ed8d8694-f36d-404d-9f86-f470d514520d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "21a293a5-a1ac-4d9f-b697-4b2d9fd61390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b9758a-5c52-4192-ada3-221adc36b320",
        "cursor": {
          "ref": "72750842-6f85-403c-9970-2da140563a6d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "79bde9d2-9297-47b5-9ac9-46552893dad4"
        },
        "item": {
          "id": "67b9758a-5c52-4192-ada3-221adc36b320",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "61122117-c144-4429-be17-c0c0ce7537dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba45409-7d4e-47a1-b2aa-4391c592b90c",
        "cursor": {
          "ref": "8a137b65-efac-47a9-b942-3649a3f913d0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4160e803-d0b6-4e40-905b-a69eb9566535"
        },
        "item": {
          "id": "7ba45409-7d4e-47a1-b2aa-4391c592b90c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c8db7523-aa5d-4ae1-87fd-c5846fec6636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6b841d-4a82-451b-9c6f-2f0cd08f6ca1",
        "cursor": {
          "ref": "5f46bf18-e752-45c8-8a87-2863733d510f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7390f41b-32c2-4348-9baf-4107bc09fd1f"
        },
        "item": {
          "id": "bb6b841d-4a82-451b-9c6f-2f0cd08f6ca1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32779b18-4650-4105-b5bc-df86efb996f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afcd7b1-57fc-4ab3-902f-66ad60a12f69",
        "cursor": {
          "ref": "524ed1ae-bb71-4f30-8c83-a11fe1e95a85",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16f3b6b6-f387-4066-be48-403771497524"
        },
        "item": {
          "id": "2afcd7b1-57fc-4ab3-902f-66ad60a12f69",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d4294617-4a03-47e4-a066-69c76c80e99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c633dd7d-3924-4e5e-9289-d77e73dcd2ec",
        "cursor": {
          "ref": "e39a8f87-628e-4fe2-bcea-6224654043a6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "57ae339b-7d0e-43c5-8ff8-f45653f7f00e"
        },
        "item": {
          "id": "c633dd7d-3924-4e5e-9289-d77e73dcd2ec",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c7b5ddec-1914-4e1a-8c0c-5c87ccb59f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ada04-91db-4cc0-8c65-b360a505265d",
        "cursor": {
          "ref": "0c8541fc-adad-4bcd-97bb-fa1813374470",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c799f28d-4a7a-41d7-b03a-f343e4139949"
        },
        "item": {
          "id": "f61ada04-91db-4cc0-8c65-b360a505265d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3457eac0-b4cc-4fd5-a76c-4a41ba05e97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617295c9-558a-43ec-aaaa-30aa237e2c6d",
        "cursor": {
          "ref": "3201595b-3660-4f9f-a933-3330496cd912",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2f2ce3e1-f630-4c1a-b394-2f03b0744f13"
        },
        "item": {
          "id": "617295c9-558a-43ec-aaaa-30aa237e2c6d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2b1da4ca-95f6-43b9-a62a-6194831c81f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24a9b94-5b38-4ca2-9b7d-d062632cd218",
        "cursor": {
          "ref": "ac3f7c5e-bfa1-48f6-8056-41af901e0946",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "805ee64b-1a23-4292-9ddb-dce79c8d33d8"
        },
        "item": {
          "id": "d24a9b94-5b38-4ca2-9b7d-d062632cd218",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1631b6ec-50ca-488c-895b-dd3bc34c7c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca27a41-2123-4c49-960d-9aa40246961d",
        "cursor": {
          "ref": "de5e5c4b-4be4-42a8-9dcd-cd00e9b880c5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "665708fa-e2a5-45b0-b9d1-a4562572b9f9"
        },
        "item": {
          "id": "5ca27a41-2123-4c49-960d-9aa40246961d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "331593a2-8548-49a7-9b5a-2fa337ceb05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fe740e-6131-486e-94fa-2c07a5e70da4",
        "cursor": {
          "ref": "c5278a8e-c591-43ef-a6b3-efcf42c00e0c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "874a25a6-6230-4e37-aaf1-5e6e4476ff2b"
        },
        "item": {
          "id": "36fe740e-6131-486e-94fa-2c07a5e70da4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "71a1e3af-156e-4941-8daa-97d4350aad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a06ddb-df36-4444-85a9-dfcf22966f95",
        "cursor": {
          "ref": "8a30ad35-7635-40e1-9908-0d375b3721a2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c20329d2-0813-4b55-9557-0e7f34f2baa9"
        },
        "item": {
          "id": "c9a06ddb-df36-4444-85a9-dfcf22966f95",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0505ab63-bb5c-4264-89e1-c6c061cd99cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630eb9d8-92b8-4955-89dd-122bcccd15dc",
        "cursor": {
          "ref": "8512f670-11c5-4570-8e4f-dc4eea2704c9",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "691f2646-6ea1-442f-b5cf-ab27d9c4abeb"
        },
        "item": {
          "id": "630eb9d8-92b8-4955-89dd-122bcccd15dc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8276bdd5-81b7-4f52-95b3-9ff2334cb4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ab460e-90e9-4c1a-9be0-c7392cf18397",
        "cursor": {
          "ref": "63ef8f2c-a879-4ec0-9f2d-ad6def194cf6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a1a0e54-35d5-4cd0-a81b-c09e2957e410"
        },
        "item": {
          "id": "d6ab460e-90e9-4c1a-9be0-c7392cf18397",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d38576a2-ab73-4859-a10a-12d2c98743cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f6846-845e-473d-bc62-4a558aadc03e",
        "cursor": {
          "ref": "0207fdf2-3ae6-4ac7-ab24-93a2ec0d8d59",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dfdaefbb-1487-4aea-a506-6e18542dd19d"
        },
        "item": {
          "id": "cb4f6846-845e-473d-bc62-4a558aadc03e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d6bf12c-a2cd-4340-a037-f285b535c3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a5a5d-4254-439e-8795-2a30928f6ec6",
        "cursor": {
          "ref": "f0b0c5c0-da51-41b6-bbef-9b3c305d1d12",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "67ce1fdc-3297-4a0c-a846-039f61b7d3e4"
        },
        "item": {
          "id": "ad2a5a5d-4254-439e-8795-2a30928f6ec6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b59037fb-c9ec-4d29-bb72-c65436c1fae5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4926adf4-a24e-44c3-b5ed-a74c3d5f8512",
        "cursor": {
          "ref": "83a0440e-5199-41b2-b3ab-aa30998439c2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d191acb-9cf1-4cda-96ce-86a333d52888"
        },
        "item": {
          "id": "4926adf4-a24e-44c3-b5ed-a74c3d5f8512",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "23b882c2-155e-4633-84ac-e868862c1644",
          "status": "OK",
          "code": 200,
          "responseTime": 2599,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d800a-2457-4bba-ae06-d74af6fbd2a0",
        "cursor": {
          "ref": "c98877d2-b8d9-4596-b2c9-41419b19a624",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27371246-cde9-44ab-a454-18168938c400"
        },
        "item": {
          "id": "ac1d800a-2457-4bba-ae06-d74af6fbd2a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "762aebde-7608-4a65-aadd-80c377274908",
          "status": "OK",
          "code": 200,
          "responseTime": 4160,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "199f94f2-564c-4359-a49e-fe0f72caa661",
        "cursor": {
          "ref": "a2aea41a-bc6d-41e8-8be7-f59837521a65",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5272c15e-c502-4b08-8d83-0476b36cf158"
        },
        "item": {
          "id": "199f94f2-564c-4359-a49e-fe0f72caa661",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d9013083-d59d-43c1-92f9-a2a9501579aa",
          "status": "OK",
          "code": 200,
          "responseTime": 3557,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ca258-b30f-4111-a226-1b0c5c63ef59",
        "cursor": {
          "ref": "82b6c10c-f3c5-4bea-863a-cc75aa9d58fd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc52ad2f-27b3-4ac4-80a0-bdb4edc496d4"
        },
        "item": {
          "id": "b43ca258-b30f-4111-a226-1b0c5c63ef59",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed7ecb53-35bd-4d49-903c-bb2bddc56d7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ca258-b30f-4111-a226-1b0c5c63ef59",
        "cursor": {
          "ref": "82b6c10c-f3c5-4bea-863a-cc75aa9d58fd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc52ad2f-27b3-4ac4-80a0-bdb4edc496d4"
        },
        "item": {
          "id": "b43ca258-b30f-4111-a226-1b0c5c63ef59",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed7ecb53-35bd-4d49-903c-bb2bddc56d7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537d74f9-f27e-470f-ab0c-e0f5841c5fc5",
        "cursor": {
          "ref": "d7e57c6c-9541-4217-9a08-a915bf69bea4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe3d8d19-c70d-41d0-86ad-5daab656dbdc"
        },
        "item": {
          "id": "537d74f9-f27e-470f-ab0c-e0f5841c5fc5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fe000fb4-6714-40da-a77c-e28a4dc54b3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947af4d-5263-4804-851b-bde1a50ff6ea",
        "cursor": {
          "ref": "42e67f08-bc02-4dba-b48f-2dd0186331cc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "faad3d79-2277-4e9d-af34-63ee60a4f16f"
        },
        "item": {
          "id": "c947af4d-5263-4804-851b-bde1a50ff6ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d870b8e2-8e1a-4e20-afcc-d1115b67bc7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}